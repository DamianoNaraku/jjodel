.dropdown{
  position: relative;
  padding-left: 0;
}
.dropdown:focus{
  outline: none;
  box-shadow: none;
}
.dropdown:focus-within{
  pointer-events: none;
}
.dropdown:focus-within>.dropdownmenu{
  display: block;
}
.dropdown.hover-display:hover>.dropdownmenu{
  display: block;
}

.dropdownmenu{
  z-index: 1001;
  box-shadow: 0 0 5px grey;
}

.dropdown:focus-within>.icon,
.dropdown.hover-display:hover>.icon{
  transform: rotate(225deg);
}
.dropdown.hover-display.readonly .dropdownmenu{
  pointer-events: none;
}
.dropdownmenu .dropdownitem{
  border: 1px solid transparent; /* per evitare incrementi di dimensione*/
}
.dropdownmenu .dropdownitem.selected{
  border: 1px solid var(--color-4);
  /* outline: 2px solid var(--color-4); */
  box-shadow: 0 0 3px 1px var(--color-4);
  background: var(--color-bg-2);
}
/*.dropdown>.icon:hover, .dropdown:focus-within>.icon{
  filter: brightness(0.9);
}*/
.dropdown>.dropdownmenu{
  pointer-events: all;
  position: absolute;
  top: 100%;
  left: 0;
  display: none;
  /*float: left;*/
  padding: 0.5rem 0;
  margin: 0;
  font-size: 1rem;
  /*color: #212529;*/
  text-align: left;
  list-style: none;
  /*background-color: #fff;*/
  background-clip: padding-box;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0.25rem;
  background: var(--color-bg-1);
}
.dropdownitem{
  display: block;
  width: 100%;
  padding: 0.25rem 1.5rem;
}
.cslistreadonly.dropdownitem .inheritedFromText{
  text-align:center;
}

.cslistreadonly.dropdownitem .inheritedFromText>*{
  display: inline-block;
}
.dropdown>.icon{
  display: flex;
  text-align: center;
}
.dropdown>.icon{
  background: inherit;
  margin: auto 10px;
  border: solid;
  border-width: 0 3px 3px 0;
  display: inline-block;
  vertical-align: middle;
  transform: rotate(45deg);
  min-height: 20px;
  min-width: 20px;
}
.dropdown .title{
  margin: auto;
}
.colorblock{
  margin-right: 2px;
}
.styleContainer{
  /*position: relative;
  height: 100%;
  overflow-y: auto;
  overflow-x: auto;
  padding: 17px;
  padding-right: calc(17px - 10px);*/
}
.template{
  display: none;
}
.StyleEditorDisplay .template{
  display: unset;
}
.preview{
  position: relative;
  display: block;
  width: 100%;
  min-height: 10px;
  border: 1px solid red;
  background-color: transparent;
  margin-bottom: 10px;
  margin-top: 10px;
}
.preview:blank{
  background-color: gray;
  opacity: 0.4;
}
.separatorShell.top{
  margin-top: 30px;
}

div[contenteditable="true"]:focus {
  max-height: unset;
}
div[contenteditable="true"], div[contenteditable="false"] {
  overflow: auto;
  display: flex;
  color: black;
  border: 1px solid black;
  min-height: 100px;
  max-height: 200px;
  margin-top: 5px;
  margin-bottom: 5px;
}
div[contenteditable="true"] {
  background-color: white;
  cursor: text;
}
div[contenteditable="false"] {
  background-color: gray;
  cursor: no-drop;
  opacity: 0.4;
}
label.allowEdit {
  color: goldenrod;
}
button {
  margin: 5px;
}
.style.own, .style.instances{
  display: flex;
  flex-flow: wrap;
}
.detail{
  border: 3px solid var(--bluebordercolor);
  background: var(--);
  color: var(--altFontColor);
}
button.detail {
  margin: auto;
  margin-top: 0;
  margin-bottom: 0;
  display: flex;
  height: auto;
  border-top-left-radius: 17px;
  border-top-right-radius: 17px;
  z-index: 1;
 }
button.detail:first-child:not(:only-child){ /* first visible child not possible ic pure css */
  flex-flow: column;
  margin-right: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
button.detail:last-child:not(:only-child){
  margin-left: -3px;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
button.detail:focus {
  box-shadow: none !important;
  outline: none !important;
}
div.detail{
  padding: 5px;
  margin-top: -3px;
  width: calc(100%);
}
.saveasrow{
  display: flex;
  flex-wrap: wrap;
}
button.delete{
  margin: auto;
  margin-bottom: 5px;
}
button.saveas{
  margin: auto;
  margin-bottom: 5px;
}
input.saveas {
  margin: auto;
  margin-bottom: 5px;
  flex-basis: 100px;
  flex-grow: 0.6;
  width: 0;
}
.compatibleRow > label > span{
  height: fit-content;
  display: inline-flex;
  margin: auto;
  order: 2;
  margin-left: 0;
}
.saveasrow, .compatibleRow{
  width: 100%;
  display: flex;
  flex-flow: wrap;
}
.compatibleRow > label > input {
  order: 1;
  margin-left: 0;
  margin-right: 5px;
}
.detail > label {
  display: inline-flex;
  margin: auto;
  flex-wrap: nowrap;
}
button.detail > .opened, button.detail > .closed{
  margin: auto;
}
table {
  width: 100%;
}

td.title {
  font-weight: bold;
  padding-top: 10px;
  text-align: center;
}

h1 {
  text-align: center;
}
select{
  /* background: inherit;
  border: none;
  color: inherit;
  font: inherit; */
  /*flex-basis: 0;*/
  flex-shrink: 1;
  flex-grow: 0.9;
  max-width: max-content;
  min-width: 0;
}

label {display: flex; flex-grow:1;}
label > *:not(input), h6 > * {
  display: flex;
  /* flex-grow: 1;*/
  margin: auto;
  flex-wrap: wrap;
}

h6{
  display: inline-flex;
  margin: auto;

}
.separator > * {
  text-align: center;
}
/*
button {
  background: #0084ff;
  border: none;
  border-radius: 5px;
  padding: 8px 14px;
  font-size: 15px;
  color: #fff;
}

button:disabled{
  background: gray;
}*/
input[type="number"] {
  width: 40px;
  margin-right: 5px;
}
.zoomX, .zoomY, .gridX, .gridY {
  margin-left: 5px;
  margin-right: 15px;}


label>input[type="checkbox"],
label>input[type="color"] {
  margin-bottom: 3px;
}

#primary_color {
  border-radius: 100%;
  height: 60px;
  width: 60px;
  border: none;
  outline: none;
  -webkit-appearance: none;
}

[contenteditable=true]:empty:before {
  content: attr(placeholder);
  display: block;
  /* For Firefox */
  cursor: text;
  vertical-align: middle;
  color: darkgray;
  text-align: center;
  margin: auto;
}

.separatorShell {
  min-height: 33px;
  display: flex;
  flex-flow: row;
  flex-wrap: nowrap;
  margin: auto;
  margin-top: 10px;
  margin-bottom: 10px;
  width: 100%;
}
.roww {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
}

.separator {
  margin: auto;
  display: inline-block;
}
.stylelabel{
  display: inline-flex;
  margin: auto;
  margin-right: 5px;
}
select.stylename{
  display: flex;
  margin: auto;
  margin-left: 0;
}
.HorizontalContainer{
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
  width: 100%;
}
.onlyVerticalContainer{
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
}
.onlyVerticalContainer > * {
  margin: auto 0;
}
.HorizontalChild{
  display: inline-flex;
  margin: auto;
}
.opened{
  display: none;
}

.helpButton, .styledelete {
  display: flex;
  width: 35px;
  height: 35px;
  margin: auto;
  margin-right: 0;
}
.styledelete {
  margin-right: 5px;
  margin-left: 5px;
}
.helpButton {
  background: rgb(0, 62, 127);
  border-color: rgb(0, 62, 127); }

.htmlstyle > .top {
  display: flex;
}
.expressionRoot {
  flex-wrap: nowrap !important;
  max-width: 100%;
}
input.fill{
  flex-grow: 1;
  flex-basis: 0;
  margin-left: 7px;
}
.leftside{
  flex-grow: 3;
  flex-basis: 0;
  min-width: 0;
  max-width: 150px;
}
.rightside{
  flex-grow: 7;
  flex-basis: 0;
  min-width: 0;
}
.arrowContainer{
  display: flex;
  margin-bottom: 10px;
}
button.arrow{
  display: flex;
  line-height: unset;
  padding: 0 6px;
}
.tsclass{
  margin: auto;
  display: inline;
  text-align: center;
}
/* */

/*
pre {
  background:#EEE;
  padding:5px;
  width: 290px;
}*/
.addHeader{
  display: flex;
}
.addHeader > button {
  margin-left: 0;
  order: 2;
}
select.attributetypeadd{
  flex-basis: 0;
  flex-grow: 1;
  min-width: 0;
  margin-right: 10px;
}
.previewselector{
  height: 23px;
  outline: none;
  border: 2px dashed #666666;
}

.showAsEdge{
  margin-right: 5px !important;
}
button.delete, button.saveas{
  font-size: 0.8rem;
}
button.deleteRule{
  flex-grow: 0;
  flex-basis: auto;
  min-width: auto;
  margin-top: 0;
  margin-bottom: 0;
  padding: 5px;
}
.nowrap{
  flex-wrap: nowrap;
}
._root {
  margin-bottom: 5px;
}
div.detail.measurable > div.template {
  display: none;
}
.graphColor, .showGrid{
  margin-left: 0;
}
select.operator{
  text-align-last: center;
  margin-left: 5px;
  margin-right: 5px;
  width: 25px;
}
span.operatortext{
  margin-left: 5px;
  margin-right: 5px;
}
select.operator:disabled{
  display: none;
  /*
  background: inherit;
  border: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  margin: 0;*/
}

span.nameprefix {
  margin-left: 7px;
  background: white;
  border: 2px inset rgb(238, 238, 238);
  height: 21px;
  border-right: none;
  color: black;
  line-height: 16px;
}
input.name {
  margin-left: 0;
  border-left: none;
  padding-left: 0;
}

label:focus > input.name {
  outline: none;
  box-shadow: 0 2px 2px 2px rgb(77, 144, 254);
}

input.name:focus {
  outline: none;
  box-shadow: 2px 2px 0px 0px rgb(77, 144, 254), 2px -2px 0px 0px rgb(77, 144, 254);
}
.htmlstyle {
  width: 100%;
}
label.allowEdit > span {
  margin-left:0;
}
label > * {
  margin-top: auto;
  margin-bottom: auto;
}
label > input[type="checkbox"] ~ * {
  margin-left: 0;
}
.html[contenteditable] {
  /*IDE gives error but they all actually exist, at least on mozilla.*/
  overflow-wrap: anywhere;
  word-wrap: anywhere;
  white-space: break-spaces;
}

.autosizecontainer{
  display: inline-block;
}
.autosizecontainer > *{
  display: inline-block;
  margin-right: 5px;
}
.sizeContainer {
  display: flex;
  flex-wrap: wrap; }
.sizeContainerHalf {
  display: inline-flex;
  flex-wrap: wrap;
  flex-grow: 1;
}
.sizelabel {
  display: inline-flex;
  flex-flow: column-reverse;
  margin-right: 10px;
  margin-bottom: 10px;
}
@media screen and (max-width: 700px) {
  /* su viewport troppo piccoli cambio la visualizzazione da label sopra il testo (buono per fare mono-row) a label affiancata al testo (per fare 4 row e scorrere verticalmente)*/
  .sizelabel{
    display: inline-block;
  }
}
.sizelabel > *{
  display: inline;
  margin: auto; }










  /* they fix outer css influence on measurable section. */

input[type="checkbox"].arrow {
  margin: 0; }

.meas_acc0 button { margin: 0; }




/***********              Measurable editor v2 start                 ********/
.meas_acc0 .measurableSettingRoot{
  width: 100%;
  display: block;
}
.meas_acc0 .boxesroot {
  display: flex;
  flex-wrap: wrap;
  flex-grow: 1;
  flex-basis: 0;
}
.meas_acc0 .movementboxroot, .meas_acc0 .resizeboxroot {
  display: flex;
  flex-grow: 1;
  flex-flow: column;
}

.meas_acc0 .column, .meas_acc0 .row{
  display: flex;
  flex-wrap: nowrap;
}
.meas_acc0 .row {
  max-width: 100%;
  margin-right: unset;
  margin-left: unset; /* dumb _grid.scss fixer */
}
.meas_acc0 .break { flex-wrap: wrap; }
.meas_acc0 .autobreak { flex-wrap: initial; }
.meas_acc0 .fill { flex-grow: 1; }
.meas_acc0 .boxtitle { display: block; text-align: center; margin-bottom: 12px; }
.meas_acc0 .side { display: flex; }
.meas_acc0 .side.left, .meas_acc0 .side.right { width: 10px; }
.meas_acc0 .side.top, .meas_acc0 .side.bot { height: 10px; width: calc(100% - 20px); }
.meas_acc0 .corner { display: flex; width: 10px; height: 10px; }
.meas_acc0 .middle { background-color: goldenrod; display: flex; }
.meas_acc0 .middle .middle { width: 120px; height: 90px; }
.meas_acc0 .rectangledrawing.inner > .row > .side, .meas_acc0 .rectangledrawing.inner > .row > .corner {
  background-color: dimgray;
}
.meas_acc0 .boxroot {
  display: block;
  margin: auto;
  flex-wrap: wrap;
}
.meas_acc0 .ruletitle{
  display: block;
  text-align: center;
}
.meas_acc0 button.ruledelete {
  height: 100%;
  width: 30px;
  padding: 0;
  margin-right: 5px;
  border-radius: 25px 0 0 25px;
}
.meas_acc0 .compoundInputprefix {
  max-width: 100%;
  height: fit-content;
  margin-bottom: 0;
  padding: 0;
  flex-grow: 0 !important;
  width: auto;
  flex-basis: auto !important;
  flex-shrink: 0 !important;
}
.meas_acc0 .compoundInputprefix > input.attrname {
  border-left: none;
  padding-left: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.meas_acc0 .compoundInputprefix > * { border: none; }
.meas_acc0 .compoundInputprefix > *:first-child {
  margin-top: 1px;
  padding-right: 0;
  background-color: transparent;
}
.meas_acc0 .compoundInputprefix > input:focus { box-shadow: none; }
.meas_acc0 .compoundInputprefix:focus-within {
  border-color: #80bdff;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.meas_acc0 .rulecontainer > .rightx, .meas_acc0 .rulecontainer > .leftx { margin-bottom: 0 !important; }
/* .meas_acc0 .rightx { min-width: 0; } */
.meas_acc0 .rightx span.operator {
  margin: auto;
  margin-left: 5px;
  margin-right: 5px;
  margin-top: 8px;
}
.meas_acc0 .operatorcontainer {
  display: flex;
  margin-bottom: 5px;
}
.meas_acc0 select.operator {
  width: 45px;
  margin: auto 5px;
  text-align: center;
  text-align-last: center;
}
.meas_acc0 .rightx .compoundInputprefix, .meas_acc0 .rightx input.rightside, .meas_acc0 input.leftside, .meas_acc0 .rightx > .target {
  margin-bottom: 5px;
  min-width: 120px;
  flex-basis: 0;
  flex-grow: 1;
}
.meas_acc0 .rulecontainer { margin-bottom: 1rem; }
.meas_acc0 .rightx > .target { margin-bottom: 0; }
.meas_acc0 .rightx > .measurabledebug { margin-top: 5px; }
.meas_acc0 .attrname {
  max-width: 200px !important; /* todo: remove when is autosizing */
  min-width: 0;
}
.meas_acc0 .addrule {
  float: right;
  margin-top: -4px;
  padding: 4px 10px;
}
.meas_acc0 .ruletitle {
  padding-right: 4px;
  margin-bottom: 5px;
}
.meas_acc0 .ruletitle.collapsed { -webkit-appearance: initial; }
.meas_acc0 .ruletitle:hover { -webkit-appearance: button; }
.meas_acc0 .form-control > .form-control:not(:first-child){
  border-top-left-radius: unset;
  /* disable bootstrap rule*/
}
.meas_acc0 .measurableerrortext{
  margin-left: 5px;
  color: var(--danger);
}
.meas_acc0 .measurablewarningtext{
  margin-left: 5px;
  color: var(--warning);
}
.meas_acc0 .measurableoutputtext{
  margin-left: 5px;
  color: var(--secondary);
}
.meas_acc0 .rulecontainer{ margin-bottom: 5px; }
.meas_acc0 .measurabledebug { display: none; }
.meas_acc0 .rightx:focus-within .measurabledebug{ display: flex; }
.meas_acc0 .countershell { float: right; }
.meas_acc0 .rectangledrawing.outer > * {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
}
.meas_acc0 .rectangledrawing.outer > .row > *, .meas_acc0 .arrowh, .meas_acc0 .arrowv {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
}
.meas_acc0 .rectangledrawing.outer > .top > .left {
  /*background-image: url(https://i.ibb.co/tqxXhk4/tl.png);*/
  background-image: url(https://i.ibb.co/Zgvpywz/tll.png);
}
.meas_acc0 .rectangledrawing.outer > .top > .side.top {
  background-image: url(https://i.ibb.co/M9fC7DP/t.png); }
.meas_acc0 .rectangledrawing.outer > .top > .right {
  /*background-image: url(https://i.ibb.co/Pzsmjxf/tr.png);*/
  background-image: url(https://i.ibb.co/SN2THLt/trl.png); }
.meas_acc0 .rectangledrawing.outer > .mid > .left {
  background-image: url(https://i.ibb.co/7jm9BBQ/l.png); }
.meas_acc0 .rectangledrawing.outer > .mid > .right {
  background-image: url(https://i.ibb.co/RYZnVN5/r.png); }
.meas_acc0 .rectangledrawing.outer > .bot > .left {
  /*background-image: url(https://i.ibb.co/qrYWdpH/bl.png);*/
  background-image: url(https://i.ibb.co/gDKFry5/bll.png); }
.meas_acc0 .rectangledrawing.outer > .bot > .side.bot {
  background-image: url(https://i.ibb.co/cXc0nmS/b.png); }
.meas_acc0 .rectangledrawing.outer > .bot > .right {
  /*background-image: url(https://i.ibb.co/K0pVVT7/br.png);*/
  background-image: url(https://i.ibb.co/QpwRSsT/brl.png); }
.meas_acc0 input.side.top {
  margin-bottom: 3px;
  margin-top: -3px; }
.meas_acc0 input.side.bot {
  margin-bottom: -3px;
  margin-top: 3px; }
.meas_acc0 input.side.left {
  margin-right: 3px;
  margin-left: -3px; }
.meas_acc0 input.side.right {
  margin-right: -3px;
  margin-left: 3px; }
.meas_acc0 .arrowh {
  background-image: url(https://i.ibb.co/Zd3jtbc/lr.png); }
.meas_acc0 .arrowv {
  background-image: url(https://i.ibb.co/jHTtPDx/tb.png); }

.meas_acc0 .rectangledrawing.outer > .row > .corner {
  height: 50px;
  min-width: 50px;
}
.meas_acc0 .rectangledrawing.outer > .top > * {
  height: 50px; }
.meas_acc0 .rectangledrawing.outer > .bot > * {
  height: 50px; }
.meas_acc0 .rectangledrawing.outer > .mid > .left {
  height: auto;
  width: 50px; }
.meas_acc0 .rectangledrawing.outer > .mid > .right {
  height: auto;
  width: 50px; }

.meas_acc0 .arrow { -webkit-appearance: initial; }

.meas_acc0 .arrowh, .meas_acc0 .arrowv{
  width: 75px;
  height: 75px; }

.meas_acc0 .arrow:focus{ outline: none; }
.meas_acc0 .arrow:checked{
  filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%); }

.meas_acc0 .directions {
  display: flex;
  flex-wrap: wrap;
  margin: auto; }

.meas_acc0 .directions > * { margin: auto; }
.meas_acc0 .draggable.boxroot{
  display: flex;
  flex-flow: column;
  /*height: 237px;*/
}
.meas_acc0 .collapse:not(.show) { display: none; }
.meas_acc0 .selected { background-color: #37ff66 !important; }
/***********              Measurable editor v2 end                   ********/
.isinterface, .isabstract{
  margin-right: 5px;
}





