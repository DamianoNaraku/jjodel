(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/measurabletemplate/measurabletemplate.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/measurabletemplate/measurabletemplate.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"measurableTemplateGeneratorShell\" class=\"template\">\n  <label><input class=\"ismeasurable\" type=\"checkbox\"><span>is measurable</span></label>\n  <div class=\"meas_acc0\">\n    <h7 class=\"ruletitle btn btn-link collapsed\" type=\"button\" data-parent=\".meas_acc0\" data-toggle=\"collapse\" data-target=\".meas_acc0 > .measurableSettingRoot\">Measurable settings</h7>\n    <div class=\"measurableSettingRoot collapse\">\n      <div class=\"boxesroot\">\n        <div class=\"resizable boxroot\">\n          <h6 class=\"boxtitle\">Resizable handles</h6>\n          <div class=\"rectangledrawing outer\">\n            <div class=\"top row\">\n              <input type=\"checkbox\" class=\"arrow corner top left\">\n              <input type=\"checkbox\" class=\"arrow side top\">\n              <input type=\"checkbox\" class=\"arrow corner top right\">\n            </div>\n            <div class=\"mid row\">\n              <input type=\"checkbox\" class=\"arrow side left\">\n              <div class=\"middle\">\n                <div class=\"rectangledrawing inner\">\n                  <div class=\"top row\">\n                    <div class=\"corner top left\"></div>\n                    <div class=\"side top\"></div>\n                    <div class=\"corner top right\"></div>\n                  </div>\n                  <div class=\"mid row\">\n                    <div class=\"side left\"></div>\n                    <div class=\"middle\">\n                    </div>\n                    <div class=\"side right\"></div>\n                  </div>\n                  <div class=\"bot row\">\n                    <div class=\"corner bot left\"></div>\n                    <div class=\"side bot\"></div>\n                    <div class=\"corner bot right\"></div>\n                  </div>\n                </div>\n              </div>\n              <input type=\"checkbox\" class=\"arrow side right\">\n            </div>\n            <div class=\"bot row\">\n              <input type=\"checkbox\" class=\"arrow corner bot left\">\n              <input type=\"checkbox\" class=\"arrow side bot\">\n              <input type=\"checkbox\" class=\"arrow corner bot right\">\n            </div>\n          </div>\n        </div>\n        <div class=\"draggable boxroot\">\n          <h6 class=\"boxtitle\">Draggable directions</h6>\n          <div class=\"rectangledrawing directions\">\n            <input type=\"checkbox\" class=\"arrow arrowh drag\">\n            <input type=\"checkbox\" class=\"arrow arrowv drag\">\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"meas_acc\">\n      </div>\n\n      <div class=\"rule template\">\n        <h7 class=\"ruletitle btn btn-link collapsed\" type=\"button\" data-parent=\".meas_acc\" data-toggle=\"collapse\" data-target=\"DYNAMICALLYFILLED\">###</h7>\n        <div class=\"rulecontainer columncontainer collapse template\">\n\n          <div class=\"leftx column\"><button class=\"ruledelete btn btn-danger\">X</button>\n          </div>\n          <div class=\"rightx column rowcontainer fill break mb-3\">\n            <div class=\"row break\">\n              <label class=\"compoundInputprefix nobreak input-group-prepend form-control\">\n                <span class=\"prefix form-control\">_</span>\n                <input type=\"text\" class=\"form-control attrname\" placeholder=\"DYNAMICALLYFILLED\" pattern=\"^[\\S]*$\">\n                <select class=\"operator trigger\">\n                  <optgroup label=\"When\">\n                    <option>Start</option>\n                    <option>ing</option>\n                    <option selected>End</option>\n                  </optgroup>\n                </select>\n              </label>\n              <span class=\"botmarg\"><span class=\"postName\">holds rule:</span></span>\n            </div>\n            <div class=\"row break\">\n              <span class=\"botmarg\"><span class=\"preleft prefix form-control\">####</span></span>\n              <input type=\"text\" class=\"form-control leftside\" placeholder=\"DYNAMICALLYFILLED\">\n              <span class=\"eventsplitpoint operatorcontainer\">\n                <span class=\"operator\">=</span>\n                <select class=\"operator relational\">\n                  <optgroup label=\"Operator\">\n                    <option>&lt;=</option>\n                    <option selected>=</option>\n                    <option>&gt;=</option>\n                  </optgroup>\n                </select></span>\n              <input type=\"text\" class=\"form-control rightside\" placeholder=\"#######\">\n            </div><input type=\"text\" class=\"form-control target\" placeholder=\"Rel. target selector\">\n            <div class=\"measurabledebug rowcontainer\">\n              <button class=\"btn btn-primary\">Test it!</button>\n              <span class=\"measurableoutputtext\" tabindex=\"-1\"><span>Output: </span><span class=\"text\"></span></span>\n              <span class=\"measurablewarningtext\" tabindex=\"-1\"><span>Warnings: </span><span class=\"text\"></span></span>\n              <span class=\"measurableerrortext\" tabindex=\"-1\"><span>Errors: </span><span class=\"text\"></span></span>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!--\n\n\n  NB: non è possibile inserire N relativeTarget direttamente, ma è possibile usarne uno in ogni _Variable, memorizzare i dati d'interesse sul bersaglio nella variabile ed accedervi in altri attributi.\n  esempio: come inserire un nodo equidistante tra due nodi bersaglio.\n  _target1=\"positionX\"\n  relativetargetof_target1=\"#leftside\"\n  _target2=\"positionX\"\n  relativetargetof_target2=\"#rightside\"\n  _import=\"positionX = (a.target1 + a.target2) / 2\"\n\n  angle:false,\n  class Rotatableoptions {\n  degrees: string = 'false | number';\n  radians: string = 'false | number';\nhandle: string = 'url', //  internamente richiede come parametro un $('imageselector')... crea un elemento con quell'immagine. e appendilo al vertice con display: none per evitare di ricrearne uno ogni volta che crei un vertice, almeno così viene anche cancellato assieme al vertice. prova se l'url netto va bene lo stesso in overloading\n  handleOffsetX: string = 'width / 2';\n  handleOffsetY: string = '-20'; // internamente è: handleOffset: { top: 0, left: 0 }\n  rotationCenterOffsetX: string = 'width / 2';\n  rotationCenterOffsetY: string = 'height / 2';\n  // internamente è: rotationCenterOffset: { top: 0, left: 0 } from the center of the element\n  step: string = 'degree', // internamente ha \"snap = boolean\" e step = number, setta anche snap = true se trovi step come attributo measur-rotatable.\n  transforms: string = 'null | {scaleY: 2}'; // non chiaro neanche negli esempi demo. googla.\n  wheelRotate: string = 'false' // NB: non previene lo scroll della pagina come azione default.\n  onRotating: string = 'rotate: function(event, ui) { ... }'; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.\n  onRotationStart: string = same as above // in realtà è \"start\"\n  onRotationEnd: string = same as above // in realtà è \"stop\"\n  }\n\n--->\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/console/console.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/console/console.component.html ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"mmconsole resizableBorder resizableContent\" data-resizabletop=\"true\" original=\"true\" data-resizableleft=\"true\" data-resizableright=\"true\" data-resizablebottom=\"true\">\r\n  <div class=\"consoleRoot\">\r\n    <div class=\"consoleContent\"></div>\r\n    <div class=\"inputLine\" tabindex=\"-1\">\r\n      <span class=\"input\" contenteditable=\"true\"></span>\r\n      <span class=\"suggestion\"></span>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/dam-context-menu/dam-context-menu.component.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/dam-context-menu/dam-context-menu.component.html ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"damContextMenuTemplateContainer\" class=\"contextMenuRoot\">\r\n    <ul class=\"vertex contextMenu\">\r\n      <li class=\"Vertex delete\">Delete Vertex</li>\r\n      <li class=\"todo Vertex duplicate\">Duplicate Vertex</li>\r\n      <li class=\"m1hide Vertex extend\">Extend</li>\r\n      <li class=\"Feature delete\">Delete Feature</li>\r\n      <li class=\"todo Feature duplicate\">Duplicate Feature</li>\r\n      <li class=\"Reference reflistparent\">References\r\n        <ul class=\"reflist\">\r\n          <li class=\"refli template\" data-index=\"-1\"><span class=\"index\"></span><span class=\"text\"></span><button class=\"refli delete btn btn-sm btn-danger\">X</button></li>\r\n          <li class=\"refli todo\"><button class=\"firstempty btn btn-sm btn-outline-primary\">Select first empty</button></li>\r\n          <li class=\"refli todo\"><label><input class=\"byindex\" type=\"number\" value=\"0\" min=\"0\" max=\"-10\" step=\"1\"><button class=\"byindex btn btn-sm btn-outline-primary\">Select by index</button></label></li>\r\n        </ul>\r\n      </li>\r\n      <li class=\"separator\"></li>\r\n      <li class=\"Vertex up\">Push vertex Up (Z-order)</li>\r\n      <li class=\"Vertex down\">Push vertex Down (Z-order)</li>\r\n      <li class=\"todo Feature autofixinstances m2hide\">Autofix instances</li>\r\n      <li class=\"todo Feature autofix\">Autofix conformity</li>\r\n      <li class=\"Feature up\">Move feature Up</li>\r\n      <li class=\"Feature down\">Move feature Down</li>\r\n    </ul>\r\n    <ul class=\"extedge contextMenu\">\r\n      <li class=\"edge delete\">Delete generalization</li>\r\n      <li class=\"edge change\">Edit generalization</li>\r\n    </ul>\r\n    <ul class=\"edge contextMenu\">\r\n      <li class=\"edge delete\">Delete reference</li>\r\n      <li class=\"edge change\">Edit reference</li>\r\n    </ul>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/graph-tab-html/graph-tab-html.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/graph-tab-html/graph-tab-html.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"UtabContainer main\" data-selectedTab=\"1\">\r\n  <ul class=\"UtabHeaderContainer main\">\r\n    <li class=\"UtabHeader main\" data-target=\"1\">MetaModel</li>\r\n    <li class=\"UtabHeader main\" data-target=\"2\">Model</li>\r\n  </ul>\r\n  <div class=\"UtabContentContainer\">\r\n    <div class=\"UtabContent main\" data-target=\"1\"><app-mm-graph-html></app-mm-graph-html></div>\r\n    <div class=\"UtabContent main\" data-target=\"2\"><app-m-graph-html></app-m-graph-html></div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/isidebar/isidebar.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/isidebar/isidebar.component.html ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>\r\n  isidebar works!\r\n</p>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/m-graph-html/m-graph-html.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/m-graph-html/m-graph-html.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"verticalFillingContainer\">\r\n  <div class=\"verticalFiller horizontalFillingContainer\">\r\n    <div class=\"sidebarShell resizableBorder\" data-resizableRight=\"true\">\r\n    <div id='model_sidebar'></div>\r\n  </div>\r\n    <div class=\"editorShell horizontalFiller\">\r\n      <ul class =\"viewpointShell\">\r\n        <h6>Viewpoints</h6>\r\n        <li class=\"viewpointrow default\">\r\n          <label class=\"name\">\r\n            <input type=\"radio\" checked>\r\n            <input class=\"name form-control-sm\" type=\"text\" value=\"Default\" readonly><button class=\"duplicate\"></button>\r\n          </label>\r\n        </li>\r\n        <li class=\"viewpointrow template\">\r\n          <label class=\"checkbox\"><input type=\"checkbox\"></label>\r\n          <label class=\"name\"><input class=\"name form-control-sm\" type=\"text\">\r\n            <span class=\"buttons\">\r\n            <button class=\"duplicate\"></button><button class=\"edit\"></button><button class=\"remove\"></button>\r\n          </span>\r\n          </label>\r\n        </li>\r\n      </ul>\r\n      <svg class=\"graph\" id='model_editor'>\r\n        <g class=\"gridContainer\">\r\n          <defs></defs>\r\n          <rect class=\"grid\"></rect>\r\n        </g>\r\n      </svg>\r\n      <div id='model_navigatorOutlineContainer'></div>\r\n    </div>\r\n    <!-- style of propertybar must be inline for resizableBorder js -->\r\n    <div class=\"UtabContainer propertyBarContainer resizableBorder\" data-resizableLeft=\"true\" data-selectedTab=\"2\" style=\"width: 283px;\">\r\n    <ul class=\"UtabHeaderContainer\">\r\n      <li class=\"UtabHeader\" data-target=\"1\">Style</li>\r\n      <li class=\"UtabHeader\" data-target=\"2\">Structured</li>\r\n      <li class=\"UtabHeader\" data-target=\"3\">Raw</li>\r\n    </ul>\r\n    <div class=\"UtabContentContainer\">\r\n      <div class=\"UtabContent\" data-target=\"1\"><app-style-editor></app-style-editor></div>\r\n      <div class=\"UtabContent\" data-target=\"2\"><app-property-barr></app-property-barr></div>\r\n      <div class=\"UtabContent\" data-target=\"3\">\r\n        <div class=\"rawContainer\">\r\n          <h2 class=\"rawTitle\">Raw eCore fragment</h2>\r\n          <textarea class=\"rawecore\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div class=\"mconsole resizableBorder\" data-resizableTop=\"true\" style=\"position: absolute; bottom: 0;\"></div>\r\n  <div class=\"MDefaultStyles customized\"></div>\r\n  <div class=\"MDefaultStyles immutable\">\r\n    <foreignobject class=\"template Class\" x=\"0\" y=\"0\" width=\"200\" height=\"40\">\r\n      <div class=\"Class Vertex vertexShell\" style=\"background:white; min-width:200px; height:auto; width:100%; overflow: auto;\" data-autosize=\"1\">\r\n        <div class=\"VertexHeader\" style=\"height:20px; width:100%; text-align:center; display:flex;\">\r\n          <div style=\"text-align:center; order:2; flex-grow:1; flex-shrink:1; flex-basis:10px; color:dodgerblue; margin:auto; padding-left:4px;\">($##metaParent.name$)</div>\r\n        </div>\r\n        <div class=\"specialjs AttributeContainer\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs ReferenceContainer\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs OperationContainer\" style=\"display: flex; flex-direction: column;\"></div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <div class=\"template Reference\" style=\"height:22px; padding-left: 5px; display:flex; margin:auto; box-sizing:content-box;\">\r\n      <span style=\"display:flex; order:0; flex-grow:1; flex-shrink:1; margin:auto; color:darkorange;\">*$##metaParent.type.printablename$</span>\r\n      <span style=\"display:flex; order:1; flex-basis:10px; flex-grow:2; flex-shrink:2; min-width:3px; margin:auto;\">$##metaParent.name$</span>\r\n      <button class=\"LinkVertex\" style=\"order:3; width:22px; height:22px; padding:0; margin:auto;\">-></button>\r\n    </div>\r\n\r\n    <div class=\"template Attribute\" style=\"height:22px; padding-left: 5px; display:flex; box-sizing:content-box;\">\r\n      <span style=\"order:0; flex-basis:10px; flex-grow:2; flex-shrink:2; min-width:3px; margin:auto; color:darkorange;\">$##metaParent.type.printablename$</span>\r\n      <span style=\"order:1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px; margin:auto;\">$##metaParent.name$&nbsp;=&nbsp;</span>\r\n      <input type=\"text\" placeholder=\"empty string\" value=\"$##valuesStr$\" style=\"border: none; order:2; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n    </div>\r\n\r\n    <div class=\"template Operation\" style=\"height: 22px; padding-left: 5px; display:flex; box-sizing:content-box;\">\r\n      <div class=\"specialjs signature\" data-maxargumentchars=\"10\" data-maxarguments=\"2\" style=\"min-width:100%\"></div>\r\n      <div class=\"specialjs operationDetail\" style=\"margin:2px; padding:2px; order:2; border: 3px solid #28a745; border-top-color: transparent; margin-top:0;\">\r\n        <div style=\"display: flex; width: 100%;\">\r\n          <select disabled data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" data-void=\"true\" style=\"border:none; display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n          <input disabled type=\"text\" placeholder=\"Operation Name\" pattern=\"[A-Za-z0-9_$]+\" value=\"$##name$\" style=\"border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n        </div>\r\n        <div class=\"parameterList\" style=\"display: flex; width: 100%;\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Parameter\" style=\"height: 22px; padding-left: 5px; display:flex; box-sizing:content-box;\">\r\n      <select disabled data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" style=\"border:none;display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n      <input disabled type=\"text\" placeholder=\"Parameter Name\" pattern=\"[A-Za-z0-9_$]*\" value=\"$##name$\" style=\"border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mm-graph-html/mm-graph-html.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mm-graph-html/mm-graph-html.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"verticalFillingContainer\">\r\n  <div class=\"verticalFiller horizontalFillingContainer\">\r\n    <div class=\"sidebarShell resizableBorder\" data-resizableRight=\"true\">\r\n    <div id='metamodel_sidebar'></div>\r\n  </div>\r\n    <div class=\"editorShell horizontalFiller\">\r\n      <ul class =\"viewpointShell\">\r\n        <h6>Viewpoints</h6>\r\n        <li class=\"viewpointrow default\">\r\n          <label class=\"name\">\r\n            <input type=\"radio\" checked>\r\n            <input class=\"name form-control-sm\" type=\"text\" value=\"Default\" readonly><button class=\"duplicate\"></button>\r\n          </label>\r\n        </li>\r\n        <li class=\"viewpointrow template\">\r\n          <label class=\"checkbox\"><input type=\"checkbox\"></label>\r\n          <label class=\"name\"><input class=\"name form-control-sm\" type=\"text\">\r\n            <span class=\"buttons\">\r\n            <button class=\"duplicate\"></button><button class=\"edit\"></button><button class=\"remove\"></button>\r\n          </span>\r\n          </label>\r\n        </li>\r\n      </ul>\r\n      <svg class=\"graph\" id='metamodel_editor'>\r\n        <g class=\"gridContainer\">\r\n          <defs></defs>\r\n          <rect class=\"grid\"></rect>\r\n        </g>\r\n      </svg>\r\n      <div id='metamodel_navigatorOutlineContainer'></div>\r\n    </div>\r\n    <!-- style of propertybar must be inline for resizableBorder js -->\r\n    <div class=\"UtabContainer propertyBarContainer resizableBorder\" data-resizableLeft=\"true\" data-selectedTab=\"2\" style=\"width: 283px;\">\r\n    <ul class=\"UtabHeaderContainer\">\r\n      <li class=\"UtabHeader\" data-target=\"1\">Style</li>\r\n      <li class=\"UtabHeader\" data-target=\"2\">Structured</li>\r\n      <li class=\"UtabHeader\" data-target=\"3\">Raw</li>\r\n    </ul>\r\n    <div class=\"UtabContentContainer\">\r\n      <div class=\"UtabContent\" data-target=\"1\"><app-style-editor></app-style-editor></div>\r\n      <div class=\"UtabContent\" data-target=\"2\"><app-property-barr></app-property-barr></div>\r\n      <div class=\"UtabContent\" data-target=\"3\">\r\n        <div class=\"rawContainer\">\r\n          <h2 class=\"rawTitle\">Raw eCore fragment</h2>\r\n          <textarea class=\"rawecore\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div class=\"mmconsole resizableBorder\" data-resizableTop=\"true\"  style=\"position: absolute; bottom: 0; width: 100vw; height: 20px;\"></div>\r\n  <div class=\"MMDefaultStyles customized\"></div>\r\n  <div class=\"MMDefaultStyles immutable\">\r\n    <foreignobject class=\"template Class\" x=\"0\" y=\"0\" width=\"200\" height=\"40\">\r\n      <div class=\"Class Vertex vertexShell\" style=\"background:white; min-width:200px; height:auto; width:100%; overflow: auto;\" data-autosize=\"1\">\r\n        <div class=\"VertexHeader\" style=\"height:20px; width:100%; text-align:center; display:flex;\">\r\n          <input value=\"$##name$\" placeholder=\"Object name\" pattern=\"[A-Za-z0-9_$]+\" style=\"border:none; text-align:right; order:1; flex-grow:1; flex-shrink:1; flex-basis:10px; min-width:10px; color:black; border:none; padding-right:4px;\">\r\n          <div style=\"text-align:left; order:2; flex-grow:1; flex-shrink:1; flex-basis:10px; color:dodgerblue; margin:auto; padding-left:4px;\">(Class)</div>\r\n        </div>\r\n        <div class=\"specialjs AttributeContainer\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs ReferenceContainer\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs OperationContainer\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"addFieldButtonContainer\" style=\"width: 100%; text-align: center;\">\r\n          <span style=\"display:flex; margin:auto;\">Add</span>\r\n          <style id=\"addfieldcss_class\">\r\n            ::ng-deep .addFieldButtonContainer{ display: flex; max-height: 20px; min-height: 20px; overflow: hidden;}\r\n            ::ng-deep .addFieldButtonContainer{ opacity: 0; padding-top: 20px; }\r\n            ::ng-deep .Vertex:hover .addFieldButtonContainer{ opacity: 1; padding-top: 0; }\r\n          </style>\r\n          <select class=\"AddFieldSelect\" style=\"display:flex; margin:auto;\">\r\n            <optgroup label=\"FeatureType\">\r\n              <option value=\"Attribute\" selected=\"\">Attribute</option>\r\n              <option value=\"Reference\">Reference</option>\r\n              <option value=\"Operation\">Operation</option>\r\n            </optgroup>\r\n          </select>\r\n          <span style=\"display:flex; margin:auto;\">field</span>\r\n          <button class=\"addFieldButton\">Go</button>\r\n        </div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <foreignobject class=\"template EEnum\" x=\"0\" y=\"0\" width=\"200\" height=\"40\">\r\n      <div class=\"Class Vertex vertexShell EEnum\" style=\"background:white; height:auto; min-width:200px; width:100%; overflow: auto;\" data-autosize=\"1\">\r\n        <div class=\"VertexHeader\" style=\"height:20px; width:100%; text-align:center; display:flex;\">\r\n          <input value=\"$##name$\" placeholder=\"Object name\" pattern=\"[A-Za-z0-9_$]+\" style=\"border:none; text-align:right; order:1; flex-grow:1; flex-shrink:1; flex-basis:10px; min-width:10px; color:black; border:none; padding-right:4px;\">\r\n          <div style=\"text-align:left; order:2; flex-grow:1; flex-shrink:1; flex-basis:10px; color:red; margin:auto; padding-left:4px;\">(Enum)</div>\r\n        </div>\r\n        <div class=\"specialjs LiteralContainer\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"addFieldButtonContainer\" style=\"width: 100%; text-align: center;\">\r\n          <style id=\"addfieldcss_enum\">\r\n            .addFieldButtonContainer{ display: flex; max-height: 20px; min-height: 20px; overflow: hidden;}\r\n            .addFieldButtonContainer{ opacity: 0; padding-top: 20px; }\r\n            .Vertex:hover .addFieldButtonContainer{ opacity: 1; padding-top: 0; }\r\n          </style>\r\n          <span style=\"display:flex; margin:auto;\">Add</span>\r\n          <select class=\"AddFieldSelect\" disabled style=\"display:flex; margin:auto;\">\r\n            <optgroup label=\"FeatureType\">\r\n              <option value=\"Literal\" selected=\"\">Literal</option>\r\n            </optgroup>\r\n          </select>\r\n          <span style=\"display:flex; margin:auto;\">field</span>\r\n          <button class=\"addFieldButton\">Go</button>\r\n        </div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <div class=\"template Reference\" style=\"height: 22px; padding-left: 5px; display:flex; box-sizing:content-box;\">\r\n      <select data-class=\"true\" style=\"border:none; display:flex; order:3; flex-grow:1; flex-basis:0; min-width:0;\"></select>\r\n      <input type=\"text\" placeholder=\"Reference Name\" pattern=\"[A-Za-z0-9_$]+\" value=\"$##name$\" style=\"border:none; order: 1; flex-basis:10px; flex-grow:2; flex-shrink:2; min-width:3px;\">\r\n    </div>\r\n\r\n    <div class=\"template Attribute EString EInteger\" style=\"height:22px; padding-left: 5px; display:flex; box-sizing:content-box;\">\r\n      <select data-primitive=\"true\" data-enum=\"true\" style=\"border:none; display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n      <input type=\"text\" placeholder=\"Attribute Name\" pattern=\"[A-Za-z0-9_$]+\" value=\"$##name$\" style=\"border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n    </div>\r\n\r\n    <div class=\"template ELiteral\" style=\"height:22px; display:flex; box-sizing:content-box; padding-left: 5px; padding-right: 10px;\">\r\n      <input class=\"value\" type=\"number\" placeholder=\"auto\" value=\"$##ordinal$\" style=\"border:none; display: flex; width: 30px;\">\r\n      <input class=\"name\" type=\"text\" placeholder=\"name\" value=\"$##name$\" pattern=\"[A-Za-z0-9_$]+\" style=\"border:none; display:flex; flex-grow:1; flex-shrink:1; flex-basis:3px; min-width:3px;\">\r\n      <input class=\"literal\" type=\"text\" placeholder=\"literal\" value=\"$$#literal$\" style=\"border:none; display:flex; flex-grow:1; text-align: right; flex-basis:3px; min-width:3px;\">\r\n    </div>\r\n\r\n    <div class=\"template Operation\" style=\"display:flex; box-sizing:content-box; flex-flow:column;\">\r\n      <div class=\"specialjs signature\" data-maxargumentchars=\"10\" data-maxarguments=\"2\" style=\"height:21px; min-width:100%\"></div>\r\n      <div class=\"specialjs operationDetail\" style=\"margin:2px; padding:2px; order:2; border: 3px solid #28a745; border-top-color: transparent; margin-top:0;\">\r\n        <div style=\"display: flex; width: 100%;\">\r\n          <select data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" data-void=\"true\" style=\"border:none; display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n          <input disabled type=\"text\" placeholder=\"Return Type\" pattern=\"[A-Za-z0-9_$]+\" value=\"Return type\" style=\"border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n        </div>\r\n        <div class=\"parameterList\" style=\"display: flex; width: 100%; flex-flow:column;\">\r\n          <button class=\"addParameterButton btn btn-sm btn-success\" style=\"width: 100%; height: 22px; padding:0; text-align: center\">+</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Parameter\" style=\"height: 22px; border-bottom: 1px solid lightgray; display:flex; box-sizing:content-box;\">\r\n       <select data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" style=\"border:none; display:flex; order:2; flex-grow:1; flex-shrink:1; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n       <input type=\"text\" placeholder=\"Parameter Name\" pattern=\"[A-Za-z0-9_$]*\" value=\"$##name$\" style=\"border:none; display: flex; order: 1; flex-basis:10px; flex-grow:1; flex-shrink:1; min-width:3px;\">\r\n       <button style=\"order: 3; padding:0 5px;\">X</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mminput/mminput.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mminput/mminput.component.html ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!-- <input id=\"MM_INPUT\" value = \"<?xml version='1.0' encoding='UTF-8'?>\r\n<ecore:EPackage xmi:version='2.0' xmlns:xmi='http://www.omg.org/XMI' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\r\n    xmlns:ecore='http://www.eclipse.org/emf/2002/Ecore' name='bowling' nsURI='http://org/eclipse/example/bowling' nsPrefix='org.eclipse.example.bowling'>\r\n  <eClassifiers xsi:type='ecore:EClass' name='Player'>\r\n    <eStructuralFeatures xsi:type='ecore:EAttribute' name='name' eType='ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString'/>\r\n  </eClassifiers>\r\n  <eClassifiers xsi:type='ecore:EClass' name='League'>\r\n    <eStructuralFeatures xsi:type='ecore:EAttribute' name='name' eType='ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString'/>\r\n    <eStructuralFeatures xsi:type='ecore:EReference' name='players' upperBound='-1'\r\n        eType='#//Player' containment='true'/>\r\n  </eClassifiers>\r\n</ecore:EPackage>\"> -->\r\n\r\n<input id=\"MM_INPUT\" value = '{\r\n  \"ecore:EPackage\": {\r\n    \"@xmlns:xmi\": \"http://www.omg.org/XMI\",\r\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\r\n    \"@xmlns:ecore\": \"http://www.eclipse.org/emf/2002/Ecore\",\r\n    \"@xmi:version\": \"2.0\",\r\n    \"@name\": \"bowling\",\r\n    \"@nsURI\": \"http://org/eclipse/example/bowling\",\r\n    \"@nsPrefix\": \"org.eclipse.example.bowling\",\r\n    \"eClassifiers\": [\r\n      {\r\n        \"@xsi:type\": \"ecore:EClass\",\r\n        \"@name\": \"Player\",\r\n        \"eStructuralFeatures\": {\r\n          \"@xsi:type\": \"ecore:EAttribute\",\r\n          \"@name\": \"name\",\r\n          \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString\"\r\n        }\r\n      },\r\n      {\r\n        \"@xsi:type\": \"ecore:EClass\",\r\n        \"@name\": \"League\",\r\n        \"eStructuralFeatures\": [\r\n          {\r\n            \"@xsi:type\": \"ecore:EAttribute\",\r\n            \"@name\": \"name\",\r\n            \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString\"\r\n          },\r\n          {\r\n            \"@xsi:type\": \"ecore:EReference\",\r\n            \"@name\": \"players\",\r\n            \"@upperBound\": \"@1\",\r\n            \"@eType\": \"#//Player\",\r\n            \"@containment\": \"true\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'>\r\n\r\n\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mmsidebar/mmsidebar.component.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mmsidebar/mmsidebar.component.html ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>\r\n  mmsidebar works!\r\n</p>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/msidebar/msidebar.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/msidebar/msidebar.component.html ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>\r\n  msidebar works!\r\n</p>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/property-barr/property-barr.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/property-barr/property-barr.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"property_sidebar\">\r\n  <div class=\"propertySidebarCurrentContent\"></div>\r\n  <div class=\"propertySidebarTemplates template\">\r\n    <div class=\"minimizer single\"></div>\r\n    <div class=\"content\">\r\n      <label class=\"model\">URI:<input class = \"uri m1disable\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"model\">Namespace:<input class = \"namespace m1disable\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"class m2hide\">Is Root<input type=\"checkbox\" class=\"isRoot\"></label>\r\n      <label class=\"operation\">Access modifier:<select class=\"specialjs visibilitySelector m1disable\"></select></label>\r\n      <label class=\"literal\">Ordinal:<input class=\"value\" type=\"number\"></label>\r\n      <label>Name:<input class=\"name m1disable\" placeholder=\"nameless\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"literal\">Literal:<input class=\"literal\" placeholder=\"will inherit from name\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"parameter\">Type:<select class=\"m1disable\" data-primitive=\"true\" data-enum=\"true\" data-class=\"true\"></select></label>\r\n      <label class=\"attribute\">Type:<select class=\"m1disable\" data-primitive=\"true\" data-enum=\"true\"></select></label>\r\n      <label class=\"reference\">Target Type:<select class=\"m1disable\" data-class=\"true\"></select></label>\r\n      <label class=\"attribute m2hide\">Value:<input type=\"text\" class=\"attributeValue\" placeholder=\"[ empty ]\"></label>\r\n      <label class=\"reference\">Is containment:<input type=\"checkbox\" class=\"referenceContainment m1disable\"></label>\r\n      <label class=\"parameter\">Is ordered:<input type=\"checkbox\" class=\"ordered m1disable\"></label>\r\n      <label class=\"parameter\">Values are unique:<input type=\"checkbox\" class=\"unique m1disable\"></label>\r\n      <label class=\"attribute reference parameter\">LowerBound:<input type=\"number\" step=\"1\" min=\"-1\" class=\"lowerbound m1disable\" placeholder=\"-1\"></label>\r\n      <label class=\"attribute reference parameter\">UpperBound:<input type=\"number\" step=\"1\" min=\"-1\" class=\"upperbound m1disable\" placeholder=\"-1\"></label>\r\n      <label class=\"operation\">Exceptions:<input class=\"exceptions\" placeholder=\"throwable exceptions, comma-separated.\"></label>\r\n      <div class=\"replaceVarOn model\"><label>Packages: ($##childrens.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content list packageList\"></div></div></div>\r\n      <div class=\"replaceVarOn package\"><label>Classes: ($##classes.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content classList\"></div></div></div>\r\n      <div class=\"replaceVarOn package\"><label>Enumerations: ($##enums.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content enumList\"></div></div></div>\r\n      <div class=\"replaceVarOn class\"><label>Attributes: ($##attributes.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content attributeList\"></div></div></div>\r\n      <div class=\"replaceVarOn class\"><label>References: ($##references.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content referenceList\"></div></div></div>\r\n      <div class=\"replaceVarOn class\"><label>Operations: ($##operations.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content operationList\"></div></div></div>\r\n      <div class=\"replaceVarOn operation\"><label>Parameters: ($##childrens.length$ + 1)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content parameterList\"></div></div></div>\r\n      <div class=\"replaceVarOn enum\"><label>Literals: ($##childrens.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content literalList\"></div></div></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/style-editor/style-editor.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/style-editor/style-editor.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"styleContainer\">\r\n  <div class=\"StyleEditorDisplay\">\r\n\r\n  </div>\r\n  <div class=\"styleTemplates styleEditor\">\r\n    <div class=\"template model\">\r\n      <table><tbody>\r\n      <tr>\r\n        <td>Grid</td>\r\n        <td>X: <input type=\"number\" class=\"gridX\" min=\"0\" step=\"1\" placeholder=\"off\"> Y: <input type=\"number\" class=\"gridY\" min=\"0\" step=\"1\"  placeholder=\"off\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Zoom</td>\r\n        <td><input type=\"number\" class=\"zoomX\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\"></td>\r\n        <td style=\"display: none\">X: <input type=\"number\" class=\"zoomXOLD\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\"> Y: <input type=\"number\" class=\"zoomY\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\"><label><input type=\"checkbox\" class=\"showGrid\">Show grid</label></td></tr>\r\n      <tr><td colspan=\"2\"><label><input type=\"color\" class=\"graphColor\">Background color</label></td></tr>\r\n      </tbody></table>\r\n    </div>\r\n\r\n    <div class=\"template htmlstyle\">\r\n      <div class=\"top\">\r\n        <label class=\"colChild\">\r\n          <div class=\"roww\">\r\n            <h6 class=\"vertexStyle separator htmllevel\"></h6>\r\n          </div>\r\n          <!--\r\n          <div class=\"colChild\">\r\n            <span class=\"stylelabel\">Applied view:</span>\r\n            <select class=\"stylename\"></select>\r\n          </div>\r\n          -->\r\n        </label>\r\n        <button class=\"btn btn-danger styledelete\" matTooltip=\"Remove style customization\">X</button>\r\n        <button class=\"helpButton btn btn-info\" matTooltip=\"todo: explain .EndPoint, .TypeSelector, .ClassSelector...\">?</button>\r\n      </div>\r\n      <label class=\"allowEdit\"><span>This style is being inherited and cannot be modified here.<br>You need a local copy to allow Edit.</span><button class=\"allowEdit btn btn-secondary\">Make it</button></label>\r\n      <div contenteditable=\"true\" class=\"html\" placeholder=\"Html for $##name$ (m2 class).\"></div>\r\n\r\n      <!--\r\n      <div class=\"roww nowrap detailButtonContainer\">\r\n        <button target=\"div.detail.measurable\" class=\"detail measurable btn btn-primary\">\r\n            <span class=\"closed\">\r\n              <label class=\"measurable\">\r\n                <input type=\"checkbox\">\r\n                <span>Measurable</span>\r\n              </label>\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮟</span><span class=\"HorizontalChild\">⮟</span><span class=\"HorizontalChild\">⮟</span></div>\r\n            </span>\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n        <button target=\"div.detail.save\" class=\"detail save btn btn-primary\">\r\n          <span class=\"closed\">Save detail</span>\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n      </div>\r\n      <div class=\"detail measurable\" style=\"display: none\">\r\n        < !--\r\n                          left\t  right\t  eval\r\n\r\n          r_\t\t      str\t    any\t    /     <-- add dataset to name input.\r\n          d_\t\t      str\t    any\t    /\r\n          _\t\t        /\t      js\t    any\r\n          _rule\t\t    $##a$  \tjs\t    any\r\n          _export\t\t  jq\t    js\t    any\r\n          _chainFinal\texport\r\n          _chain\t\t  export\r\n          _constraint\tsize\t  js\t    bool\tinequality\r\n          _dstyle\t\t  /\t      js->css\tstr\r\n          _import\t\t  size\t  js\t    any\r\n        -- >\r\n        <div class=\"template measurable _root roww columnContainer\">\r\n          <button class=\"deleteRule columnChild btn btn-danger\">X</button>\r\n          <div class=\"columnChild\">\r\n            <div class=\"roww hideOn r_ d_\">\r\n              <label>\r\n                <span>Name</span>\r\n                <span class=\"nameprefix\">_</span>\r\n                <input class=\"fill name\" type=\"text\" placeholder=\"attribute name\" pattern=\"[.]+\">\r\n              </label>\r\n            </div>\r\n            <label class=\"expressionRoot\">\r\n              <input class=\"leftside hideOn _ _dstyle _chain _chainFinal\" type=\"text\" placeholder=\"Left side\">\r\n              <span class=\"operatortext hideOn _constraint _ _dstyle operator\">=</span>\r\n              <select class=\"hideOn _ _dstyle operator\"><optgroup label=\"operator\">\r\n                <option value=\"<=\">&lt;=</option>\r\n                <option value=\"=\">=</option>\r\n                <option value=\">=\">&gt;=</option>\r\n              </optgroup></select>\r\n              <input class=\"rightside hideon_chain _chainFinal \" type=\"text\" placeholder=\"Right side\">\r\n            </label>\r\n            <div class=\"roww hideOn r_ d_\">\r\n              <label>\r\n                <span>Relative target</span>\r\n                <input class=\"fill relativetarget\" type=\"text\" placeholder=\"jQuery selector\">\r\n              </label>\r\n            </div>\r\n            <div class=\"roww hideOn r_ d_\">\r\n              <label>\r\n                <span>Evaluation (debug)</span>\r\n                <input readonly class=\"fill evaluation\" type=\"text\" placeholder=\"empty string\">\r\n              </label>\r\n            </div>\r\n            <a class=\"roww outputerror left\"></a>\r\n            <a class=\"roww outputerror right\"></a>\r\n          </div>\r\n        </div>\r\n        < !-- TEMPLATES END -- >\r\n        <h6 class=\"addHeader\">\r\n          <button class=\"btn btn-secondary addmeasurable\">Add</button>\r\n          <select class=\"attributetypeadd\"><optgroup label=\"Attribute type\">\r\n            <option value=\"d_\">jQueryUI drag option</option>\r\n            <option value=\"r_\">jQueryUI resize option</option>\r\n            <option value=\"_rule\">_rule</option>\r\n            <option value=\"_dstyle\">_dstyle</option>\r\n            <option value=\"_export\">_export</option>\r\n            <option value=\"_constraint\">_constraint</option>\r\n            <option value=\"_import\">_import</option>\r\n            <option value=\"_chain\">_chain</option>\r\n            <option value=\"_chainFinal\">_chainFinal</option>\r\n            <option value=\"_\">_ (Pseudo-variable)</option>\r\n          </optgroup></select>\r\n        </h6>\r\n\r\n        <h6>_D</h6>\r\n        <div class=\"d_Container\"></div>\r\n        <h6>_R</h6>\r\n        <div class=\"r_Container\"></div>\r\n        <h6>_ (Pseudo-variables)</h6>\r\n        <div class=\"_Container\"></div>\r\n        <h6>_Rule</h6>\r\n        <div class=\"_ruleContainer\"></div>\r\n        <h6>_Export</h6>\r\n        <div class=\"_exportContainer\"></div>\r\n        <h6>_Constraint</h6>\r\n        <div class=\"_constraintContainer\"></div>\r\n        <h6>_Dstyle</h6>\r\n        <div class=\"_dstyleContainer\"></div>\r\n        <h6>_Import</h6>\r\n        <div class=\"_importContainer\"></div>\r\n        <h6>_Chain</h6>\r\n        <div class=\"_chainContainer\"></div>\r\n        <h6>_ChainFinal</h6>\r\n        <div class=\"_chainFinalContainer\"></div>\r\n      </div>\r\n      <div class=\"detail save\" style=\"display: none\">\r\n        <div class=\"saveasrow\">\r\n          <button class=\"delete btn btn-secondary\">Delete</button>\r\n          <button class=\"saveas btn btn-secondary\">Save as</button>\r\n          <input class=\"saveas form-control\" placeholder=\"new style name\">\r\n        </div>\r\n        <h6>Style is compatible with:</h6>\r\n        <div class=\"compatibleRow\">\r\n          <label><span>M2 Elements</span><input class=\"metamodel\" type=\"checkbox\"></label>\r\n          <label><span>M1 Elements</span><input class=\"model\" type=\"checkbox\"></label>\r\n        </div>\r\n        <h6>And appliable to:</h6>\r\n        <div class=\"compatibleRow\">\r\n          <label><span>Class</span><input class=\"class\" type=\"checkbox\"></label>\r\n          <label><span>Attributes</span><input class=\"attribute\" type=\"checkbox\"></label>\r\n          <label><span>References</span><input class=\"reference\" type=\"checkbox\"></label>\r\n          <label><span>Operations</span><input class=\"operation\" type=\"checkbox\"></label>\r\n          <label><span>Parameters</span><input class=\"parameter\" type=\"checkbox\"></label>\r\n        </div>\r\n      </div>\r\n\r\n      < !-- <div class=\"separatorShell\">\r\n        <h6 class=\"vertexStyle separator\">\r\n          <label><span>Preview&nbsp;of&nbsp;</span>\r\n            <select class=\"previewselector\"></select>\r\n          </label></h6>\r\n        <button class=\"helpButton vertex btn btn-info\" matTooltip=\"todo: explain .EndPoint, .TypeSelector, .ClassSelector...\">?</button>\r\n      </div> -->\r\n      <!-- start of new measurable -->\r\n\r\n      <div class=\"measurablePlaceholder\"></div>\r\n\r\n      <!-- end of new measurable -->\r\n    </div>\r\n\r\n    <div class=\"template modelpiece\">\r\n      <!-- https://www.key-shortcut.com/en/writing-systems/35-symbols/arrows -->\r\n      <div class=\"arrowContainer\">\r\n        <button class=\"arrow up btn btn-primary\">⇪</button>\r\n        <h6 class=\"tsclass\">TS_Class</h6>\r\n        <button class=\"arrow down btn btn-primary\">⇩</button>\r\n      </div>\r\n      <label class=\"m1 iclass\">\r\n        <input type=\"checkbox\" class=\"showAsEdge\">\r\n        <span class=\"showAsEdgeText\">#####</span>\r\n      </label>\r\n      <div class=\"style own colContainer\"></div>\r\n      <div class=\"separatorShell\"></div>\r\n      <div class=\"roww nowrap detailButtonContainer\">\r\n        <button target=\"div.detail.style.inherited\" class=\"detail inherited btn btn-primary\">\r\n          <span class=\"closed\">Inherited Style</span> <!-- Behequated -->\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n        <button target=\"div.detail.style.inheritable\" class=\"detail inheritable btn btn-primary\">\r\n          <span class=\"closed\">Inheritable Style</span>\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n      </div>\r\n      <!-- detail style instances colContainer ... -->\r\n\r\n      <div class=\"detail style inheritable colContainer\"></div>\r\n      <div class=\"detail style inherited colContainer\"></div>\r\n    </div>\r\n    <div class=\"template edge\">\r\n      <h1>Edge style</h1>\r\n      <table><tbody>\r\n      <tr>\r\n        <td>Style</td>\r\n        <td><select class=\"edgeStyle\"><optgroup label=\"Edge style\">\r\n          <option value=\"straight\" title=\"./img/icons/edge/straight.jpg\">Straight</option>\r\n          <option value=\"angular23Auto\" title=\"./img/icons/edge/angular23.jpg\">Angulated (auto)</option>\r\n          <option value=\"angular2\" title=\"./img/icons/edge/angular2.jpg\">Angulated (2)</option>\r\n          <option value=\"angular3\" title=\"./img/icons/edge/angular3.jpg\">Angulated (3)</option>\r\n        </optgroup></select></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On normal status</td></tr>\r\n      <tr>\r\n        <td>Color</td>\r\n        <td><input type=\"color\" class=\"edgeColor common\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Width</td>\r\n        <td><input type=\"number\" class=\"edgeWidth common\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On highlight preview</td></tr>\r\n      <tr>\r\n        <td>Color</td>\r\n        <td><input type=\"color\" class=\"edgeColor highlight\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Width</td>\r\n        <td><input type=\"number\" class=\"edgeWidth highlight\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On selection</td></tr>\r\n      <tr>\r\n        <td>Color</td>\r\n        <td><input type=\"color\" class=\"edgeColor selected\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Width</td>\r\n        <td><input type=\"number\" class=\"edgeWidth selected\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      </tbody></table>\r\n      <h1>EdgePoint style</h1>\r\n      <table><tbody>\r\n      <tr><td colspan=\"2\" class=\"title\">On normal status</td></tr>\r\n      <tr>\r\n        <td>Radius</td>\r\n        <td><input type=\"number\" class=\"edgePoint radius\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Width</td>\r\n        <td><input type=\"number\" class=\"edgePoint strokeW\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Color</td>\r\n        <td><input type=\"color\" class=\"edgePoint stroke\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Fill Color</td>\r\n        <td><input type=\"color\" class=\"edgePoint fill\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On bounding preview</td></tr>\r\n      <tr>\r\n        <td>Radius</td>\r\n        <td><input type=\"number\" class=\"edgePointPreview radius\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Width</td>\r\n        <td><input type=\"number\" class=\"edgePointPreview strokeW\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Color</td>\r\n        <td><input type=\"color\" class=\"edgePointPreview stroke\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Fill Color</td>\r\n        <td><input type=\"color\" class=\"edgePointPreview fill\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">While moving</td></tr>\r\n      <tr>\r\n        <td>Radius</td>\r\n        <td><input type=\"number\" class=\"edgePointSelected radius\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Width</td>\r\n        <td><input type=\"number\" class=\"edgePointSelected strokeW\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Color</td>\r\n        <td><input type=\"color\" class=\"edgePointSelected stroke\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Fill Color</td>\r\n        <td><input type=\"color\" class=\"edgePointSelected fill\"></td>\r\n      </tr>\r\n      </tbody></table>\r\n      <div contenteditable=\"true\" class=\"edgeStyle label html\" placeholder=\"Label of link. Not filled means without label.\"></div>\r\n      <div class=\"separatorShell\">\r\n        <h6 class=\"edgeStyle separator\">Preview:</h6>\r\n        <button class=\"helpButton edgeLabel\" matTooltip=\"todo: explain .EndPoint, .TypeSelector, .ClassSelector...\">?</button>\r\n      </div>\r\n      <div class=\"edgeStyle preview\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/top-bar.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/top-bar.component.html ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id='topbarShell'>\r\n  <div id='topbar'>\r\n    <div class=\"dropdownContainer\">\r\n      <button class=\"todo dropdownTitle\">User</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding\">Logout</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding\">Preferences</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding\">Account</div></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer\">\r\n      <button class=\"dropdownTitle\">Meta-Metamodel</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"dropdownpadding TypeMapping\">Type mapping</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding VertexStyle\">Vertex Style</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding EdgeStyle\">Edge Style</div></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer metamodel\">\r\n      <button class=\"dropdownTitle\">Metamodel</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"dropdownpadding save\">Save</div></li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Recent</div>\r\n            <ul class=\"dropdownContent right recentSaveContainer\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 1</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 2</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 3</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 4</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Export</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownpadding download_JSON_String\">To eCore/JSON string</div></li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownpadding download_JSON\">Download eCore/JSON file</div></li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownpadding download_XMI\">Download eCore/XMI file</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Import</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">New empty metamodel</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (eCore/XMI)</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text (eCore/JSON)</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer model\">\r\n      <button class=\"dropdownTitle\">Model</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"dropdownpadding save\">Save</div></li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Recent</div>\r\n            <ul class=\"dropdownContent right recentSaveContainer\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 1</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 2</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 3</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 4</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Export</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownpadding download_JSON_String\">To eCore/JSON string</div></li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownpadding download_JSON\">Download eCore/JSON file</div></li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownpadding download_XMI\">Download eCore/XMI file</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Import</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">New empty model</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (eCore/XMI)</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text (eCore/JSON)</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer graph\">\r\n      <button class=\"dropdownTitle\">Graph</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"buttonGridContainer\">\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Mono-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid todo\">Multi-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Drag</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Mono-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid todo\">Multi-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Drag</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Mono-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid todo\">Multi-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Drag</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Mono-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid todo\">Multi-Select</div></div>\r\n          <div class=\"dropdownpadding buttonGridMinMargin\"><div class=\"buttonGrid\">Drag</div></div>\r\n\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div id=\"TypeMapper\" class=\"screenWideShadow\" data-closebuttontarget=\"1\">\r\n    <div id=\"TypeMapperContent\" class=\"popupContent\">\r\n      <h1>M3 Type mapping</h1>\r\n      <button class=\"closeButton\" data-closebuttontarget=\"1\">X</button>\r\n      <br>\r\n      <div class=\"TypeList\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "./src/Database/LocalStorage.ts":
/*!**************************************!*\
  !*** ./src/Database/LocalStorage.ts ***!
  \**************************************/
/*! exports provided: SaveListEntry, LocalStorage, LocalStorageM, LocalStorageM3, LocalStorageM2, LocalStorageM1, LocalStorageStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveListEntry", function() { return SaveListEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorage", function() { return LocalStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM", function() { return LocalStorageM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM3", function() { return LocalStorageM3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM2", function() { return LocalStorageM2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM1", function() { return LocalStorageM1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageStyles", function() { return LocalStorageStyles; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class SaveListEntry {
    constructor(lastopened, prefix, listname) {
        this.lastopened = lastopened;
        this.prefix = prefix;
        this.listname = listname;
    }
}
SaveListEntry.vertexPos = new SaveListEntry('_LastOpenedVertexPos', 'VertexPos', '_SaveListVertexPos');
SaveListEntry.view = new SaveListEntry('_LastOpenedView', 'ViewRule', '_SaveListView');
SaveListEntry.model = new SaveListEntry('_LastOpened', '', '_SaveList');
class LocalStorage {
    constructor(model) {
        this.prefix = '' + '';
        this.print = true;
        this.popupTmp = null;
        this.model = null;
        this.model = model;
        this.prefix = model.getPrefixNum() + '_';
    }
    static getLastOpened(modelNumber) {
        const ret = { model: null, vertexpos: null, view: null };
        ret.model = localStorage.getItem(LocalStorage.reservedprefix + 'm' + modelNumber + '_' + SaveListEntry.model.lastopened);
        ret.view = localStorage.getItem(LocalStorage.reservedprefix + 'm' + modelNumber + '_' + SaveListEntry.view.lastopened);
        ret.vertexpos = localStorage.getItem(LocalStorage.reservedprefix + 'm' + modelNumber + '_' + SaveListEntry.vertexPos.lastopened);
        return ret;
    }
    static deleteLastOpened(modelNumber) { this.setLastOpened(modelNumber, null, null, null); }
    static setLastOpened(modelNumber, model = null, view = null, vertex = null) {
        const prefix = LocalStorage.reservedprefix + 'm' + modelNumber + '_';
        if (model)
            localStorage.setItem(prefix + SaveListEntry.model.lastopened, model);
        else
            localStorage.removeItem(prefix + SaveListEntry.model.lastopened);
        if (view)
            localStorage.setItem(prefix + SaveListEntry.view.lastopened, view);
        else
            localStorage.removeItem(prefix + SaveListEntry.view.lastopened);
        if (vertex)
            localStorage.setItem(prefix + SaveListEntry.vertexPos.lastopened, vertex);
        else
            localStorage.removeItem(prefix + SaveListEntry.vertexPos.lastopened);
    }
    getViewPoints() {
        const m = this.model;
        const ret = { view: null, vertexPos: null };
        if (!m.name)
            return ret;
        ret.view = this.get(m.name, SaveListEntry.view);
        ret.vertexPos = this.get(m.name, SaveListEntry.vertexPos);
        return ret;
    }
    addToList(key, listname) {
        const saveKeyList = this.getKeyList(listname, null);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(saveKeyList, key))
            return;
        saveKeyList.push(key);
        this.overwriteList(listname, saveKeyList);
    }
    removeFromList(key, listname) {
        const saveKeyList = this.getKeyList(listname, null);
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(saveKeyList, key))
            return;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(saveKeyList, key);
        this.overwriteList(listname, saveKeyList);
    }
    overwriteList(listname, value) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!Array.isArray(value), 'recent savelist must be an array.');
        localStorage.setItem(LocalStorage.reservedprefix + this.prefix + listname, JSON.stringify(value));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TopBar"].topbar.updateRecents();
    }
    getKeyList(listname, limit = null) {
        const ret = JSON.parse(localStorage.getItem(LocalStorage.reservedprefix + this.prefix + listname));
        if (!ret) {
            return [];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!Array.isArray(ret), 'savelist got is not an array:', ret);
        return isNaN(limit) ? ret : ret.splice(limit);
    }
    add(key = null, val, saveList) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(val !== '' + val, 'parameter should be string:', val);
        if (val !== '' + val) {
            val = JSON.stringify(val);
        }
        key = key ? this.prefix + saveList.prefix + key : null;
        if (val !== 'null' && val !== 'undefined')
            localStorage.setItem(LocalStorage.reservedprefix + this.prefix + saveList.lastopened, val);
        else
            localStorage.removeItem(LocalStorage.reservedprefix + this.prefix + saveList.lastopened);
        if (!key) {
            return;
        }
        this.addToList(key, saveList.listname);
        localStorage.setItem(key, val);
    }
    remove(oldKey, saveList) {
        if (!oldKey)
            return;
        oldKey = this.prefix + saveList.prefix + oldKey;
        this.removeFromList(oldKey, saveList.listname);
        localStorage.removeItem(oldKey);
    }
    get(key, saveList) {
        key = this.prefix + saveList.prefix + key;
        return localStorage.getItem(key);
    }
    rename(oldKey, newKey, saveList) {
        const oldVal = this.get(oldKey, saveList);
        this.remove(oldKey, saveList);
        this.add(newKey, oldVal, saveList);
    }
    p(arg1, ...restArgs) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(this.print, arg1, ...restArgs); }
    finishSave(saveVal) {
        const m = this.model;
        if (this.popupTmp) {
            this.popupTmp = this.popupTmp.destroy();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!m.name, 'model name should be filled with a validated user input.');
        // must be recalculated, model.name might have been changed by user input (saveas or un-named model being given a name)
        let viewpointSave = JSON.stringify(m.generateViewPointSaveArr());
        this.add(m.name, saveVal, SaveListEntry.model);
        this.add(m.name, viewpointSave, SaveListEntry.view);
        this.add(m.name, this.vertexSaveStr, SaveListEntry.vertexPos);
        this.p(m.name + ' VertexPositions saved:', saveVal);
        this.p(m.name + ' ViewPoints saved:', viewpointSave);
        this.p(m.name + ' Model saved:', this.vertexSaveStr);
    }
    save_BlurEvent(e, saveVal) {
        const input = e.currentTarget;
        if (!+input.getAttribute('valid'))
            return;
        this.finishSave(saveVal);
    }
    save_OnKeyDown(e, saveVal) {
        // this.save_OnChange(e, popup, model);
        if (e.key !== 'return') {
            return;
        }
        this.save_BlurEvent(e, saveVal);
    }
    save_OnChange(e, model) {
        this.p('onchange');
        const input = e.currentTarget;
        let error = false;
        try {
            model.setName(input.value);
        }
        catch (e) {
            error = true;
        }
        finally { }
        if (error || input.value !== model.name) {
            this.popupTmp.setPostText('invalid or already registered name, a fix');
            input.setAttribute('valid', '0');
            if (model.name) {
                input.value = model.name;
            }
            return;
        }
        input.setAttribute('valid', '1');
    }
    saveModel(isAutosave, saveAs = false) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!this.popupTmp, 'should not be allowed to have 2 popup for the same Storage. this would lead to a conflict mixing data.');
        this.isAutosavetmp = isAutosave;
        this.saveAstmp = saveAs;
        const model = this.model;
        const ecoreJSONStr = model.generateModelString();
        this.vertexSaveStr = JSON.stringify(model.generateVertexPositionSaveArr());
        const name = model.name;
        const viepointJSONStr = JSON.stringify(model.generateViewPointSaveArr());
        this.p('save ' + this.prefix + 'Model[' + name + '] = ', ecoreJSONStr, 'viewpoints:', viepointJSONStr);
        this.add(null, ecoreJSONStr, SaveListEntry.model);
        this.add(null, viepointJSONStr, SaveListEntry.view);
        this.add(null, this.vertexSaveStr, SaveListEntry.vertexPos);
        let popup;
        const onblur = (e) => { this.save_BlurEvent(e, ecoreJSONStr); };
        const onkeydown = (e) => { this.save_OnKeyDown(e, ecoreJSONStr); };
        const onchange = (e) => { this.save_OnChange(e, model); };
        this.p('isAutosave:', isAutosave, 'saveAs:', saveAs, 'model.name:', model.name);
        // save with a name.
        if (name && name !== '') {
            this.finishSave(ecoreJSONStr);
            return;
        }
        // autosave without a name.
        if (isAutosave) {
            return;
        }
        // saveas without a name.
        if (saveAs) {
            const onSuccess = (value, input) => { model.setName(value); };
            const validator = (value, input) => {
                const oldVal = model.name;
                const ret = model.setName(value) === value;
                if (oldVal)
                    model.setName(oldVal);
                return ret;
            };
            popup = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["InputPopup"]('Choose a name for the ' + model.friendlyClassName(), '', '', null, model.friendlyClassName() + ' name', '', 'input', 'text', [onSuccess]);
            popup.setValidation(validator, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(model) + ' name is already used or contains invalid pattern.');
            popup.getInputNode()[0].pattern = '^[a-zA-Z_$][a-zA-Z_$0-9]*$';
            popup.show(true);
            return;
        }
        // user clicked save without a name
    }
    pushToServer() { }
    autosave(turn, permanendNotImplemented = false) {
        localStorage.setItem('autosave', '' + turn);
    }
}
LocalStorage.reservedprefix = '_';
class LocalStorageM {
}
class LocalStorageM3 extends LocalStorageM {
}
class LocalStorageM2 extends LocalStorageM {
}
class LocalStorageM1 extends LocalStorageM {
}
class LocalStorageStyles extends LocalStorage {
}


/***/ }),

/***/ "./src/GuiStyles/viewpoint.ts":
/*!************************************!*\
  !*** ./src/GuiStyles/viewpoint.ts ***!
  \************************************/
/*! exports provided: StyleVisibility, ViewHtmlSettings, ViewRule, ViewPoint, EdgeViewRule, EdgePointView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleVisibility", function() { return StyleVisibility; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewHtmlSettings", function() { return ViewHtmlSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewRule", function() { return ViewRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewPoint", function() { return ViewPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeViewRule", function() { return EdgeViewRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePointView", function() { return EdgePointView; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class StyleVisibility {
}
StyleVisibility._public = 'public';
StyleVisibility._private = 'private';
// approccio estendibile ai gruppi senza neanche creare nuove tabelle.
StyleVisibility._publicExceptUserList = 'crea una relationship table key=tutto= (owner+stylename+utenteCheNONPuòVedere)';
StyleVisibility._privateExceptUserList = 'crea una relationship table key=tutto= (owner+stylename+utenteChePuòVedere)'; // lo vede nessuno tranne...
class ViewHtmlSettings {
    constructor() {
        this.featuredependency = []; // dot separated. "Class" as typeof (m1class | m2class) instead of the name
        this.html = null;
    }
    toJSON(nameOrIndex) {
        this.updateHtmlMetaData();
        const copy0 = {};
        for (let key in this) {
            copy0[key] = this[key];
        }
        const copy = copy0;
        copy.htmlstr = this.html.outerHTML;
        delete copy.html;
        return copy;
    }
    toString() { return JSON.stringify(this); }
    updateHtml() {
        this.html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml(this.htmlstr);
        // todo: inserisci tutti gli attributi metadata nell html.
    }
    updateHtmlMetaData() {
        this.htmlstr = this.html.outerHTML;
        const $meta = $(this.html).find('meta');
        const setValue = (jq) => { return jq.length === 0 ? '' : jq[0].innerHTML; };
        const isTrue = (jq) => { return jq.length > 0 && jq[0].innerHTML === '1' || jq[0].innerHTML === 'true'; };
        $meta.find('owner').text(this.userOwner);
        $meta.find('name').text(this.name);
        $meta.find('isM1').text(this.AllowedOnM1);
        $meta.find('isM2').text(this.AllowedOnM2);
        $meta.find('isClass').text(this.allowedOnClass);
        $meta.find('isAttribute').text(this.allowedOnAttribute);
        $meta.find('isReference').text(this.allowedOnReference);
        $meta.find('isOperation').text(this.allowedOnOperation);
        $meta.find('isParameter').text(this.allowedOnParameter);
        $meta.find('preview').html(this.imgPreviewBase64);
        let featuredependencystr = '';
        let i;
        for (i = 0; i < this.featuredependency.length; i++) {
            const f = this.featuredependency[i];
            featuredependencystr += '<dependency><template>' + f.template + '</template><names>' + f.namesArray + '</names><types>' + f.typesArray + '</types></template>';
        }
        $meta.find('featuredependencyList').html(featuredependencystr);
    }
    setHtml(html) { return this.setHtml0(html, null); }
    setHtmlStr(html) { return this.setHtml0(null, html); }
    setHtml0(html, htmlstr) {
        // U.pe(!html && !htmlstr, 'both html and htmlstr are null.');
        // U.pe(true, this, html, htmlstr, !html, !htmlstr, !html && !htmlstr);
        if (!html) {
            html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml(htmlstr);
        }
        if (!htmlstr) {
            htmlstr = html ? html.outerHTML : null;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!html || !htmlstr, this, 'html is null:', html, 'htmlstr:', htmlstr, 'html?', !html, 'htmlstr?', !htmlstr, 'html && htmlstr?', !html && !htmlstr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!html.parentElement || !!html.parentNode, 'parentElement shuld be null here:', html, this);
        this.html = html;
        const $meta = $(html).find('meta');
        const getValue = (jq) => { return jq.length === 0 ? '' : jq[0].innerHTML; };
        const isTrue = (jq) => { return jq.length > 0 && (jq[0].innerHTML === '1' || jq[0].innerHTML === 'true'); };
        this.userOwner = getValue($meta.find('owner'));
        this.name = getValue($meta.find('name'));
        this.AllowedOnM1 = isTrue($meta.find('isM1'));
        this.AllowedOnM2 = isTrue($meta.find('isM2'));
        this.allowedOnClass = isTrue($meta.find('isClass'));
        this.allowedOnAttribute = isTrue($meta.find('isAttribute'));
        this.allowedOnReference = isTrue($meta.find('isReference'));
        this.allowedOnOperation = isTrue($meta.find('isOperation'));
        this.allowedOnParameter = isTrue($meta.find('isParameter'));
        const $tmp = $meta.find('preview');
        this.imgPreviewBase64 = $tmp.length > 0 ? $tmp[0].innerText : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toBase64Image(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml('<div>Select a instance to initializeFromModel' +
            ' the preview.</div>'));
    }
    getHtml() { return this.html; }
    getHtmlstr() { return this.html.outerHTML; }
    clone(json) {
        this.allowedOnClass = json.allowedOnClass;
        this.allowedOnAttribute = json.allowedOnAttribute;
        this.allowedOnReference = json.allowedOnReference;
        this.allowedOnOperation = json.allowedOnOperation;
        this.allowedOnParameter = json.allowedOnParameter;
        this.AllowedOnM1 = json.AllowedOnM1;
        this.AllowedOnM2 = json.AllowedOnM2;
        this.elementStylingCount = json.elementStylingCount;
        this.featuredependency = json.featuredependency;
        this.forkCounter = json.forkCounter;
        this.ForkedFromStr_name = json.ForkedFromStr_name;
        this.ForkedFromStr_user = json.ForkedFromStr_user;
        //this.htmlstr = json.htmlstr;
        if (json.htmlstr)
            this.html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml(json.htmlstr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(this.html instanceof Element), 'invalid htmlstr:', json.htmlstr, json);
    }
    setDependencyArray(featuredependency) {
        // todo: insert metadata into html, copy from ModelPieceStyleEntry
    }
    saveToDB() {
    }
}
class ViewRule {
    constructor(owner, target = null) {
        this.target = null;
        this.targetStr = null;
        this.htmlo = null;
        this.htmli = null;
        /// for classes
        this.displayAsEdge = false;
        this.vertexSize = null;
        /// for classes or references
        this.edgeViews = [];
        ViewRule[this.id = ViewRule.maxID++] = this;
        if (owner)
            owner.views.push(this);
        this.viewpoint = owner;
        this.target = target;
        this.setTargetStr();
    }
    static getbyID(id) { return ViewRule.allByID[id]; }
    static getbyHtml(html0) {
        let html = html0;
        while (html && html.dataset && !html.dataset.styleid)
            html = html.parentElement;
        return ViewRule.getbyID(html && html.dataset ? +html.dataset.styleid : null);
    }
    // will be called by JSON.serialize() before starting, replacing the original parameter.
    toJSON(nameOrIndex) {
        const copy0 = {};
        this.setViewpointStr();
        this.setTargetStr();
        for (let key in this) {
            copy0[key] = this[key];
        }
        const copy = copy0;
        if (this.target instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"])
            this.vertexSize = this.target.getVertex().getSize();
        delete copy.id;
        delete copy.target;
        delete copy.viewpoint;
        return copy;
    }
    // redundant explicit call toJSON just to make the IDE realize i'm using it.
    toJsonString() { return JSON.stringify(this.toJSON(null)); }
    setViewpointStr() { this.viewpointstr = this.viewpoint ? this.viewpoint.name : null; }
    setTargetStr() {
        this.targetStr = this.target ? this.target.getKeyStr() : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.targetStr && !!this.target, 'failed to get targetstr from:', this.target);
    }
    updateViewpoint(vp = null) {
        this.viewpoint = vp || ViewPoint.get(this.viewpointstr);
        const arr = this.edgeViews ? this.edgeViews : [];
        let i;
        for (i = 0; i < arr.length; i++) {
            arr[i].updateViewpoint(vp);
        }
    }
    updateTarget() {
        const root = this.viewpoint.target;
        const path = JSON.parse(this.targetStr);
        const realindexfollowed = { indexFollowed: [], debugArr: [] };
        this.target = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKey(path, realindexfollowed);
        if (realindexfollowed.indexFollowed.length !== path.length) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'unable to find target of view:', this, ' search output:', realindexfollowed);
            this.target = null;
        }
    }
    clone(json) {
        if (json.setViewpointStr) {
            json.setViewpointStr();
        }
        for (let key in json) {
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected key', key, json);
                    break;
                case 'id':
                case 'target': break;
                case 'targetStr':
                    this.targetStr = json[key];
                    break;
                case 'htmlo':
                    if (!json.htmlo) {
                        this.htmlo = null;
                        break;
                    }
                    if (!this.htmlo) {
                        this.htmlo = new ViewHtmlSettings();
                    }
                    this.htmlo.clone(json.htmlo);
                    break;
                case 'htmli':
                    if (!json.htmli) {
                        this.htmli = null;
                        break;
                    }
                    if (!this.htmli) {
                        this.htmli = new ViewHtmlSettings();
                    }
                    this.htmli.clone(json.htmli);
                    break;
                case 'displayAsEdge':
                    this.displayAsEdge = json.displayAsEdge;
                    break;
                case 'vertexSize':
                    this.vertexSize = json.vertexSize ? new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"]().clone(json.vertexSize) : null;
                    break;
                case 'edgeViews':
                    this.edgeViews = [];
                    const arr = json.edgeViews ? json.edgeViews : [];
                    let i;
                    for (i = 0; i < arr.length; i++) {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.edgeViews, new EdgeViewRule(this.viewpoint).clone(arr[i]));
                    }
                    break;
                case 'viewpointstr':
                    this.viewpointstr = json.viewpointstr;
                    break;
            }
        }
        this.updateViewpoint();
        this.updateTarget();
    }
    duplicate() {
        const duplicate = new ViewRule(null);
        duplicate.clone(this);
        return duplicate;
    }
    isEmpty() { return this.equals(new ViewRule(this.viewpoint)); }
    equals(other) { return this.toString() === other.toString(); }
    // should only be called from ViewPoint
    apply(target = null) {
        this.target = target || this.target || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKeyStr(this.targetStr);
        console.log(this);
        this.viewpoint.viewsDictionary[this.target.id] = this;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.target.views, this);
    }
    // should only be called from ViewPoint
    detach() {
        // if (!this.target) return; target must never be deleted in Viewww.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.views, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.target.detachedViews, this);
        delete this.viewpoint.viewsDictionary[this.target.id];
        this.setTargetStr();
        // this.target = null; target must never be deleted in ViewRule
    }
    getViewPoint() { return this.viewpoint; }
    delete() {
        this.detach();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.viewpoint.views, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.detachedViews, this);
        console.log('modelview.delete() todo.' +
            'non posso invece di implementarla lasciarla "orfana" senza target e la faccio ignorare dal loader.' +
            'altrimenti non potrei cancellare la view senza cancellare il modelpiece, o forse basta settare tutto a null e mollarla lì?');
    }
}
ViewRule.allByID = {};
ViewRule.maxID = 0;
//todo: nuova idea:
//  creo un set di View[] dentro un ViewPoint.
//  ogni View ha un target: ModelPiece, e un private targetStr: string usato solo per la serializzazione e de-serializzazione.
//  la targetStr deve essere presa da ModelPiece.getKey()
class ViewPoint extends ViewRule {
    // abstract _isApplied(): boolean;
    constructor(target, name = null) {
        super(null);
        this.isApplied = false;
        this.scroll = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](0, 0);
        this.zoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](1, 1);
        this.grid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](20, 20);
        this.viewsDictionary = {};
        this.views = [];
        this.setname(name);
        this.updateTarget(target);
    }
    static getAppliedViews_TOMOVE(m) {
        let i;
        const arr = [];
        for (let name in ViewPoint.allnames) {
            const vp = ViewPoint.allnames[name];
            const v = vp.getMpStyle(m);
            if (v)
                arr.push(v);
        }
        return arr;
    }
    static get(value) {
        return ViewPoint.allnames[value];
    }
    updateTarget(m = null) { this.apply(m, true); }
    getMpStyle(m) { return this.viewsDictionary[m.id]; }
    setname(s) {
        if (!s)
            s = 'ViewPoint 1';
        if (s === this.name)
            return;
        if (ViewPoint.allnames[this.name] === this) {
            delete ViewPoint.allnames[this.name];
        }
        while (s in ViewPoint.allnames) {
            s = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].increaseEndingNumber(s);
        }
        ViewPoint.allnames[this.name = s] = this;
    }
    toJSON(nameOrIndex) {
        const copy0 = {};
        this.setTargetStr();
        for (let key in this) {
            copy0[key] = this[key];
        }
        const copy = copy0;
        delete copy.viewpoint;
        delete copy.viewpointstr;
        delete copy.viewsDictionary;
        delete copy.target;
        return copy;
    }
    // toString(): string { return JSON.stringify(this); }
    // should only be called from ViewPointShell
    apply(m = null, onlyAttach = false, debug = false) {
        if (m !== this.target)
            this.detach();
        this.target = m = (m || this.target);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.target, 'called ViewPoint.apply() without a target.', this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'add() PRE:', this.target.viewpoints.map((vp) => vp.name), this.target.viewpoints);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.viewpoints, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'add() MID:', this.target.viewpoints.map((vp) => vp.name), this.target.viewpoints, this.target.viewpoints.indexOf(this));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.target.viewpoints);
        // U.pw(true, 'stopped');
        // todo: il browser chrome è impazzito e mi fa il sort per nome ogni volta che faccio push.
        this.target.viewpoints.push(this); // NON usare U.ArrayAdd(), la rimozione è necessaria per garantire che venga sempre aggiunto in fondo.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.target.viewpoints);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'add() POST:', this.target.viewpoints.map((vp) => vp.name), this.target.viewpoints);
        if (onlyAttach)
            return;
        let i;
        for (i = 0; i < this.views.length; i++) {
            let v = this.views[i];
            v.apply();
        }
        this.isApplied = true;
        // U.pe(true, 'stopped here still works');
    }
    // should only be called from ViewPointShell
    detach() {
        if (!this.isApplied)
            return;
        // NB: don't remove from model.viewPoints, just de-apply it.
        for (let istr in this.viewsDictionary) {
            let i = +istr;
            let v = this.viewsDictionary[i];
            v.detach();
        }
        this.isApplied = false;
    }
    // should only be called from ViewPointShell
    delete() {
        this.detach();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.viewpoints, this);
        this.target = null;
    }
    clone(json) {
        if (json.target && json.setTargetStr)
            json.setTargetStr();
        let i;
        for (let key in json) {
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected key:', key, json);
                    break;
                case 'id':
                case 'target':
                case 'viewpoint': break;
                case 'htmlo':
                    if (!json.htmlo) {
                        this.htmlo = null;
                        continue;
                    }
                    if (!this.htmlo)
                        this.htmlo = new ViewHtmlSettings();
                    this.htmlo.clone(json.htmlo);
                    break;
                case 'htmli':
                    if (!json.htmli) {
                        this.htmli = null;
                        continue;
                    }
                    if (!this.htmli)
                        this.htmli = new ViewHtmlSettings();
                    this.htmli.clone(json.htmli);
                    break;
                case 'isApplied':
                    this.isApplied = json.isApplied;
                    break;
                case 'name':
                    this.setname(json.name);
                    break;
                case 'targetStr':
                    if (!json.targetStr)
                        break;
                    this.targetStr = json.targetStr;
                    const m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKeyStr(this.targetStr);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!m, 'failed to find VP.target:', this, this.targetStr, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status);
                    this.updateTarget(m);
                    break;
                case 'edgeViews':
                    this.edgeViews = [];
                    if (!json.edgeViews)
                        continue;
                    for (i = 0; i < json.edgeViews.length; i++) {
                        const v = new EdgeViewRule(this);
                        v.clone(json.edgeViews[i]);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.edgeViews, v);
                    }
                    break;
                case 'views':
                    this.views = [];
                    if (!json.views)
                        continue;
                    for (i = 0; i < json.views.length; i++) {
                        const v = new ViewRule(this);
                        v.clone(json.views[i]);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.views, v);
                    }
                    break;
                case 'grid':
                    this.grid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](json.grid.x, json.grid.y);
                    break;
                case 'gridShow':
                    this.gridShow = json.gridShow;
                    break;
                case 'scroll':
                    this.scroll = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](json.scroll.x, json.scroll.y);
                    break;
                case 'zoom':
                    this.zoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](json.zoom.x, json.zoom.y);
                    break;
                case 'vertexSize':
                    this.vertexSize = json.vertexSize ? new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](json.vertexSize.x, json.vertexSize.y) : null;
                    break;
                case 'displayAsEdge':
                    this.displayAsEdge = json.displayAsEdge;
                    break;
            }
        }
    }
    duplicate() {
        const duplicate = new ViewPoint(null);
        duplicate.clone(this);
        return duplicate;
    }
    isEmpty() {
        const SingleLinkedTempVp = new ViewPoint(null);
        SingleLinkedTempVp.target = this.target;
        // NB: il target deve essere settato così "raw" non tramite costruttore e funzioni perchè non deve inserirlo nei viewpoints[] del target.
        return this.equals(SingleLinkedTempVp, true);
    }
    equals(other, ignoreName = true) {
        const tmp = this.name;
        if (ignoreName)
            this.name = other.name;
        const ret = this.toString() === other.toString();
        this.name = tmp;
        return ret;
    }
}
ViewPoint.allnames = {};
class EdgeViewRule extends ViewRule {
    clone(obj0) {
        return this;
    }
}
class EdgePointView extends ViewRule {
    clone(obj0) { }
}


/***/ }),

/***/ "./src/Model/EAnnotation.ts":
/*!**********************************!*\
  !*** ./src/Model/EAnnotation.ts ***!
  \**********************************/
/*! exports provided: EAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAnnotation", function() { return EAnnotation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class EAnnotation extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(parent, json) {
        super(parent, null);
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.parent.childrens, this);
            this.parent.annotations.push(this);
        }
        this.parse(json);
    }
    duplicate(nameAppend, newParent) {
        return undefined; // todo
    }
    fullname() { return this.parent.fullname() + '//' + this.name; }
    setReferencesStr() {
        // todo?? se è il main package diventa "#//"
    }
    prepareSerialize() { this.setReferencesStr(); }
    generateModel() {
        const json = {};
        this.prepareSerialize();
        let i;
        const childarr = [];
        for (i = 0; i < this.childrens.length; i++) {
            childarr.push(this.childrens[i].generateModel());
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].source, this.name);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].references, this.referencesStr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].details, childarr);
        return json;
    }
    getVertex() { return this.parent.getVertex(); }
    parse(json, destructive) {
        let key;
        this.childrens = [];
        if (!json) {
            json = {};
        }
        for (key in json) {
            const value = json[key];
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected field in EAnnotation:  ' + key + ' => |' + value + '|');
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].details: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].references: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].source: break;
            }
        }
        this.referencesStr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].source, '#/');
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].name, 'EAnnotation_1'));
        const details = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getDetails(json);
        for (let i = 0; i < details.length; i++) {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EAnnotationDetail"](this, details[i]);
        }
    }
    refreshGUI_Alone(debug) {
        const v = this.getVertex();
        if (v)
            v.refreshGUI();
    }
}


/***/ }),

/***/ "./src/Model/EAnnotationDetail.ts":
/*!****************************************!*\
  !*** ./src/Model/EAnnotationDetail.ts ***!
  \****************************************/
/*! exports provided: EAnnotationDetail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAnnotationDetail", function() { return EAnnotationDetail; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _iModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iModel */ "./src/Model/iModel.ts");



class EAnnotationDetail extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(parent, json) {
        super(parent, null);
        this.parse(json);
    }
    duplicate(nameAppend, newParent) {
        return undefined; // todo
    }
    fullname() { return this.parent.fullname() + '.' + this.name; }
    generateModel() {
        const json = {};
        if (this.name !== null)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].key, this.name);
        if (this.value !== null)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].value, this.value);
        return json;
    }
    getVertex() { return this.parent.getVertex(); }
    parse(json, destructive) {
        let key;
        this.childrens = [];
        if (!json) {
            json = {};
        }
        for (key in json) {
            const value = json[key];
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected field in EDetail:  ' + key + ' => |' + value + '|');
                    break;
                case _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].key: break;
                case _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].value: break;
            }
        }
        this.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].value, '');
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].key, 'DetailKey1'));
    }
    refreshGUI_Alone(debug) { return this.parent.refreshGUI_Alone(); }
}


/***/ }),

/***/ "./src/Model/MetaMetaModel.ts":
/*!************************************!*\
  !*** ./src/Model/MetaMetaModel.ts ***!
  \************************************/
/*! exports provided: MetaMetaModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MetaMetaModel", function() { return MetaMetaModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class MetaMetaModel extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] {
    constructor(json) { super(null); this.parse(json, true); }
    conformability(metaparent, outObj = null, debug = false) { return 1; }
    getAllClasses() { return super.getAllClasses(); }
    getAllReferences() { return super.getAllReferences(); }
    generateModel() { return undefined; }
    getPrefix() { return 'mmm'; }
    getPrefixNum() { return 'm3'; }
    isM1() { return false; }
    isM2() { return false; }
    isM3() { return true; }
    parse(json, destructive) {
        this.name = 'Meta-Metamodel';
        const useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Package"](this, null);
    }
    refreshGUI_Alone(debug = true) { }
    getDefaultPackage() {
        if (this.childrens.length !== 0) {
            return this.childrens[0];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Package"](this, null));
        return this.childrens[0];
    }
    getPackage() { return this.getDefaultPackage(); }
    getClass(fullname = null, throwErr = true, debug = true) { return this.getDefaultPackage().classes[0]; }
    getAttribute() { return this.getClass().attributes[0]; }
    getReference() { return this.getClass().references[0]; }
    getOperation() { return this.getClass().getOperations()[0]; }
    getParameter() { return this.getOperation().childrens[0]; }
    duplicate(nameAppend = '_Copy') { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'invalid operation: m3.duplicate();'); return this; }
}
MetaMetaModel.emptyMetaMetaModel = '' + 'empty Meta-MetaModel: todo'; // todo


/***/ }),

/***/ "./src/Model/MetaModel.ts":
/*!********************************!*\
  !*** ./src/Model/MetaModel.ts ***!
  \********************************/
/*! exports provided: MetaModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MetaModel", function() { return MetaModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _EAnnotation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EAnnotation */ "./src/Model/EAnnotation.ts");



class MetaModel extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] {
    constructor(json, metaParent) { super(metaParent); this.parse(json, true); }
    getAllClasses() { return super.getAllClasses(); }
    getAllReferences() { return super.getAllReferences(); }
    getClass(fullname, throwErr = true, debug = true) {
        return super.getClass(fullname, throwErr, debug);
    }
    getClassFromEcoreStr(targetstr) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!targetstr || targetstr.indexOf(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].classTypePrefix) !== 0, 'getClassFromString(): not a ecore class name:', targetstr);
        const classes = this.getAllClasses();
        let i;
        for (i = 0; i < classes.length; i++) {
            if (classes[i].getEcoreTypeName() === targetstr)
                return classes[i];
        }
        return null;
    }
    getEcoreStr_Class_Dictionary() {
        const classes = this.getAllClasses();
        let i;
        const dic = {};
        for (i = 0; i < classes.length; i++) {
            dic[classes[i].getEcoreTypeName()] = classes[i];
        }
        return dic;
    }
    getClassByNameSpace(fullnamespace, caseSensitive = false, canThrow = false) {
        const classes = this.getAllClasses();
        let i;
        if (caseSensitive) {
            fullnamespace = fullnamespace.toLowerCase();
        }
        let justNameMatchFallback = null;
        let namestr = fullnamespace.substr(fullnamespace.lastIndexOf(':') + 1);
        if (!caseSensitive) {
            namestr = namestr.toLowerCase();
        }
        for (i = 0; i < classes.length; i++) {
            const mmclass = classes[i];
            if ((caseSensitive ? mmclass.name : mmclass.name.toLowerCase()) === namestr) {
                justNameMatchFallback = mmclass;
            }
            let mmclassNS = mmclass.getNamespaced();
            if (!mmclassNS) {
                continue;
            }
            if (caseSensitive) {
                mmclassNS = mmclassNS.toLowerCase();
            }
            if (mmclassNS === fullnamespace) {
                return mmclass;
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!justNameMatchFallback, 'class |' + fullnamespace + '| not found. classArr:', classes);
        return justNameMatchFallback;
    }
    /*
      fixReferences(): void {
        const arr: M2Reference[] = this.getAllReferences();
        let i = -1;
        while (++i < arr.length) {
          arr[i].linkClass();
          U.pe(!arr[i].classType, arr[i], Status.status.loadedLogic);
        } }*/
    parse(json, destructive = true) {
        if (destructive) {
            this.childrens = [];
        }
        const childrens = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        const annotations = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getAnnotations(json);
        let i;
        for (i = 0; i < annotations.length; i++) {
            const child = annotations[i];
            // metaParent = U.findMetaParentP(this, child);
            if (destructive) {
                new _EAnnotation__WEBPACK_IMPORTED_MODULE_2__["EAnnotation"](this, child);
                continue;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Non-destructive m2-model parse: to do');
        }
        for (i = 0; i < childrens.length; i++) {
            const child = childrens[i];
            const metaParent = null;
            // metaParent = U.findMetaParentP(this, child);
            if (destructive) {
                new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Package"](this, child);
                continue;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Non-destructive m2-model parse: to do');
        }
    }
    generateModel() {
        const packageArr = [];
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            const pkg = this.childrens[i];
            packageArr.push(pkg.generateModel());
        }
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreRoot"].ecoreEPackage] = packageArr;
        return model;
    }
    getDefaultPackage() {
        if (this.childrens.length !== 0) {
            return this.childrens[0];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Package"](this, null));
        return this.childrens[0];
    }
    conformability(metaparent, outObj, debug) { return 1; }
    getPrefix() { return 'mm'; }
    getPrefixNum() { return 'm2'; }
    isM1() { return false; }
    isM2() { return true; }
    isM3() { return false; }
    duplicate(nameAppend = '_Copy') {
        const m = new MetaModel(null, null);
        m.copy(this);
        m.refreshGUI();
        return m;
    }
}
MetaModel.emptyModel = '{}';
MetaModel.emptyModelOld = '{ "ecore:EPackage": {\n' +
    '    "@xmlns:xmi": "http://www.omg.org/XMI",\n' +
    '    "@xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",\n' +
    '    "@xmlns:ecore": "http://www.eclipse.org/emf/2002/Ecore",\n' +
    '    "@xmi:version": "2.0",\n' +
    '    "eClassifiers": []' +
    '  }' +
    '}';


/***/ }),

/***/ "./src/Model/Model.ts":
/*!****************************!*\
  !*** ./src/Model/Model.ts ***!
  \****************************/
/*! exports provided: Model */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Model", function() { return Model; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class Model extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] {
    constructor(json, metaModel) {
        super(metaModel);
        this.classRoot = null;
        this.parse(json, true);
    }
    // fixReferences(): void {/*useless here? or useful in loops?*/}
    getClassRoot() {
        if (this.classRoot) {
            return this.classRoot;
        }
        const classes = this.getAllClasses();
        if (classes.length)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'Failed to get m1 class root.<br>You need to select a root class in M1\'s structured editor', this);
        if (classes.length && classes[0]) {
            classes[0].setRoot(true);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(true, 'Class root automatically selected.');
        }
        return null;
    }
    parse(json, destructive, metamodel = null) {
        if (!metamodel) {
            metamodel = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!metamodel, 'parsing a model requires a metamodel linked');
        if (json === '{}')
            json = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(json === '' + json, 'ModelPiece.parse() parameter must be a parsed ECORE/json. autofixed.', json);
        if (json === '' + json)
            json = JSON.parse(json + '');
        if (destructive) {
            this.childrens = [];
        }
        let key;
        for (key in json) {
            if (!json.hasOwnProperty(key)) {
                continue;
            }
            const namespacedclass = key;
            const mmclass = this.metaParent.getClassByNameSpace(namespacedclass, false, true);
            const value = json[key];
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"](this.getDefaultPackage(), value, mmclass);
        }
        /*
        {
          "org.eclipse.example.bowling:League": { <-- :classroot
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },
              { "-name": "asd" }
            ]
          }
        }
        */
    }
    // parse(deep: boolean) { super.parse(deep); }
    getAllClasses() { return super.getAllClasses(); }
    getAllReferences() { return super.getAllReferences(); }
    getClass(fullname, throwErr = true, debug = true) {
        return super.getClass(fullname, throwErr, debug);
    }
    generateModel() {
        const json = {};
        const classRoot = this.getClassRoot();
        if (!classRoot)
            return Model.emptyModel;
        json[classRoot.metaParent.getNamespaced()] = classRoot.generateModel(true);
        return json;
    }
    // namespace(set: string = null): string { return this.metaParent.namespace(set); }
    getDefaultPackage() {
        if (this.childrens.length !== 0) {
            return this.childrens[0];
        }
        new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MPackage"](this, null, this.metaParent.getDefaultPackage());
        return this.childrens[0];
    }
    conformability(metaparent, outObj, debug) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'm1.conformability(): to do.');
        return 1;
    }
    getPrefix() { return 'm'; }
    getPrefixNum() { return 'm1'; }
    isM1() { return true; }
    isM2() { return false; }
    isM3() { return false; }
    duplicate(nameAppend = '_Copy') {
        const m = new Model(null, null);
        m.copy(this);
        m.refreshGUI();
        return m;
    }
}
Model.emptyModel = '{}';


/***/ }),

/***/ "./src/Model/iModel.ts":
/*!*****************************!*\
  !*** ./src/Model/iModel.ts ***!
  \*****************************/
/*! exports provided: IModel, ECoreRoot, ECoreAnnotation, ECoreDetail, ECorePackage, ECoreClass, ECoreEnum, EcoreLiteral, ECoreReference, ECoreAttribute, ECoreOperation, ECoreParameter, XMIModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IModel", function() { return IModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreRoot", function() { return ECoreRoot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreAnnotation", function() { return ECoreAnnotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreDetail", function() { return ECoreDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECorePackage", function() { return ECorePackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreClass", function() { return ECoreClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreEnum", function() { return ECoreEnum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EcoreLiteral", function() { return EcoreLiteral; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreReference", function() { return ECoreReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreAttribute", function() { return ECoreAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreOperation", function() { return ECoreOperation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreParameter", function() { return ECoreParameter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XMIModel", function() { return XMIModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class IModel extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(metaVersion) {
        super(null, metaVersion);
        this.graph = null;
        this.sidebar = null;
        this.storage = null;
        this.namespaceVar = null;
        this.uriVar = null;
        this.viewpoints = [];
        this.storage = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["LocalStorage"](this);
    }
    // viewpoint: ViewPoint;
    /*
    constructor(json: Json, metaParent: MetaModel, skipParse: boolean = false) {
      super(null, metaParent);
      // todo: mi sa che chiama parse a ripetizione: Modelpiece.parse, IFeature.parse, IAttribute.parse, M2Attribute.parse...
      if (!skipParse) { this.parse(json, true); }
    }*/
    static isValidURI(str) { return str.indexOf(' ') !== -1 && true; }
    static removeInvalidNameChars(name) { return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].multiReplaceAll(name, [' '], ['']); }
    uri(str = null) {
        if (str) {
            if (IModel.isValidURI(str)) {
                return this.uriVar = str;
            }
            else {
                return null;
            }
        }
        if (this.uriVar) {
            return this.uriVar;
        }
        return this.uriVar = 'http://default/uri/to/change';
    }
    namespace(value = null) {
        let pos;
        if (value) {
            this.namespaceVar = value;
            pos = this.namespaceVar.lastIndexOf(':');
            this.namespaceVar = pos === -1 ? this.namespaceVar : this.namespaceVar.substring(0, pos);
        }
        const ns = this.namespaceVar;
        if (!ns) {
            return this.namespace('default.namespace.to.change');
        }
        pos = ns.lastIndexOf(':');
        return pos === -1 ? ns : ns.substring(0, pos);
    }
    getAllClasses() {
        const arr = [];
        const packages = this.childrens;
        let i;
        for (i = 0; i < packages.length; i++) {
            packages[i].classes.forEach((elem) => { arr.push(elem); });
        }
        return arr;
    }
    getAllEnums() {
        const arr = [];
        const packages = this.childrens;
        let i;
        for (i = 0; i < packages.length; i++) {
            packages[i].enums.forEach((elem) => { arr.push(elem); });
        }
        return arr;
    }
    fullname() { return this.name; }
    getVertex() { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'IModel.getVertex();', this); return undefined; }
    getAllReferences() {
        const arr = [];
        const classes = this.getAllClasses();
        let i;
        for (i = 0; i < classes.length; i++) {
            classes[i].references.forEach((elem) => { arr.push(elem); });
        }
        return arr;
    }
    getPackage(fullname, throwErr = true) {
        if (fullname.indexOf('.') !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throwErr, 'not a package name:', fullname);
            return null;
        }
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            if (this.childrens[i].name === fullname) {
                return this.childrens[i];
            }
        }
        if (fullname.indexOf('.') !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throwErr, 'valid a package name, but package does not exist:', fullname);
            return null;
        }
        return null;
    }
    getClass(fullname, throwErr = true, debug = true) {
        const tks = fullname.split('.');
        if (tks.length !== 2) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throwErr, 'not a full class name:', fullname);
            return null;
        }
        const classes = this.getAllClasses();
        let i = -1;
        while (++i < classes.length) {
            const currentFname = classes[i].fullname();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fllname: |' + fullname + '| =?= |' + currentFname + '| = ' + currentFname === fullname);
            if (currentFname === fullname) {
                return classes[i];
            }
        }
        const name = fullname.substr(fullname.indexOf('.') + 1);
        i = -1;
        while (++i < classes.length) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'name: |' + name + '| =?= |' + classes[i].name + '| = ' + classes[i].name === name);
            if (classes[i].name === name) {
                return classes[i];
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throwErr, 'valid name but unable to find it. fullname:', fullname, 'classes:', classes);
        return null;
        // let i;
        // for ( i = 0; i < pkg.childrens.length; i++) { if (pkg.childrens[i].name === fullname) { return pkg.childrens[i] as M2Class; } }
    }
    getEmptyModel() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"].emptyMetaMetaModel;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].emptyModel;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"].emptyModel;
        return null;
    }
    delete() {
        this.storage.remove(this.name, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["SaveListEntry"].model);
        // set empty (meta)model as most recent anonymous savefile and next to be opened.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["LocalStorage"].deleteLastOpened(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"] ? 2 : 1);
        /*this.storage.add(null, null, SaveListEntry.model);
        this.storage.add(null, null, SaveListEntry.view);
        this.storage.add(null, null, SaveListEntry.vertexPos);*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].refreshPage();
    }
    refreshGUI_Alone(debug = true) {
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            this.childrens[i].refreshGUI_Alone(debug);
        }
    }
    isNameTaken(name) { return !!this.storage.get(name, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["SaveListEntry"].model); }
    setName(value, refreshGUI = false) {
        const oldname = this.name;
        if (this.isNameTaken(value)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'tried to saveToDB a model with a name already in use');
            return oldname;
        }
        super.setName(value);
        this.storage.rename(oldname, this.name, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["SaveListEntry"].model);
        if (this.graph.propertyBar.selectedModelPiece === this)
            this.graph.propertyBar.refreshGUI();
        return this.name;
    }
    save(isAutosave, saveAs = false) {
        this.storage.saveModel(isAutosave, saveAs);
    }
    isMMM() { return this.isM3(); }
    isMM() { return this.isM2(); }
    isM() { return this.isM1(); }
    addClass(parent = null, meta = null) {
        if (!parent) {
            parent = this.getDefaultPackage();
        }
        return parent.addEmptyClass(meta);
    }
    friendlyClassName(toLower = true) {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"]) {
            return 'Meta-metamodel'.toLowerCase();
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"]) {
            return 'Metamodel'.toLowerCase();
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return 'Model'.toLowerCase();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected');
        return 'error';
    }
    getLastView() {
        let i;
        for (i = this.viewpoints.length; --i >= 0;) {
            const vp = this.viewpoints[i];
            if (vp.isApplied)
                return vp;
        }
        return null;
    }
    static getByName(name) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.fullname() === name)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.fullname() === name)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.fullname() === name)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m;
        return null;
    }
    readVertexPositionSaveArr(dic) {
        for (let key in dic) {
            const value = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"]().clone(dic[key]);
            const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKeyStr(key);
            if (!mp) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid vertex save, failed to get targetmodelpiece: ', key, dic, this);
                continue;
            }
            mp.getVertex().setSize(value);
        }
    }
    generateVertexPositionSaveArr() {
        let i;
        let j;
        let ret = {};
        let arr = [this.getAllEnums(), this.getAllClasses()];
        for (j = 0; j < arr.length; j++)
            for (i = 0; i < arr[j].length; i++) {
                ret[arr[j][i].getKeyStr()] = arr[j][i].getVertex().getSize();
            }
        return ret;
    }
    generateViewPointSaveArr() {
        /*let i: number;
        let tmp: any = [];
        for (i = 0; i < this.viewpoints.length; i++) { tmp.push(this.viewpoints[i].toJSON()); }
        return tmp;*/
        return this.viewpoints;
    }
}
class ECoreRoot {
    static initializeAllECoreEnums() {
        ECoreRoot.ecoreEPackage = 'ecore:EPackage';
        ECorePackage.eAnnotations = ECoreClass.eAnnotations = ECoreEnum.eAnnotations = EcoreLiteral.eAnnotations =
            ECoreReference.eAnnotations = ECoreAttribute.eAnnotations = ECoreOperation.eAnnotations = ECoreParameter.eAnnotations = 'eAnnotations';
        ECoreAnnotation.source = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'source';
        ECoreAnnotation.references = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'references'; // "#/" for target = package.
        ECoreAnnotation.details = 'details'; // arr
        ECoreDetail.key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'key'; // can have spaces
        ECoreDetail.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'value';
        ECorePackage.eClassifiers = 'eClassifiers';
        ECorePackage.xmlnsxmi = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmlns:xmi'; // typical value: http://www.omg.org/XMI
        ECorePackage.xmlnsxsi = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmlns:xsi'; // typical value: http://www.w3.org/2001/XMLSchema-instance
        ECorePackage.xmiversion = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmi:version'; // typical value: "2.0"
        ECorePackage.xmlnsecore = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmlns:ecore';
        ECorePackage.nsURI = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'nsURI'; // typical value: "http://org/eclipse/example/bowling"
        ECorePackage.nsPrefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'nsPrefix'; // typical value: org.eclipse.example.bowling
        ECorePackage.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreClass.eStructuralFeatures = 'eStructuralFeatures';
        ECoreClass.eOperations = 'eOperations';
        ECoreClass.xsitype = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xsi:type'; // "ecore:EClass"
        ECoreClass.namee = ECorePackage.namee;
        ECoreClass.eSuperTypes = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eSuperTypes'; // space separated: "#name1 #name2"...
        ECoreClass.instanceTypeName = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'instanceTypeName'; // raw str
        ECoreClass.instanceTypeName = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'instanceTypeName';
        ECoreClass.abstract = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'abstract'; // bool
        ECoreClass.interface = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'interface'; // bool
        ECoreEnum.instanceTypeName = ECoreClass.instanceTypeName;
        ECoreEnum.serializable = 'serializable'; // "false", "true"
        ECoreEnum.xsitype = ECoreClass.xsitype; // "ecore:EEnum"
        ECoreEnum.eLiterals = 'eLiterals';
        ECoreEnum.namee = ECorePackage.namee;
        EcoreLiteral.literal = 'literal';
        EcoreLiteral.namee = ECorePackage.namee;
        EcoreLiteral.value = 'value'; // any integer (-inf, +inf), not null. limiti = a type int 32 bit?
        ECoreReference.xsitype = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xsi:type'; // "ecore:EReference"
        ECoreReference.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "#//Player"
        ECoreReference.containment = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'containment'; // "true"
        ECoreReference.upperbound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'upperBound'; // "@1"
        ECoreReference.lowerbound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'lowerBound'; // does even exists?
        ECoreReference.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreAttribute.xsitype = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xsi:type'; // "ecore:EAttribute",
        ECoreAttribute.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        ECoreAttribute.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreOperation.eParameters = 'eParameters';
        ECoreOperation.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name'; // "EExceptionNameCustom",
        ECoreOperation.ordered = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'ordered'; // "false",
        ECoreOperation.unique = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'unique'; // "false",
        ECoreOperation.lowerBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'lowerBound'; // "5", ma che senso ha su una funzione?? è il return?
        ECoreOperation.upperBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'upperBound';
        ECoreOperation.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "#//Classname",
        ECoreOperation.eexceptions = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eExceptions';
        // "#//ClassnameException1 #//ClassNameException2 (also custom classes) ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt
        ECoreParameter.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreParameter.ordered = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'ordered'; // "false";
        ECoreParameter.unique = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'unique'; // "false"
        ECoreParameter.lowerBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'lowerBound'; // "1"
        ECoreParameter.upperBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'upperBound'; // "2"
        ECoreParameter.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubl
        XMIModel.type = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'type';
        XMIModel.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
    }
}
class ECoreAnnotation {
}
class ECoreDetail {
}
class ECorePackage {
}
class ECoreClass {
}
class ECoreEnum {
}
class EcoreLiteral {
}
class ECoreReference {
}
class ECoreAttribute {
}
class ECoreOperation {
}
class ECoreParameter {
}
class XMIModel {
}


/***/ }),

/***/ "./src/Model/mPackage/MMPackage.ts":
/*!*****************************************!*\
  !*** ./src/Model/mPackage/MMPackage.ts ***!
  \*****************************************/
/*! exports provided: M2Package */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Package", function() { return M2Package; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class M2Package extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"] {
    constructor(mm, json) {
        super(mm, json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getPackage());
        this.parse(json, true);
    }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(name, caseSensitive, throwErr, debug);
    }
    addEmptyClass() {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"](this, null);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            c.generateVertex();
        }
        console.log('addEmptyClass(); package:', this, 'classe:', c);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
        return c;
    }
    parse(json, destructive = true) {
        // if (!json) { return; }
        /*
        json[ECorePackage.xmiversion] // '2.0';
        json[ECorePackage.xmlnsxmi] // 'http://www.omg.org/XMI';
        json[ECorePackage.xmlnsxsi] // 'http://www.w3.org/2001/XMLSchema-instance';
        json[ECorePackage.xmlnsecore] // 'http://www.eclipse.org/emf/2002/Ecore';
        json[ECorePackage.name];
        json[ECorePackage.eClassifiers]; */
        /// own attributes.
        const name = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].namee, 'defaultPackage');
        if (name)
            this.setName(name);
        const uri = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsURI, null);
        const nsPrefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsPrefix, null);
        this.parent.uri(uri);
        this.parent.namespace(nsPrefix);
        /// childrens
        const childs = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        if (destructive) {
            this.childrens = [];
        }
        let i;
        for (i = 0; i < childs.length; i++) {
            const child = childs[i];
            if (!child) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid m2Package in ecore input. found a null classifier, it will be ignored.');
                continue;
            }
            // metaParent = U.findMetaParentC(this, child);
            switch (child[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype]) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected xsitype:', child[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype], ' found in jsonfragment:', child, ', in json:', json, ' package:', this);
                    break;
                case 'ecore:EClass':
                    new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"](this, child);
                    break;
                case 'ecore:EEnum':
                    new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"](this, child);
                    break;
            }
        }
    }
    /*parse(deep) {
      let i;
      if (deep) {
        if (this.childrens) { while (this.childrens.length !== 0) { this.childrens[0].delete(); } }
        this.childrens = [];
      }
      let field1;
      for (field1 in this.json) {
        if (!this.json.hasOwnProperty(field1)) { continue; } // il compilatore mi rompe per metterlo, non toglierlo se non da problemi.
        let val1 = Json.read<any>(this.json, field1);
        switch (field1) {
          default:
            U.pe(true, 'unexpected tag at jsonInput package: ' , field1 , ' = ', val1);
            break;
          case 'logical':
          case ECorePackage.xmlnsxsi:
          case ECorePackage.xmlnsxmi:
          case ECorePackage.xmlnsecore:
          case ECorePackage.nsPrefix:
          case ECorePackage.nsURI:
          case ECorePackage.xmiversion: break;
          case ECorePackage.name: break;
          case ECorePackage.eClassifiers:
            val1 = Json.getChildrens(this.json);
            for (i = 0; i < val1.length; i++) {
              if (deep) {
                U.pe ( !val1[i], 'val1[' + i + '] = ', val1[i], 'field:', field1, 'json:', this.json);
                const classe = new M2Class(this, val1[i]);
                this.childrens.push(classe as ModelPiece);
              }
            }
            break;
        }
      }
    }
  
    generateVertex(location: GraphPoint): IVertex {
      const v: IVertex = new IVertex();
      v.constructorPkg(this);
      v.draw();
      v.moveTo(location);
      return v; }
      */
    generateModel() {
        const classarr = [];
        const enumarr = [];
        let i;
        for (i = 0; i < this.classes.length; i++) {
            classarr.push(this.classes[i].generateModel());
        }
        for (i = 0; i < this.enums.length; i++) {
            enumarr.push(this.enums[i].generateModel());
        }
        const classifiers = Array.prototype.concat.call(classarr, enumarr);
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmiversion] = '2.0';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmlnsxmi] = 'http://www.omg.org/XMI';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmlnsxsi] = 'http://www.w3.org/2001/XMLSchema-instance';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmlnsecore] = 'http://www.eclipse.org/emf/2002/Ecore';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].namee] = this.name;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsURI] = this.parent.uri();
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsPrefix] = this.getModelRoot().namespace();
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].eClassifiers] = classifiers;
        /*
       "_xmi:version": "2.0",
       "_xmlns:xmi": "http://www.omg.org/XMI",
       "_xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
       "_xmlns:ecore": "http://www.eclipse.org/emf/2002/Ecore",
       "_name": "bowling",
       "_nsURI": "http://org/eclipse/example/bowling",
       "_nsPrefix": "org.eclipse.example.bowling"*/
        return model;
    }
}


/***/ }),

/***/ "./src/Model/mPackage/MPackage.component.ts":
/*!**************************************************!*\
  !*** ./src/Model/mPackage/MPackage.component.ts ***!
  \**************************************************/
/*! exports provided: MPackage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MPackage", function() { return MPackage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class MPackage extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"] {
    constructor(model, json, metaparent) {
        super(model, json, metaparent);
        // todo: nel parse il json viene ignorato, cerca come vengono costruite le classi.
        // return;
        // this.setName(name);
        // this.setJson(json);
        this.parse(json, true);
    }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(name, caseSensitive, throwErr, debug);
    }
    addEmptyClass(metaVersion) {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"](this, null, metaVersion);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic)
            c.generateVertex();
        console.log('addEmptyClass(); package:', this, '; metaVersion: ', metaVersion, 'classe:', c);
        return c;
    }
    generateModel() { return this.parent.generateModel(); }
    /*
    generateModel(rootClass: MClass): Json {
      const key: string = U.toDottedURI(this.uri) + ':' + rootClass.name;
      const xmlnsuri = '@xmlns:org.eclipse.example.' + this.name;
      const value: Json = {
        '@xmlns:xmi': 'http://www.omg.org/XMI',
        xmlnsuri : U.toHttpsURI(this.uri), // "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
        '-xmi:version': '2.0',
      };
      let i: number;
      for (i = 0, i < this.childrens.length; i++) {
        const cl: MClass = this.childrens[i];
        value[cl.name] = wrongggg!!! non è nemmeno un package, è una cosa del tipo:
      }
      return undefined;
    }
  
    getInfo(toLower?: boolean): any {
    }
  
    LinkToMetaParent(meta: IPackage): void {
    }
  */
    parse(json, destructive = true, uri = null, name = null) {
        /* e se c'è un riferimento circolare?
          <league (rootclass)>
            <players (attribute)>
              <player>...</player>
            </players>
          </league>
    
        "org.eclipse.example.bowling:League": {
          "-xmlns:xmi": "http://www.omg.org/XMI",
          "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
          "-xmi:version": "2.0",
          "Players": [
              { "-name": "tizio" },
              { "-name": "asd" } ]
      }*/
        let i; /*
        this.views = [];
        for(i = 0; i < this.parent.viewpoints.length; i++) {
          const vp: ViewPoint = this.parent.viewpoints[i];
          const v = new PackageView(vp.modelView);
          this.views.push(v);
          vp.modelView.packageViews.push(v); }*/
    }
}


/***/ }),

/***/ "./src/Model/mPackage/iPackage.ts":
/*!****************************************!*\
  !*** ./src/Model/mPackage/iPackage.ts ***!
  \****************************************/
/*! exports provided: IPackage, M3Package */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IPackage", function() { return IPackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Package", function() { return M3Package; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class IPackage extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(mm, json, metaParent) {
        super(mm, metaParent);
        this.classes = [];
        this.enums = [];
    }
    addEmptyEnum() {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"](this, null);
        if (this instanceof M3Package || !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic)
            return;
        c.generateVertex();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, true, false);
        return c;
    }
    // conformability(metaparent: IPackage, outObj?: any, debug?: boolean): number { return 1; }
    fullname() { return this.name; }
    getVertex() { return undefined; }
    getEnum(name, caseSensitive = false, throwErr = true, debug = true) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        for (i = 0; i < this.enums.length; i++) {
            let classname = this.enums[i].name;
            if (!caseSensitive) {
                classname = classname.toLowerCase();
            }
            if (name === classname) {
                return this.enums[i];
            }
        }
        return null;
    }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        for (i = 0; i < this.classes.length; i++) {
            let classname = this.classes[i].name;
            if (!caseSensitive) {
                classname = classname.toLowerCase();
            }
            if (name === classname) {
                return this.classes[i];
            }
        }
        return null;
    }
    duplicate(nameAppend = '_Copy', newParent = null) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Package duplicate to do.');
        return undefined;
    }
    // todo:
    refreshGUI_Alone(debug) {
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            this.childrens[i].refreshGUI_Alone(debug);
        }
    }
}
class M3Package extends IPackage {
    constructor(model, json) { super(model, json, null); this.parse(json, true); }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(name, caseSensitive, throwErr, debug);
    }
    addEmptyClass(metaVersion) {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"](this, null);
        return c;
    }
    generateModel() {
        return undefined;
    }
    parse(json, destructive = true) {
        this.name = 'Package';
        this.addEmptyClass(null);
        this.addEmptyEnum();
        this.enums[0].setName('Enumeration');
    }
    refreshGUI_Alone(debug = true) { }
}


/***/ }),

/***/ "./src/Model/modelPiece.ts":
/*!*********************************!*\
  !*** ./src/Model/modelPiece.ts ***!
  \*********************************/
/*! exports provided: Info, ModelPiece, ModelNone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return Info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelPiece", function() { return ModelPiece; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelNone", function() { return ModelNone; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class Info {
    static forConsole(obj) { }
    static setraw(baseJson, k, v, toLower = true) { return Info.set(baseJson, k, v, '', toLower); }
    static setc(baseJson, k, v, toLower = true) { return Info.set(baseJson, k, v, '@', toLower); }
    static seti(baseJson, k, v, toLower = true) { return Info.set(baseJson, k, v, '#', toLower); }
    static set(baseJson, k, v, prefixc = '_', toLower = true) {
        k = toLower ? k.toLowerCase() : k;
        let prefix = prefixc;
        // U.pw(baseJson[prefix + k], 'setinfo() name altready set: ', k, baseJson);
        while (baseJson[prefix + k]) {
            prefix += prefixc === '' ? '*' : prefixc;
        }
        baseJson[prefix + k] = v;
        // if (prefix === '') { baseJson[prefixc + k] = v; }
        return prefix + k;
    }
    static unsetraw(baseJson, k, toLower = true) { return Info.unset(baseJson, k, '', toLower); }
    static unsetc(baseJson, k, toLower = true) { return Info.unset(baseJson, k, '@', toLower); }
    static unseti(baseJson, k, toLower = true) { return Info.unset(baseJson, k, '#', toLower); }
    static unset(baseJson, k, prefixc = '_', toLower = true) {
        k = prefixc + (toLower ? k.toLowerCase() : k);
        delete baseJson[k];
    }
    static renameraw(o, k1, k2, toLower = true) { return Info.rename(o, k1, k2, '', toLower); }
    static renamec(o, k1, k2, toLower = true) { return Info.rename(o, k1, k2, '@', toLower); }
    static renamei(o, k1, k2, toLower = true) { return Info.rename(o, k1, k2, '#', toLower); }
    static rename(baseJson, k1, k2, prefixc = '_', toLower = true) {
        k1 = prefixc + (toLower ? k1.toLowerCase() : k2);
        k2 = prefixc + (toLower ? k1.toLowerCase() : k2);
        const old = baseJson[k1];
        delete baseJson[k1];
        baseJson[k2] = old;
    }
    static merge(info, targetinfo, prefixc = '->') {
        let key;
        if (!targetinfo) {
            return;
        }
        for (key in targetinfo) {
            if (!targetinfo.hasOwnProperty(key)) {
                continue;
            }
            if (!prefixc) {
                switch (key[0]) {
                    default:
                        prefixc = '';
                        break;
                    case '#':
                    case '_':
                    case '@':
                        prefixc = key[0];
                        break;
                }
            }
            // console.log('Info.set(' + info + ', ' + key + ', ' + targetinfo[key] + ', ' + prefixc);
            Info.set(info, key, targetinfo[key], prefixc);
        }
    }
}
class ModelPiece {
    constructor(parent, metaVersion) {
        this.id = null;
        this.parent = null;
        this.childrens = [];
        this.metaParent = null;
        this.instances = [];
        this.name = null;
        // styleOfInstances:Element = null;
        // customStyleToErase: Element = null;
        //  styleobj: ModelPieceStyleEntry = null;
        this.key = null;
        this.views = null;
        this.annotations = [];
        this.detachedViews = []; // required to delete modelpiece
        this.assignID();
        this.parent = parent;
        this.metaParent = metaVersion;
        this.instances = [];
        this.childrens = [];
        this.views = [];
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.childrens, this);
        }
        if (this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.metaParent.instances, this);
        }
    }
    static GetStyle(model, tsClass, checkCustomizedFirst = true) {
        let rootSelector;
        if (model.isM()) {
            rootSelector = '.MDefaultStyles';
        }
        else if (model.isMM()) {
            rootSelector = '.MMDefaultStyles';
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'm3 objects should not call getStyle()');
        }
        let $html;
        const $root = $((checkCustomizedFirst ? '.customized' : '.immutable') + rootSelector);
        if (tsClass.indexOf('m1') === 0 || tsClass.indexOf('m2') === 0) {
            tsClass = tsClass.substr(2);
        }
        switch (tsClass) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized TS Class: ' + tsClass);
                return null;
            case 'EEnum':
                $html = $root.find('.template.EEnum');
                break;
            case 'ELiteral':
                $html = $root.find('.template.ELiteral');
                break;
            case 'Class':
                $html = $root.find('.template.Class');
                break;
            case 'Attribute':
                $html = $root.find('.template.Attribute');
                break;
            case 'Reference':
                $html = $root.find('.template.Reference');
                break;
            case 'EOperation':
                $html = $root.find('.template.Operation');
                break;
            case 'EParameter':
                $html = $root.find('.template.Parameter');
                break;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(checkCustomizedFirst && $html.length > 1, 'found more than one match for custom global style, should there be only 0 or 1.', $html, $root, this, tsClass);
        if (checkCustomizedFirst && $html.length === 0) {
            return ModelPiece.GetStyle(model, tsClass, false);
        }
        /*console.log('class?' + (this instanceof IClass), $root.find('.Template'), $root.find('.Class'),
          $root.find('.Template.Class'));
        console.log('condition:', !customizeds, ' && ', $html.length !== -1);*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!checkCustomizedFirst && $html.length !== 1, 'expected exactly 1 match for the un-customized global style, found instead ' + $html.length + ':', $html, $root, this);
        const ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneHtml($html[0], true);
        ret.classList.remove('template');
        ret.classList.remove('Customized');
        return ret;
    }
    static getByKey(path, realindexfollowed = null) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!Array.isArray(path), 'ModelPiece.getByKey() should only be called with an array as key:', path);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(path.length < 1, 'ModelPiece.getByKey() path array must have >= 1 elements:', path);
        const tmpRoot = { 'childrens': [_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm] };
        let ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].followIndexesPath(tmpRoot, path, 'childrens', realindexfollowed, true);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(ret instanceof ModelPiece), 'ModelPiece.getByKey failed: ', ret, realindexfollowed);
        return ret;
    }
    static getByKeyStr(key, realindexfollowed = null) {
        return ModelPiece.getByKey(JSON.parse(key), realindexfollowed);
    }
    static get(e) {
        return ModelPiece.getLogic(e.target);
    }
    static getLogicalRootOfHtml(html0) {
        let html = html0;
        if (!html) {
            return null;
        }
        while (html && (!html.dataset || !html.dataset.modelpieceid)) {
            html = html.parentElement;
        }
        return html;
    }
    static getLogic(html0) {
        let html = this.getLogicalRootOfHtml(html0);
        const ret = html ? ModelPiece.getByID(+html.dataset.modelpieceid) : null;
        // U.pe(!(ret instanceof T), 'got logic with unexpected class type:', this);
        return ret;
    }
    static getByID(id) { return ModelPiece.idToLogic[id]; }
    assignID() {
        this.id = ModelPiece.idMax++;
        ModelPiece.idToLogic[this.id] = this;
        return this.id;
    }
    //todo: devo stare attento ogni volta che aggiungo-elimino un elemento a chiamare updateKey()
    // le views si salvano perchè usano la chiave all avvio e poi la rigenerano ad ogni salvataggio e non la usano ulteriormente se non per generare
    // la savestring.
    getKey() { return this.key ? this.key : this.updateKey(); }
    getKeyStr() { return JSON.stringify(this.getKey()); }
    updateKey() {
        const m = this.getModelRoot();
        const mnum = m.isM3() ? 2 : (m.isM2() ? 1 : 0);
        const pathIndex = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getIndexesPath(this, 'parent', 'childrens');
        return this.key = [mnum, ...pathIndex];
    }
    replaceVarsSetup() { return; }
    linkToLogic(html0) {
        let html = html0;
        if (this.id === null || this.id === undefined) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'undefined id:', this);
            return;
        }
        html.dataset.modelpieceid = '' + this.id;
    }
    getm2() {
        const root = this.getModelRoot();
        if (root instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return root.metaParent;
        }
        if (root instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"]) {
            return root;
        }
        if (root instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"]) {
            return root.instances[0];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to get root.');
    }
    getModelRoot() {
        let p = this;
        let i = 0;
        while (p.parent && p !== p.parent && i++ < 6) {
            p = p.parent;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!p || !(p instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"]), 'failed to get model root:', this, 'm lastParent:', p);
        return p;
    }
    isChildNameTaken(s) {
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            if (s === this.childrens[i].name) {
                return true;
            }
        }
        return false;
    }
    shouldBeDisplayedAsEdge(set = null) {
        if (set !== null) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]), 'shouldBeDisplayedAsEdge(' + set + ') should only be set on M2Class instances');
            this.shouldBeDisplayedAsEdgeVar = set;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
            return set;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
            return this.shouldBeDisplayedAsEdgeVar;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
            return true;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            return false;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class:', this);
    }
    refreshGUI(debug = false) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            return;
        }
        let model = this.getModelRoot();
        const thingsToRefresh = [this];
        let i;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshModeAll) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m);
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshModelAndInstances && model) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, model);
            for (i = 0; model.instances && i < model.instances.length; i++) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, model.instances[i]);
            }
            return;
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshModelAndParent && model && model.metaParent) {
            model = model.metaParent;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, model);
            for (i = 0; model.instances && i < model.instances.length; i++) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, model.instances[i]);
            }
            return;
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshInstancesToo) {
            for (i = 0; this.instances && i < this.instances.length; i++) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, this.instances[i]);
            }
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshModel && model) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, model);
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshMetaParentToo && this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, this.metaParent);
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshParentToo && this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, this.parent);
        }
        for (i = 0; i < thingsToRefresh.length; i++) {
            const mp = thingsToRefresh[i];
            if (mp) {
                mp.refreshGUI_Alone(debug);
            }
        }
    }
    refreshInstancesGUI() {
        let i = 0;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.instances, '', this);
        while (i < this.instances.length) {
            try {
                this.instances[i++].refreshGUI_Alone(false);
            }
            catch (e) { }
            finally { }
        }
    }
    mark(markb, key, color = 'red', radiusX = 10, radiusY = 10, width = 5, backColor = 'none', extraOffset = null) {
        const vertex = this.getVertex();
        // const edge: IEdge[] = (this as any as IReference | IClass).getEdges();
        if (vertex && vertex.isDrawn()) {
            vertex.mark(markb, key, color, radiusX, radiusY, width, backColor, extraOffset);
        }
        let edges = null;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] && this.shouldBeDisplayedAsEdge()) {
            edges = this.getEdges();
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
            edges = this.getEdges();
        }
        let i;
        for (i = 0; edges && i < edges.length; i++) {
            edges[i].mark(markb, key, color);
        }
    }
    generateModelString() {
        const json = this.generateModel();
        // console.log('genmodelstring:', json, 'this:',  this);
        return JSON.stringify(json, null, 4);
    }
    endingName(valueMaxLength = 10) { return ''; }
    printableName(valueMaxLength = 5) {
        if (this.name !== null) {
            return this.fullname();
        }
        const ending = this.endingName(valueMaxLength);
        return this.metaParent.fullname() + ':' + this.id + (ending && ending !== '' ? ':' + ending : '');
    }
    printableNameshort(valueMaxLength = 5) {
        if (this.name !== null) {
            return this.fullname();
        }
        const ending = this.endingName(valueMaxLength);
        return this.metaParent.name + ':' + this.id + (ending && ending !== '' ? ':' + ending : '');
    }
    // abstract conformability(metaparent: ModelPiece, outObj?: any/*.refPermutation, .attrPermutation*/, debug?: boolean): number;
    setName0(value, refreshGUI = false, warnDuplicateFix = true, key, allowEmpty) {
        if (value === this.name)
            return this.name;
        const valueOld = this['' + key];
        const valueInputError = value;
        value = value !== null && value !== undefined ? '' + value.trim() : null;
        if (!allowEmpty && (!value || value === '')) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, key + ' cannot be empty.');
            return valueOld;
        }
        if (value === valueOld) {
            return valueOld;
        }
        const regexp = new RegExp((allowEmpty ? '^$|' : '') + '^[a-zA-Z_$][a-zA-Z_$0-9]*$');
        //    console.log('set' + key + '.valid ? ' + regexp.test(value) + ' |' + value + '|');
        if (!regexp.test(value)) {
            value = value.replace(/([^a-zA-Z_$0-9])/g, '');
            let i = 0;
            while (value[i] && value[i] >= '0' && value[i] <= '9')
                i++;
            value = value.substr(i);
            let remainder = value;
            let firstChar =  false || '';
            while (remainder.length > 0 && firstChar === '') {
                firstChar = remainder[0].replace('[^a-zA-Z_$]', '');
                remainder = remainder.substring(1);
            }
            value = firstChar + remainder;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'a valid ' + key + ' must be match this regular expression: ' + regexp.compile().toString()
                + '; trying autofix: |' + valueInputError + '| --> + |' + value + '|');
            return this['set' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].firstToUpper(key)](value,  true || false);
        }
        if (value !== '') {
            let nameFixed = false;
            while (this.parent && this.parent['isChild' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].firstToUpper(key) + 'Taken'](value)) {
                nameFixed = true;
                value = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].increaseEndingNumber(value, false, false);
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(nameFixed && (valueInputError === value), 'increaseEningNumber failed:', value, this, this.parent ? this.parent.childrens : null);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(nameFixed && warnDuplicateFix, 'that ' + key + ' is already used in this context, trying autofix: |'
                + valueInputError + '| --> + |' + value + '|');
        }
        this['' + key] = value;
        if (refreshGUI) {
            this.refreshGUI();
        }
        return this['' + key];
    }
    // meant to be called from user js.
    getChildren(name, caseSensitive = false) {
        let i;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!name || name !== '' + name, 'ModelPiece.getChildren() name must be a non-empty string, found: |' + name + '|', name);
        if (!caseSensitive)
            name = name.toLowerCase();
        const m = this.getModelRoot();
        const ism1 = m.isM1();
        for (i = 0; i < this.childrens.length; i++) {
            const mp = this.childrens[i];
            let name2 = (ism1 ? mp.metaParent.name : mp.name);
            if (!caseSensitive)
                name2 = name2 && name2.toLowerCase();
            if (name === name2)
                return mp;
        }
        return null;
    }
    setName(value, refreshGUI = false, warnDuplicateFix = true) { return this.setName0(value, refreshGUI, warnDuplicateFix, 'name', false); }
    setNameOld(value, refreshGUI = false, warnDuplicateFix = true) {
        const valueOld = this.name;
        const valueInputError = value;
        value = value ? '' + value.trim() : null;
        if (!value || value === '') {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'name cannot be empty.');
            return valueOld;
        }
        if (value === valueOld) {
            return valueOld;
        }
        const regexp = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;
        // console.log('setName.valid ? ' + regexp.test(value) + ' |' + value + '|');
        if (!regexp.test(value)) {
            value = value.replace(/([^a-zA-Z_$0-9])/g, '');
            let i = 0;
            while (value[i] && value[i] >= '0' && value[i] <= '9')
                i++;
            value = value.substr(i);
            let remainder = value;
            let firstChar =  false || '';
            while (remainder.length > 0 && firstChar === '') {
                firstChar = remainder[0].replace('[^a-zA-Z_$]', '');
                remainder = remainder.substring(1);
            }
            value = firstChar + remainder;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'a valid name must be match this regular expression: ' + regexp.compile().toString()
                + '; trying autofix: |' + valueInputError + '| --> + |' + value + '|');
            return this.setName(value,  true || false);
        }
        let nameFixed =  false && false;
        while (this.parent && this.parent.isChildNameTaken(value)) {
            nameFixed = true;
            value = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].increaseEndingNumber(value, false, false);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(nameFixed && (valueInputError === value), 'increaseEningNumber failed:', value, this, this.parent ? this.parent.childrens : null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(nameFixed && warnDuplicateFix, 'that name is already used in this context, trying autofix: |'
            + valueInputError + '| --> + |' + value + '|');
        this.name = value;
        const model = this.parent ? this.getModelRoot() : null;
        let i;
        // for (i = 0; model && i < model.instances.length; i++) { model.instances[i].sidebar.fullnameChanged(valueOld, this.name); }
        if (refreshGUI) {
            this.refreshGUI();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
        return this.name;
    }
    fieldChanged(e) {
        // todo: fix for m2 too. i need to enable custom input in custom viewpoints.
        // U.pe(true, U.getTSClassName(this) + '.fieldChanged() should never be called.');
    }
    copy(other, nameAppend = '_Copy', newParent = null) {
        this.setName(other.name + nameAppend);
        let i;
        this.views = [];
        for (i = 0; i < other.views.length; i++) {
            const v = other.views[i];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.views, v.duplicate());
        }
        this.parent = newParent ? newParent : other.parent;
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.childrens, this);
        }
        this.childrens = [];
        for (i = 0; i < other.childrens.length; i++) {
            this.childrens.push(other.childrens[i].duplicate('', this));
        }
        this.metaParent = other.metaParent;
        if (this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.metaParent.instances, this);
        }
        this.instances = [];
        this.refreshGUI();
    }
    delete(refreshgui = true) {
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.parent.childrens, this);
            this.parent = null;
        }
        if (this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.metaParent.instances, this);
            this.metaParent = null;
        }
        let i;
        let arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.views);
        for (i = 0; arr && i < arr.length; i++) {
            arr[i].delete();
        }
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.detachedViews);
        for (i = 0; arr && i < arr.length; i++) {
            arr[i].delete();
        }
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.childrens);
        for (i = 0; arr && i < arr.length; i++) {
            arr[i].delete(false);
        }
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.instances);
        for (i = 0; arr && i < arr.length; i++) {
            arr[i].delete(false);
        }
        if (refreshgui)
            this.refreshGUI();
    }
    validate() {
        const names = {};
        let i;
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isValidName(name)) {
            this.mark(true, 'Invalid name');
            return false;
        }
        for (i = 0; i < this.childrens.length; i++) {
            const child = this.childrens[i];
            const name = child.name;
            if (names.hasOwnProperty(name)) {
                child.mark(true, 'Duplicate children name');
                return false;
            }
            child.validate();
            names[name] = child;
        }
        return true;
    }
    /*
      setStyle_SelfLevel_1(html: Element): void { this.customStyleToErase = html; }
      setStyle_InstancesLevel_2(html: Element): void { this.styleOfInstances = html; }
      setStyle_GlobalLevel_3(html: Element): void {
        const oldCustomStyle: Element = this.getGlobalLevelStyle(true);
        if (oldCustomStyle) { oldCustomStyle.parentNode.removeChild(oldCustomStyle); }
        const model: IModel = this.getModelRoot();
        let rootSelector: string;
        if (model.isM()) { rootSelector = '.MDefaultStyles';
        } else if (model.isMM()) { rootSelector = '.MMDefaultStyles';
        } else { U.pe(true, 'm3 objects should not call getStyle()'); }
        let selectorClass: string = '' + '_ERROR_';
        if (false && false) {
        } else if (this instanceof IClass) { selectorClass = ('Class');
        } else if (this instanceof IReference) { selectorClass = ('Reference');
        } else if (this instanceof IAttribute) { selectorClass = ('Attribute'); }
  
        let $root: JQuery<Element>;
        $root = $('.customized' + rootSelector);
        const container: Element = $root[0];
        html.classList.add('Template', selectorClass, (this instanceof IClass ? 'Vertex' : ''));
        container.appendChild(html); }*/
    getGlobalLevelStyle(checkCustomizedFirst = true) {
        let tsClass = this.getClassName(); /*
        if (false && false ) {
        } else if (this instanceof IClass) { tsClass = 'Class';
        } else if (this instanceof IAttribute) { tsClass = 'Attribute';
        } else if (this instanceof IReference) { tsClass = 'Reference';
        } else if (this instanceof EOperation) { tsClass = 'EOperation';
        } else if (this instanceof EParameter) { tsClass = 'EParameter';
        } else { tsClass = 'ERROR: ' + U.getTSClassName(this); }*/
        return ModelPiece.GetStyle(this.getModelRoot(), tsClass, checkCustomizedFirst);
    }
    getInheritableStyle() {
        let i;
        const ret = { html: null, htmlobj: null, view: null, ownermp: null, isownhtml: null, isinstanceshtml: null, isGlobalhtml: null };
        for (i = this.views.length; --i >= 0;) {
            let v = this.views[i];
            // if (!v.viewpoint.isApplied) continue;
            if (!v.htmli || !v.htmli.getHtml())
                continue;
            ret.html = v.htmli.getHtml();
            ret.htmlobj = v.htmli;
            ret.view = v;
            ret.ownermp = this;
            ret.isGlobalhtml = false;
            ret.isinstanceshtml = true;
            ret.isownhtml = false;
            return ret;
        }
        return null;
    }
    getInheritedStyle() { return this.metaParent ? this.metaParent.getInheritableStyle() : null; }
    getStyle() {
        let j;
        let i;
        const ret = { html: null, htmlobj: null, view: null, ownermp: null, isownhtml: null, isinstanceshtml: null, isGlobalhtml: null };
        for (j = this.views.length; --j >= 0;) {
            const v = this.views[j];
            if (!v.htmlo || !v.htmlo.getHtml())
                continue;
            ret.html = v.htmlo.getHtml();
            ret.htmlobj = v.htmlo;
            ret.view = v;
            ret.ownermp = this;
            ret.isGlobalhtml = false;
            ret.isinstanceshtml = false;
            ret.isownhtml = true;
            return ret;
        }
        const tmpret = this.getInheritedStyle();
        if (tmpret)
            return tmpret;
        ret.html = this.getGlobalLevelStyle();
        ret.htmlobj = null;
        ret.view = null;
        ret.ownermp = null;
        ret.isGlobalhtml = true;
        ret.isinstanceshtml = false;
        ret.isownhtml = false;
        return ret;
    }
    /*
    getStyleOld(): ViewHtmlSettings { return this.views.getHtml(this); }
    getStyleOldOld(): Element { return this.views.getHtml(this); }
    getStyleOldissimo(debug: boolean = true): Element {
      // prima precedenza: stile personale.
      let ret: Element;
      if (this.customStyleToErase) { ret = this.customStyleToErase; ret.id = '' + this.id; return ret; }
      // seconda precedenza: stile del meta-parent.
      const metap1 = this.metaParent;
      if (metap1 && metap1.styleOfInstances) { ret = metap1.styleOfInstances; ret.id = '' + this.id; return ret; }
      // terzo e quarto livello: search for customized third-override-css-like global styles; or immutable fourth global styles.
      ret = this.getGlobalLevelStyle(true);
      ret.id = '' + this.id;
      return ret; }
      getStyleObj(): ModelPieceStyleEntry {
        if (this.styleobj) { return this.styleobj; }
        return this.styleobj = ModelPieceStyleEntry.load(this.getStyle(), null); }*/
    getInfo(toLower = false) {
        let i;
        const info = new Info();
        const instancesInfo = {};
        const childrenInfo = {};
        const model = this.getModelRoot();
        Info.set(info, 'tsClass', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this));
        Info.set(info, 'this', this);
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"])) {
            Info.set(info, 'parent', this.parent);
        }
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"])) {
            Info.set(info, 'childrens', childrenInfo);
        }
        if (model.isMM()) {
            Info.set(info, 'instance', instancesInfo);
            Info.set(info, 'name', this.name);
        }
        else {
            Info.set(info, 'metaParent', this.metaParent);
        }
        for (i = 0; this.childrens && i < this.childrens.length; i++) {
            const child = this.childrens[i];
            let name = model.isM1() && child.metaParent ? child.metaParent.name : child.name;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(!name, 'getInfo() getName error: probably some metaparent is null.', this, child);
            if (!name)
                name = '';
            Info.setc(info, name.toLowerCase(), child);
            Info.setraw(childrenInfo, name.toLowerCase(), child);
        }
        for (i = 0; this.instances && i < this.instances.length; i++) {
            Info.seti(instancesInfo, '' + i, this.instances[i]);
        }
        return info;
    }
    getHtmlOnGraph() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"])
            return null;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IGraph"])
            return null;
        let html = this.getVertex().getHtmlRawForeign();
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"])
            return html;
        html = $(html).find('*[data-modelpieceid="' + this.id + '"]')[0];
        return html ? html : null;
    }
    getLastViewWith(fieldname) {
        let i = this.views.length;
        while (--i >= 0) {
            const v = this.views[i];
            const val = v['' + fieldname];
            // U.pe(fieldname in v, 'property |' + fieldname + '| does not exist in ViewRule. Field name has changed without changing the string
            // accordingly.');
            if (val !== undefined && val !== null)
                return v;
        }
        if (!this.metaParent)
            return null;
        i = this.metaParent.views.length;
        while (--i >= 0) {
            const v = this.metaParent.views[i];
            const val = v['' + fieldname];
            // U.pe(fieldname in v, 'property |' + fieldname + '| does not exist in ViewRule. Field name has changed without changing the string
            // accordingly.(2)');
            if (val !== undefined && val !== null)
                return v;
        }
        return null;
    }
    getLastView() { return this.views[this.views.length - 1]; }
    /*
      addView(v: ViewRule): void {
        // if (!v.viewpoint.viewsDictionary[this.id]) {  v.viewpoint.viewsDictionary[this.id] = []; }
        v.viewpoint.viewsDictionary[this.id] = v;
        U.ArrayAdd(this.views, v); }
      resetViews(): void { this.views = []; }
    */
    getClassName() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"]) {
            return 'm3Class';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"]) {
            return 'm2Class';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"]) {
            return 'm1Class';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
            return 'EEnum';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Attribute"]) {
            return 'm3Attribute';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            return 'm2Attribute';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"]) {
            return 'm1Attribute';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Reference"]) {
            return 'm3Reference';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return 'm2Reference';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return 'm1Reference';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Package"]) {
            return 'm3Package';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Package"]) {
            return 'm2Package';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MPackage"]) {
            return 'm1Package';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"]) {
            return 'm3Model';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"]) {
            return 'm2Model';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return 'm1Model';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            return 'EOperation';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            return 'EParameter';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            return 'ELiteral';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to find class:', this);
    }
    getInstanceClassName() {
        let ret = this.getClassName();
        if (ret.indexOf('m1') !== -1)
            return null;
        return ret.replace('m2', 'm1').replace('m3', 'm2');
    }
    pushDown(untilStartOrEnd) { this.pushUp(untilStartOrEnd, +1); }
    pushUp(untilStartOrEnd, offset = -1) {
        if (!this.parent) {
            return;
        }
        let arr;
        let parent = this.parent;
        let i;
        if (untilStartOrEnd)
            offset = offset > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
        if ((arr = parent.childrens) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.enums) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.classes) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.attributes) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.references) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.operations) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        this.updateKey();
    }
}
ModelPiece.idToLogic = {};
ModelPiece.idMax = 0;
class ModelNone extends ModelPiece {
}


/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("::ng-deep :root  {/* css variables */\r\n  --topbarH: 40px;\r\n  --sidebarW: 283px;\r\n  --mainFontColor: whiteSmoke;\r\n  --mainBackgroundColor: #1a1a1c;/*whiteSmoke;*/\r\n  --mainBorderWidth: 5px;\r\n  --mainBorderColor: #2e2f34;/*#e5e5e5;*/\r\n  --secondaryBorderColor: #3c3c44;/*#c5c5c5;*/\r\n  --mainBorder: var(--mainBorderColor) solid var(--mainBorderWidth);\r\n  --scrollbarW: 0px;\r\n  --tabH: 30px;\r\n}\r\n::ng-deep *{\r\n  box-sizing: border-box;\r\n  scrollbar-base-color: transparent;\r\n  scrollbar-3dlight-color: transparent;\r\n  scrollbar-highlight-color: rgba(93,95,104,0);\r\n  scrollbar-track-color: rgba(93,95,104,0);\r\n  scrollbar-arrow-color: #000;\r\n  scrollbar-shadow-color: rgba(93,95,104,0);\r\n  scrollbar-darkshadow-color: rgba(93,95,104,0);\r\n  /* -moz-appearance: none !important; */\r\n}\r\n/*::-webkit-scrollbar {\r\n    display: none;\r\n}*/\r\n*:disabled { cursor: not-allowed !important; }\r\ninput[type=checkbox]{ -moz-appearance: checkbox !important; }\r\ninput[type=radio]{ -moz-appearance: radio !important; }\r\ninput:disabled{\r\n  opacity : .75;\r\n  filter  : alpha(opacity=75); /* IE<9 */\r\n}\r\n::ng-deep .styleEditorSelected{\r\n  outline: 3px dashed red !important;\r\n}\r\n/*olds*/\r\n/****************** attributeEditor.css */\r\n.attributeEditor, .styleEditor{\r\n  /*display:inline-box;*/\r\n  position: absolute;\r\n  width: -moz-fit-content;\r\n  padding:8px;\r\n  background-color: var(--mainBackgroundColor);\r\n  border: var(--mainBorder);\r\n  max-width: 100vw;\r\n  max-height:100vh;\r\n  overflow: auto;\r\n}\r\n.styleEditor{\r\n  left: var(--sidebarW);\r\n  top: calc(var(--topbarH) + var(--tabH));\r\n  /*voglio che sia diversa perchè di solito parte con altezza pari a topbar.h e voglio che sia scrollabile senza spostarla*/\r\n  max-height: calc(100vh - calc(var(--topbarH) + var(--tabH)));\r\n}\r\nbutton.attributeEditorConfirm, button.styleEditorConfirm{\r\n  margin-left: calc(50% - 50px);\r\n  /* width:100px;\r\n   height:30px;*/\r\n}\r\ntable.attributeTable .attributeEditorFieldName, table.styleTable .styleEditorFieldName{\r\n  max-width:150px;\r\n  max-height:150px;\r\n  overflow:auto;\r\n}\r\n.styleTable{\r\n  margin-top:10px;\r\n  text-align: center;\r\n}\r\n.styleTable td{\r\n  max-width: 300px;\r\n}\r\n.attributeEditorTitle, .styleEditorTitle{\r\n  text-align: center;\r\n}\r\n.edgeRow{\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n.edgeRow>*{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: 0px;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  text-align: center;\r\n  padding: 4px;\r\n  flex-basis: 0px;\r\n  -webkit-box-flex: 0;\r\n          flex-grow: 0;\r\n  white-space: nowrap;\r\n}\r\n.isCompoundEdge{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto;\r\n}\r\n.styleCompoundWrapper{\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n}\r\n.compoundEdgeStart, .compoundEdgeEnd{\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n.SidebarStyleHtml, .GraphStyleHtml{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-pack: center;\r\n          justify-content: center;\r\n}\r\n/*\r\ntable.attributeTable {\r\n    border:none;\r\n    border-collapse: collapse;\r\n}\r\n\r\ntable.attributeTable td {\r\n    border-left: 1px solid #000;\r\n    border-right: 1px solid #000;\r\n}\r\n\r\ntable.attributeTable td:first-child {\r\n    border-left: none;\r\n}\r\n\r\ntable.attributeTable td:last-child {\r\n    border-right: none;\r\n}*/\r\n.attributeEditorTitle input[type=\"checkbox\"], .styleEditorTitle input[type=\"radio\"]{\r\n  margin: 4px;\r\n}\r\n.ReferenceSelector{\r\n  float: right;\r\n}\r\n.rowModelDetail, .vertexModelDetail{\r\n  float: right;\r\n  border-radius: 50%;\r\n  width: 33px;\r\n  height: 33px;\r\n  padding-top: 2px;\r\n}\r\n.vertexModelDetail{\r\n  margin-left: 10px;\r\n  float:none;\r\n}\r\n/*//////////////////////////////////////////////////  css.css nothing of this should work*/\r\n/*\r\n.sidebarShell, .editorShell, .property_sidebar{\r\n  display: inline-block;/*flex;* /\r\n  /* height: calc(100vh - (var(--topbarH) + var(--tabH)));* /\r\n  overflow: hidden;\r\n  flex-wrap: wrap;}\r\n.sidebarShell{\r\n  flex-grow: 0;\r\n  flex-basis: calc(var(--sidebarW));\r\n  background-color: var(--mainBackgroundColor);\r\n}\r\n#property_sidebar{\r\n  flex-grow: 0;\r\n  flex-basis: calc(var(--sidebarW));\r\n  background-color: var(--mainBackgroundColor);\r\n}\r\n.editorShell{\r\n  flex-basis: 0px;\r\n  flex-grow: 1;\r\n  width: calc(100vw - var(--sidebarW));\r\n}\r\n*/\r\n#metamodel_tab, #model_tab{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-direction: row;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n          justify-content: space-between;\r\n  -webkit-box-align: start;\r\n          align-items: flex-start;\r\n  align-content: flex-start;\r\n  width: 100vw;}\r\n#metamodel_editor, #model_editor{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-basis: 0px;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  /*width: calc(100vw - var(--sidebarW) - var(--scrollbarW));/*NB: TO DO: quando nascondi l'hiddeninput */\r\n  height: calc(100vh - calc(var(--topbarH) + var(--tabH)));\r\n  background-color: #44444c;/*lightgoldenrodyellow;*/\r\n}\r\n#input{\r\n  display:none;\r\n  width: 100vw;\r\n  height: 300px;\r\n  overflow-y:scroll;\r\n}\r\ntable.noBorder{\r\n  border: none;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


// @ts-ignore
let AppComponent = class AppComponent {
    // @ts-ignore
    constructor() {
        this.title = 'untitled';
    }
};
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")).default]
    })
], AppComponent);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule, Status, main0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Status", function() { return Status; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "main0", function() { return main0; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _guiElements_mminput_mminput_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../guiElements/mminput/mminput.component */ "./src/guiElements/mminput/mminput.component.ts");
/* harmony import */ var _guiElements_mmsidebar_mmsidebar_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../guiElements/mmsidebar/mmsidebar.component */ "./src/guiElements/mmsidebar/mmsidebar.component.ts");
/* harmony import */ var _guiElements_msidebar_msidebar_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../guiElements/msidebar/msidebar.component */ "./src/guiElements/msidebar/msidebar.component.ts");
/* harmony import */ var _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../guiElements/isidebar/isidebar.component */ "./src/guiElements/isidebar/isidebar.component.ts");
/* harmony import */ var _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../guiElements/top-bar/top-bar.component */ "./src/guiElements/top-bar/top-bar.component.ts");
/* harmony import */ var _guiElements_graph_tab_html_graph_tab_html_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../guiElements/graph-tab-html/graph-tab-html.component */ "./src/guiElements/graph-tab-html/graph-tab-html.component.ts");
/* harmony import */ var _guiElements_mm_graph_html_mm_graph_html_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../guiElements/mm-graph-html/mm-graph-html.component */ "./src/guiElements/mm-graph-html/mm-graph-html.component.ts");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _guiElements_property_barr_property_barr_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../guiElements/property-barr/property-barr.component */ "./src/guiElements/property-barr/property-barr.component.ts");
/* harmony import */ var _guiElements_m_graph_html_m_graph_html_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../guiElements/m-graph-html/m-graph-html.component */ "./src/guiElements/m-graph-html/m-graph-html.component.ts");
/* harmony import */ var _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../guiElements/dam-context-menu/dam-context-menu.component */ "./src/guiElements/dam-context-menu/dam-context-menu.component.ts");
/* harmony import */ var _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../guiElements/style-editor/style-editor.component */ "./src/guiElements/style-editor/style-editor.component.ts");
/* harmony import */ var _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../guiElements/console/console.component */ "./src/guiElements/console/console.component.ts");
/* harmony import */ var _measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./measurabletemplate/measurabletemplate.component */ "./src/app/measurabletemplate/measurabletemplate.component.ts");



















// @ts-ignore
let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"])({
        declarations: [
            _app_component__WEBPACK_IMPORTED_MODULE_4__["AppComponent"],
            _guiElements_mminput_mminput_component__WEBPACK_IMPORTED_MODULE_5__["MminputComponent"],
            _guiElements_mmsidebar_mmsidebar_component__WEBPACK_IMPORTED_MODULE_6__["MmsidebarComponent"],
            _guiElements_msidebar_msidebar_component__WEBPACK_IMPORTED_MODULE_7__["MsidebarComponent"],
            _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_8__["IsidebarComponent"],
            _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBarComponent"],
            _guiElements_graph_tab_html_graph_tab_html_component__WEBPACK_IMPORTED_MODULE_10__["GraphTabHtmlComponent"],
            _guiElements_mm_graph_html_mm_graph_html_component__WEBPACK_IMPORTED_MODULE_11__["MmGraphHtmlComponent"],
            _guiElements_property_barr_property_barr_component__WEBPACK_IMPORTED_MODULE_13__["PropertyBarrComponent"],
            _guiElements_m_graph_html_m_graph_html_component__WEBPACK_IMPORTED_MODULE_14__["MGraphHtmlComponent"],
            _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__["DamContextMenuComponent"],
            _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_16__["StyleEditorComponent"],
            _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBarComponent"],
            _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_17__["ConsoleComponent"],
            _measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_18__["MeasurabletemplateComponent"],
        ],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"]
        ],
        providers: [],
        bootstrap: [
            _app_component__WEBPACK_IMPORTED_MODULE_4__["AppComponent"],
            _guiElements_mminput_mminput_component__WEBPACK_IMPORTED_MODULE_5__["MminputComponent"],
            _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__["DamContextMenuComponent"],
            _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBarComponent"],
            _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_17__["ConsoleComponent"],
            _guiElements_graph_tab_html_graph_tab_html_component__WEBPACK_IMPORTED_MODULE_10__["GraphTabHtmlComponent"],
            _measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_18__["MeasurabletemplateComponent"]
        ],
        // aggiunto da me
        schemas: [
            _angular_core__WEBPACK_IMPORTED_MODULE_3__["NO_ERRORS_SCHEMA"]
        ]
    })
], AppModule);

class Status {
    // modelMatTab: MatTabGroup = null;
    /*showMMGrid = true;
    showMGrid = true;
    mmGrid = new GraphPoint(20, 20);
    mGrid = new GraphPoint(20, 20);*/
    constructor() {
        this.mm = null;
        this.m = null;
        this.typeAliasDictionary = {};
        this.aliasTypeDictionary = {};
        this.debug = false;
        this.loadedLogic = false;
        this.loadedGUI = false;
        this.XMLinlineMarker = '' + '@';
        // todo: consenti di customizzare il marker, (in m3options?)
        this.refreshModeAll =  true || false;
        this.refreshModelAndInstances =  false && false;
        this.refreshModelAndParent =  false && false;
        this.refreshInstancesToo =  false && false;
        this.refreshModel =  false && false;
        this.refreshMetaParentToo =  false && false;
        this.refreshParentToo =  false && false;
    }
    save() {
        return 'TO DO: SERIALIZE';
    }
    getActiveModel() {
        // if (Status.status.modelMatTab) { if (Status.status.modelMatTab.selectedIndex === 0) { return this.mm; } else { return this.m; } }
        if ($('.UtabHeader.main[data-target="1"][selected="true"]').length === 1) {
            return Status.status.mm;
        }
        if ($('.UtabHeader.main[data-target="2"][selected="true"]').length === 1) {
            return Status.status.m;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pe(true, 'modello attivo non trovato.');
        return null;
    }
    isM() { return this.getActiveModel() === this.m; }
    isMM() { return this.getActiveModel() === this.mm; }
    enableAutosave(timer) {
        $(window).off('beforeunload.unload_autosave').on('beforeunload.unload_autosave', () => { this.autosave(); });
        localStorage.setItem('autosave', 'true');
        setInterval(() => { this.autosave(); }, timer);
    }
    autosave() {
        this.mm.save(true, null);
        this.m.save(true, null);
        console.log('autosave completed.');
    }
}
Status.status = null;
function main0(loadEvent, tentativi = 0) {
    // EcoreLayer.test2(); return;
    Status.status = new Status();
    window.global = window;
    // (window as any).global.Buffer = (window as any).global.Buffer || require('buffer').Buffer;
    if (document.getElementById('MM_INPUT') === null) {
        if (tentativi++ >= 10) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pe(true, 'failed to load MM_INPUT');
        }
        setTimeout(() => main0(null, tentativi), 100);
        console.log('main0 wait(100)');
        return;
    } // else { mainForceTabChange(0); }
    // U.loadScript('./app/common/jquery-ui-1.12.1/jquery-ui.js');
    // U.loadScript('./app/common/jquery-ui-1.12.1/jquery-ui.structure.js');
    // U.loadScript('https://code.jquery.com/ui/1.12.1/jquery-ui.min.js');
    main();
    // console.log('main(), $ loaded:', $ !== undefined, 'status: ', Status.status);
}
/*function mainForceTabChange(tentativi: number = 0) {
  let retry = false;
  if (!Status.status.modelMatTab) {
    Status.status.modelMatTab = GraphTabHtmlComponent.matTabModel;
    retry = true;
    if (tentativi++ >= 10) { U.pe(true, 'failed to change tab (not initialized)', Status.status); }}
  if (Status.status.modelMatTab && Status.status.modelMatTab.selectedIndex === 1) {
    Status.status.modelMatTab.selectedIndex = 0;
    if (tentativi++ >= 10) { U.pe(true, 'failed to change tab (changeindex)'); }
    retry = true; }
  if (retry) {
    setTimeout(() => mainForceTabChange(tentativi), 100);
  } else { main(); }
}*/
const M2InputXml = '<?xml version="1.0" encoding="UTF-8"?>\n' +
    '<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n' +
    '    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="pkg" nsURI="http://www.pkg.uri.com" nsPrefix="pkg.prefix">\n' +
    '  <eClassifiers xsi:type="ecore:EClass" name="player">\n' +
    '   <eStructuralFeatures xsi:type="ecore:EAttribute" name="name"' +
    '       eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EChar"/>\n' +
    '  </eClassifiers>\n' +
    '  <eClassifiers xsi:type="ecore:EClass" name="league">\n' +
    '    <eStructuralFeatures xsi:type="ecore:EReference" name="playerlist" eType="#//player"/>\n' +
    '  </eClassifiers>\n' +
    '</ecore:EPackage>\n';
function globalevents() {
    // Prevent the backspace key from navigating back.
    const $document = $(document);
    $document.unbind('keydown').bind('keydown', _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].preventBackSlashHistoryNavigation);
    $document.on('keydown', (e) => {
        console.log('documentKeyDown: ', e.key, e.keyCode);
        if (e.key === 'Escape') {
            Status.status.getActiveModel().graph.edgeChangingAbort(e);
        }
    });
    window['' + 'U'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"];
    window['' + 'IGraph'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IGraph"];
    window['' + 'IVertex'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IVertex"];
    window['' + 'IEdge'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IEdge"];
    window['' + 'ExtEdge'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ExtEdge"];
    window['' + 'EdgePoint'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EdgePoint"];
    window['' + 'ViewPoint'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"];
    window['' + 'ViewRule'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewRule"];
    window['' + 'ModelPiece'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ModelPiece"];
    window['' + 'IModel'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IModel"];
    window['' + 'Status'] = Status;
    window['' + 'M3Model'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaMetaModel"];
    window['' + 'M2Model'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"];
    window['' + 'MModel'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"];
    window['' + 'IPackage'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IPackage"];
    window['' + 'M3Package'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Package"];
    window['' + 'M2Package'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Package"];
    window['' + 'MPackage'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MPackage"];
    window['' + 'Enum'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EEnum"];
    window['' + 'ELiteral'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ELiteral"];
    window['' + 'IClassifier'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IClass"];
    window['' + 'IClass'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IClass"];
    window['' + 'M3Class'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Class"];
    window['' + 'M2Class'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Class"];
    window['' + 'MClass'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MClass"];
    window['' + 'Typedd'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Typedd"];
    window['' + 'EOperation'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EOperation"];
    window['' + 'EParameter'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EParameter"];
    window['' + 'IReference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IReference"];
    window['' + 'M3Reference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Reference"];
    window['' + 'M2Reference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Reference"];
    window['' + 'MReference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MReference"];
    window['' + 'IAttribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IAttribute"];
    window['' + 'M3Attribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Attribute"];
    window['' + 'M2Attribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Attribute"];
    window['' + 'MAttribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MAttribute"];
    window['' + 'help'] = [
        'setBackup (backup <= saveToDB)',
        'backupSave (saveToDB <= backup)',
        'destroy (the backup)',
        'discardSave (stop autosave)'
    ];
    window['' + 'destroy'] = () => {
        localStorage.setItem('m1_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].model.lastopened, null);
        localStorage.setItem('m2_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].model.lastopened, null);
        localStorage.setItem('m1_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].view.lastopened, null);
        localStorage.setItem('m2_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].view.lastopened, null);
        localStorage.setItem('m1_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].vertexPos.lastopened, null);
        localStorage.setItem('m2_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].vertexPos.lastopened, null);
        localStorage.setItem('backupMM', null);
        localStorage.setItem('backupGUI', null);
        localStorage.setItem('backupM', null);
        localStorage.setItem('autosave', 'false');
    };
    window['' + 'discardSave'] = () => {
        localStorage.setItem('autosave', 'false');
        $(window).off('beforeunload.unload_autosave');
        window.location.href += '';
    };
    window['' + 'backupSave'] = () => {
        window['' + 'discardSave']();
        window['' + 'backupSaveMM']();
        window['' + 'backupSaveM']();
        window['' + 'backupSaveGUI']();
    };
    window['' + 'backupSaveGUI'] = () => { localStorage.setItem('modelGraphSave_GUI_Damiano', localStorage.getItem('backupGUI')); };
    window['' + 'backupSaveMM'] = () => { localStorage.setItem('LastOpenedMM', localStorage.getItem('backupMM')); };
    window['' + 'backupSaveM'] = () => { localStorage.setItem('LastOpenedM', localStorage.getItem('backupM')); };
    window['' + 'setBackup'] = () => { window['' + 'setBackupM'](); window['' + 'setBackupMM'](); window['' + 'setBackupGUI'](); };
    window['' + 'setBackupGUI'] = () => { localStorage.setItem('backupGUI', localStorage.getItem('modelGraphSave_GUI_Damiano')); };
    window['' + 'setBackupMM'] = () => { localStorage.setItem('backupMM', localStorage.getItem('LastOpenedMM')); };
    window['' + 'setBackupM'] = () => { localStorage.setItem('backupM', localStorage.getItem('LastOpenedM')); };
}
function setBootstrapOnLowestPriority() {
    let $s = $('style');
    for (let i = 0; i < $s.length; i++) {
        if ($s[i].innerText.substring(0, 220).indexOf('https://getbootstrap.com/') === -1)
            continue;
        document.head.prepend($s[i]);
        return;
    }
}
function main() {
    setBootstrapOnLowestPriority();
    window.U = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"];
    window.status = Status.status;
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].focusHistorySetup();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].tabSetup();
    $('app-mm-graph-html .propertyBarContainer .UtabHeader').on('click', (e) => {
        if (e.currentTarget.innerText === 'Style') {
            Status.status.mm.graph.propertyBar.styleEditor.onShow();
        }
        else if (e.currentTarget.innerText === 'Structured') {
            Status.status.mm.graph.propertyBar.onShow();
        }
        else if (e.currentTarget.innerText === 'Raw') {
            Status.status.mm.graph.propertyBar.onShow(true);
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pe(true, 'unrecognized right-side tab:', e.currentTarget);
        }
    });
    $('app-m-graph-html .propertyBarContainer .UtabHeader').on('click', (e) => {
        if (e.currentTarget.innerText === 'Style') {
            Status.status.m.graph.propertyBar.styleEditor.onShow();
        }
        else if (e.currentTarget.innerText === 'Structured') {
            Status.status.m.graph.propertyBar.onShow();
        }
        else if (e.currentTarget.innerText === 'Raw') {
            Status.status.m.graph.propertyBar.onShow(true);
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pe(true, 'unrecognized right-side tab:', e.currentTarget);
        }
    });
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].resizableBorderSetup();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ECoreRoot"].initializeAllECoreEnums();
    globalevents();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MeasurableRuleParts"].staticinit();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IVertex"].staticinit();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IEdge"].staticInit();
    new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MyConsole"]();
    let tmp;
    let useless;
    let i;
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw((tmp = +_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["DetectZoom"].device()) !== 1, 'Current zoom level is different from 100%.', 'The graph part of this website may be graphically misplaced due to a bug with Svg\'s <foreignObject> content.', 'current zoom:' + (+tmp * 100) + '%', 'The bug happens in: Chrome.', 'The bug does NOT happen in: Firefox.', 'Behaviour is unknown for other browsers.');
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].void] = 'void';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EChar] = 'char';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EString] = 'string';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EDate] = 'date';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EFloat] = 'float';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EDouble] = 'double';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EBoolean] = 'bool';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EByte] = 'byte';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EShort] = 'short';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].EInt] = 'int';
    Status.status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"].ELong] = 'long';
    /*
    Status.status.typeAliasDictionary[ShortAttribETypes.ECharObj] = 'ECharObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EStringObj] = 'EStringObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EDateObj] = 'EDateObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EFloatObj] = 'EFloatObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EDoubleObj] = 'EDoubleObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EByteObj] = 'EByteObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EShortObj] = 'EShortObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EIntObj] = 'EIntObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.ELongObj] = 'ELongObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EELIST] = 'EELIST';*/
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EType"].staticInit();
    _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__["DamContextMenuComponent"].staticInit();
    const savem2 = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["LocalStorage"].getLastOpened(2);
    const savem1 = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["LocalStorage"].getLastOpened(1);
    /*let MetaMetaModelStr = MetaMetaModel.emptyMetaMetaModel;
    let MetaModelinputStr = MetaModel.emptyModel;
    let ModelinputStr = Model.emptyModel;*/
    const validate = (thing, defaultvalue) => { return thing && thing !== '' && thing !== 'null' && thing !== 'undefined' ? thing : defaultvalue; };
    savem2.model = validate(savem2.model, _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"].emptyModel);
    savem1.model = validate(savem1.model, _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"].emptyModel);
    console.log('loading MM:', savem2);
    console.log('loading M:', savem1);
    Status.status.mmm = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaMetaModel"](null);
    useless = new _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBar"]();
    try {
        Status.status.mm = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"](JSON.parse(savem2.model), Status.status.mmm);
    }
    catch (e) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw(true, 'Failed to load the metamodel.');
        console.log(e, savem2.model);
        Status.status.mm = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"](JSON.parse(_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"].emptyModel), Status.status.mmm);
    }
    // console.log('m3:', Status.status.mmm, 'm2:', Status.status.mm, 'm1:', Status.status.m); return;
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Type"].linkAll();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Class"].updateSuperClasses();
    try {
        Status.status.m = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"](JSON.parse(savem1.model), Status.status.mm);
    }
    catch (e) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw(true, 'Failed to load the model. Does it conform to the metamodel?');
        console.log(e);
        Status.status.m = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"](JSON.parse(_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"].emptyModel), Status.status.mm);
    }
    console.log('m3:', Status.status.mmm, 'm2:', Status.status.mm, 'm1:', Status.status.m);
    // Status.status.m.LinkToMetaParent(Status.status.mm);
    // Status.status.m.fixReferences(); already linked at parse time.
    Status.status.loadedLogic = true;
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ISidebar"](Status.status.mmm, document.getElementById('metamodel_sidebar'));
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ISidebar"](Status.status.mm, document.getElementById('model_sidebar'));
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IGraph"](Status.status.mm, document.getElementById('metamodel_editor'));
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IGraph"](Status.status.m, document.getElementById('model_editor'));
    Status.status.loadedGUI = true;
    Status.status.mm.graph.propertyBar.show(Status.status.mm, null, null);
    Status.status.m.graph.propertyBar.show(Status.status.m, null, null);
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Type"].updateTypeSelectors(null, true, true, true);
    if (!savem2.vertexpos || !savem2.view) {
        const tmpp = Status.status.mm.storage.getViewPoints();
        savem2.view = savem2.view || tmpp.view;
        savem2.vertexpos = savem2.vertexpos || tmpp.vertexPos;
    }
    if (!savem1.vertexpos || !savem1.view) {
        const tmpp = Status.status.m.storage.getViewPoints();
        savem1.view = savem1.view || tmpp.view;
        savem1.vertexpos = savem1.vertexpos || tmpp.vertexPos;
    }
    savem2.view = validate(savem2.view, '[]');
    savem2.vertexpos = validate(savem2.vertexpos, '{}');
    savem1.view = validate(savem1.view, '[]');
    savem1.vertexpos = validate(savem1.vertexpos, '{}');
    let marr = [Status.status.mm, Status.status.m];
    let vpmatjson = [JSON.parse(savem2.view || '[]'), JSON.parse(savem1.view || '[]')];
    const vertexposMat = [JSON.parse(savem2.vertexpos), JSON.parse(savem1.vertexpos)];
    // console.log(vpmatjson, Status.status.mm.graph.viewPointShell);
    // return;
    let j;
    for (j = 0; j < vertexposMat.length; j++) {
        const vdic = vertexposMat[j];
        const m = marr[j];
        for (let key in vdic) {
            console.log('key:', key, 'varr:', vdic);
            const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ModelPiece"].getByKeyStr(key);
            const size = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["GraphSize"]().clone(vdic[key]);
            if (!mp || !(mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IClassifier"])) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].cclear();
                _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw(true, 'invalid vertexposition save, failed to get classifier:', key, vdic);
                continue;
            }
            mp.getVertex().setSize(size);
        }
    }
    for (j = 0; j < vpmatjson.length; j++) {
        const vparr = vpmatjson[j];
        const m = marr[j];
        let v;
        for (i = 0; i < vparr.length; i++) {
            const jsonvp = vparr[i];
            // console.clear();
            // console.log('looping this:', jsonvp, ', vpmatjson:', vpmatjson);
            v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"](m);
            v.clone(jsonvp);
            v.updateTarget(m);
            m.graph.viewPointShell.add(v, false); // [persistent isApplied] STEP 1: qui setto checked sulla gui in base al v.isApplied salvato.
            v.isApplied = false; // STEP 2: qui affermo che non è stato ancora applicato
        }
        if (vparr.length === 0) {
            v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"](m); // m.getPrefix() + '_VP autogenerated');
            v.isApplied = true;
            m.graph.viewPointShell.add(v, false); // [persistent isApplied] STEP 1: qui setto checked sulla gui in base al v.isApplied salvato.
            v.isApplied = false;
        }
        m.graph.viewPointShell.refreshApplied(); // STEP 3: qui vedo che non è stato applicato, ma è stato ordinato dalla gui di applicarlo -> lo applico.
    }
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IEdge"].all.forEach((e) => { e.refreshGui(); });
    // setTimeout( () => { Status.status.mm.graph.setGrid0(); Status.status.m.graph.setGrid0(); }, 1);
    // Imposto un autosave raramente (minuti) giusto nel caso di crash improvvisi o disconnessioni
    // per evitare di perdere oltre X minuti di lavoro.
    // In condizioni normali non è necessario perchè il salvataggio è effettuato al cambio di pagina asincronamente
    // e con consegna dei dati garantita dal browser anche a pagina chiusa (navigator.beacon)
    return;
    Status.status.enableAutosave(2 * 60 * 1000);
    //Options.enableAutosave(2 * 60 * 1000);
    // Options.Load(Status.status);
}
window['' + 'main'] = main0;
document.addEventListener('DOMContentLoaded', main0);


/***/ }),

/***/ "./src/app/measurabletemplate/measurabletemplate.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/measurabletemplate/measurabletemplate.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".meas_acc0 .measurableSettingRoot{\r\n  width: 100%;\r\n  display: block;\r\n}\r\n.meas_acc0 .boxesroot {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n}\r\n.meas_acc0 .preleft, .meas_acc0 .postName {\r\n  border: none;\r\n  background: none;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto 0;\r\n  padding: 0;\r\n  color: inherit;\r\n  height: unset;\r\n}\r\n.meas_acc0 .preleft { margin-right: 5px; }\r\n.meas_acc0 .postName { margin-left: 5px; }\r\n.meas_acc0 .botmarg { margin-bottom: 5px; display: -webkit-box; display: flex; }\r\n.meas_acc0 .movementboxroot, .meas_acc0 .resizeboxroot {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n}\r\n.meas_acc0 .columncontainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: row;\r\n  flex-wrap: nowrap;\r\n}\r\n.meas_acc0 .rowcontainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  flex-wrap: nowrap;\r\n}\r\n.meas_acc0 .column, .meas_acc0 .row{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n}\r\n.meas_acc0 .row {\r\n  max-width: 100%;\r\n  margin-right: unset;\r\n  margin-left: unset; /* dumb _grid.scss fixer */\r\n}\r\n.meas_acc0 .break { flex-wrap: wrap; }\r\n.meas_acc0 .autobreak { flex-wrap: initial; }\r\n.meas_acc0 .fill { -webkit-box-flex: 1; flex-grow: 1; }\r\n.meas_acc0 .boxtitle { display: block; text-align: center; margin-bottom: 12px; }\r\n.meas_acc0 .side { display: -webkit-box; display: flex; }\r\n.meas_acc0 .side.left, .meas_acc0 .side.right { width: 10px; }\r\n.meas_acc0 .side.top, .meas_acc0 .side.bot { height: 10px; width: calc(100% - 20px); }\r\n.meas_acc0 .corner { display: -webkit-box; display: flex; width: 10px; height: 10px; }\r\n.meas_acc0 .middle { background-color: goldenrod; display: -webkit-box; display: flex; }\r\n.meas_acc0 .middle .middle { width: 120px; height: 90px; }\r\n.meas_acc0 .rectangledrawing.inner > .row > .side, .meas_acc0 .rectangledrawing.inner > .row > .corner {\r\n  background-color: black;\r\n}\r\n.meas_acc0 .boxroot {\r\n  display: block;\r\n  margin: auto;\r\n  flex-wrap: wrap;\r\n}\r\n.meas_acc0 .ruletitle{\r\n  display: block;\r\n  text-align: center;\r\n}\r\n.meas_acc0 button.ruledelete {\r\n  height: 100%;\r\n  width: 30px;\r\n  padding: 0;\r\n  margin-right: 5px;\r\n  border-radius: 25px 0 0 25px;\r\n}\r\n.meas_acc0 .compoundInputprefix {\r\n  max-width: 100%;\r\n  height: -webkit-fit-content;\r\n  height: -moz-fit-content;\r\n  height: fit-content;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  -webkit-box-flex: 0 !important;\r\n          flex-grow: 0 !important;\r\n  width: auto;\r\n  flex-basis: auto !important;\r\n  flex-shrink: 0 !important;\r\n}\r\n.meas_acc0 .operator.trigger {\r\n  -webkit-box-ordinal-group: 3;\r\n          order: 2;\r\n  margin: auto 0;\r\n  margin-left: -4px;\r\n  padding: 0;\r\n  background: transparent;\r\n  color: inherit;\r\n  -moz-text-align-last: left;\r\n       text-align-last: left;\r\n}\r\n.meas_acc0 ._ondrag .operator.trigger{\r\n  width: 56px;\r\n}\r\n.meas_acc0 ._onresize .operator.trigger{\r\n  width: 64px;\r\n}\r\n.meas_acc0 ._onrotation .operator.trigger{\r\n  width: 77px;\r\n}\r\n.meas_acc0 .operator.trigger:focus{\r\n  outline: none;\r\n  box-shadow: none;\r\n  border: none;\r\n}\r\n.meas_acc0 .compoundInputprefix > input.attrname {\r\n  -webkit-box-ordinal-group: 4;\r\n          order: 3;\r\n  border-left: none;\r\n  padding-left: 0;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n.meas_acc0 .compoundInputprefix > * { border: none; }\r\n.meas_acc0 .compoundInputprefix > *:first-child {\r\n  margin-top: 1px;\r\n  padding-right: 0;\r\n  background-color: transparent;\r\n  width: -webkit-min-content;\r\n  width: -moz-min-content;\r\n  width: min-content;\r\n}\r\n.meas_acc0 .compoundInputprefix > input:focus { box-shadow: none; }\r\n.meas_acc0 .compoundInputprefix:focus-within {\r\n  border-color: #80bdff;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n.meas_acc0 .rulecontainer > .rightx, .meas_acc0 .rulecontainer > .leftx { margin-bottom: 0 !important; }\r\n/* .meas_acc0 .rightx { min-width: 0; } */\r\n.meas_acc0 .rightx span.operator {\r\n  margin: auto;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  /*margin-top: 8px;*/\r\n}\r\n.meas_acc0 .rightx span.operator.apply {\r\n   margin-left: 0px;\r\n }\r\n.meas_acc0 .operatorcontainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n}\r\n.meas_acc0 select.operator {\r\n  width: 45px;\r\n  margin: auto 5px;\r\n  text-align: center;\r\n  -moz-text-align-last: center;\r\n       text-align-last: center;\r\n}\r\n.meas_acc0 .rightx .compoundInputprefix, .meas_acc0 .rightx input.rightside, .meas_acc0 input.leftside, .meas_acc0 .rightx > .target {\r\n  margin-bottom: 5px;\r\n  min-width: 120px;\r\n  flex-basis: 0;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n}\r\n.meas_acc0 .rulecontainer { margin-bottom: 1rem; }\r\n.meas_acc0 .rightx > .target { margin-bottom: 0; }\r\n.meas_acc0 .rightx > .measurabledebug { margin-top: 5px; }\r\n.meas_acc0 .attrname {\r\n  max-width: 200px !important; /* todo: remove when is autosizing */\r\n}\r\n.meas_acc0 .addrule {\r\n  float: right;\r\n  margin-top: -4px;\r\n  padding: 4px 10px;\r\n}\r\n.meas_acc0 .ruletitle {\r\n  padding-right: 4px;\r\n  margin-bottom: 5px;\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n::ng-deep .meas_acc0 .innertitle { margin: auto; }\r\n/* dynamically added*/\r\n.meas_acc0 .ruletitle.collapsed { -webkit-appearance: initial; }\r\n.meas_acc0 .ruletitle:hover { -webkit-appearance: button; text-decoration: none; color: dodgerblue; }\r\n.meas_acc0 .form-control > .form-control:not(:first-child){\r\n  border-top-left-radius: unset;\r\n  /* disable bootstrap rule*/\r\n}\r\n.meas_acc0 .measurableoutputtext:focus,\r\n.meas_acc0 .measurableerrortext:focus,\r\n.meas_acc0 .measurablewarningtext:focus{\r\n  /*outline: none;\r\n  box-shadow: none;*/\r\n}\r\n.meas_acc0 .measurableerrortext{\r\n  margin-left: 5px;\r\n  color: var(--danger);\r\n}\r\n.meas_acc0 .measurablewarningtext{\r\n  margin-left: 5px;\r\n  color: var(--warning);\r\n}\r\n.meas_acc0 .measurableoutputtext{\r\n  margin-left: 5px;\r\n  color: var(--secondary);\r\n}\r\n.meas_acc0 .rulecontainer{ margin-bottom: 5px; }\r\n.meas_acc0 .measurabledebug { display: none; }\r\n.meas_acc0 .rightx:focus-within .measurabledebug{ display: -webkit-box; display: flex; }\r\n.meas_acc0 .countershell { float: right; }\r\n.meas_acc0 .rectangledrawing.outer > * {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .row > *, .meas_acc0 .arrowh, .meas_acc0 .arrowv {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .top > .left {\r\n  /*background-image: url(https://i.ibb.co/tqxXhk4/tl.png);*/\r\n  background-image: url(https://i.ibb.co/Zgvpywz/tll.png);\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .top > .side.top {\r\n  background-image: url(https://i.ibb.co/M9fC7DP/t.png); }\r\n.meas_acc0 .rectangledrawing.outer > .top > .right {\r\n  /*background-image: url(https://i.ibb.co/Pzsmjxf/tr.png);*/\r\n  background-image: url(https://i.ibb.co/SN2THLt/trl.png); }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\r\n  background-image: url(https://i.ibb.co/7jm9BBQ/l.png); }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\r\n  background-image: url(https://i.ibb.co/RYZnVN5/r.png); }\r\n.meas_acc0 .rectangledrawing.outer > .bot > .left {\r\n  /*background-image: url(https://i.ibb.co/qrYWdpH/bl.png);*/\r\n  background-image: url(https://i.ibb.co/gDKFry5/bll.png); }\r\n.meas_acc0 .rectangledrawing.outer > .bot > .side.bot {\r\n  background-image: url(https://i.ibb.co/cXc0nmS/b.png); }\r\n.meas_acc0 .rectangledrawing.outer > .bot > .right {\r\n  /*background-image: url(https://i.ibb.co/K0pVVT7/br.png);*/\r\n  background-image: url(https://i.ibb.co/QpwRSsT/brl.png); }\r\n.meas_acc0 input.side.top {\r\n  margin-bottom: 3px;\r\n  margin-top: -3px; }\r\n.meas_acc0 input.side.bot {\r\n  margin-bottom: -3px;\r\n  margin-top: 3px; }\r\n.meas_acc0 input.side.left {\r\n  margin-right: 3px;\r\n  margin-left: -3px; }\r\n.meas_acc0 input.side.right {\r\n  margin-right: -3px;\r\n  margin-left: 3px; }\r\n.meas_acc0 .arrowh {\r\n  background-image: url(https://i.ibb.co/Zd3jtbc/lr.png); }\r\n.meas_acc0 .arrowv {\r\n  background-image: url(https://i.ibb.co/jHTtPDx/tb.png); }\r\n.meas_acc0 .rectangledrawing.outer > .row > .corner {\r\n  height: 50px;\r\n  min-width: 50px;\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .top > * {\r\n  height: 50px; }\r\n.meas_acc0 .rectangledrawing.outer > .bot > * {\r\n  height: 50px; }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\r\n  height: auto;\r\n  width: 50px; }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\r\n  height: auto;\r\n  width: 50px; }\r\n.meas_acc0 .arrow { -webkit-appearance: initial; }\r\n.meas_acc0 .arrowh, .meas_acc0 .arrowv{\r\n  width: 75px;\r\n  height: 75px; }\r\n.meas_acc0 .arrow:focus{ outline: none; }\r\n.meas_acc0 .arrow:checked{\r\n  -webkit-filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%);\r\n          filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%); }\r\n.meas_acc0 .directions {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: auto; }\r\n.meas_acc0 .directions > * { margin: auto; }\r\n.meas_acc0 .draggable.boxroot{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  /*height: 237px;*/\r\n}\r\n.meas_acc0 .collapse:not(.show) { display: none; }\r\n.meas_acc0 .rule.template { display: none !important; }\r\n.meas_acc0 .selected { background-color: #37ff66 !important; }\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/measurabletemplate/measurabletemplate.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/measurabletemplate/measurabletemplate.component.ts ***!
  \********************************************************************/
/*! exports provided: MeasurabletemplateComponent, MeasurableTemplateGenerator, Rotatableoptions, Resizableoptions, Draggableoptions, RotatableoptionsPH, ResizableoptionsPH, DraggableOptionsPH */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurabletemplateComponent", function() { return MeasurabletemplateComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableTemplateGenerator", function() { return MeasurableTemplateGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rotatableoptions", function() { return Rotatableoptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Resizableoptions", function() { return Resizableoptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Draggableoptions", function() { return Draggableoptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RotatableoptionsPH", function() { return RotatableoptionsPH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizableoptionsPH", function() { return ResizableoptionsPH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DraggableOptionsPH", function() { return DraggableOptionsPH; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _common_measurable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/measurable */ "./src/common/measurable.ts");




let MeasurabletemplateComponent = class MeasurabletemplateComponent {
    constructor() { }
    ngOnInit() {
    }
};
MeasurabletemplateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-measurabletemplate',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./measurabletemplate.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/measurabletemplate/measurabletemplate.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./measurabletemplate.component.css */ "./src/app/measurabletemplate/measurabletemplate.component.css")).default]
    })
], MeasurabletemplateComponent);

class MeasurableTemplateGenerator {
    static generateMeasurableTemplate() {
        if (MeasurableTemplateGenerator.output)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml(MeasurableTemplateGenerator.output, true);
        const $root = $('#measurableTemplateGeneratorShell');
        class Tmp {
            constructor(prefix, name, preleft = null, haveleft = true, haveoperator = false, havetarget = true, leftph = null, rightph = null, nameph = null) {
                this.preleft = preleft;
                this.haveleft = haveleft;
                this.index = Tmp.maxindex++;
                this.name = name;
                this.prefix = prefix;
                this.nameph = nameph ? nameph : 'Name';
                this.leftph = leftph ? leftph : '#####';
                this.rightph = rightph ? rightph : 'Value';
                this.havetarget = havetarget;
                this.haveoperator = haveoperator === null ? false : haveoperator;
            }
        }
        Tmp.maxindex = 0;
        const arr = [];
        let prefix;
        let name;
        let preleft;
        let haveleft;
        let havetarget;
        let leftph;
        let rightph;
        let nameph;
        let haveoperator;
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRefresh;
        name = prefix.substr(1);
        preleft = 'if';
        haveleft = true;
        haveoperator = 'do';
        havetarget = true;
        nameph = null;
        leftph = 'condition';
        rightph = '[selector] [->] rulename';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragStart;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeStart;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationStart;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileDragging;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileResizing;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileRotating;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragEnd;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeEnd;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationEnd;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].variable;
        name = 'Generic command / variable';
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = true;
        nameph = 'VarName';
        leftph = null;
        rightph = null;
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].export;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = true;
        haveoperator = '⇠';
        havetarget = true;
        nameph = null;
        leftph = 'selector++';
        rightph = 'String';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = true;
        haveoperator = true;
        havetarget = true;
        nameph = null;
        leftph = 'Size/Pos';
        rightph = null;
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].bind;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = false;
        nameph = null;
        leftph = null;
        rightph = 'ModelPiece.id';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].console;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = false;
        nameph = null;
        leftph = null;
        rightph = 'Console command';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].dynamicStyle;
        name = 'Dynamic Style';
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = true;
        nameph = null;
        leftph = null;
        rightph = 'Html style string';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].dynamicClass;
        name = 'Dynamic Class';
        rightph = '+classToAdd -classToRemove';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra;
        name = 'jQueryUI draggable options';
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = false;
        nameph = 'ggable Option name';
        leftph = null;
        rightph = null;
        arr.push(new Tmp(prefix, name, null, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes;
        name = 'jQuery resizable options';
        nameph = 'izable Option name';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot;
        name = 'jQuery rotatable options';
        nameph = 'atable Option name';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        // console.log('arr:', JSON.stringify(arr));
        let i;
        const template = $root.find('.rule.template')[0];
        const accordion = $root.find('.meas_acc')[0];
        let genericvarattrnameinput;
        let genericvarpattern = '^(?!ng';
        /*delete prefix;
        delete name;
        delete preleft;
        delete haveleft;
        delete havetarget;
        delete leftph;
        delete rightph;
        delete nameph;
        delete haveoperator;*/
        let debugrulecounter = 0;
        for (let k in _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]) {
            debugrulecounter++;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(arr.length !== debugrulecounter, 'missing ' + (debugrulecounter - (2 * 3) - arr.length) + ' rules:', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"], arr); // - on(dra, res, rot) + (start, end) = 3*2 casi esclusi
        for (i = 0; i < arr.length; i++) {
            const elem = arr[i];
            const nodee = template.cloneNode(true);
            nodee.setAttribute('class', 'panel ' + elem.prefix);
            const $node = $(nodee);
            const title = $node.find('h7')[0];
            const prefix = $node.find('.compoundInputprefix > .prefix')[0];
            const attrname = $node.find('.compoundInputprefix > .attrname')[0];
            const preleft = $node.find('.preleft')[0];
            const leftside = $node.find('.leftside')[0];
            const operatorselect = $node.find('select.operator.relational')[0];
            const operatorselect2 = $node.find('select.operator.trigger')[0];
            const operatortext = $node.find('span.operator')[0];
            const opparent = operatorselect.parentElement;
            const rightside = $node.find('.rightside')[0];
            const target = $node.find('input.target')[0];
            if (elem.haveoperator === true) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatortext);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect2);
            }
            else if (elem.haveoperator === 'when') {
                // empty on purpose
            }
            else if (elem.haveoperator === elem.haveoperator + '') {
                operatortext.innerText = elem.haveoperator;
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect2);
            }
            else if (elem.haveoperator === false) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatortext);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect2);
            }
            if (elem.preleft) {
                preleft.innerText = elem.preleft;
            }
            else
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(preleft);
            attrname.placeholder = elem.nameph;
            nodee.classList.remove(arr[i].prefix);
            nodee.classList.add(arr[i].prefix);
            leftside.placeholder = elem.leftph;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator.length !== 1, 'se cambi il separatore da char a stringa devi aggiornare questo pattern');
            leftside.pattern = '[^' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + ']*';
            rightside.placeholder = elem.rightph;
            prefix.innerHTML = elem.prefix;
            attrname.innerHTML = elem.nameph;
            attrname.setAttribute('defaultvalue', '1');
            const triggerscommon = () => {
                operatortext.innerText = 'apply';
                operatortext.classList.add('apply');
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect);
                const row = operatortext.parentElement.parentElement;
                const newrow = document.createElement('div');
                row.parentElement.insertBefore(newrow, row.nextElementSibling);
                newrow.classList.add('row', 'break');
                const splitindex = row.innerHTML.indexOf('<span class="eventsplitpoint');
                newrow.innerHTML = row.innerHTML.substring(splitindex);
                row.innerHTML = row.innerHTML.substring(0, splitindex);
            };
            if (arr[i].prefix !== '_')
                genericvarpattern += '|' + arr[i].prefix.substr(1);
            switch (arr[i].prefix) {
                default: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].variable:
                    genericvarattrnameinput = attrname;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRefresh:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragStart:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationStart:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeStart:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileRotating:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileResizing:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileDragging:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragEnd:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeEnd:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationEnd:
                    // U.remove(operatorselect2); triggerscommon();
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint:
                    leftside.setAttribute('list', 'measurableList' + arr[i].prefix);
                    leftside.dataset['target'] = arr[i].prefix;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra: //dynamicjquiplaceholder(attrname, Draggableoptions); break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes: //dynamicjquiplaceholder(attrname, Resizableoptions); break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot: //dynamicjquiplaceholder(attrname, Rotatableoptions); break;
                    attrname.setAttribute('list', 'measurableList' + arr[i].prefix);
                    attrname.dataset['target'] = arr[i].prefix;
                    attrname.setAttribute('defaultvalue', '');
                    break;
                /*
              case 'never again, was on (Drag, res, rot) + (start, doing, end)':
                prefix.innerText = '_ondrag';
                operatorselect2.children[0].children[0].innerHTML = 'Start';
                operatorselect2.children[0].children[1].innerHTML = 'ging';
                operatorselect2.children[0].children[2].innerHTML = 'End';
                triggerscommon();
                prefix.innerText = '_onresiz';
                operatorselect2.children[0].children[0].innerHTML = 'eStart';
                operatorselect2.children[0].children[1].innerHTML = 'ing';
                operatorselect2.children[0].children[2].innerHTML = 'eEnd';
                triggerscommon();
                prefix.innerText = '_onrotat';
                operatorselect2.children[0].children[0].innerHTML = 'ionStart';
                operatorselect2.children[0].children[1].innerHTML = 'ing';
                operatorselect2.children[0].children[2].innerHTML = 'ionEnd';
                triggerscommon();
                break;*/
            }
            if (!elem.haveleft) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(leftside);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(opparent);
            }
            if (!elem.havetarget) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(target);
            }
            title.dataset.target = ".meas_acc > .panel > ." + elem.prefix;
            title.innerHTML = '<span class="innertitle">' + elem.name + '&nbsp;(<span class="rulecounter">0</span>)</span><button class="addrule btn btn-sm btn-success">+</button><span class="countershell"></span>';
            $node.find('.rulecontainer')[0].classList.add(elem.prefix);
            accordion.appendChild(nodee);
        }
        genericvarattrnameinput.pattern = genericvarpattern + ')[\\S]+$';
        $root.find('.comment').remove();
        $root.find('.export').remove();
        $root.find('style').remove();
        $root.find('script').remove();
        $root.find('.rule.template').remove();
        let ret = MeasurableTemplateGenerator.output = $root[0];
        ret.classList.remove('template');
        ret.classList.add('oldMeasurablePlaceholder');
        ret.parentElement.removeChild(ret);
        ret.removeAttribute('id');
        MeasurableTemplateGenerator.makedatasetLists();
        return ret;
    }
    static makedatasetLists() {
        const constraintOptions = new _common_measurable__WEBPACK_IMPORTED_MODULE_3__["ConstraintLeftAdmitteds"]();
        let opt;
        let datalist;
        let key;
        let i;
        delete constraintOptions.absoluteDocPos;
        constraintOptions['absoluteDocPos.x'] = 'absoluteDocPos.x';
        constraintOptions['absoluteDocPos.y'] = 'absoluteDocPos.y';
        delete constraintOptions.absoluteGPos;
        constraintOptions['absoluteGPos.x'] = 'absoluteGPos.x';
        constraintOptions['absoluteGPos.y'] = 'absoluteGPos.y';
        delete constraintOptions.relativePos;
        constraintOptions['relativePos.x'] = 'relativePos.x';
        constraintOptions['relativePos.y'] = 'relativePos.y';
        delete constraintOptions.relativeVPos;
        constraintOptions['relativeVPos.x'] = 'relativeVPos.x';
        constraintOptions['relativeVPos.y'] = 'relativeVPos.y';
        delete constraintOptions.vertexSize;
        constraintOptions['vertexSize.x'] = 'vertexSize.x';
        constraintOptions['vertexSize.y'] = 'vertexSize.y';
        constraintOptions['vertexSize.w'] = 'vertexSize.w';
        constraintOptions['vertexSize.h'] = 'vertexSize.h';
        const constraintOptionsPH = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneObj(constraintOptions);
        for (key in constraintOptionsPH) {
            constraintOptionsPH[key] = 'Number';
        }
        MeasurableTemplateGenerator.constraintMap = constraintOptions;
        MeasurableTemplateGenerator.constraintPlaceholderMap = constraintOptionsPH;
        let datasets = [ResizableoptionsPH, DraggableOptionsPH, RotatableoptionsPH, constraintOptionsPH];
        let rulenames = [_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint];
        for (i = 0; i < datasets.length; i++) {
            datalist = document.createElement('datalist');
            document.body.appendChild(datalist);
            datalist.id = 'measurableList' + rulenames[i];
            console.log('datasets:', datasets);
            for (key in datasets[i]) {
                opt = document.createElement('option');
                datalist.appendChild(opt);
                // opt.value = datasets[i][key];
                opt.value = key;
            }
        }
    }
}
MeasurableTemplateGenerator.output = null;
class Rotatableoptions {
}
Rotatableoptions.degrees = 'degrees';
// static radians: string = 'radians';
Rotatableoptions.handle = 'handle'; //  internamente richiede come parametro un $('imageselector')... crea un elemento con quell'immagine. e appendilo al vertice con display: none per evitare di ricrearne uno ogni volta che crei un vertice, almeno così viene anche cancellato assieme al vertice. prova se l'url netto va bene lo stesso in overloading
Rotatableoptions.handleOffsetX = 'handleOffsetX';
Rotatableoptions.handleOffsetY = 'handleOffsetY'; // internamente è: handleOffset: { top: 0, left: 0 }
Rotatableoptions.rotationCenterOffsetX = 'rotationCenterOffsetX';
Rotatableoptions.rotationCenterOffsetY = 'rotationCenterOffsetY';
// internamente è: rotationCenterOffset: { top: 0, left: 0 } from the center of the element
Rotatableoptions.step = 'step'; // internamente ha "snap = boolean" e step = number, setta anche snap = true se trovi step come attributo measur-rotatable.
Rotatableoptions.transforms = 'transforms'; // non chiaro neanche negli esempi demo. googla.
Rotatableoptions.wheelRotate = 'wheelRotate'; // NB: non previene lo scroll della pagina come azione default.
Rotatableoptions.onRotating = 'onRotating'; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.
Rotatableoptions.onRotationStart = 'onRotationStart'; // in realtà è "start"
Rotatableoptions.onRotationEnd = 'onRotationEnd'; // in realtà è "stop"
//if the placeholder value is a choice of literals, the first literal is the default value. UPPERCASED, CamelCased and (parenthesized) words are not literals. Those values are not dynamic and are evaluated only once.
class Resizableoptions {
}
Resizableoptions.alsoResize = 'alsoResize';
Resizableoptions.animate = 'animate';
Resizableoptions.animateDuration = 'animateDuration';
Resizableoptions.animateEasing = 'animateEasing';
Resizableoptions.aspectRatio = 'aspectRatio';
Resizableoptions.autoHide = 'autoHide';
Resizableoptions.cancel = 'cancel';
Resizableoptions.classes = 'classes';
Resizableoptions.containment = 'containment';
Resizableoptions.delay = 'delay';
Resizableoptions.disabled = 'disabled';
Resizableoptions.distance = 'distance';
Resizableoptions.ghost = 'ghost';
Resizableoptions.grid = 'grid';
Resizableoptions.helper = 'helper';
Resizableoptions.maxHeight = 'maxHeight';
Resizableoptions.maxWidth = 'maxWidth';
Resizableoptions.minHeight = 'minHeight';
Resizableoptions.minWidth = 'minWidth';
// Methods
// destroy()
Resizableoptions.enabled = 'enabled'; // $var.resizable('disable'); or .resizable( "enable" );
// instance(); only useful as return value on javascript
// .resizable('option',{key', 'optionname') return the current option or a key-value object with all options or .resizable('option', {key: value}) setta opzioni.
// .resizable('widget') return $(resizable element)
Resizableoptions.create = 'create'; // .resizable('create', functioncallback);
Resizableoptions.resizing = 'resizing';
Resizableoptions.resizeStart = 'resizeStart';
Resizableoptions.resizeStop = 'resizeStop';
class Draggableoptions {
}
Draggableoptions.addClasses = 'addClasses';
Draggableoptions.appendTo = 'appendTo';
Draggableoptions.axis = 'axis'; // actually "x, y" happens when you input "false"
Draggableoptions.cancel = 'cancel';
Draggableoptions.classes = 'classes';
Draggableoptions.connectToSortable = 'connectToSortable';
Draggableoptions.containment = 'containment';
Draggableoptions.cursor = 'cursor'; // todo: setta default: quadriarrow (crosshair?)
Draggableoptions.cursorAt = 'cursorAt';
Draggableoptions.delay = 'delay';
Draggableoptions.disabled = 'disabled';
Draggableoptions.distance = 'distance';
//todo: permetti di fare cambiamenti a run-time usando: chain -> optional export (dinamically rcalculate and replace content of _jquiDrag* attributes), second chain -> point to _jquiDragRule and execute things like in the example "Get or set the grid option, after initialization: ..."
Draggableoptions.grid = 'grid';
Draggableoptions.handle = 'handle';
Draggableoptions.helper = 'helper';
Draggableoptions.iframeFix = 'iframeFix';
Draggableoptions.opacity = 'opacity';
Draggableoptions.refreshPositions = 'refreshPositions';
// todo: droppable
Draggableoptions.revert = 'revert';
Draggableoptions.revertDuration = 'revertDuration';
Draggableoptions.scope = 'scope';
Draggableoptions.scroll = 'scroll'; //todo: devi fare lo scroll quando trascini un vertice out of visible graph boundary.
Draggableoptions.scrollSensitivity = 'scrollSensitivity'; //Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.
Draggableoptions.scrollSpeed = 'scrollSpeed';
Draggableoptions.snap = 'snap';
Draggableoptions.snapMode = 'snapMode';
Draggableoptions.snapTolerance = 'snapTolerance';
Draggableoptions.stack = 'stack';
Draggableoptions.zIndex = 'zIndex';
// Methods
Draggableoptions.enabled = 'enabled'; // actually it is: .droppable( "enable" / "disable")
Draggableoptions.dragging = 'dragging';
Draggableoptions.dragStart = 'dragStart';
Draggableoptions.dragStop = 'dragStop';
class RotatableoptionsPH {
}
RotatableoptionsPH.degrees = 'false | number';
RotatableoptionsPH.radians = 'false | number';
RotatableoptionsPH.handle = 'image url'; // internamente richiede come parametro un $('imageselector')... crea un elemento con quell'immagine. e appendilo al vertice con display: none per evitare di ricrearne uno ogni volta che crei un vertice, almeno così viene anche cancellato assieme al vertice. prova se l'url netto va bene lo stesso in overloading
RotatableoptionsPH.handleOffsetX = 'width / 2';
RotatableoptionsPH.handleOffsetY = '-20'; // internamente è: handleOffset: { top: 0, left: 0 }
RotatableoptionsPH.rotationCenterOffsetX = 'width / 2';
RotatableoptionsPH.rotationCenterOffsetY = 'height / 2';
// internamente è: rotationCenterOffset: { top: 0, left: 0 } from the center of the element
RotatableoptionsPH.step = 'degree'; // internamente ha "snap = boolean" e step = number, setta anche snap = true se trovi step come attributo measur-rotatable.
RotatableoptionsPH.transforms = 'null | {scaleY: 2}'; // non chiaro neanche negli esempi demo. googla.
RotatableoptionsPH.wheelRotate = 'false'; // NB: non previene lo scroll della pagina come azione default.
RotatableoptionsPH.onRotating = 'function(event, ui) { ... }'; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.
RotatableoptionsPH.onRotationStart = 'function(event, ui) { ... }'; // in realtà è "start"
RotatableoptionsPH.onRotationEnd = 'function(event, ui) { ... }'; // in realtà è "stop"
//if the placeholder value is a choice of literals, the first literal is the default value. UPPERCASED, CamelCased and (parenthesized) words are not literals. Those values are not dynamic and are evaluated only once.
class ResizableoptionsPH {
}
ResizableoptionsPH.alsoResize = 'Selector | Element | jQuery';
ResizableoptionsPH.animate = 'Boolean';
ResizableoptionsPH.animateDuration = 'slow | fast | msec number';
ResizableoptionsPH.animateEasing = 'swing | api.jqueryui.com/easings';
ResizableoptionsPH.aspectRatio = 'Boolean | Number';
ResizableoptionsPH.autoHide = 'Boolean';
ResizableoptionsPH.cancel = 'Selector';
ResizableoptionsPH.classes = 'Object (see jQUI website)';
ResizableoptionsPH.containment = 'Selector | Element | parent | document';
ResizableoptionsPH.delay = 'Number';
ResizableoptionsPH.disabled = 'Boolean';
ResizableoptionsPH.distance = 'Number (tolerance)';
ResizableoptionsPH.ghost = 'Boolean';
ResizableoptionsPH.grid = '[x: 0, y: 0]';
ResizableoptionsPH.helper = 'Classname';
ResizableoptionsPH.maxHeight = 'Number';
ResizableoptionsPH.maxWidth = 'Number';
ResizableoptionsPH.minHeight = 'Number';
ResizableoptionsPH.minWidth = 'Number';
// Methods
// destroy()
ResizableoptionsPH.enabled = 'true | false'; // $var.resizable('disable'); or .resizable( "enable" );
// instance(); only useful as return value on javascript
// .resizable('option', 'optionname') return the current option or a key-value object with all options or .resizable('option', {key: value}) setta opzioni.
// .resizable('widget') return $(resizable element)
// create: string = ''; .resizable('create', functioncallback);
ResizableoptionsPH.resizing = 'function(event, ui){...}';
ResizableoptionsPH.resizeStart = 'function(event, ui){...}';
ResizableoptionsPH.resizeStop = 'function(event, ui){...}';
class DraggableOptionsPH {
}
DraggableOptionsPH.addClasses = 'false | tr ue';
DraggableOptionsPH.appendTo = 'Selector | Element | jQuery | parent';
DraggableOptionsPH.axis = 'x, y | x | y'; // actually "x, y" happens when you input "false"
DraggableOptionsPH.cancel = 'Selector';
DraggableOptionsPH.classes = 'Object (see jQUI website)';
DraggableOptionsPH.connectToSortable = 'Selector';
DraggableOptionsPH.containment = 'Selector | SizeArray | parent | document | window';
DraggableOptionsPH.cursor = 'CSSCursor'; // todo: setta default: quadriarrow (crosshair?)
DraggableOptionsPH.cursorAt = '{top, left} | {right, bottom} | {top, right} | {bottom, left}';
DraggableOptionsPH.delay = 'Number (msec)';
DraggableOptionsPH.disabled = 'Boolean';
DraggableOptionsPH.distance = 'Number (pixel tolerance)';
//todo: permetti di fare cambiamenti a run-time usando: chain -> optional export (dinamically rcalculate and replace content of _jquiDrag* attributes), second chain -> point to _jquiDragRule and execute things like in the example "Get or set the grid option, after initialization: ..."
DraggableOptionsPH.grid = '[x: 0, y: 0]';
DraggableOptionsPH.handle = 'Selector | Element';
DraggableOptionsPH.helper = 'original | clone | Function() => Element';
DraggableOptionsPH.iframeFix = 'Boolean | Selector';
DraggableOptionsPH.opacity = 'Number';
DraggableOptionsPH.refreshPositions = 'false | true';
//todo: droppable
DraggableOptionsPH.revert = 'false | true | valid | invalid | Function() => Boolean';
DraggableOptionsPH.revertDuration = 'Number (msec)';
DraggableOptionsPH.scope = 'String';
DraggableOptionsPH.scroll = 'true | false'; //todo: devi fare lo scroll quando trascini un vertice out of visible graph boundary.
DraggableOptionsPH.scrollSensitivity = 'Number (pixel)'; //Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.
DraggableOptionsPH.scrollSpeed = '20 | Number';
DraggableOptionsPH.snap = 'false | true | Selector';
DraggableOptionsPH.snapMode = 'both | inner | outer';
DraggableOptionsPH.snapTolerance = '20 | Number';
DraggableOptionsPH.stack = 'Selector';
DraggableOptionsPH.zIndex = 'Number';
// Methods
DraggableOptionsPH.enabled = 'true | false'; // actually it is: .droppable( "enable" / "disable")
DraggableOptionsPH.dragging = 'function(event, ui){...}';
DraggableOptionsPH.dragStart = 'function(event, ui){...}';
DraggableOptionsPH.dragStop = 'function(event, ui){...}';
/*
draggableui vertex:
  usa jqui draggable, lui ti aggiorna top, left, tu le trasformi in GraphPoint e setti:
  NO transform() che funzionerebbe su tutti
ma switch sulla taga e setta both: cx (al centro), x (al top-left)
  i vertici default diventano "measurable", con responsabilità dell'utente di inserire la classe se li vuole spostabili. default axis = both.*/


/***/ }),

/***/ "./src/common/Database.ts":
/*!********************************!*\
  !*** ./src/common/Database.ts ***!
  \********************************/
/*! exports provided: DatabaseMode, Database */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatabaseMode", function() { return DatabaseMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Database", function() { return Database; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Joiner */ "./src/common/Joiner.ts");


var DatabaseMode;
(function (DatabaseMode) {
    DatabaseMode[DatabaseMode["browserMemory"] = 0] = "browserMemory";
    DatabaseMode[DatabaseMode["Sql"] = 1] = "Sql";
    DatabaseMode[DatabaseMode["File"] = 2] = "File";
})(DatabaseMode || (DatabaseMode = {}));
class Database {
    constructor(mode = DatabaseMode.browserMemory, username = '_TestUser_', phpDbPageUrl = null, sqlurl = null, sqldb = null, sqlpass = null) {
        this.phpDbPageUrl = null;
        this.sqlurl = null;
        this.sqldb = null;
        this.sqluser = null;
        this.sqlpass = null;
        this.mode = null;
        this.mode = mode;
        this.sqluser = username;
        this.phpDbPageUrl = phpDbPageUrl;
        this.sqldb = sqldb;
        this.sqlpass = sqlpass;
        this.sqlurl = sqlurl;
    }
    writeKV(table, key, value) {
        switch (this.mode) {
            default:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected db mode:', this.mode);
                break;
            case DatabaseMode.browserMemory:
                key = this.sqluser + '_' + table + '_' + key;
                localStorage.setItem(key, value);
                break;
            case DatabaseMode.Sql:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'update sql: todo');
                break;
            case DatabaseMode.File:
                key = this.sqluser + '_' + table + '_' + key;
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'download file: todo');
                break;
        }
    }
    readKV(table, key) {
        switch (this.mode) {
            default:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected db mode:', this.mode);
                break;
            case DatabaseMode.browserMemory:
                key = this.sqluser + '_' + table + '_' + key;
                return localStorage.getItem(key);
            case DatabaseMode.Sql:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'select sql: todo');
                break;
            case DatabaseMode.File:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'readKV: cannot be executed with savemode = File');
                break;
        }
    }
}
Database.db = new Database();


/***/ }),

/***/ "./src/common/Joiner.ts":
/*!******************************!*\
  !*** ./src/common/Joiner.ts ***!
  \******************************/
/*! exports provided: ansiUp, StringSimilarity, $, $b, prjson2xml, prxml2json, ViewHtmlSettings, ViewPoint, ViewRule, EdgeViewRule, LocalStorage, ModelPiece, Info, ModelNone, ECoreEnum, EcoreLiteral, ECoreParameter, ECoreOperation, ECoreAttribute, ECoreReference, ECoreClass, ECorePackage, ECoreRoot, ECoreAnnotation, ECoreDetail, XMIModel, IModel, ShortAttribETypes, U, Json, AttribETypes, InputPopup, DetectZoom, Dictionary, IPoint, Point, GraphPoint, ISize, Size, GraphSize, myFileReader, FocusHistoryEntry, FileReadTypeEnum, EvalOutput, MeasurableRuleParts, Measurable, MeasurableEvalContext, measurableRules, MeasurableRuleLists, MeasurableOperators, Status, IGraph, ViewPointShell, IVertex, IField, ISidebar, IEdge, EdgeModes, ExtEdge, EdgePoint, EdgePointFittizio, CursorFollowerEP, EdgeStyle, EdgePointStyle, PropertyBarr, TopBar, StyleEditor, SaveListEntry, MyConsole, MetaMetaModel, MetaModel, Model, IPackage, M3Package, M2Package, MPackage, IClassifier, IClass, M3Class, M2Class, MClass, EEnum, Type, EType, Typedd, ELiteral, IFeature, IReference, M3Reference, M2Reference, MReference, IAttribute, M3Attribute, M2Attribute, MAttribute, EAnnotation, EAnnotationDetail, Database, DamContextMenuComponent, EOperation, OperationVisibility, EParameter, MeasurableTemplateGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ansiUp", function() { return ansiUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StringSimilarity", function() { return StringSimilarity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$", function() { return $; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$b", function() { return $b; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prjson2xml", function() { return prjson2xml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prxml2json", function() { return prxml2json; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var ansi_up__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ansi_up */ "./node_modules/ansi_up/ansi_up.js");
/* harmony import */ var ansi_up__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ansi_up__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_StringSimilarity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/StringSimilarity.js */ "./src/common/StringSimilarity.js");
/* harmony import */ var jqueryui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jqueryui */ "./node_modules/jqueryui/jquery-ui.js");
/* harmony import */ var jqueryui__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jqueryui__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap/dist/js/bootstrap.js");
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(bootstrap__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_prj_json2xml_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/prj_json2xml.js */ "./src/common/prj_json2xml.js");
/* harmony import */ var _common_prj_xml2json_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/prj_xml2json.js */ "./src/common/prj_xml2json.js");
/* harmony import */ var _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../GuiStyles/viewpoint */ "./src/GuiStyles/viewpoint.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewHtmlSettings", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_8__["ViewHtmlSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewPoint", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_8__["ViewPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewRule", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_8__["ViewRule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgeViewRule", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_8__["EdgeViewRule"]; });

/* harmony import */ var _Database_LocalStorage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Database/LocalStorage */ "./src/Database/LocalStorage.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LocalStorage", function() { return _Database_LocalStorage__WEBPACK_IMPORTED_MODULE_9__["LocalStorage"]; });

/* harmony import */ var _Model_modelPiece__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Model/modelPiece */ "./src/Model/modelPiece.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModelPiece", function() { return _Model_modelPiece__WEBPACK_IMPORTED_MODULE_10__["ModelPiece"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return _Model_modelPiece__WEBPACK_IMPORTED_MODULE_10__["Info"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModelNone", function() { return _Model_modelPiece__WEBPACK_IMPORTED_MODULE_10__["ModelNone"]; });

/* harmony import */ var _Model_iModel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Model/iModel */ "./src/Model/iModel.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreEnum", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreEnum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EcoreLiteral", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["EcoreLiteral"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreParameter", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreOperation", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreOperation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreAttribute", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreAttribute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreReference", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreReference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreClass", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECorePackage", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECorePackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreRoot", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreAnnotation", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreAnnotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreDetail", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["ECoreDetail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XMIModel", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["XMIModel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IModel", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_11__["IModel"]; });

/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./util */ "./src/common/util.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShortAttribETypes", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["ShortAttribETypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "U", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["U"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Json", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["Json"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttribETypes", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["AttribETypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InputPopup", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["InputPopup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DetectZoom", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["DetectZoom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["Dictionary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IPoint", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["IPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["Point"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GraphPoint", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["GraphPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ISize", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["ISize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GraphSize", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["GraphSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "myFileReader", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["myFileReader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FocusHistoryEntry", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["FocusHistoryEntry"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FileReadTypeEnum", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["FileReadTypeEnum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvalOutput", function() { return _util__WEBPACK_IMPORTED_MODULE_12__["EvalOutput"]; });

/* harmony import */ var _measurable__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./measurable */ "./src/common/measurable.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleParts", function() { return _measurable__WEBPACK_IMPORTED_MODULE_13__["MeasurableRuleParts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Measurable", function() { return _measurable__WEBPACK_IMPORTED_MODULE_13__["Measurable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableEvalContext", function() { return _measurable__WEBPACK_IMPORTED_MODULE_13__["MeasurableEvalContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measurableRules", function() { return _measurable__WEBPACK_IMPORTED_MODULE_13__["measurableRules"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleLists", function() { return _measurable__WEBPACK_IMPORTED_MODULE_13__["MeasurableRuleLists"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableOperators", function() { return _measurable__WEBPACK_IMPORTED_MODULE_13__["MeasurableOperators"]; });

/* harmony import */ var _src_app_app_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../src/app/app.module */ "./src/app/app.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Status", function() { return _src_app_app_module__WEBPACK_IMPORTED_MODULE_14__["Status"]; });

/* harmony import */ var _guiElements_mGraph_iGraph__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../guiElements/mGraph/iGraph */ "./src/guiElements/mGraph/iGraph.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IGraph", function() { return _guiElements_mGraph_iGraph__WEBPACK_IMPORTED_MODULE_15__["IGraph"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewPointShell", function() { return _guiElements_mGraph_iGraph__WEBPACK_IMPORTED_MODULE_15__["ViewPointShell"]; });

/* harmony import */ var _guiElements_mGraph_Vertex_iVertex__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../guiElements/mGraph/Vertex/iVertex */ "./src/guiElements/mGraph/Vertex/iVertex.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IVertex", function() { return _guiElements_mGraph_Vertex_iVertex__WEBPACK_IMPORTED_MODULE_16__["IVertex"]; });

/* harmony import */ var _guiElements_mGraph_Field_iField__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../guiElements/mGraph/Field/iField */ "./src/guiElements/mGraph/Field/iField.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IField", function() { return _guiElements_mGraph_Field_iField__WEBPACK_IMPORTED_MODULE_17__["IField"]; });

/* harmony import */ var _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../guiElements/isidebar/isidebar.component */ "./src/guiElements/isidebar/isidebar.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ISidebar", function() { return _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_18__["ISidebar"]; });

/* harmony import */ var _guiElements_mGraph_Edge_iEdge__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/iEdge */ "./src/guiElements/mGraph/Edge/iEdge.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IEdge", function() { return _guiElements_mGraph_Edge_iEdge__WEBPACK_IMPORTED_MODULE_19__["IEdge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgeModes", function() { return _guiElements_mGraph_Edge_iEdge__WEBPACK_IMPORTED_MODULE_19__["EdgeModes"]; });

/* harmony import */ var _guiElements_mGraph_Edge_ExtEdge__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/ExtEdge */ "./src/guiElements/mGraph/Edge/ExtEdge.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtEdge", function() { return _guiElements_mGraph_Edge_ExtEdge__WEBPACK_IMPORTED_MODULE_20__["ExtEdge"]; });

/* harmony import */ var _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/EdgePoint */ "./src/guiElements/mGraph/Edge/EdgePoint.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgePoint", function() { return _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_21__["EdgePoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgePointFittizio", function() { return _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_21__["EdgePointFittizio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CursorFollowerEP", function() { return _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_21__["CursorFollowerEP"]; });

/* harmony import */ var _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/edgeStyle */ "./src/guiElements/mGraph/Edge/edgeStyle.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgeStyle", function() { return _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_22__["EdgeStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgePointStyle", function() { return _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_22__["EdgePointStyle"]; });

/* harmony import */ var _guiElements_propertyBar_propertyBar__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../guiElements/propertyBar/propertyBar */ "./src/guiElements/propertyBar/propertyBar.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertyBarr", function() { return _guiElements_propertyBar_propertyBar__WEBPACK_IMPORTED_MODULE_23__["PropertyBarr"]; });

/* harmony import */ var _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../guiElements/top-bar/top-bar.component */ "./src/guiElements/top-bar/top-bar.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TopBar", function() { return _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_24__["TopBar"]; });

/* harmony import */ var _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../guiElements/style-editor/style-editor.component */ "./src/guiElements/style-editor/style-editor.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StyleEditor", function() { return _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_25__["StyleEditor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveListEntry", function() { return _Database_LocalStorage__WEBPACK_IMPORTED_MODULE_9__["SaveListEntry"]; });

/* harmony import */ var _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../guiElements/console/console.component */ "./src/guiElements/console/console.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MyConsole", function() { return _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_26__["MyConsole"]; });

/* harmony import */ var _Model_MetaMetaModel__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../Model/MetaMetaModel */ "./src/Model/MetaMetaModel.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaMetaModel", function() { return _Model_MetaMetaModel__WEBPACK_IMPORTED_MODULE_27__["MetaMetaModel"]; });

/* harmony import */ var _Model_MetaModel__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../Model/MetaModel */ "./src/Model/MetaModel.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaModel", function() { return _Model_MetaModel__WEBPACK_IMPORTED_MODULE_28__["MetaModel"]; });

/* harmony import */ var _Model_Model__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../Model/Model */ "./src/Model/Model.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Model", function() { return _Model_Model__WEBPACK_IMPORTED_MODULE_29__["Model"]; });

/* harmony import */ var _Model_mPackage_iPackage__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../Model/mPackage/iPackage */ "./src/Model/mPackage/iPackage.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IPackage", function() { return _Model_mPackage_iPackage__WEBPACK_IMPORTED_MODULE_30__["IPackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Package", function() { return _Model_mPackage_iPackage__WEBPACK_IMPORTED_MODULE_30__["M3Package"]; });

/* harmony import */ var _Model_mPackage_MMPackage__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../Model/mPackage/MMPackage */ "./src/Model/mPackage/MMPackage.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Package", function() { return _Model_mPackage_MMPackage__WEBPACK_IMPORTED_MODULE_31__["M2Package"]; });

/* harmony import */ var _Model_mPackage_MPackage_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../Model/mPackage/MPackage.component */ "./src/Model/mPackage/MPackage.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MPackage", function() { return _Model_mPackage_MPackage_component__WEBPACK_IMPORTED_MODULE_32__["MPackage"]; });

/* harmony import */ var _mClass_IClassifier__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../mClass/IClassifier */ "./src/mClass/IClassifier.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IClassifier", function() { return _mClass_IClassifier__WEBPACK_IMPORTED_MODULE_33__["IClassifier"]; });

/* harmony import */ var _mClass_iClass__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../mClass/iClass */ "./src/mClass/iClass.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IClass", function() { return _mClass_iClass__WEBPACK_IMPORTED_MODULE_34__["IClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Class", function() { return _mClass_iClass__WEBPACK_IMPORTED_MODULE_34__["M3Class"]; });

/* harmony import */ var _mClass_m2Class__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../mClass/m2Class */ "./src/mClass/m2Class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Class", function() { return _mClass_m2Class__WEBPACK_IMPORTED_MODULE_35__["M2Class"]; });

/* harmony import */ var _mClass_MClass__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../mClass/MClass */ "./src/mClass/MClass.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MClass", function() { return _mClass_MClass__WEBPACK_IMPORTED_MODULE_36__["MClass"]; });

/* harmony import */ var _mClass_EEnum__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../mClass/EEnum */ "./src/mClass/EEnum.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EEnum", function() { return _mClass_EEnum__WEBPACK_IMPORTED_MODULE_37__["EEnum"]; });

/* harmony import */ var _mClass_classChild_Type__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../mClass/classChild/Type */ "./src/mClass/classChild/Type.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return _mClass_classChild_Type__WEBPACK_IMPORTED_MODULE_38__["Type"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EType", function() { return _mClass_classChild_Type__WEBPACK_IMPORTED_MODULE_38__["EType"]; });

/* harmony import */ var _mClass_classChild_Typedd__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../mClass/classChild/Typedd */ "./src/mClass/classChild/Typedd.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Typedd", function() { return _mClass_classChild_Typedd__WEBPACK_IMPORTED_MODULE_39__["Typedd"]; });

/* harmony import */ var _mClass_classChild_ELiteral__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../mClass/classChild/ELiteral */ "./src/mClass/classChild/ELiteral.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ELiteral", function() { return _mClass_classChild_ELiteral__WEBPACK_IMPORTED_MODULE_40__["ELiteral"]; });

/* harmony import */ var _mClass_classChild_Features_iFeature__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../mClass/classChild/Features/iFeature */ "./src/mClass/classChild/Features/iFeature.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IFeature", function() { return _mClass_classChild_Features_iFeature__WEBPACK_IMPORTED_MODULE_41__["IFeature"]; });

/* harmony import */ var _mClass_classChild_Features_References_iReference__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../mClass/classChild/Features/References/iReference */ "./src/mClass/classChild/Features/References/iReference.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IReference", function() { return _mClass_classChild_Features_References_iReference__WEBPACK_IMPORTED_MODULE_42__["IReference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Reference", function() { return _mClass_classChild_Features_References_iReference__WEBPACK_IMPORTED_MODULE_42__["M3Reference"]; });

/* harmony import */ var _mClass_classChild_Features_References_M2Reference__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../mClass/classChild/Features/References/M2Reference */ "./src/mClass/classChild/Features/References/M2Reference.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Reference", function() { return _mClass_classChild_Features_References_M2Reference__WEBPACK_IMPORTED_MODULE_43__["M2Reference"]; });

/* harmony import */ var _mClass_classChild_Features_References_MReference__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../mClass/classChild/Features/References/MReference */ "./src/mClass/classChild/Features/References/MReference.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MReference", function() { return _mClass_classChild_Features_References_MReference__WEBPACK_IMPORTED_MODULE_44__["MReference"]; });

/* harmony import */ var _mClass_classChild_Features_Attributes_iAttribute__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../mClass/classChild/Features/Attributes/iAttribute */ "./src/mClass/classChild/Features/Attributes/iAttribute.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IAttribute", function() { return _mClass_classChild_Features_Attributes_iAttribute__WEBPACK_IMPORTED_MODULE_45__["IAttribute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Attribute", function() { return _mClass_classChild_Features_Attributes_iAttribute__WEBPACK_IMPORTED_MODULE_45__["M3Attribute"]; });

/* harmony import */ var _mClass_classChild_Features_Attributes_mmAttribute__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../mClass/classChild/Features/Attributes/mmAttribute */ "./src/mClass/classChild/Features/Attributes/mmAttribute.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Attribute", function() { return _mClass_classChild_Features_Attributes_mmAttribute__WEBPACK_IMPORTED_MODULE_46__["M2Attribute"]; });

/* harmony import */ var _mClass_classChild_Features_Attributes_MAttribute__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../mClass/classChild/Features/Attributes/MAttribute */ "./src/mClass/classChild/Features/Attributes/MAttribute.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAttribute", function() { return _mClass_classChild_Features_Attributes_MAttribute__WEBPACK_IMPORTED_MODULE_47__["MAttribute"]; });

/* harmony import */ var _Model_EAnnotation__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../Model/EAnnotation */ "./src/Model/EAnnotation.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EAnnotation", function() { return _Model_EAnnotation__WEBPACK_IMPORTED_MODULE_48__["EAnnotation"]; });

/* harmony import */ var _Model_EAnnotationDetail__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../Model/EAnnotationDetail */ "./src/Model/EAnnotationDetail.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EAnnotationDetail", function() { return _Model_EAnnotationDetail__WEBPACK_IMPORTED_MODULE_49__["EAnnotationDetail"]; });

/* harmony import */ var _common_Database__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../common/Database */ "./src/common/Database.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Database", function() { return _common_Database__WEBPACK_IMPORTED_MODULE_50__["Database"]; });

/* harmony import */ var _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../guiElements/dam-context-menu/dam-context-menu.component */ "./src/guiElements/dam-context-menu/dam-context-menu.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DamContextMenuComponent", function() { return _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_51__["DamContextMenuComponent"]; });

/* harmony import */ var _mClass_classChild_Operations_eOperation__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../mClass/classChild/Operations/eOperation */ "./src/mClass/classChild/Operations/eOperation.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EOperation", function() { return _mClass_classChild_Operations_eOperation__WEBPACK_IMPORTED_MODULE_52__["EOperation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OperationVisibility", function() { return _mClass_classChild_Operations_eOperation__WEBPACK_IMPORTED_MODULE_52__["OperationVisibility"]; });

/* harmony import */ var _mClass_classChild_Operations_eParameter__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../mClass/classChild/Operations/eParameter */ "./src/mClass/classChild/Operations/eParameter.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EParameter", function() { return _mClass_classChild_Operations_eParameter__WEBPACK_IMPORTED_MODULE_53__["EParameter"]; });

/* harmony import */ var _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../app/measurabletemplate/measurabletemplate.component */ "./src/app/measurabletemplate/measurabletemplate.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableTemplateGenerator", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_54__["MeasurableTemplateGenerator"]; });



const ansiUp = new ansi_up__WEBPACK_IMPORTED_MODULE_1___default.a(); // https://github.com/drudru/ansi_up // ansi color formatter.

let StringSimilarity = _common_StringSimilarity_js__WEBPACK_IMPORTED_MODULE_2__;

// import "jquery";

const $ = window['' + '$'] = jquery__WEBPACK_IMPORTED_MODULE_4__;

const $b = bootstrap__WEBPACK_IMPORTED_MODULE_5__;
/*
import * as JQueryUII        from '../../node_modules/jqueryui';
export const JQueryUI: JQueryUII = JQueryUII.JQueryUI;*/


const prjson2xml = _common_prj_json2xml_js__WEBPACK_IMPORTED_MODULE_6__;
const prxml2json = _common_prj_xml2json_js__WEBPACK_IMPORTED_MODULE_7__;
/*export const $$$: JQueryStatic = require('jquery-ui');
export const $ui: JQueryStatic = $$$;*/



/*new*/ 














/*neww*/ 
// export {Options} from '../Save/Save';
 /*
export {IModel, ECoreRoot, ECorePackage, ECoreClass, ECoreReference,
  ECoreAttribute, ECoreParameter, ECoreOperation, XMIModel, EcoreLiteral, ECoreEnum } from '../Model/iModel';*/
// export {IModel} from '../Model/iModel';























/*new*/ 




// import {IClassifier} from '../mClass/IClassifier';
/*
// @ts-ignore
let enc = he.encode;
// @ts-ignore
let dec = he.decode;
// @ts-ignore
let esc = he.escape;
// @ts-ignore
let unesc = he.unescape;
// @ts-ignore
let ver = he.version;
export const HE = {encode: enc, decode: dec, escape: esc, unescape: unesc, version: ver};*/
// NB: se li esporti e usi come identificatori/costruttori nel codice, typescript li collega da una fantomatica user-class con nome __CambiatoTipoCosì
// e pur esistendo la classe A, lui cerca __A e dice che non esiste.
// soluzione: attiva quando scrivi codice per abilitare il type check, disabilita in produzione.
/*
type ResizeObserverSize = unknown;
declare type ResizeObserverEntry = {
  readonly target: Element;
  readonly contentRect: DOMRectReadOnly;
  readonly borderBoxSize: ResizeObserverSize[]; // type was "readonly attribute sequence<ResizeObserverSize>"
  readonly contentBoxSize: ResizeObserverSize[];
  devicePixelContentBoxSize: ResizeObserverSize[];
}
declare type ResizeObserverCallback = (entries: ResizeObserverEntry[], observer: ResizeObserverr) => unknown;
declare type ResizeObserverOptions = {box: 'content-box' | 'border-box'}
declare type ResizeObserverr = {
  constructor(callback: ResizeObserverCallback);
  observe(target: Element, options?: ResizeObserverOptions): void;
  unobserve(target: Element): void;
  disconnect(): void;
}
export let ResizeObserver: ResizeObserverr = window['' + 'ResizeObserver'];
*/


/***/ }),

/***/ "./src/common/StringSimilarity.js":
/*!****************************************!*\
  !*** ./src/common/StringSimilarity.js ***!
  \****************************************/
/*! exports provided: compareTwoStrings, findBestMatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareTwoStrings", function() { return compareTwoStrings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findBestMatch", function() { return findBestMatch; });

var compareTwoStrings = compareTwoStrings0;
var findBestMatch = findBestMatch0;
function compareTwoStrings0(first, second) {
	first = first.replace(/\s+/g, '')
	second = second.replace(/\s+/g, '')

	if (!first.length && !second.length) return 1;                   // if both are empty strings
	if (!first.length || !second.length) return 0;                   // if only one is empty string
	if (first === second) return 1;       							 // identical
	if (first.length === 1 && second.length === 1) return 0;         // both are 1-letter strings
	if (first.length < 2 || second.length < 2) return 0;			 // if either is a 1-letter string

	let firstBigrams = new Map();
	for (let i = 0; i < first.length - 1; i++) {
		const bigram = first.substr(i, 2);
		const count = firstBigrams.has(bigram)
			? firstBigrams.get(bigram) + 1
			: 1;

		firstBigrams.set(bigram, count);
	};

	let intersectionSize = 0;
	for (let i = 0; i < second.length - 1; i++) {
		const bigram = second.substr(i, 2);
		const count = firstBigrams.has(bigram)
			? firstBigrams.get(bigram)
			: 0;

		if (count > 0) {
			firstBigrams.set(bigram, count - 1);
			intersectionSize++;
		}
	}

	return (2.0 * intersectionSize) / (first.length + second.length - 2);
}

function findBestMatch0(mainString, targetStrings) {
	if (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');
	
	const ratings = [];
	let bestMatchIndex = 0;

	for (let i = 0; i < targetStrings.length; i++) {
		const currentTargetString = targetStrings[i];
		const currentRating = compareTwoStrings(mainString, currentTargetString)
		ratings.push({target: currentTargetString, rating: currentRating})
		if (currentRating > ratings[bestMatchIndex].rating) {
			bestMatchIndex = i
		}
	}
	
	
	const bestMatch = ratings[bestMatchIndex]
	
	return { ratings, bestMatch, bestMatchIndex };
}

function flattenDeep(arr) {
	return Array.isArray(arr) ? arr.reduce((a, b) => a.concat(flattenDeep(b)), []) : [arr];
}

function areArgsValid(mainString, targetStrings) {
	if (typeof mainString !== 'string') return false;
	if (!Array.isArray(targetStrings)) return false;
	if (!targetStrings.length) return false;
	if (targetStrings.find(s => typeof s !== 'string')) return false;
	return true;
}

function letterPairs(str) {
	const pairs = [];
	for (let i = 0, max = str.length - 1; i < max; i++) pairs[i] = str.substring(i, i + 2);
	return pairs;
}

function wordLetterPairs(str) {
	const pairs = str.toUpperCase().split(' ').map(letterPairs);
	return flattenDeep(pairs);
}


/***/ }),

/***/ "./src/common/measurable.ts":
/*!**********************************!*\
  !*** ./src/common/measurable.ts ***!
  \**********************************/
/*! exports provided: ConstraintLeftAdmitteds, MeasurableEvalContext, MeasurableOperators, MeasurableRuleParts, measurableRules, MeasurableRuleLists, RotatableOptions, Measurable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstraintLeftAdmitteds", function() { return ConstraintLeftAdmitteds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableEvalContext", function() { return MeasurableEvalContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableOperators", function() { return MeasurableOperators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleParts", function() { return MeasurableRuleParts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measurableRules", function() { return measurableRules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleLists", function() { return MeasurableRuleLists; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RotatableOptions", function() { return RotatableOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Measurable", function() { return Measurable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app/measurabletemplate/measurabletemplate.component */ "./src/app/measurabletemplate/measurabletemplate.component.ts");
// requires: U, jQuery, jQueryUI



/*
export class MeasurableArrays {rules: Attr[]; imports: Attr[]; exports: Attr[]; variables: Attr[];
  constraints: Attr[]; chain: Attr[]; chainFinal: Attr[]; dstyle: Attr[]; html: Element; e: Event; }*/
class ConstraintLeftAdmitteds {
}
class MeasurableEvalContext extends ConstraintLeftAdmitteds {
    constructor() {
        super(...arguments);
        this.setSize = (w = null, h = null) => {
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(w)) {
                this.width = w;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(h)) {
                this.height = h;
            }
        };
        this.setAbsoluteGPos = (x = null, y = null) => {
            const isVertex = MeasurableEvalContext.isVertex(this);
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteGPos.x = +x;
                if (isVertex) {
                    this.vertexSize.x = this.absoluteGPos.x;
                    this.relativeVPos.x = 0;
                    this.relativeVPos.y = 0;
                }
                else {
                    this.relativeVPos.x = this.absoluteGPos.x - this.vertexSize.x;
                }
                if (this.target) {
                    this.relativePos.x = this.absoluteGPos.x - this.target.absoluteGPos.x;
                }
                this.absoluteDocPos.x = this.graphSize.x + (this.absoluteGPos.x - this.graphScroll.x) / this.graphZoom.x;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteGPos.y = +y;
                if (isVertex) {
                    this.vertexSize.y = this.absoluteGPos.y;
                    this.relativeVPos.x = 0;
                    this.relativeVPos.y = 0;
                }
                else {
                    this.relativeVPos.y = this.absoluteGPos.y - this.vertexSize.y;
                }
                if (this.target) {
                    this.relativePos.y = this.absoluteGPos.y - this.target.absoluteGPos.y;
                }
                this.absoluteDocPos.y = this.graphSize.y + (this.absoluteGPos.y - this.graphScroll.y) / this.graphZoom.y;
            }
        };
        this.setRelativePos = (x = null, y = null) => {
            if (!this.target)
                return;
            const isVertex = MeasurableEvalContext.isVertex(this);
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteGPos.x = this.target.absoluteGPos.x + x;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteGPos.y = this.target.absoluteGPos.y + y;
            }
            this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
        };
        this.setRelativeVPos = (x = null, y = null) => {
            const isVertex = MeasurableEvalContext.isVertex(this);
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteGPos.x = this.vertexSize.x + x;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteGPos.y = this.vertexSize.y + y;
            }
            this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
        };
        this.setVertexSize = (x = null, y = null, w = null, h = null) => {
            const isVertex = MeasurableEvalContext.isVertex(this);
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(w))
                this.vertexSize.w = +w;
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(h))
                this.vertexSize.w = +h;
            if (isVertex) {
                this.setAbsoluteGPos(x, y);
            }
            else {
                if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                    this.absoluteGPos.x = x + this.relativeVPos.x;
                }
                if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                    this.absoluteGPos.y = y + this.relativeVPos.y;
                }
                this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
            }
        };
        // può servire a tenere qualcosa fisso al centro del grafo anche se faccio panning
        this.setAbsoluteDocPos = (x = null, y = null) => {
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteDocPos.x = x;
                this.absoluteGPos.x = this.graphScroll.x + this.graphZoom.x * (this.absoluteDocPos.x - this.graphSize.x);
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteDocPos.y = y;
                this.absoluteGPos.y = this.graphScroll.y + this.graphZoom.y * (this.absoluteDocPos.y - this.graphSize.y);
            }
            this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
        };
        this.setVertexX = (x = null) => { return this.setVertexSize(x, null, null, null); };
        this.setVertexY = (y = null) => { return this.setVertexSize(null, y, null, null); };
        this.setVertexW = (w = null) => { return this.setVertexSize(null, null, w, null); };
        this.setVertexH = (h = null) => { return this.setVertexSize(null, null, null, h); };
        this.setAbsoluteGPosX = (x = null) => { return this.setAbsoluteGPos(x, null); };
        this.setAbsoluteGPosY = (y = null) => { return this.setAbsoluteGPos(null, y); };
        this.setAbsoluteDocPosX = (x = null) => { return this.setAbsoluteDocPos(x, null); };
        this.setAbsoluteDocPosY = (y = null) => { return this.setAbsoluteDocPos(null, y); };
        this.setWidth = (w = null) => { this.setSize(w, null); };
        this.setHeight = (h = null) => { this.setSize(null, h); };
    }
    static isVertex(context) { return context.vertex.getHtmlRawForeign() === context.node; }
}
var MeasurableOperators;
(function (MeasurableOperators) {
    MeasurableOperators["eq"] = "=";
    MeasurableOperators["lt"] = "<";
    MeasurableOperators["lte"] = "<=";
    MeasurableOperators["gt"] = ">";
    MeasurableOperators["gte"] = ">=";
    MeasurableOperators["ne"] = "!=";
})(MeasurableOperators || (MeasurableOperators = {}));
/*
export class SizeVariables {
  static width: string = 'width';
  static height: string = 'height';
  static positionRelX: string = 'positionRelX';
  static positionRelY: string = 'positionRelY';
  static positionAbsX: string = 'positionAbsX';
  static positionAbsY: string = 'positionAbsY';
  static relativeTargetSizeX: string = 'relativeTargetSizeX';
  static relativeTargetSizeY: string = 'relativeTargetSizeY';
  static relativeTargetSizeW: string = 'relativeTargetSizeW';
  static relativeTargetSizeH: string = 'relativeTargetSizeH';
  static absoluteTargetSizeX: string = 'absoluteTargetSizeX';
  static absoluteTargetSizeY: string = 'absoluteTargetSizeY';
  static absoluteTargetSizeW: string = 'absoluteTargetSizeW';
  static absoluteTargetSizeH: string = 'absoluteTargetSizeH';
}
export class ValidImportLefts {
  static width: string = 'width';
  static height: string = 'height';
  static positionRelX: string = 'positionRelX';
  static positionRelY: string = 'positionRelY';
  static positionAbsX: string = 'positionAbsX';
  static positionAbsY: string = 'positionAbsY';
  static relativeTargetSizeX: string = 'relativeTargetSizeX';
  static relativeTargetSizeY: string = 'relativeTargetSizeY';
  static absoluteTargetSizeX: string = 'absoluteTargetSizeX';
  static absoluteTargetSizeY: string = 'absoluteTargetSizeY';
}*/
// le uso direttamente dentro la libreria U... // export enum constraintConditions { insideRect = 'insideRect', insideNode = 'insideNode', insidePolygon = 'insidePolygon', insideCircle = 'insideCircle'};
class MeasurableRuleParts {
    constructor(a, prefixendindex = null) {
        if (a === null)
            return; // empty constructor used by output clone var.
        this.attr = a;
        if (!prefixendindex) {
            const key = a.name.toLowerCase();
            let prefix;
            for (let key in measurableRules) {
                prefix = measurableRules['' + key];
                if (a.name.indexOf(prefix) === 0) {
                    prefixendindex = prefix.length;
                    break;
                }
            }
        }
        this.prefix = a.name.substr(0, prefixendindex);
        this.name = a.name.substr(prefixendindex);
        /*
        let gti = a.value.indexOf('>=');
        gti = gti == -1 ? Number.POSITIVE_INFINITY : gti;
        let eqi = a.value.indexOf('=');
        eqi = eqi == -1 ? Number.POSITIVE_INFINITY : eqi;
        let lti = a.value.indexOf('>=');
        lti = lti == -1 ? Number.POSITIVE_INFINITY : lti;
        const opindex: number = Math.min(gti, eqi, lti);
        if (opindex === Number.POSITIVE_INFINITY) return null;
        const rightindex = opindex + (eqi === opindex ? 1 : 2);
        this.output = new MeasurableRuleParts(null, null);
        this.left = a.value.substr(0, opindex);
        this.operator = a.value.substr(opindex, rightindex);
        this.right = a.value.substr(rightindex);*/
        const parts = a.value.split(Measurable.separator);
        this.left = parts.length > 1 ? parts[0] : '';
        this.operator = parts.length === 2 ? parts[1] : '';
        this.right = parts[parts.length - 1];
        this.target = a.ownerElement.getAttribute('relativeSelectorOf' + a.name).trim();
        this.target = this.target.length ? this.target : null;
        this.fallbackValue = null;
        let outputname = a.name.substr(1);
        this.outputAttr = this.attr.ownerElement.attributes.getNamedItem(outputname);
        if (!this.outputAttr) {
            this.attr.ownerElement.setAttribute(outputname, '');
            this.outputAttr = this.attr.ownerElement.attributes.getNamedItem(outputname);
        }
    }
    static staticinit() {
        const leftmap = {};
        const operatormap = {};
        console.log(leftmap, measurableRules.variable);
        console.log(leftmap, measurableRules.variable);
        leftmap[measurableRules.variable] = '^$';
        // leftmap[measurableRules.rule] = '^\$##.*(\.values|\.values\.[0-9]+)\$$'; poi diventata "^values\[[0-9]*\]$" poi cancellata
        leftmap[measurableRules.constraint] = '.*'; // should be '^(' + Object.values(SizeVariables).join('|') + ')$';
        leftmap[measurableRules.dynamicStyle] =
            leftmap[measurableRules.dynamicClass] = leftmap[measurableRules.variable];
        // CSS3 selector is not regular language https://stackoverflow.com/questions/12575845/what-is-the-regex-of-a-css-selector
        leftmap[measurableRules.export] =
            leftmap[measurableRules.onRefresh] =
                leftmap[measurableRules.onResizeStart] =
                    leftmap[measurableRules.whileResizing] =
                        leftmap[measurableRules.onResizeEnd] =
                            leftmap[measurableRules.onDragStart] =
                                leftmap[measurableRules.whileDragging] =
                                    leftmap[measurableRules.onDragEnd] = '.+';
        leftmap[measurableRules._jquiRes] = leftmap[measurableRules._jquiDra] = leftmap[measurableRules._jquiRot] = '\'.*';
        operatormap[measurableRules._jquiRes] = {};
        operatormap[measurableRules._jquiDra] = {};
        operatormap[measurableRules._jquiRot] = {};
        operatormap[measurableRules.variable] = {}; // none
        // operatormap[measurableRules.rule] = {};
        // operatormap[measurableRules.rule][MeasurableOperators.eq] = true;
        operatormap[measurableRules.export] = {};
        operatormap[measurableRules.export][MeasurableOperators.eq] = true;
        operatormap[measurableRules.constraint] = {};
        operatormap[measurableRules.constraint][MeasurableOperators.lte] = true;
        operatormap[measurableRules.constraint][MeasurableOperators.eq] = true;
        operatormap[measurableRules.constraint][MeasurableOperators.gte] = true;
        // se lo fai: constraint non lineare NON ha operatori, le cose tipo "insideNode" sono funzioni in U.
        // il valore di fallback è calcolato da un'attributo "fallbackOfLinearConstraint<name>"
        operatormap[measurableRules.dynamicClass] =
            operatormap[measurableRules.dynamicStyle] = operatormap[measurableRules.variable];
        operatormap[measurableRules.onResizeStart] =
            operatormap[measurableRules.whileResizing] =
                operatormap[measurableRules.onResizeEnd] =
                    operatormap[measurableRules.onDragStart] =
                        operatormap[measurableRules.whileDragging] =
                            operatormap[measurableRules.onDragEnd] = operatormap[measurableRules.export];
        MeasurableRuleParts.leftmap = leftmap;
        return MeasurableRuleParts.operatormap = operatormap;
    }
    static fillEvalContext(evalContext, node, targetquery, vertex = null) {
        let tmp;
        let tmpjq;
        let i;
        evalContext.node = node;
        evalContext.modelPiece = _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(evalContext.node);
        evalContext.vertex = vertex = (vertex || evalContext.modelPiece.getVertex());
        evalContext.graph = evalContext.vertex.owner;
        const size = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(evalContext.node);
        evalContext.width = tmp.w;
        evalContext.height = tmp.h;
        if (targetquery && (tmpjq = $(evalContext.graph.container).find(targetquery)).length) {
            evalContext.target = new MeasurableEvalContext();
            evalContext.target.node = tmpjq[0];
            MeasurableRuleParts.fillEvalContext(evalContext.target, evalContext.target.node, null, null);
        }
        evalContext.graphScroll = evalContext.graph.scroll;
        evalContext.graphZoom = evalContext.graph.zoom;
        evalContext.graphSize = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(evalContext.graph.container);
        evalContext.attributes = evalContext.node.attributes;
        evalContext.a = {};
        for (i = 0; i < evalContext.attributes.length; i++) {
            const attr = evalContext.attributes[i];
            evalContext.a[attr.name] = attr.value;
        }
        evalContext.setAbsoluteDocPos(tmp.x, tmp.y);
    }
    ;
    process(validatefirst = false, vertex = null, graph = null) {
        const out = new MeasurableRuleParts(null);
        let tmp;
        let i;
        let j;
        const isRoot = (this.attr.ownerElement === vertex.htmlg);
        const evalContext = new MeasurableEvalContext();
        if (validatefirst) {
            const validoperators = Object.keys(MeasurableRuleParts.operatormap[this.prefix]);
            if (validoperators.length > 0 && this.operator || !MeasurableRuleParts.operatormap[this.prefix][this.operator]) {
                out.operator = validoperators.length ? 'must be one of: ' + tmp.join(' ') : 'must be empty, found instead: ' + this.operator + '';
            }
            if (!new RegExp(MeasurableRuleParts.leftmap[this.prefix]).test(this.left)) {
                out.left = validoperators.length ? 'must be one of: ' + tmp.join(' ') : 'must be empty, found instead: ' + this.operator + '';
            }
            MeasurableRuleParts.fillEvalContext(evalContext, this.attr.ownerElement, this.target, vertex);
            const tmpev = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.right);
            out.right = tmpev.exception || tmpev.return;
            // do nothing, just report validation  and execution debugging results
            if (out.left || out.operator || tmpev.exception)
                return out;
        }
        MeasurableRuleParts.fillEvalContext(evalContext, this.attr.ownerElement, this.target, vertex);
        let evalOutput;
        if (this.prefix === measurableRules.console) {
            evalOutput = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["EvalOutput"]();
            try {
                evalOutput.return = _Joiner__WEBPACK_IMPORTED_MODULE_1__["MyConsole"].console.execCommand(this.right);
            }
            catch (e) {
                evalOutput.exception = e;
            }
        }
        else {
            evalOutput = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.right);
        }
        if (evalOutput.exception) {
            out.right = '' + evalOutput.exception;
            return out;
        }
        this.outputAttr.value = out.right = evalOutput.return;
        let attributeSelectorToken = '->';
        let pos;
        let selector;
        let attrSelector;
        let $targetsHtml;
        switch (this.prefix) {
            case measurableRules._jquiRes:
            case measurableRules._jquiDra:
            case measurableRules._jquiRot:
            default:
                out.prefix = 'invalid prefix or wrong execution time. jqui rules are executed at refresh time.';
                return out;
            // cancellata in favore di generic attribute che setta una variabile values[] nel contesto.
            // case measurableRules.rule: break;
            case measurableRules.console:
                // everything already did on exec before
                break;
            case measurableRules.bind:
                let newmp = evalOutput.return;
                if (!(newmp instanceof _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"])) {
                    out.right = 'returned value is not a ModelPiece.';
                }
                newmp.linkToLogic(this.attr.ownerElement);
                break;
            case measurableRules.variable: break;
            case measurableRules.onDragStart:
            case measurableRules.onDragEnd:
            case measurableRules.whileDragging:
            case measurableRules.whileResizing:
            case measurableRules.onResizeEnd:
            case measurableRules.onResizeStart:
            case measurableRules.onRefresh:
                pos = this.left.indexOf(attributeSelectorToken);
                const execCondition = evalOutput.return;
                if (!execCondition)
                    return;
                selector = (pos === -1 ? this.left : this.left.substr(0, pos)).trim();
                attrSelector = pos === -1 ? null : this.left.substr(pos + attributeSelectorToken.length);
                if (!graph) {
                    if (!vertex) {
                        vertex = _Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].getvertexByHtml(this.attr.ownerElement);
                    }
                    graph = vertex.owner;
                }
                $targetsHtml = selector.length ? $(graph.container).find(selector) : $(this.attr.ownerElement);
                if (attrSelector) {
                    const regexp = new RegExp(attrSelector.trim());
                    if (!regexp) {
                        out.left = 'invalid attribute selector, must be a regular expression';
                        return out;
                    }
                    for (i = 0; i < $targetsHtml.length; i++) {
                        const attrs = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getAttributesByRegex($targetsHtml[i], regexp);
                        for (j = 0; j < attrs.length; j++) {
                            new MeasurableRuleParts(attrs[j]).process(false, null, null);
                        }
                    }
                }
                else {
                    out.left = 'selector must contain an attribute selector starting with "->"';
                    return out;
                    /*
                    for (i = 0; i < $targetsHtml.length; i++) {
                      const ruleparts: MeasurableRuleParts[] = Measurable.getRuleList($targetsHtml[i]).all;
                      for (j = 0; j < ruleparts.length; j++) { ruleparts[j].process(false, null, null); }
                    }*/
                }
                break;
            case measurableRules.export:
                pos = this.left.indexOf(attributeSelectorToken);
                selector = pos === -1 ? this.left : this.left.substr(0, pos);
                attrSelector = pos === -1 ? null : this.left.substr(pos + attributeSelectorToken.length);
                if (!graph) {
                    if (!vertex) {
                        vertex = _Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].getvertexByHtml(this.attr.ownerElement);
                    }
                    graph = vertex.owner;
                }
                $targetsHtml = $(graph.container).find(selector);
                if (attrSelector) {
                    for (i = 0; i < $targetsHtml.length; i++) {
                        const attr = $targetsHtml[i].attributes.getNamedItem(attrSelector);
                        attr.value = evalOutput.return;
                    }
                }
                else {
                    for (i = 0; i < $targetsHtml.length; i++) {
                        $targetsHtml[i].innerHTML = evalOutput.return;
                    }
                }
                break;
            case measurableRules.dynamicClass:
                if (evalOutput.return !== '' + evalOutput.return)
                    return;
                const classes = (evalOutput.return + '').split(' ');
                for (i = 0; i < classes.length; i++) {
                    const cl = classes[i];
                    if (!cl[i].length)
                        continue;
                    if (cl[i][0] === '+') {
                        this.attr.ownerElement.classList.add(cl[i].substr(1));
                        continue;
                    }
                    if (cl[i][0] === '-') {
                        this.attr.ownerElement.classList.remove(cl[i].substr(1));
                        continue;
                    }
                    out.right = 'all class tokens must start with a plus (if inserting) or minus (if removing) sign.';
                    return out;
                }
                break;
            case measurableRules.dynamicStyle:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mergeStyles(this.attr.ownerElement, null, evalOutput.return);
                break;
            case measurableRules.constraint:
                let operator = this.operator + '' === '=' ? '==' : this.operator;
                let evret = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.left + operator + ' +' + evalOutput.return, false);
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(evret.exception, '_constraint should never fail here: ', evret);
                // just execute the assignment on the context
                if (!evret.return) {
                    _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.left + ' = +' + evalOutput.return, false);
                }
                break;
        }
        if (!evalOutput.outContext)
            return;
        const outcontext = evalOutput.outContext;
        evalContext.graph.setZoom(outcontext.graphZoom.x, outcontext.graphZoom.y);
        evalContext.graph.setScroll(outcontext.graphScroll.x, outcontext.graphScroll.y);
        // evalContext.graph.setGrid(outcontext.graphGrid.x, outcontext.graphGrid.y);
        const isVertex = (evalContext.vertex.getHtmlRawForeign() === evalContext.node);
        if (true) { // allow vertex modify outside the root rules?
            // evalContext.vertex.setSize(new GraphSize(outcontext.absoluteGPos.x, outcontext.absoluteGPos.y, outcontext.width, outcontext.height));
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'meastest');
            const dorefresh = this.prefix !== measurableRules.onRefresh;
            evalContext.vertex.setSize(evalContext.vertexSize, dorefresh, dorefresh);
        }
        else {}
    }
}
MeasurableRuleParts.operatormap = null;
var measurableRules;
(function (measurableRules) {
    // check when updating measurable rules: 1
    measurableRules["_jquiRes"] = "_jquiRes";
    measurableRules["_jquiDra"] = "_jquiDra";
    measurableRules["_jquiRot"] = "_jquiRot";
    measurableRules["console"] = "_console";
    measurableRules["bind"] = "_bind";
    measurableRules["variable"] = "_";
    measurableRules["export"] = "_export";
    measurableRules["constraint"] = "_constraint";
    measurableRules["dynamicClass"] = "_dclass";
    measurableRules["dynamicStyle"] = "_dstyle";
    measurableRules["onRefresh"] = "_onRefresh";
    measurableRules["onResizeStart"] = "_onResizeStart";
    measurableRules["whileResizing"] = "_whileResizing";
    measurableRules["onResizeEnd"] = "_onResizeEnd";
    measurableRules["onDragStart"] = "_onDragStart";
    measurableRules["whileDragging"] = "_whileDragging";
    measurableRules["onDragEnd"] = "_onDragEnd";
    measurableRules["onRotationStart"] = "_onRotationStart";
    measurableRules["whileRotating"] = "_whileRotating";
    measurableRules["onRotationEnd"] = "_onRotationEnd";
    // linearConstraint = '_linearConstraint',
    /*
    studia un miglioramento di rule per poter:
    settare una reference
    settare un valore
    gestire array di valori?
    soluzione: crea array values nel contesto.
    values[] = expressionArray
    values[i] = expressionSimpleValue
    ?
    come posso specificare più semplicemente se settare tutti i valori o solo uno senza usare una left-part?
    remind esisterà anche il comando console:
    set $something$ = value
    e devo renderlo significativamente più semplice di quello
  
  
    */
    // onMouseEnter = '_onMouseEnter',
    // onMouseLeave = '_onMouseLeave',
    // onFocus = '_onBlur',
    // onBlur = '_onBlur', it's ok to apply css changes here but not change in data, this should be handled by css only.ù
})(measurableRules || (measurableRules = {}));
class MeasurableRuleLists {
    constructor() {
        // check when updating measurable rules: 2
        this.all = [];
        this._ = [];
        this._jquiDra = [];
        this._jquiRes = [];
        this._jquiRot = [];
        this._console = [];
        this._bind = [];
        this._export = [];
        this._constraint = [];
        this._dclass = [];
        this._dstyle = [];
        this._onRefresh = [];
        this._onResizeStart = [];
        this._whileResizing = [];
        this._onResizeEnd = [];
        this._onDragStart = [];
        this._whileDragging = [];
        this._onDragEnd = [];
        this._onRotationStart = [];
        this._whileRotating = [];
        this._onRotationEnd = [];
    }
}
class RotatableOptions {
    constructor() {
        this.degrees = 0;
        this.handle = undefined;
        this.handleOffset = { top: 0, left: 0 };
        this.rotationCenterOffset = { top: 0, left: 0 };
        this.snap = false;
        this.step = undefined;
        this.transforms = undefined; // non chiaro neanche negli esempi demo. googla.
        this.wheelRotate = undefined; // NB: non previene lo scroll della pagina come azione default.
        this.rotate = undefined; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.
        this.start = undefined; // in realtà è "start"
        this.stop = undefined; // in realtà è "stop"
    }
}
class Measurable {
    static getRuleList(elem, rulefilter = null) {
        let i;
        let j;
        const rulefilterobj = rulefilter ? _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toDictionary(rulefilter) : {};
        let ret = new MeasurableRuleLists();
        let prefix;
        for (i = 0; i < elem.attributes.length; i++) {
            const attr = elem.attributes[i];
            for (let key in measurableRules) {
                // for (j = 0; j < Measurable.rulesListParsingOrder.length; j++) {
                prefix = measurableRules['' + key];
                if (!rulefilterobj[prefix])
                    continue;
                if (attr.name.indexOf(prefix) === 0) {
                    if (prefix === '_' && attr.name.indexOf('_ng') === 0)
                        continue;
                    ret.all.push(new MeasurableRuleParts(attr, prefix.length));
                    ret[prefix].push(new MeasurableRuleParts(attr, prefix.length));
                    break;
                }
            }
        }
        return ret;
    }
    // ################ oldies but good
    static measurableElementSetup($root, resizeConfig = null, rotConfig = null, dragConfig = null, v = null) {
        let arr = $root.find('.measurable').addBack('.measurable');
        const vroot = v ? v.getMeasurableNode() : null;
        for (let i = 0; i < arr.length; i++) {
            let h = arr[i];
            if (arr[i] === vroot) {
                Measurable.measurableElementSetupSingle(h, resizeConfig, rotConfig, dragConfig, v);
            }
            else
                Measurable.measurableElementSetupSingle(h, resizeConfig, rotConfig, dragConfig);
        }
    }
    // todo: devo importare rotatableOptions, ResizableOptions è la vra classe dichiarata dalla libreria jqui, non la mia. devo fare lo stesso con rotatable.
    static measurableElementSetupSingle(elem0, resConfig = null, rotConfig = null, draConfig = null, isvroot = null) {
        const elem = elem0;
        // apply resizableborder AND jquery.resize
        if (!elem.classList || !elem.classList.contains('measurable') || elem === document) {
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid measurable:', elem, !elem.classList, '||', !elem.classList.contains('measurable'));
            return;
        }
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].resizableBorderSetup(elem);
        if (!resConfig) {
            resConfig = {};
        }
        if (!rotConfig) {
            rotConfig = new RotatableOptions();
        }
        if (!draConfig) {
            draConfig = {};
        }
        let func = null;
        let attrval = null;
        let i;
        let arr = [];
        arr.push({ config: resConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].create, jquiname: 'create' });
        arr.push({ config: resConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].resizeStart, jquiname: 'start' });
        arr.push({ config: resConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].resizing, jquiname: 'resize' });
        arr.push({ config: resConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].resizeStop, jquiname: 'stop' });
        arr.push({ config: draConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"]['create'], jquiname: 'create' });
        arr.push({ config: draConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].dragStart, jquiname: 'start' });
        arr.push({ config: draConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].dragging, jquiname: 'resize' });
        arr.push({ config: draConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].dragStop, jquiname: 'stop' });
        arr.push({ config: rotConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Rotatableoptions"]['create'], jquiname: 'create' });
        arr.push({ config: rotConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Rotatableoptions"].onRotationStart, jquiname: 'start' });
        arr.push({ config: rotConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Rotatableoptions"].onRotating, jquiname: 'resize' });
        arr.push({ config: rotConfig, friendlyname: _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Rotatableoptions"].onRotationEnd, jquiname: 'stop' });
        resConfig.prefix = measurableRules._jquiRes;
        rotConfig.prefix = measurableRules._jquiRot;
        draConfig.prefix = measurableRules._jquiDra;
        for (i = 0; i < arr.length; i++) {
            attrval = elem.getAttribute(arr[i].config.prefix + arr[i].friendlyname).trim();
            if (!attrval)
                func = null;
            else
                try {
                    func = eval(attrval);
                    func = (e, ui) => { try {
                        func(e, ui);
                    }
                    catch (e) {
                        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'error evaluating' + arr[i].friendlyname + ':', e);
                    } };
                }
                catch (e) {
                    _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid function as argument of resize create');
                    func = null;
                }
            // se resConfig[triggername] non è settato, lo setto a func.
            arr[i].config[arr[i].jquiname] = arr[i].config[arr[i].jquiname] || func;
        }
        if (isvroot) {
            const oldconfig = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneObj(resConfig);
            resConfig.resize = (e, ui) => { isvroot.autosizeNew(true, true, measurableRules.whileResizing); oldconfig.resize(e, ui); };
            resConfig.start = (e, ui) => { isvroot.autosizeNew(true, true, measurableRules.onResizeStart); oldconfig.start(e, ui); };
            resConfig.stop = (e, ui) => { isvroot.autosizeNew(true, true, measurableRules.onResizeEnd); oldconfig.stop(e, ui); };
        }
        resConfig.resize = () => { resConfig.resize; };
        delete resConfig.prefix;
        delete rotConfig.prefix;
        delete draConfig.prefix;
        for (const jquikey in resConfig) {
            let friendlykey;
            switch (jquikey) {
                default:
                    friendlykey = jquikey;
                    let customparameterval = elem.getAttribute(measurableRules._jquiRes + friendlykey);
                    if (resConfig[jquikey] || !customparameterval) {
                        continue;
                    }
                    resConfig[jquikey] = customparameterval;
                    break;
                // case U.varname2(resConfig.disabled, resConfig): break;
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.create):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.start):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.stop):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.resize): break;
            }
        }
        for (const jquikey in rotConfig) {
            let friendlykey;
            switch (jquikey) {
                default:
                    friendlykey = jquikey;
                    let customparameterval = elem.getAttribute(measurableRules._jquiRot + friendlykey);
                    if (rotConfig[jquikey] || !customparameterval) {
                        continue;
                    }
                    rotConfig[jquikey] = customparameterval;
                    break;
                // case U.varname2(resConfig.disabled, resConfig): break;
                // case U.varname2(rotConfig, rotConfig.create):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(rotConfig, rotConfig.start):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(rotConfig, rotConfig.stop):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(rotConfig, rotConfig.rotate): break;
            }
        }
        for (const jquikey in draConfig) {
            let friendlykey;
            switch (jquikey) {
                default:
                    friendlykey = jquikey;
                    let customparameterval = elem.getAttribute(measurableRules._jquiDra + friendlykey);
                    if (draConfig[jquikey] || !customparameterval) {
                        continue;
                    }
                    draConfig[jquikey] = customparameterval;
                    break;
                case _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].axis:
                    if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(draConfig[jquikey] + '', ' ', '') === 'x,y')
                        draConfig[jquikey] = null;
                    break;
                // case U.varname2(resConfig.disabled, resConfig): break;
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.create):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.start):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.stop):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.drag): break;
            }
        }
        const $elem = $(elem);
        $elem.resizable(resConfig).draggable(draConfig); // .rotatable(rotConfig);
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'rotatable:', $elem.rotatable);
        /*
        if (resConfig.disabled) $elem.resizable('disable');
        if (rotConfig.disabled) $elem.rotatable('disable');
        if (draConfig.disabled) $elem.draggable('disable');*/
    }
}
Measurable.separator = '≔';


/***/ }),

/***/ "./src/common/prj_json2xml.js":
/*!************************************!*\
  !*** ./src/common/prj_json2xml.js ***!
  \************************************/
/*! exports provided: json2xml */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "json2xml", function() { return json2xml; });
/*	This work is licensed under Creative Commons GNU LGPL License.

	License: http://creativecommons.org/licenses/LGPL/2.1/
   Version: 0.9
	Author:  Stefan Goessner/2006
	Web:     http://goessner.net/ 
*/
function json2xml(o, tab/*string, string*/) {
   var toXml = function(v, name, ind) {
      var xml = "";
      if (v instanceof Array) {
         for (var i=0, n=v.length; i<n; i++)
            xml += ind + toXml(v[i], name, ind+"\t") + "\n";
      }
      else if (typeof(v) == "object") {
         var hasChild = false;
         xml += ind + "<" + name;
         for (var m in v) {
            if (m.charAt(0) == "@")
               xml += " " + m.substr(1) + "=\"" + v[m].toString() + "\"";
            else
               hasChild = true;
         }
         xml += hasChild ? ">" : "/>";
         if (hasChild) {
            for (var m in v) {
               if (m == "#text")
                  xml += v[m];
               else if (m == "#cdata")
                  xml += "<![CDATA[" + v[m] + "]]>";
               else if (m.charAt(0) != "@")
                  xml += toXml(v[m], m, ind+"\t");
            }
            xml += (xml.charAt(xml.length-1)=="\n"?ind:"") + "</" + name + ">";
         }
      }
      else {
         xml += ind + "<" + name + ">" + v.toString() +  "</" + name + ">";
      }
      return xml;
   }, xml="";
   for (var m in o)
      xml += toXml(o[m], m, "");
   return tab ? xml.replace(/\t/g, tab) : xml.replace(/\t|\n/g, "");
}


/***/ }),

/***/ "./src/common/prj_xml2json.js":
/*!************************************!*\
  !*** ./src/common/prj_xml2json.js ***!
  \************************************/
/*! exports provided: xml2json */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xml2json", function() { return xml2json; });
/*	This work is licensed under Creative Commons GNU LGPL License.

	License: http://creativecommons.org/licenses/LGPL/2.1/
   Version: 0.9
	Author:  Stefan Goessner/2006
	Web:     http://goessner.net/ 
*/
function xml2json(xml, tab = '    '/*XML_DOM, string*/) {
   var X = {
      toObj: function(xml) {
         var o = {};
         if (xml.nodeType==1) {   // element node ..
            if (xml.attributes.length)   // element with attributes  ..
               for (var i=0; i<xml.attributes.length; i++)
                  o["@"+xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue||"").toString();
            if (xml.firstChild) { // element has child nodes ..
               var textChild=0, cdataChild=0, hasElementChild=false;
               for (var n=xml.firstChild; n; n=n.nextSibling) {
                  if (n.nodeType==1) hasElementChild = true;
                  else if (n.nodeType==3 && n.nodeValue.match(/[^ \f\n\r\t\v]/)) textChild++; // non-whitespace text
                  else if (n.nodeType==4) cdataChild++; // cdata section node
               }
               if (hasElementChild) {
                  if (textChild < 2 && cdataChild < 2) { // structured element with evtl. a single text or/and cdata node ..
                     X.removeWhite(xml);
                     for (var n=xml.firstChild; n; n=n.nextSibling) {
                        if (n.nodeType == 3)  // text node
                           o["#text"] = X.escape(n.nodeValue);
                        else if (n.nodeType == 4)  // cdata node
                           o["#cdata"] = X.escape(n.nodeValue);
                        else if (o[n.nodeName]) {  // multiple occurence of element ..
                           if (o[n.nodeName] instanceof Array)
                              o[n.nodeName][o[n.nodeName].length] = X.toObj(n);
                           else
                              o[n.nodeName] = [o[n.nodeName], X.toObj(n)];
                        }
                        else  // first occurence of element..
                           o[n.nodeName] = X.toObj(n);
                     }
                  }
                  else { // mixed content
                     if (!xml.attributes.length)
                        o = X.escape(X.innerXml(xml));
                     else
                        o["#text"] = X.escape(X.innerXml(xml));
                  }
               }
               else if (textChild) { // pure text
                  if (!xml.attributes.length)
                     o = X.escape(X.innerXml(xml));
                  else
                     o["#text"] = X.escape(X.innerXml(xml));
               }
               else if (cdataChild) { // cdata
                  if (cdataChild > 1)
                     o = X.escape(X.innerXml(xml));
                  else
                     for (var n=xml.firstChild; n; n=n.nextSibling)
                        o["#cdata"] = X.escape(n.nodeValue);
               }
            }
            if (!xml.attributes.length && !xml.firstChild) o = null;
         }
         else if (xml.nodeType==9) { // document.node
            o = X.toObj(xml.documentElement);
         }
         else alert("unhandled node type: " + xml.nodeType);
         return o;
      },
      toJson: function(o, name, ind) {
         var json = name ? ("\""+name+"\"") : "";
         if (o instanceof Array) {
            for (var i=0,n=o.length; i<n; i++)
               o[i] = X.toJson(o[i], "", ind+"\t");
            json += (name?":[":"[") + (o.length > 1 ? ("\n"+ind+"\t"+o.join(",\n"+ind+"\t")+"\n"+ind) : o.join("")) + "]";
         }
         else if (o == null)
            json += (name&&":") + "null";
         else if (typeof(o) == "object") {
            var arr = [];
            for (var m in o)
               arr[arr.length] = X.toJson(o[m], m, ind+"\t");
            json += (name?":{":"{") + (arr.length > 1 ? ("\n"+ind+"\t"+arr.join(",\n"+ind+"\t")+"\n"+ind) : arr.join("")) + "}";
         }
         else if (typeof(o) == "string")
            json += (name&&":") + "\"" + o.toString() + "\"";
         else
            json += (name&&":") + o.toString();
         return json;
      },
      innerXml: function(node) {
         var s = ""
         if ("innerHTML" in node)
            s = node.innerHTML;
         else {
            var asXml = function(n) {
               var s = "";
               if (n.nodeType == 1) {
                  s += "<" + n.nodeName;
                  for (var i=0; i<n.attributes.length;i++)
                     s += " " + n.attributes[i].nodeName + "=\"" + (n.attributes[i].nodeValue||"").toString() + "\"";
                  if (n.firstChild) {
                     s += ">";
                     for (var c=n.firstChild; c; c=c.nextSibling)
                        s += asXml(c);
                     s += "</"+n.nodeName+">";
                  }
                  else
                     s += "/>";
               }
               else if (n.nodeType == 3)
                  s += n.nodeValue;
               else if (n.nodeType == 4)
                  s += "<![CDATA[" + n.nodeValue + "]]>";
               return s;
            };
            for (var c=node.firstChild; c; c=c.nextSibling)
               s += asXml(c);
         }
         return s;
      },
      escape: function(txt) {
         return txt.replace(/[\\]/g, "\\\\")
                   .replace(/[\"]/g, '\\"')
                   .replace(/[\n]/g, '\\n')
                   .replace(/[\r]/g, '\\r');
      },
      removeWhite: function(e) {
         e.normalize();
         for (var n = e.firstChild; n; ) {
            if (n.nodeType == 3) {  // text node
               if (!n.nodeValue.match(/[^ \f\n\r\t\v]/)) { // pure whitespace text node
                  var nxt = n.nextSibling;
                  e.removeChild(n);
                  n = nxt;
               }
               else
                  n = n.nextSibling;
            }
            else if (n.nodeType == 1) {  // element node
               X.removeWhite(n);
               n = n.nextSibling;
            }
            else                      // any other node
               n = n.nextSibling;
         }
         return e;
      }
   };
   if (xml.nodeType == 9) // document node
      xml = xml.documentElement;
   var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, "\t");
   return "{\n" + tab + (tab ? json.replace(/\t/g, tab) : json.replace(/\t|\n/g, "")) + "\n}";
}


/***/ }),

/***/ "./src/common/util.ts":
/*!****************************!*\
  !*** ./src/common/util.ts ***!
  \****************************/
/*! exports provided: Dictionary, myFileReader, FocusHistoryEntry, InputPopup, ShortAttribETypes, EvalOutput, U, AttribETypes, Json, DetectZoom, ISize, Size, GraphSize, IPoint, GraphPoint, Point, FileReadTypeEnum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return Dictionary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "myFileReader", function() { return myFileReader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusHistoryEntry", function() { return FocusHistoryEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputPopup", function() { return InputPopup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShortAttribETypes", function() { return ShortAttribETypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EvalOutput", function() { return EvalOutput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return U; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttribETypes", function() { return AttribETypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Json", function() { return Json; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetectZoom", function() { return DetectZoom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISize", function() { return ISize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return Size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraphSize", function() { return GraphSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IPoint", function() { return IPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraphPoint", function() { return GraphPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return Point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileReadTypeEnum", function() { return FileReadTypeEnum; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var detect_zoom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! detect-zoom */ "./node_modules/detect-zoom/detect-zoom.js");
/* harmony import */ var detect_zoom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(detect_zoom__WEBPACK_IMPORTED_MODULE_2__);


class Dictionary extends Object {
}
 // https://github.com/tombigel/detect-zoom broken 2013? but works
class myFileReader {
    // constructor(onchange: (e: ChangeEvent) => void = null, fileTypes: FileReadTypeEnum[] | string[] = null) { myFileReader.setinfos(fileTypes, onchange); }
    static setinfos(fileTypes = null, onchange, readcontent) {
        myFileReader.fileTypes = (fileTypes || myFileReader.fileTypes);
        console.log('fileTypes:', myFileReader.fileTypes, fileTypes);
        myFileReader.input = document.createElement('input');
        const input = myFileReader.input;
        myFileReader.onchange = function (e) {
            if (!readcontent) {
                onchange(e, input.files, null);
                return;
            }
            let contentObj = {};
            let fileLetti = 0;
            for (let i = 0; i < input.files.length; i++) {
                const f = input.files[i];
                console.log('filereadContent[' + i + ']( file:', f, ')');
                U.fileReadContent(f, (content) => {
                    console.log('file[' + i + '] read complete. done: ' + (1 + fileLetti) + ' / ' + input.files.length, 'contentObj:', contentObj);
                    contentObj[i] = content; // cannot use array, i'm not sure the callbacks will be called in order. using push is safer but could alter order.
                    // this is last file to read.
                    if (++fileLetti === input.files.length) {
                        const contentArr = [];
                        for (let j = 0; j < input.files.length; j++) {
                            contentArr.push(contentObj[j]);
                        }
                        onchange(e, input.files, contentArr);
                    }
                });
            }
        } || myFileReader.onchange;
    }
    static reset() {
        myFileReader.fileTypes = null;
        myFileReader.onchange = null;
        myFileReader.input = null;
    }
    static show(onChange, extensions = null, readContent) {
        myFileReader.setinfos(extensions, onChange, readContent);
        myFileReader.input.setAttribute('type', 'file');
        if (myFileReader.fileTypes) {
            let filetypestr = '';
            const sepkey = U.getStartSeparatorKey();
            for (let i = 0; i < myFileReader.fileTypes.length; i++) {
                filetypestr += U.startSeparator(sepkey, ',') + myFileReader.fileTypes[i];
            }
            myFileReader.input.setAttribute('accept', filetypestr);
        }
        console.log('fileTypes:', myFileReader.fileTypes, 'input:', myFileReader.input);
        $(myFileReader.input).on('change.custom', myFileReader.onchange).trigger('click');
        myFileReader.reset();
    }
}
class FocusHistoryEntry {
    constructor(e, element = null, time = null) {
        this.evt = e;
        this.element = element || e.target;
        this.time = time || new Date();
    }
}
class InputPopup {
    constructor(title, txtpre, txtpost, event /* array of (['oninput', onInputFunction])*/, placeholder = null, value, inputType = 'input', inputSubType = null, onsuccess) {
        this.validators = [];
        this.valid = false;
        const value0 = value;
        if (!value) {
            value = '';
        }
        this.onsuccess = onsuccess ? onsuccess : [];
        const id = 'popup_' + InputPopup.popupCounter++;
        placeholder = (placeholder ? 'placeholder="' + placeholder + '"' : '');
        inputSubType = (inputSubType ? 'type = "' + inputSubType + '"' : '');
        let innerValue;
        if (inputType.toLowerCase() === 'textarea') {
            innerValue = U.replaceAll(U.replaceAll(value, '<', '&lt;'), '>', '&gt;');
            innerValue += '</' + inputType + '>';
            value = '';
        }
        else {
            value = value === '' ? '' : 'value="' + U.replaceAll(value, '"', '&quot;') + '"';
            innerValue = '';
        }
        const container = U.toHtml('' +
            '<div _ngcontent-c3="" data-closebuttontarget="' + id + '" class="screenWideShadow" style="display: none;">' +
            '<div _ngcontent-c3="" class="popupContent">' +
            '<h1 _ngcontent-c3="" style="text-align: center;">' + title + '</h1>' +
            '<button _ngcontent-c3="" class="closeButton" data-closebuttontarget="' + id + '">X</button>' +
            '<br _ngcontent-c3="">' +
            '<div _ngcontent-c3="" class="TypeList">' +
            '<table class="typeTable"><tbody>' +
            '<tr class="typeRow"><td class="alias textPre">' + txtpre + '</td>' +
            '<' + inputType + ' ' + inputSubType + ' ' + placeholder + ' ' + value + ' class="form-control popupInput" ' +
            'aria-label="Small" aria-describedby="inputGroup-sizing-sm">' + innerValue + txtpost +
            '</td>' +
            '</tr>' +
            '<tr><td class="errors" style="display: none;"></td></tr>' +
            '</tbody></table></div>' +
            '</div></div>');
        U.closeButtonSetup($(container));
        this.events = event;
        this.html = container;
        if (inputType === 'textarea') {
            this.getInputNode()[0].setAttribute('style', 'width: calc(75vw - 152px); height: calc(75vh - 200px);');
        }
        this.show();
    }
    getInputNode() { return $(this.html).find('.popupInput'); }
    defaultBlurEvt(e) { this.inputted(); }
    defaultKeydownEvt(e, input = null) {
        input = input || this.getInputNode()[0];
        if (e.key === 'escape') {
            input.innerText = ''; // if contenteditable
            input.value = '';
        }
        if (e.key === 'return') {
            this.inputted();
        }
    }
    inputted(input = null) {
        input = input || this.getInputNode()[0];
        const value = this.getValue(input);
        let i;
        let valid = true;
        for (i = 0; this.validators && i < this.validators.length; i++) {
            const valentry = this.validators[i];
            if (!valentry)
                continue;
            console.log('this:', this, 'input:', input, 'value:', value);
            if (!valentry.validatorCallback(value, input)) {
                this.setErrText(valentry.errormsg);
                valid = false;
            }
        }
        this.valid = valid;
        if (!valid)
            return;
        for (i = 0; this.onsuccess && i < this.onsuccess.length; i++) {
            if (this.onsuccess[i])
                this.onsuccess[i](this.getValue(input), input);
        }
        this.destroy();
    }
    getValue(inputnode = null) {
        inputnode = inputnode || this.getInputNode()[0];
        let value;
        if (inputnode['' + 'value']) {
            return inputnode['' + 'value'];
        }
        // if (inputnode.hasAttribute('value')) value = inputnode.getAttribute('value');
        else
            value = inputnode.innerText;
        return value;
    }
    show(addDefaultEvents = true) {
        let i = -1;
        const $input = this.getInputNode();
        while (this.events && ++i < this.events.length) {
            const currentEvt = this.events[i];
            if (!currentEvt)
                continue;
            $input.on(currentEvt[0], currentEvt[1]);
        }
        if (addDefaultEvents) {
            $input.off('keydown.defaultvalidate').on('keydown.defaultvalidate', (e) => { this.defaultKeydownEvt(e); });
            $input.off('blur.defaultvalidate').on('blur.defaultvalidate', (e) => { this.defaultBlurEvt(e); });
            // $input.off('change.defaultvalidate').on('change.defaultvalidate', (e: BlurEvent) => {this.defaultChangeEvt(e)});
            this.validators.push({ validatorCallback: (value, input) => {
                    const pattern = input.getAttribute('pattern');
                    if (!pattern)
                        return true;
                    const regex = new RegExp(pattern);
                    console.log('validating pattern:', regex, pattern, value);
                    console.log(value);
                    return regex.test(value);
                }, errormsg: 'pattern violated.' });
        }
        document.body.appendChild(this.html);
        this.html.style.display = 'block';
    }
    hide() { this.html.style.display = 'none'; }
    destroy() {
        if (this.html && this.html.parentNode) {
            this.html.parentNode.removeChild(this.html);
            return this.html = null;
        }
    }
    addOkButton(load1, finish) {
        const input = this.getInputNode()[0];
        const button = document.createElement('button');
        button.innerText = 'Confirm';
        const size = U.sizeof(button);
        button.style.left = 'calc( 50% - ' + size.w / 2 + 'px);';
        input.parentNode.appendChild(button);
        $(button).on('click.btnclickpopup', finish);
    }
    setPostText(str) { $(this.html).find('.textPre')[0].innerHTML = str; }
    setErrText(str) {
        U.pw(true, str);
        /*
        const $err = $(this.html).find('.errors');
        if (!str) { $err.hide(); return; }
        $err.show();
        $err[0].innerHTML = str; */
    }
    setValidation(validatorCallback, errormsg) {
        if (validatorCallback)
            this.validators.push({ validatorCallback: validatorCallback, errormsg: errormsg });
    }
}
InputPopup.popupCounter = 0;
var ShortAttribETypes;
(function (ShortAttribETypes) {
    ShortAttribETypes["void"] = "void";
    ShortAttribETypes["EChar"] = "Echar";
    ShortAttribETypes["EString"] = "EString";
    ShortAttribETypes["EDate"] = "EDate";
    ShortAttribETypes["EFloat"] = "EFloat";
    ShortAttribETypes["EDouble"] = "EDouble";
    ShortAttribETypes["EBoolean"] = "EBoolean";
    ShortAttribETypes["EByte"] = "EByte";
    ShortAttribETypes["EShort"] = "EShort";
    ShortAttribETypes["EInt"] = "EInt";
    ShortAttribETypes["ELong"] = "ELong";
    /*
    ECharObj  = 'ECharObj',
    EStringObj  = 'EStringObj',
    EDateObj  = 'EDateObj',
    EFloatObj  = 'EFloatObj',
    EDoubleObj  = 'EDoubleObj',
    EBooleanObj = 'EBooleanObj',
    EByteObj  = 'EByteObj',
    EShortObj  = 'EShortObj',
    EIntObj  = 'EIntObj',
    ELongObj  = 'ELongObj',
    EELIST  = 'EELIST',*/
})(ShortAttribETypes || (ShortAttribETypes = {}));
class EvalOutput {
}
class U {
    // todo: move @ start
    static checkDblClick() {
        const now = new Date().getTime();
        const old = U.dblclickchecker;
        U.dblclickchecker = now;
        console.log('dblclick time:', now - old, now, old);
        return (now - old <= U.dblclicktimerms);
    }
    static remove(x) { if (x && x.parentElement)
        x.parentElement.removeChild(x); }
    static EvalContext(context, str, allowContextEvalEdit) {
        U.EC_TmpAllowcontextEvalEdit = allowContextEvalEdit;
        U.EC_ParStr = str;
        U.EC_TmpParContext = context;
        U.EC_TmpAllowcontextEvalEdit = allowContextEvalEdit;
        U.EC_ret = undefined;
        U.EC_exception = null;
        delete this['str'];
        delete this['context'];
        delete this['allowContextEvalEdit'];
        for (U.EC_TmpKey in U.EC_TmpParContext) {
            this['' + U.EC_TmpKey] = U.EC_TmpParContext['' + U.EC_TmpKey];
        }
        try {
            U.EC_ret = eval(U.EC_ParStr);
        }
        catch (e) {
            U.EC_exception = e;
        }
        if (!U.EC_TmpAllowcontextEvalEdit)
            return;
        for (U.EC_TmpKey in this) {
            U.EC_TmpParContext['' + U.EC_TmpKey] = this['' + U.EC_TmpKey];
        }
    }
    static evalInContext(context, str, allowcontextEvalEdit = true) {
        const out = new U.EvalContext(context, str, allowcontextEvalEdit);
        const ret = {};
        ret.outContext = allowcontextEvalEdit ? context : out;
        ret.return = U.EC_ret;
        ret.exception = U.EC_exception;
        return ret;
    }
    static firstToUpper(s) {
        if (!s || s === '')
            return s;
        return s.charAt(0).toUpperCase() + s.slice(1);
    }
    static fileReadContent(file, callback) {
        const textType = /text.*/;
        try {
            if (!file.type || file.type.match(textType)) {
                let reader = new FileReader();
                reader.onload = function (e) { callback('' + reader.result); };
                reader.readAsText(file);
                return;
            }
        }
        catch (e) {
            U.pe(true, "Exception while trying to read file as text. Error: |", e, "|", file);
        }
        U.pe(true, "Wrong file type found: |", file ? file.type : null, "|", file);
    }
    static fileRead(onChange, extensions = null, readContent) {
        myFileReader.show(onChange, extensions, readContent);
    }
    static textToSvg(str) { return U.textToSvgArr(str)[0]; }
    static textToSvgArr(str) {
        if (!U.varTextToSvg) {
            U.varTextToSvg = U.newSvg('svg');
        }
        U.varTextToSvg.innerHTML = str;
        const ret = [];
        let i;
        for (i = 0; i < U.varTextToSvg.childNodes.length; i++) {
            ret.push(U.varTextToSvg.childNodes[i]);
        }
        return ret;
    }
    static addCss(key, str, prepend = true) {
        const css = document.createElement('style');
        css.innerHTML = str;
        const old = U.addCssAvoidDuplicates[key];
        if (old) {
            old.parentNode.removeChild(old);
        }
        U.addCssAvoidDuplicates[key] = css;
        if (prepend) {
            document.head.prepend(css);
        }
        else {
            document.head.append(css);
        }
    }
    static clear(htmlNode) {
        while (htmlNode.firstChild) {
            htmlNode.removeChild(htmlNode.firstChild);
        }
    }
    static clearAllTimeouts() {
        const highestTimeoutId = setTimeout(() => { }, 1);
        for (let i = 0; i < highestTimeoutId; i++) {
            clearTimeout(i);
        }
    }
    static petmp(b, s, ...restArgs) { return U.pe(b, s, restArgs); }
    static pe(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = 'Error:' + s + '';
        console.error('pe[0/' + (restArgs.length + 1) + ']: ', s);
        for (let i = 0; i < restArgs.length; i++) {
            s = restArgs[i];
            str += 'pe[' + (i + 1) + '/' + (restArgs.length + 1) + ']: ' + s + '\t\t\r\n';
            console.error('pe[' + (i + 1) + '/' + (restArgs.length + 1) + ']: ', s);
        }
        if (!U.production) {
            alert(str);
        }
        else
            U.pw(true, s, ...restArgs);
        return b['@makeMeCrash']['@makeMeCrash'];
    }
    static pw(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        console['' + 'trace']();
        let str = 'Warning:' + s + '';
        console.warn('pw[0/' + (restArgs.length + 1) + ']: ', s);
        for (let i = 0; i < restArgs.length; i++) {
            s = restArgs[i];
            str += 'pw[' + (i + 1) + '/' + (restArgs.length + 1) + ']: ' + s + '\t\t\r\n';
            console.warn('pw[' + (i + 1) + '/' + (restArgs.length + 1) + ']: ', s);
        }
        U.bootstrapPopup(str, 'warning', 5000);
        // s = (((b as unknown) as any[])['@makeMeCrash'] as any[])['@makeMeCrash'];
        return str;
    }
    static ps(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = s + '';
        console.info('ps[0/' + (restArgs.length + 1) + ']: ', s);
        for (let i = 0; i < restArgs.length; i++) {
            s = restArgs[i];
            str += 'ps[' + (i + 1) + '/' + (restArgs.length + 1) + ']: ' + s + '\t\t\r\n';
            console.info('pw[' + (i + 1) + '/' + (restArgs.length + 1) + ']: ', s);
        }
        U.bootstrapPopup(str, 'success', 3000);
        // s = (((b as unknown) as any[])['@makeMeCrash'] as any[])['@makeMeCrash'];
        return str;
    }
    static pif(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = 'p: ' + s;
        console.info('p:', s);
        for (let i = 0; i < restArgs.length; i++) {
            s = restArgs[i];
            str += 'p[' + (i + 1) + '/' + restArgs.length + ']: ' + s + '\t\t\r\n';
            console.info('p[' + (i + 1) + '/' + restArgs.length + ']: ', s);
        }
        // alert(str);
        return str;
    }
    static p(s, ...restArgs) {
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = 'p: ' + s;
        console.info('p:', s);
        for (let i = 0; i < restArgs.length; i++) {
            s = restArgs[i];
            str += 'p[' + (i + 1) + '/' + restArgs.length + ']: ' + s + '\t\t\r\n';
            console.info('p[' + (i + 1) + '/' + restArgs.length + ']: ', s);
        }
        // alert(str);
        return str;
    }
    static bootstrapPopup(innerhtmlstr, color, timer) {
        const div = document.createElement('div');
        if (!U.$alertcontainer) {
            U.alertcontainer = document.createElement('div');
            U.alertcontainer.classList.add('alertcontainer');
            document.body.appendChild(U.alertcontainer);
            U.$alertcontainer = $(U.alertcontainer);
        }
        const container = U.alertcontainer;
        const $container = U.$alertcontainer;
        const $div = $(div);
        container.appendChild(div);
        div.classList.add('alertshell', 'alert_' + color);
        div.setAttribute('role', 'alert');
        const alertMargin = document.createElement('div');
        alertMargin.innerHTML = innerhtmlstr;
        alertMargin.classList.add('alert', 'alert-' + color);
        div.appendChild(alertMargin);
        const end = () => { $div.slideUp(400, () => { div.parentElement && container.removeChild(div); }); }; // div.parentElement: nel caso non sia stato manualmente rimosso.
        $div.on('click', () => $('.alert_' + color).remove());
        $div.hide().slideDown(200, () => setTimeout(end, timer));
    }
    static cloneHtml(html, deep = true, defaultIDNum = 1) {
        const clone = html.cloneNode(deep);
        const getLastNum = (str) => {
            let pos = str.length;
            while (--pos > 0 && !isNaN(+str.charAt(pos))) { }
            const numstr = (str.substring(pos));
            return isNaN(+numstr) ? defaultIDNum : +numstr;
        };
        if (!clone.id) {
            return clone;
        }
        let lastnum = getLastNum(clone.id) - 1;
        const tmpID = clone.id + (clone.id.indexOf('_Clone') === -1 ? '_Clone' : '');
        while (document.getElementById(tmpID + (++lastnum))) { }
        clone.id = tmpID + lastnum;
        return clone;
    }
    static clearAttributes(node) {
        let j;
        for (j = 0; j < node.attributes.length; j++) {
            node.removeAttribute(node.attributes[j].name);
        }
    }
    static cloneObj(o) {
        // const r: HTMLElement = document.createElement(o.tagName);
        // r.innerHTML = o.innerHTML;
        // U.pe( o as HTMLElement !== null, 'non utilizzabile su html');
        return JSON.parse(JSON.stringify(o));
        // todo: questa funzione non può clonare html. allow cloneObj of circular objects.
    }
    static cloneObj2(o) {
        U.pe(true, 'todo: dovrebbe fare una deep copy copiando anche le funzioni (cosa che json.stringify non fa).');
        return null;
    }
    static loadScript(path, useEval = false) {
        const script = document.createElement('script');
        script.src = path;
        script.type = 'text/javascript';
        U.pe(useEval, 'useEval: todo. potrebbe essere utile per avviare codice fuori dalle funzioni in futuro.');
        document.body.append(script);
    }
    static newSvg(type) {
        return document.createElementNS('http://www.w3.org/2000/svg', type);
    }
    static replaceVars(obj, html0, cloneHtml = true, debug = false) {
        const html = cloneHtml ? U.cloneHtml(html0) : html0;
        /// see it in action & parse or debug at
        // v1) perfetto ma non supportata in jscript https://regex101.com/r/Do2ndU/1
        // v2) usata: aggiustabile con if...substring(1). https://regex101.com/r/Do2ndU/3
        // get text between 2 single '$' excluding $$, so they can be used as escape character to display a single '$'
        // console.log('html0:', html0, 'html:', html);
        U.pe(!(html instanceof Element), 'target must be a html node.', html, html0);
        html.innerHTML = U.replaceVarsString(obj, html.innerHTML, debug);
        U.pif(debug, 'ReplaceVars() return = ', html.innerHTML);
        return html;
    }
    static replaceVarsString0(obj, str, escapeC = null, replacer = null, debug = false) {
        U.pe(escapeC && !replacer, 'replacer cannot be null if escapeChar is defined.');
        U.pe(replacer && !escapeC, 'escapeChar cannot be null if replacer is defined');
        if (!escapeC && !replacer) {
            escapeC = replacer = [];
        }
        U.pe(escapeC.length !== replacer.length, 'replacer and escapeChar must be arrays of the same length');
        str = str.replace(/(^\$|(((?!\$).|^))[\$](?!\$))(.*?)(^\$|((?!\$).|^)[\$](?!\$))/gm, (match, capture) => {
            // console.log('matched:', match, 'capture: ', capture);
            if (match === '$') {
                return '';
            }
            let prefixError = '';
            if (match.charAt(0) !== '$') {
                prefixError = match.charAt(0);
                match = match.substring(1);
            }
            // # = default value: {asHtml = true, isbase64 = false}
            const asHtml = match.charAt(1) === '1' || match.charAt(1) !== '#';
            const isBase64 = match.charAt(2) === '1' || match.charAt(2) !== '#';
            const varname = match.substring(3, match.length - 1);
            const debugtext = varname + '(' + match + ')';
            U.pif(debug, 'match:', match);
            const resultarr = U.replaceSingleVar(obj, varname, isBase64, false);
            let result = resultarr[resultarr.length - 1].value;
            if (result !== '' + result) {
                try {
                    result = JSON.stringify(result);
                }
                catch (e) {
                    result = '{_Cyclic object_}';
                }
            }
            let i = -1;
            U.pif(debug, 'replaceSingleVar: ', match, ', arr', resultarr, ', ret', result, ', this:', obj);
            if (!asHtml) {
                while (++i < escapeC.length) {
                    result = U.replaceAll(result, escapeC[i], replacer[i]);
                }
            }
            U.pif(debug, 'replaceSingleVar: ' + debugtext + ' --> ' + result + ' --> ' + prefixError, result, obj);
            if (U.isObject(result)) { }
            return prefixError + result;
        });
        return str;
    }
    static replaceVarsString(obj, htmlStr, debug = false) {
        U.pe(!obj || !htmlStr, 'parameters cannot be null. obj:', obj, ', htmlString:', htmlStr);
        //  https://stackoverflow.com/questions/38563414/javascript-regex-to-select-quoted-string-but-not-escape-quotes
        //  good regex fatto da me https://regex101.com/r/bmWVrp/4
        // only replace content inside " quotes. (eventually escaping ")
        htmlStr = U.QuoteReplaceVarString(obj, htmlStr, '"', debug);
        // only replace content inside ' quotes. (eventually escaping ')
        htmlStr = U.QuoteReplaceVarString(obj, htmlStr, '\'', debug);
        // replaces what's left outside any quotation. (eventually escaping <>)
        htmlStr = U.replaceVarsString0(obj, htmlStr, ['<', '>'], ['&lt;', '&gt;']); // check here aaaaaaaaaaaaaa $$$$$$$$$$$
        return htmlStr;
    }
    static QuoteReplaceVarString(obj, htmlStr, quote, debug = false) {
        U.pe(quote !== '"' && quote !== '\'', 'the only quote supported are single chars " and \'.');
        const quoteEscape = quote === '&quot;' ? '' : '&#39;'; // '\\' + quote;
        // todo: dovrei anche rimpiazzare & with &amp; per consentire input &something; trattati come stringhe.
        // ""|(:?[^\\](?!"")|^)((:?\\\\)*\"(:?.*?[^\\"]+){0,1}(:?\\\\)*\")
        // '""|(:?[^\\](?!"")|^)((:?\\\\)*\"(:?.*?[^\\"]+){0,1}(:?\\\\)*\")'
        // let regex = /""|(:?[^\\](?!"")|^)((:?\\\\)*\"(:?.*?[^\\"]+){0,1}(:?\\\\)*\")/;
        let regexStr = '""|(:?[^\\\\](?!"")|^)((:?\\\\\\\\)*\\"(:?.*?[^\\\\"]+){0,1}(:?\\\\\\\\)*\\")';
        if (quote !== '"') {
            regexStr = U.replaceAll(regexStr, '"', '\'');
        }
        const quoteRegex = new RegExp(regexStr, 'g'); // new RegExp("a", "b"); === /a/b
        htmlStr = htmlStr.replace(quoteRegex, (match, capture) => {
            const start = match.indexOf(quote);
            const end = match.lastIndexOf(quote);
            const content = U.replaceVarsString0(obj, match.substring(start + 1, end), [quote], [quoteEscape], debug);
            const ret = match.substring(0, start + 1) + content + match.substring(end);
            U.pif(debug, 'replaceQuotedVars: match: |' + match + '| --> |' + content + '| --> |' + ret + '| html:', htmlStr, 'capt:', capture);
            return ret;
        });
        return htmlStr;
    }
    //todo: da rimuovere, è stata completamente superata dal nuovo return type array di replaceSingleVar
    static replaceSingleVarGetParentAndChildKey(obj, fullpattern, canThrow = false) {
        const ret = { parent: null, childkey: null };
        let targetPatternParent;
        const pos = fullpattern.indexOf('.');
        const isBase64 = fullpattern.charAt(2) === '1' || fullpattern.charAt(2) !== '#';
        U.pe(isBase64, 'currently this method does not support base64 encoded templates. the conversion is still to do.', fullpattern);
        if (pos === -1) {
            ret.parent = obj;
            ret.childkey = fullpattern.substring(3, fullpattern.length - 1);
            return ret;
        }
        try {
            targetPatternParent = fullpattern.substring(0, pos) + '$';
            const tmparr = U.replaceSingleVarRaw(obj, targetPatternParent);
            ret.parent = tmparr[tmparr.length - 1].value;
            ret.childkey = fullpattern.substring(pos + 1, fullpattern.length - 1);
        }
        catch (e) {
            U.pw(true, 'replaceSingleVarGetParentAndChildKey failed. fullpattern: |' + fullpattern + '| targetPatternParent: |'
                + targetPatternParent + '| obj: ', obj, ' reason: ', e);
            return null;
        }
        return ret;
    }
    static replaceSingleVarRaw(obj, fullpattern, canThrow = false) {
        fullpattern = fullpattern.trim();
        const isBase64 = fullpattern.charAt(2) === '1' || fullpattern.charAt(2) !== '#';
        const varName = fullpattern.substring(3, fullpattern.length - 1);
        return U.replaceSingleVar(obj, varName, isBase64, canThrow);
    }
    static replaceSingleVar(obj, varname, isBase64, canThrow = false) {
        const debug = false;
        const showErrors = false;
        let debugPathOk = '';
        if (isBase64) {
            varname = atob(varname);
        }
        let requestedValue = obj;
        const fullpath = varname;
        const tokens = varname.split('.'); // varname.split(/\.,/);
        const ret = [];
        let j;
        let token = null;
        for (j = 0; j < tokens.length; j++) {
            ret.push({ token: token === null ? 'this' : token, value: requestedValue });
            token = tokens[j];
            U.pif(debug || showErrors, 'replacer: obj[req] = ', requestedValue, '[', token, '] =', (requestedValue ? requestedValue[token] : ''));
            if (requestedValue === null || requestedValue === undefined) {
                U.pe(showErrors, 'requested null or undefined:', obj, ', canthrow ? ', canThrow, ', fillplath:', fullpath);
                if (canThrow) {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. object = ', obj);
                    throw new DOMException('replace_Vars.WrongVariablePath', 'replace_Vars.WrongVariablePath');
                }
                else {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. ovjet = ', obj);
                }
                ret.push({ token: token, value: 'Error: ' + debugPathOk + '.' + token + ' = ' + undefined });
                // ret.push({token: token, value: requestedValue});
                return ret;
            }
            else {
                debugPathOk += (debugPathOk === '' ? '' : '.') + token;
            }
            ////
            if (requestedValue instanceof _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"]) {
                const info = requestedValue.getInfo(true);
                const key = token.toLowerCase();
                if (key in info) {
                    requestedValue = info[key];
                }
                else {
                    requestedValue = requestedValue[token];
                }
            }
            else {
                requestedValue = (requestedValue === null) ? undefined : requestedValue[token];
            }
        }
        ret.push({ token: token, value: requestedValue });
        return ret;
    }
    static replaceSingleVar_backup(obj, varname, isBase64, canThrow = false) {
        const debug = false;
        const showErrors = false;
        let debugPathOk = '';
        if (isBase64) {
            varname = atob(varname);
        }
        let requestedValue = obj;
        const fullpath = varname;
        const tokens = varname.split('.'); // varname.split(/\.,/);
        let j;
        for (j = 0; j < tokens.length; j++) {
            const token = tokens[j];
            U.pif(debug || showErrors, 'replacer: obj[req] = ', requestedValue, '[', token, '] =', (requestedValue ? requestedValue[token] : ''));
            if (requestedValue === null || requestedValue === undefined) {
                U.pe(showErrors, 'requested null or undefined:', obj, ', canthrow ? ', canThrow, ', fillplath:', fullpath);
                if (canThrow) {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. object = ', obj);
                    throw new DOMException('replace_Vars.WrongVariablePath', 'replace_Vars.WrongVariablePath');
                }
                else {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. ovjet = ', obj);
                }
                return 'Error: ' + debugPathOk + '.' + token + ' = ' + undefined;
            }
            else {
                debugPathOk += (debugPathOk === '' ? '' : '.') + token;
            }
            ////
            if (requestedValue instanceof _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"]) {
                const info = requestedValue.getInfo(true);
                const key = token.toLowerCase();
                if (key in info) {
                    requestedValue = info[key];
                }
                else {
                    requestedValue = requestedValue[token];
                }
            }
            else {
                requestedValue = (requestedValue === null) ? undefined : requestedValue[token];
            }
        }
        return requestedValue;
    }
    static changeVarTemplateDelimitersInMeasurables(innerText, toReplace = '$', replacement = '£') {
        if (!innerText.indexOf('measurable')) {
            return innerText;
        } // + performance su scommessa probabilistica. better avg, worser worst case.
        const html = document.createElement('div');
        html.innerHTML = innerText;
        const $measurables = $(html).find('.measurable');
        let i;
        let j;
        for (i = 0; i < $measurables.length; i++) {
            for (j = 0; j < $measurables[i].attributes.length; j++) {
                if ($measurables[i].attributes[j].name[0] !== '_') {
                    continue;
                }
                U.changeVarTemplateDelimitersInMeasurablesAttr($measurables[i].attributes[j], toReplace, replacement);
            }
        }
        return html.innerHTML;
    }
    static changeBackVarTemplateDelimitersInMeasurablesAttr(attrVal, toReplace = '£', replacement = '$') {
        return U.changeVarTemplateDelimitersInMeasurablesAttrStr(attrVal, toReplace, replacement);
    }
    static changeVarTemplateDelimitersInMeasurablesAttr(attr, toReplace = '$', replacement = '£') {
        attr.value = U.changeVarTemplateDelimitersInMeasurablesAttrStr(attr.value, toReplace, replacement);
    }
    static changeVarTemplateDelimitersInMeasurablesAttrStr(val, toReplace, replacement) {
        const r = toReplace;
        const rstr = '(^\\' + r + '|(((?!\\' + r + ').|^))[\\' + r + '](?!\\' + r + '))(.*?)(^\\' + r + '|((?!\\' + r + ').|^)[\\' + r + '](?!\\' + r + '))';
        return val.replace(new RegExp(rstr, 'gm'), (match, capture) => {
            if (match === toReplace) {
                return toReplace;
            }
            let prefixError = '';
            if (match.charAt(0) !== toReplace) {
                prefixError = match.charAt(0);
                match = match.substring(1);
            }
            return prefixError + replacement + match.substring(1, match.length - 1) + replacement;
        });
    }
    static sizeof(element0, debug = false) {
        let element = element0;
        U.pif(debug, 'sizeof(', element, ')');
        U.pe(element === document, 'trying to measure document.');
        if (element === document) {
            element = document.body;
        }
        const $element = $(element);
        U.pe(element.tagName === 'foreignObject', 'SvgForeignElementObject have a bug with size, measure a child instead.');
        let i;
        let tmp;
        let size;
        if (!U.sizeofvar) {
            U.sizeofvar = document.createElement('div');
            document.body.append(U.sizeofvar);
        }
        const isOrphan = element.parentNode === null;
        // var visible = element.style.display !== 'none';
        // var visible = $element.is(":visible"); crea bug quando un elemento è teoricamente visibile ma orfano
        const ancestors = U.ancestorArray(element);
        const visibile = [];
        if (isOrphan) {
            U.sizeofvar.append(element);
        }
        // show all and saveToDB visibility to restore it later
        for (i = 0; i < ancestors.length; i++) { // document has undefined style
            visibile[i] = (ancestors[i].style === undefined) ? true : (ancestors[i].style.display !== 'none');
            if (!visibile[i]) {
                $(ancestors[i]).show();
            }
        }
        tmp = $element.offset();
        size = new Size(tmp.left, tmp.top, 0, 0);
        tmp = element.getBoundingClientRect();
        size.w = tmp.width;
        size.h = tmp.height;
        // restore visibility
        for (i = 0; i < ancestors.length; i++) {
            if (!visibile[i]) {
                $(ancestors[i]).hide();
            }
        }
        if (isOrphan) {
            U.clear(U.sizeofvar);
        }
        // Status.status.getActiveModel().graph.markS(size, false);
        return size;
    }
    /* ritorna un array con tutti i figli, nipoti... discendenti di @parent */
    static iterateDescendents(parent) {
        return parent.getElementsByTagName('*');
    }
    static ancestorArray(domelem) {
        // [0]=element, [1]=father, [2]=grandfather... [n]=document
        if (domelem === null || domelem === undefined) {
            return [];
        }
        const arr = [domelem];
        let tmp = domelem.parentNode;
        while (tmp !== null) {
            arr.push(tmp);
            tmp = tmp.parentNode;
        }
        return arr;
    }
    static toSvg(html) {
        U.pe(true, 'toSvg maybe not working, test before use');
        const o = U.newSvg('svg');
        o.innerHTML = html;
        return o.firstChild;
    }
    static toHtmlRow(html) {
        return U.toHtml(html, U.toHtml('<table><tbody></tbody></table>').firstChild);
    }
    static toHtmlCell(html) {
        return U.toHtml(html, U.toHtml('<table><tbody><tr></tr></tbody></table>').firstChild.firstChild);
    }
    static toHtml(html, container = null, containerTag = 'div') {
        if (container === null) {
            container = document.createElement(containerTag);
        }
        container.innerHTML = html;
        const ret = container.firstChild;
        container.removeChild(ret);
        return ret;
    }
    static toBase64Image(html, container = null, containerTag = 'div') {
        // https://github.com/tsayen/dom-to-image
        return 'HtmlToImage todo: check https://github.com/tsayen/dom-to-image';
    }
    /**
     * checks if nodes have a vertical line relationship in the tree (parent, grandparent, ...);
     * @ return {boolean}
     */
    static isParentOf(parent, child) {
        //  parent chains:   element -> ... -> body -> html -> document -> null
        while (child !== null) {
            if (parent === child) {
                return true;
            }
            child = child.parentNode;
        }
        return false;
    }
    static isChildrenOf(child, parent) {
        return U.isParentOf(parent, child);
    }
    static setSvgSize(style, size, defaultsize) {
        if (!style)
            return;
        if (size) {
            size = size.duplicate();
        }
        else {
            size = defaultsize.duplicate();
            defaultsize = null;
        }
        if (!U.isNumber(size.x)) {
            U.pw(true, 'VertexSize Svg x attribute is NaN: ' + size.x + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.x));
            U.pe(!defaultsize || !U.isNumber(defaultsize.x), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.x = defaultsize.x;
        }
        if (!U.isNumber(size.y)) {
            U.pw(true, 'VertexSize Svg y attribute is NaN: ' + size.y + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.y));
            U.pe(!defaultsize || !U.isNumber(defaultsize.y), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.y = defaultsize.y;
        }
        if (!U.isNumber(size.w)) {
            U.pw(true, 'VertexSize Svg w attribute is NaN: ' + size.w + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.w));
            U.pe(!defaultsize || !U.isNumber(defaultsize.w), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.w = defaultsize.w;
        }
        if (!U.isNumber(size.h)) {
            U.pw(true, 'VertexSize Svg h attribute is NaN: ' + size.h + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.h));
            U.pe(!defaultsize || !U.isNumber(defaultsize.h), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.h = defaultsize.h;
        }
        // U.pe(true, '100!, ', size, style);
        style.setAttributeNS(null, 'x', '' + size.x);
        style.setAttributeNS(null, 'y', '' + size.y);
        style.setAttributeNS(null, 'width', '' + size.w);
        style.setAttributeNS(null, 'height', '' + size.h);
        return size;
    }
    static getSvgSize(elem, minimum = null, maximum = null) {
        const defaults = new GraphSize(0, 0, 200, 99);
        const ret0 = new GraphSize(+elem.getAttribute('x'), +elem.getAttribute('y'), +elem.getAttribute('width'), +elem.getAttribute('height'));
        const ret = ret0.duplicate();
        if (!U.isNumber(ret.x)) {
            U.pw(true, 'Svg x attribute is NaN: ' + elem.getAttribute('x') + ' will be set to default: ' + defaults.x);
            ret.x = defaults.x;
        }
        if (!U.isNumber(ret.y)) {
            U.pw(true, 'Svg y attribute is NaN: ' + elem.getAttribute('y') + ' will be set to default: ' + defaults.y);
            ret.y = defaults.y;
        }
        if (!U.isNumber(ret.w)) {
            U.pw(true, 'Svg w attribute is NaN: ' + elem.getAttribute('width') + ' will be set to default: ' + defaults.w);
            ret.w = defaults.w;
        }
        if (!U.isNumber(ret.h)) {
            U.pw(true, 'Svg h attribute is NaN: ' + elem.getAttribute('height') + ' will be set to default: ' + defaults.h);
            ret.h = defaults.h;
        }
        if (minimum) {
            if (U.isNumber(minimum.x) && ret.x < minimum.x) {
                ret.x = minimum.x;
            }
            if (U.isNumber(minimum.y) && ret.y < minimum.y) {
                ret.y = minimum.y;
            }
            if (U.isNumber(minimum.w) && ret.w < minimum.w) {
                ret.w = minimum.w;
            }
            if (U.isNumber(minimum.h) && ret.h < minimum.h) {
                ret.h = minimum.h;
            }
        }
        if (maximum) {
            if (U.isNumber(maximum.x) && ret.x > maximum.x) {
                ret.x = maximum.x;
            }
            if (U.isNumber(maximum.y) && ret.y > maximum.y) {
                ret.y = maximum.y;
            }
            if (U.isNumber(maximum.w) && ret.w > maximum.w) {
                ret.w = maximum.w;
            }
            if (U.isNumber(maximum.h) && ret.h > maximum.h) {
                ret.h = maximum.h;
            }
        }
        if (!ret.equals(ret0)) {
            U.setSvgSize(elem, ret, null);
        }
        return ret;
    }
    static findMetaParent(parent, childJson, canFail, debug = true) {
        const modelRoot = parent.getModelRoot();
        // instanceof crasha non so perchè, dà undefined constructor quando non lo è.
        if (U.getClass(modelRoot) === 'MetaMetaModel') {
            U.pif(debug, 'return null;');
            return null;
        }
        if (U.getClass(modelRoot) === 'MetaModel') {
            U.pif(debug, 'return null;');
            return null;
        } // potrei ripensarci e collegarlo a m3
        // todo: risolvi bene e capisci che collegamento deve esserci tra mmpackage e mpackage.
        // fix temporaneo: così però consento di avere un solo package.
        if (U.getClass(modelRoot) === 'Model' && U.getClass(parent) === 'Model') {
            U.pif(debug, 'return: ', parent.metaParent.childrens[0]);
            return parent.metaParent.childrens[0];
        }
        // if (modelRoot === Status.status.mmm || !Status.status.mmm && modelRoot instanceof MetaMetaModel) { return null; }
        // if (modelRoot === Status.status.mm) { return null; }
        const ParentMetaParent = parent.metaParent;
        const metaParentName = Json.read(childJson, _Joiner__WEBPACK_IMPORTED_MODULE_1__["XMIModel"].namee, null);
        // U.pe(!metaParentName, 'type not found.', childJson);
        let i;
        let ret = null;
        U.pif(debug, 'finding metaparent of:', childJson, 'parent:', parent, 'parent.metaparent:', ParentMetaParent, 'childrens:', ParentMetaParent ? ParentMetaParent.childrens : 'null parent');
        for (i = 0; i < ParentMetaParent.childrens.length; i++) {
            const metaVersionCandidate = ParentMetaParent.childrens[i];
            const candidateName = metaVersionCandidate.name;
            U.pif(debug, 'check[' + i + '/' + ParentMetaParent.childrens.length + '] ' + candidateName + ' =?= ' + metaParentName + ' ? ' +
                (candidateName === metaParentName));
            // console.log('is metaparent? of:', metaParentName, ' === ', candidateName, ' ? ', candidateName === metaParentName);
            if (candidateName === metaParentName) {
                ret = metaVersionCandidate;
                break;
            }
        }
        U.pif(debug, 'return: ', ret);
        U.pe(ret == null && !canFail, 'metaParent not found. metaParentParent:', ParentMetaParent, 'metaParentName:', metaParentName, 'parent:', parent, 'json:', childJson);
        // console.log('findMetaParent of:', childJson, ' using parent:', parent, ' = ', ret);
        return ret;
    }
    /*
      static findMetaParentP(parent: IModel, childJson: Json, canFail: boolean = true): IPackage {
        return U.findMetaParent<IModel, IPackage>(parent, childJson, canFail);
      }
  
      static findMetaParentC(parent: IPackage, childJson: Json, canFail: boolean = true): M2Class {
        return U.findMetaParent<IPackage, M2Class>(parent, childJson, canFail);
      }
  
      static findMetaParentA(prnt: M2Class, childJ: Json, canFail: boolean = true): IAttribute {
        return U.findMetaParent<M2Class, IAttribute>(prnt, childJ, canFail);
      }
  
      static findMetaParentR(prnt: M2Class, childJ: Json, canFail: boolean = true): IReference {
        return U.findMetaParent<M2Class, IReference>(prnt, childJ, canFail);
      }
    */
    static arrayRemoveAll(arr, elem, debug = false) {
        let index;
        while (true) {
            index = arr.indexOf(elem);
            U.pif(debug, 'ArrayRemoveAll: index: ', index, '; arr:', arr, '; elem:', elem);
            if (index === -1) {
                return;
            }
            arr.splice(index, 1);
            U.pif(debug, 'ArrayRemoveAll RemovedOne:', arr);
        }
    }
    static eventiDaAggiungereAlBody(selecteds) {
        // todo: guarda gli invocatori
    }
    static isOnEdge(pt, shape) {
        return U.isOnHorizontalEdges(pt, shape) || U.isOnVerticalEdges(pt, shape);
    }
    static isOnVerticalEdges(pt, shape) {
        return U.isOnLeftEdge(pt, shape) || U.isOnRightEdge(pt, shape);
    }
    static isOnHorizontalEdges(pt, shape) {
        return U.isOnTopEdge(pt, shape) || U.isOnBottomEdge(pt, shape);
    }
    static isOnRightEdge(pt, shape) {
        if (!pt || !shape) {
            return null;
        }
        return (pt.x === shape.x + shape.w) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);
    }
    static isOnLeftEdge(pt, shape) {
        if (!pt || !shape) {
            return null;
        }
        return (pt.x === shape.x) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);
    }
    static isOnTopEdge(pt, shape) {
        if (!pt || !shape) {
            return null;
        }
        return (pt.y === shape.y) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);
    }
    static isOnBottomEdge(pt, shape) {
        if (!pt || !shape) {
            return null;
        }
        return (pt.y === shape.y + shape.h) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);
    }
    // usage: var scope1 = makeEvalContext("variable declariation list"); scope1("another eval like: x *=3;");
    // remarks: variable can be declared only on the first call, further calls on a created context can only modify the context without expanding it.
    // same as above, but with dynamic context, although it's only extensible manually and not by the eval code itself.
    static evalInContextOld(context, js) {
        let value;
        try { // for expressions
            value = eval('with(context) { ' + js + ' }');
        }
        catch (e) {
            if (e instanceof SyntaxError) {
                //try { // for statements
                value = (new Function('with(this) { ' + js + ' }')).call(context);
                //} catch (e) { U.pw(true, 'error evaluating')}
            }
        }
        return value;
    }
    static multiReplaceAllKV(a, kv = []) {
        const keys = [];
        const vals = [];
        let i;
        for (i = 0; i < kv.length; i++) {
            keys.push(kv[i][0]);
            vals.push(kv[i][0]);
        }
        return U.multiReplaceAll(a, keys, vals);
    }
    static multiReplaceAll(a, searchText = [], replacement = []) {
        U.pe(!(searchText.length === replacement.length), 'search and replacement must be have same length:', searchText, replacement);
        let i = -1;
        while (++i < searchText.length) {
            a = U.replaceAll(a, searchText[i], replacement[i]);
        }
        return a;
    }
    static toFileName(a = 'nameless.txt') {
        if (!a) {
            a = 'nameless.txt';
        }
        a = U.multiReplaceAll(a.trim(), ['\\', '//', ':', '*', '?', '<', '>', '"', '|'], ['[lslash]', '[rslash]', ';', '°', '_', '{', '}', '\'', '!']);
        return a;
    }
    static download(filename = 'nameless.txt', text = null, debug = true) {
        if (!text) {
            return;
        }
        filename = U.toFileName(filename);
        const htmla = document.createElement('a');
        const blob = new Blob([text], { type: 'text/plain', endings: 'native' });
        const blobUrl = URL.createObjectURL(blob);
        U.pif(debug, text + '|\r\n| <-- rn, |\n| <--n.');
        htmla.style.display = 'none';
        htmla.href = blobUrl;
        htmla.download = filename;
        document.body.appendChild(htmla);
        htmla.click();
        window.URL.revokeObjectURL(blobUrl);
        document.body.removeChild(htmla);
    }
    /// arrotonda verso zero.
    static trunc(num) {
        if (Math['trunc' + '']) {
            return Math['trunc' + ''](num);
        }
        if (Math.floor && Math.ceil) {
            return Math[num > 0 ? 'floor' : 'ceil'](num);
        }
        return Number(String(num).replace(/\..*/, ''));
    }
    static closeButtonSetup($root, debug = false) {
        $root.find('.closeButton').off('click.closeButton').on('click.closeButton', (e) => {
            let html = e.target;
            const target = html.dataset.closebuttontarget;
            html = html.parentElement;
            U.pif(debug, 'html:', html, 'target:', e.target, 'targetstr:', target, 'dataset:', e.target.dataset);
            while (html && html.dataset.closebuttontarget !== target) {
                U.pif(debug, 'html:', html, ', data:', (html).dataset.closebuttontarget, ' === ' + target);
                html = html.parentElement;
            }
            U.pif(debug, 'html:', html);
            U.pe(!html, 'closeTarget not found: event trigger:', e.target, 'html:', html);
            $(html).hide();
        });
    }
    static insertAt(arr, index, elem) {
        const oldl = arr.length;
        const ret = arr.splice(index, 0, elem);
        U.pe(oldl + 1 !== arr.length, oldl + ' --> ' + arr.length + '; arr not growing. ret:', ret, arr);
    }
    static setViewBox(svg, size = null) {
        if (!size) {
            size = new Size();
            size.x = size.y = size.w = size.h = null;
        }
        let x = +size.x;
        let y = +size.y;
        let w = +size.w;
        let h = +size.h;
        let htmlsize = null;
        if (isNaN(x)) {
            x = 0;
        }
        if (isNaN(y)) {
            y = 0;
        }
        if (isNaN(w)) {
            w = htmlsize ? htmlsize.w : (htmlsize = U.sizeof(svg)).w;
        }
        if (isNaN(h)) {
            h = htmlsize ? htmlsize.h : (htmlsize = U.sizeof(svg)).h;
        }
        svg.setAttributeNS(null, 'viewBox', x + ' ' + y + ' ' + w + ' ' + h);
    }
    static getViewBox(svg) {
        const str = svg.getAttributeNS(null, 'viewbox');
        if (!str)
            return U.sizeof(svg);
        const arr = str.split(' ');
        let vbox = new Size(0, 0, 0, 0);
        if (isNaN(+arr[0])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.x = +arr[0];
        }
        if (isNaN(+arr[1])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.y = +arr[1];
        }
        if (isNaN(+arr[2])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.w = +arr[2];
        }
        if (isNaN(+arr[3])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.h = +arr[3];
        }
        return vbox;
    }
    static selectHtml(htmlSelect, optionValue, canFail = false) {
        const $options = $(htmlSelect).find('option');
        let i;
        let isFound = false;
        if (optionValue === null || optionValue === undefined) {
            return;
        }
        for (i = 0; i < $options.length; i++) {
            const opt = $options[i];
            if (opt.value === optionValue) {
                opt.selected = isFound = true;
            }
        }
        U.pw(!isFound, 'SelectOption not found. html:', htmlSelect, ', searchingFor: |' + optionValue + '|, in options:', $options);
        U.pe(!isFound && !canFail, 'SelectOption not found. html:', htmlSelect, ', searchingFor: |' + optionValue + '| in options:', $options);
    }
    static tabSetup(root = document.body) {
        $('.UtabHeader').off('click.tabchange').on('click.tabchange', U.tabClick);
        $('.UtabContent').hide();
        const $tabRoots = $('.UtabContainer');
        let i;
        for (i = 0; i < $tabRoots.length; i++) {
            const selectedStr = $tabRoots[i].dataset.selectedtab;
            const $selected = $($tabRoots[i]).find('>.UtabHeaderContainer>.UtabHeader[data-target="' + selectedStr + '"]');
            U.pe($selected.length !== 1, 'tab container must select exactly one tab. found instead: ' + $selected.length, 'tabRoot:', $tabRoots[i], 'selector:', selectedStr);
            // console.clear(); console.log('triggered: ', $selected);
            $selected.trigger('click');
        }
        /*
            U.addCss('customTabs',
              '.UtabHeaderContainer{ padding: 0; margin: 0; display: flex;}\n' +
              '.UtabContainer{\n' +
              'display: flex;\n' +
              'flex-flow: column;\n' +
              '\n}\n' +
              '.UtabHeader{\n' +
              'display: inline-block;\n' +
              'width: auto; flex-grow: 1;\n' +
              'margin: 10px;\n' +
              'margin-bottom: 0;\n' +
              'flex-basis: 0;\n' +
              'text-align: center;\n' +
              'border: 1px solid red;\n}\n' +
              '.UtabHeader+.UtabHeader{\n' +
              'margin-left:0;\n}\n' +
              '.UtabHeader[selected="true"]{\n' +
              'background-color: darkred;\n' +
              '}\n' +
              '.UtabContentContainer{\n' +
              '\n' +
              '    flex-grow: 1;\n' +
              '    flex-basis: 0;\n' +
              '    overflow: auto;' +
              '\n}\n' +
              '.UtabContent{\n' +
              'flex-grow: 1;\n' +
              // 'height: 100%;\n' +
              '\n}\n');*/
    }
    static tabClick(e) {
        let root = e.currentTarget;
        const target = root.dataset.target;
        while (root && !root.classList.contains('UtabContainer')) {
            root = root.parentNode;
        }
        const $root = $(root);
        const oldTarget = root.dataset.selectedtab;
        root.dataset.selectedtab = target;
        const $targethtml = $root.find('>.UtabContentContainer>.UtabContent[data-target="' + target + '"]');
        U.pe($targethtml.length !== 1, 'tab target count (' + $targethtml.length + ') is !== 1');
        const $oldTargetHtml = $root.find('>.UtabContentContainer>.UtabContent[data-target="' + oldTarget + '"]');
        U.pe($oldTargetHtml.length !== 1, 'oldTab target count (' + $oldTargetHtml.length + ') is !== 1');
        const $oldTargetHeader = $root.find('>.UtabHeaderContainer>.UtabHeader[data-target="' + oldTarget + '"]');
        U.pe($oldTargetHeader.length !== 1, 'oldTabHeader target count (' + $oldTargetHeader.length + ') is !== 1');
        const $targetHeader = $root.find('>.UtabHeaderContainer>.UtabHeader[data-target="' + target + '"]');
        U.pe($targetHeader.length !== 1, 'TabHeader target count (' + $targetHeader.length + ') is !== 1');
        if ($targethtml[0].getAttribute('selected') === 'true') {
            return;
        }
        $oldTargetHeader[0].setAttribute('selected', 'false');
        $targetHeader[0].setAttribute('selected', 'true');
        $oldTargetHtml.slideUp();
        $targethtml.slideDown();
    }
    static removeemptynodes(root, includeNBSP = false, debug = false) {
        let n;
        for (n = 0; n < root.childNodes.length; n++) {
            const child = root.childNodes[n];
            U.pif(debug, 'removeEmptyNodes: ', child.nodeType);
            switch (child.nodeType) {
                default:
                    break;
                case 1:
                    U.removeemptynodes(child, includeNBSP);
                    break; // node: element
                case 2:
                    break; // leaf: attribute
                case 8:
                    break; // leaf: comment
                case 3: // leaf: text node
                    let txt = child.nodeValue;
                    let i;
                    // replacing first blanks (\n, \r, &nbsp;) with classic spaces.
                    for (i = 0; i < txt.length; i++) {
                        let exit =  false && false;
                        switch (txt[i]) {
                            default:
                                exit = true;
                                break; // if contains non-blank is allowed to live but trimmed.
                            case '&nbsp':
                                if (includeNBSP) {
                                    txt[i] = ' ';
                                }
                                else {
                                    exit = true;
                                }
                                break;
                            case ' ':
                            case '\n':
                            case '\r':
                                txt[i] = ' ';
                                break;
                        }
                        if (exit) {
                            break;
                        }
                    }
                    // replacing last blanks (\n, \r, &nbsp;) with classic spaces.
                    for (i = txt.length; i >= 0; i--) {
                        let exit =  false && false;
                        switch (txt[i]) {
                            default:
                                exit = true;
                                break; // if contains non-blank is allowed to live but trimmed.
                            case '&nbsp':
                                if (includeNBSP) {
                                    txt[i] = ' ';
                                }
                                else {
                                    exit = true;
                                }
                                break;
                            case ' ':
                            case '\n':
                            case '\r':
                                txt[i] = ' ';
                                break;
                        }
                        if (exit) {
                            break;
                        }
                    }
                    txt = txt.trim();
                    U.pif(debug, 'txt: |' + root.nodeValue + '| --> |' + txt + '| delete?', (/^[\n\r ]*$/g.test(txt)));
                    if (txt === '') {
                        root.removeChild(child);
                        n--;
                    }
                    else {
                        root.nodeValue = txt;
                    }
                    break;
            }
        }
        return root;
    }
    static replaceAll(str, searchText, replacement, debug = false, warn = true) {
        if (!str) {
            return str;
        }
        return str.split(searchText).join(replacement);
        let lastPos = 0;
        if (searchText === replacement) {
            U.pw(warn, 'replaceAll invalid parameters: search text === replacement === ' + replacement);
            return str;
        }
        U.pif(debug, 'replaceAll(', searchText, ' with ', replacement, ') starting str:', searchText);
        while (str.indexOf(searchText, lastPos)) {
            const old = searchText;
            const lastPosOld = lastPos;
            searchText = searchText.substring(0, lastPos) + replacement + searchText.substring(lastPos + searchText.length);
            lastPos = lastPos + replacement.length;
            U.pif(debug, 'replaceAll() ', old, ' => ', searchText, '; lastpos:' + lastPosOld + ' => ', lastPos);
        }
        return str;
    }
    static isValidHtml(htmlStr, debug = false) {
        const div = document.createElement('div');
        if (!htmlStr) {
            return false;
        }
        div.innerHTML = htmlStr;
        // if (div.innerHTML === htmlStr) { return true; }
        const s2 = U.multiReplaceAll(div.innerHTML, [' ', ' ', '\n', '\r'], ['', '', '', '']);
        const s1 = U.multiReplaceAll(htmlStr, [' ', ' ', '\n', '\r'], ['', '', '', '']);
        const ret = s1 === s2;
        if (ret || !debug) {
            return ret;
        }
        const tmp = U.strFirstDiff(s1, s2, 20);
        U.pif(debug, 'isValidHtml() ' + (tmp ? '|' + tmp[0] + '| vs |' + tmp[1] + '|' : 'tmp === null'));
        return ret;
    }
    static getIndex(node) {
        if (!node.parentElement) {
            return -1;
        }
        // return U.toArray(node.parentElement.children).indexOf(node);
        return Array.prototype.indexOf.call(node.parentElement.children, this);
    }
    static toArray(childNodes) {
        if (Array['' + 'from']) {
            return Array['' + 'from'](childNodes);
        }
        const array = [];
        let i = -1;
        while (++i < childNodes.length) {
            array.push(childNodes[i]);
        }
        return array;
    }
    static getClass(obj) { return obj.__proto__.constructor.name; }
    static isString(elem) { return elem + '' === elem; }
    static permuteV2(input) {
        U.PermuteArr = [];
        U.PermuteUsedChars = [];
        return U.permute0V2(input);
    }
    static permute0V2(input) {
        let i;
        let ch;
        for (i = 0; i < input.length; i++) {
            ch = input.splice(i, 1)[0];
            U.PermuteUsedChars.push(ch);
            if (input.length === 0) {
                U.PermuteArr.push(U.PermuteUsedChars.slice());
            }
            U.permute0V2(input);
            input.splice(i, 0, ch);
            U.PermuteUsedChars.pop();
        }
        return U.PermuteArr;
    }
    static permute(inputArr, debug = true) {
        const results = [];
        const permuteInner = (arr, memo = []) => {
            let cur;
            let i;
            for (i = 0; i < arr.length; i++) {
                cur = arr.splice(i, 1);
                if (arr.length === 0) {
                    results.push(memo.concat(cur));
                }
                permuteInner(arr.slice(), memo.concat(cur));
                arr.splice(i, 0, cur[0]);
            }
            return results;
        };
        return permuteInner(inputArr);
    }
    static resizableBorderMouseDblClick(e) {
        const size = U.sizeof(U.resizingContainer);
        const minSize = U.sizeof(U.resizingBorder);
        const oldSize = new Size(0, 0, +U.resizingContainer.dataset.oldsizew, +U.resizingContainer.dataset.oldsizeh);
        const horiz = U.resizingBorder.classList.contains('left') || U.resizingBorder.classList.contains('right');
        const vertic = U.resizingBorder.classList.contains('top') || U.resizingBorder.classList.contains('bottom');
        if (horiz && vertic)
            return; // do nothing on corner, non voglio che venga resizato sia a minheight che a minwidth, solo uno dei 2.
        minSize.w *= horiz ? 2 : 1;
        minSize.h *= vertic ? 2 : 1;
        minSize.x = size.x;
        minSize.y = size.y;
        console.log('old, size, min', oldSize, size, minSize, oldSize.w && size.equals(minSize));
        if (oldSize.w && size.equals(minSize)) {
            U.resizingContainer.style.width = U.resizingContainer.style.minWidth = U.resizingContainer.style.maxWidth = oldSize.w + 'px';
            U.resizingContainer.style.height = U.resizingContainer.style.minHeight = U.resizingContainer.style.maxHeight = oldSize.h + 'px';
        }
        else {
            U.resizingContainer.style.width = U.resizingContainer.style.minWidth = U.resizingContainer.style.maxWidth = minSize.w + 'px';
            U.resizingContainer.style.height = U.resizingContainer.style.minHeight = U.resizingContainer.style.maxHeight = minSize.h + 'px';
            U.resizingContainer.dataset.oldsizew = '' + size.w;
            U.resizingContainer.dataset.oldsizeh = '' + size.h;
        }
    }
    static resizableBorderMouseDown(e) {
        U.resizingBorder = e.currentTarget;
        U.resizingContainer = U.resizingBorder;
        U.resizingContainer.style.padding = '0';
        U.resizingContainer.style.flexBasis = '0';
        // U.resizingContent.style.width = '100%'; required too
        while (!U.resizingContainer.classList.contains('resizableBorderContainer')) {
            U.resizingContainer = U.resizingContainer.parentNode;
        }
        if (U.checkDblClick())
            U.resizableBorderMouseDblClick(e);
    }
    static resizableBorderMouseUp(e) { U.resizingBorder = U.resizingContainer = null; }
    static resizableBorderUnset(e) {
        e.preventDefault();
        const border = e.currentTarget;
        let container = border;
        while (container.classList.contains('resizableBorderContainer')) {
            container = container.parentNode;
        }
        container.style.flexBasis = '';
        container.style.minHeight = container.style.minWidth =
            container.style.maxHeight = container.style.maxWidth =
                container.style.height = container.style.width = '';
    }
    static resizableBorderMouseMove(e) {
        if (!U.resizingBorder) {
            return;
        }
        const size = U.sizeof(U.resizingContainer);
        const missing = new Point(0, 0);
        const cursor = new Point(e.pageX, e.pageY);
        const puntoDaFarCoinciderePT = cursor.duplicate();
        const l = U.resizingBorder.classList.contains('left');
        const r = U.resizingBorder.classList.contains('right');
        const t = U.resizingBorder.classList.contains('top');
        const b = U.resizingBorder.classList.contains('bottom');
        if (l) {
            puntoDaFarCoinciderePT.x = size.x;
        }
        if (r) {
            puntoDaFarCoinciderePT.x = size.x + size.w;
        }
        if (t) {
            puntoDaFarCoinciderePT.y = size.y;
        }
        if (b) {
            puntoDaFarCoinciderePT.y = size.y + size.h;
        }
        const add = cursor.subtract(puntoDaFarCoinciderePT, true);
        if (l) {
            add.x *= -1;
        }
        if (t) {
            add.y *= -1;
        }
        // o = p0 - c
        // p = c
        // c = p0-o
        // console.log('lrtb: ', l, r, t, b);
        // console.log('ptcoinc: ', puntoDaFarCoinciderePT, ' cursor:', cursor, ' size:', size, 'adjust:', add);
        size.w += add.x;
        size.h += add.y;
        const borderSize = U.sizeof(U.resizingBorder);
        if (l || r) {
            size.w = Math.max(size.w, borderSize.w * 2);
        }
        if (t || b) {
            size.h = Math.max(size.h, borderSize.h * 2);
        }
        U.resizingContainer.style.width = U.resizingContainer.style.maxWidth = U.resizingContainer.style.minWidth = (size.w) + 'px';
        U.resizingContainer.style.height = U.resizingContainer.style.maxHeight = U.resizingContainer.style.minHeight = (size.h) + 'px';
        // console.log('result:' + U.resizingContainer.style.width);
        U.resizingContainer.style.flexBasis = 'unset';
    }
    static resizableBorderSetup(root = document.body) {
        // todo: addBack is great, aggiungilo tipo ovunque. find() esclude l'elemento radice anche se matcha la query, addback rimedia aggiungendo il
        //  previous matched set che matcha la condizione.
        const $arr = $(root).find('.resizableBorder').addBack('.resizableBorder');
        let i = -1;
        const nl = '\n';
        while (++i < $arr.length) {
            U.makeResizableBorder($arr[i]);
        }
        U.eventiDaAggiungereAlBody(null);
        $(document.body).off('mousemove.ResizableBorder').on('mousemove.ResizableBorder', U.resizableBorderMouseMove);
        $(document.body).off('mouseup.ResizableBorder').on('mouseup.ResizableBorder', U.resizableBorderMouseUp);
        $('.resizableBorder.corner').off('mousedown.ResizableBorder').on('mousedown.ResizableBorder', U.resizableBorderMouseDown)
            .off('contextmenu.ResizableBorder').on('contextmenu.ResizableBorder', U.resizableBorderUnset);
        $('.resizableBorder.side').off('mousedown.ResizableBorder').on('mousedown.ResizableBorder', U.resizableBorderMouseDown)
            .off('contextmenu.ResizableBorder').on('contextmenu.ResizableBorder', U.resizableBorderUnset);
        return;
    }
    static makeResizableBorder(html, left = true, top = true, right = true, bottom = true) {
        // if (!html.classList.contains('resizableBorderContainer')) { html.classList.add('resizableBorderContainer'); }
        let container = null;
        let content = null;
        if (false) {}
        else {
            // first run: initialing now.
            // const tmpNode: HTMLElement = document.createElement('div');
            // while (html.firstChild) { tmpNode.appendChild(html.firstChild); }
            // while (tmpNode.firstChild) { content.appendChild(tmpNode.firstChild); }
            content = html;
            container = U.cloneHtml(html, false);
            html.setAttribute('original', 'true');
            while (container.classList.length > 0) {
                container.classList.remove(container.classList.item(0));
            }
        }
        console.log('container:', container, 'content:', content);
        U.pe(container.children.length !== 0, '');
        // U.copyStyle(html, container);
        html.parentNode.insertBefore(container, html);
        content.classList.remove('resizableBorderContainer');
        content.classList.add('resizableContent');
        container.classList.add('resizableBorderContainer');
        if (left) {
            html.dataset.resizableleft = 'true';
        }
        if (right) {
            html.dataset.resizableright = 'true';
        }
        if (top) {
            html.dataset.resizabletop = 'true';
        }
        if (bottom) {
            html.dataset.resizablebottom = 'true';
        }
        left = html.dataset.resizableleft === 'true';
        right = html.dataset.resizableright === 'true';
        top = html.dataset.resizabletop === 'true';
        bottom = html.dataset.resizablebottom === 'true';
        // const size: Size = U.sizeof(html);
        // container.style.width = size.w + 'px';
        // container.style.height = size.h + 'px';
        const l = U.toHtml('<div class="resizableBorder side left"></div>');
        const r = U.toHtml('<div class="resizableBorder side right"></div>');
        const t = U.toHtml('<div class="resizableBorder side top"></div>');
        const b = U.toHtml('<div class="resizableBorder side bottom"></div>');
        const tl = U.toHtml('<div class="resizableBorder corner top left"></div>');
        const tr = U.toHtml('<div class="resizableBorder corner top right"></div>');
        const bl = U.toHtml('<div class="resizableBorder corner bottom left"></div>');
        const br = U.toHtml('<div class="resizableBorder corner bottom right"></div>');
        const hstripT = U.toHtml('<div class="resizableStrip up"></div>');
        const hstripM = U.toHtml('<div class="resizableStrip center"></div>');
        const hstripB = U.toHtml('<div class="resizableStrip down"></div>');
        l.dataset.resizeenabled = left ? 'true' : 'false';
        r.dataset.resizeenabled = right ? 'true' : 'false';
        t.dataset.resizeenabled = top ? 'true' : 'false';
        b.dataset.resizeenabled = bottom ? 'true' : 'false';
        tl.dataset.resizeenabled = top && left ? 'true' : 'false';
        tr.dataset.resizeenabled = top && right ? 'true' : 'false';
        bl.dataset.resizeenabled = bottom && left ? 'true' : 'false';
        br.dataset.resizeenabled = bottom && right ? 'true' : 'false';
        const style = getComputedStyle(html, null);
        // html.style.border = 'none';
        t.style.borderTop = tl.style.borderTop = tr.style.borderTop = style.borderTop;
        b.style.borderBottom = bl.style.borderBottom = br.style.borderBottom = style.borderBottom;
        l.style.borderLeft = tl.style.borderLeft = bl.style.borderLeft = style.borderLeft;
        r.style.borderRight = tr.style.borderRight = br.style.borderRight = style.borderRight;
        // per un bug lo stile viene sempre letto come "none"
        /*l.style.borderStyle = 'solid';
        r.style.borderStyle = 'solid';
        t.style.borderStyle = 'solid';
        b.style.borderStyle = 'solid';*/
        //console.log('style.border:', style.border);
        /*U.pe(t.style.borderTopStyle === 'none', '1');
        U.pe(isNaN(+t.style.borderWidth), '2');
        U.pe(+t.style.borderWidth === 0, '3');
        if (t.style.borderTopStyle === 'none' || isNaN(+t.style.borderWidth) || +t.style.borderWidth === 0) {
          t.style.borderWidth = t.style.height = t.style.width = t.style.flexGrow = '0'; }
        if (b.style.borderBottomStyle === 'none' || isNaN(+b.style.borderWidth) || +b.style.borderWidth === 0) {
          b.style.borderWidth = b.style.height = b.style.width = b.style.flexGrow = '0'; }
        if (l.style.borderLeftStyle === 'none' || isNaN(+l.style.borderWidth) || +l.style.borderWidth === 0) {
          l.style.borderWidth = l.style.height = l.style.width = l.style.flexGrow = '0'; }
        if (r.style.borderTopStyle === 'none' || isNaN(+r.style.borderWidth) || +r.style.borderWidth === 0) {
          r.style.borderWidth = r.style.height = r.style.width = r.style.flexGrow = '0'; }*/
        /*
        const borderSizeL: Size;
        const borderSizeR: Size;
        const borderSizeT: Size;
        const borderSizeB: Size;
        tl.style.width = l.style.width = bl.style.width = (borderSizeL.w) + 'px';
        tr.style.width = r.style.width = br.style.width = (borderSizeR.w) + 'px';
        tl.style.height = t.style.height = tr.style.height = (borderSizeT.h) + 'px';
        bl.style.height = b.style.height = br.style.height = (borderSizeB.h) + 'px';
    
        t.style.width = b.style.width = (size.w - (borderSizeL.w + borderSizeR.w)) + 'px';
        l.style.height = r.style.height = (size.h - (borderSizeT.h + borderSizeB.w)) + 'px';*/
        // html.parentNode.appendChild(container);
        hstripT.appendChild(tl);
        hstripT.appendChild(t);
        hstripT.appendChild(tr);
        hstripM.appendChild(l);
        hstripM.appendChild(content);
        hstripM.appendChild(r);
        hstripB.appendChild(bl);
        hstripB.appendChild(b);
        hstripB.appendChild(br);
        container.appendChild(hstripT);
        container.appendChild(hstripM);
        container.appendChild(hstripB);
        container.style.border = 'none'; /*
        const size: Size = U.sizeof(container);
        const hbordersize = 10;
        const vbordersize = 10;
        container.style.width = Math.max(hbordersize * 2 + size.w) + 'px';
        container.style.height = Math.max(vbordersize * 2 + size.h) + 'px';*/
        content.style.border = 'none';
        if (!content.style.width || content.style.width === 'auto') {
            content.style.width = '100%';
            content.style.height = '100%';
        }
        content.style.minWidth = '0';
        content.style.minHeight = '0';
    }
    static copyStyle(from, to, computedStyle = null) {
        // trying to figure out which style object we need to use depense on the browser support, so we try until we have one.
        if (!computedStyle) {
            computedStyle = from['' + 'currentStyle'] || document.defaultView.getComputedStyle(from, null);
        }
        // if the browser dose not support both methods we will return failure.
        if (!computedStyle) {
            return false;
        }
        // checking that the value is not a undefined, object, function, empty or int index ( happens on some browser)
        const stylePropertyValid = (name, value) => {
            // nb: mind that typeof [] === 'object';
            return typeof value !== 'undefined' && typeof value !== 'object' && typeof value !== 'function' && value.length > 0
                // && value !== parseInt(value, 10); };
                && +name !== parseInt(name, 10);
        };
        let property;
        for (property in computedStyle) {
            // hasOwnProperty is useless, but compiler required
            // console.log('property[', property, '] = ', computedStyle[property]);
            if (!computedStyle.hasOwnProperty(property) || !stylePropertyValid(property, computedStyle[property])) {
                continue;
            }
            to.style[property] = computedStyle[property];
        }
        return true;
    }
    static cclear() { console.clear(); console.trace(); }
    static toDottedURI(uri) {
        return U.replaceAll(U.replaceAll(uri.substring(uri.indexOf('://') + '://'.length), '\\', '/'), '/', '.');
    }
    static toHttpsURI(uri, folderChar = '/') {
        return 'https://' + U.replaceAll(uri, '.', folderChar);
    }
    static toNumber(o) {
        if (o === null || o === undefined || (U.isString(o) && o.trim() === ''))
            return null;
        o = +o;
        if (isNaN(o))
            return null;
        return o;
    }
    // returns true only if parameter is already a number by type. U.isNumber('3') will return false
    static isNumber(o) { return +o === o && o !== NaN; }
    // returns true only if parameter is a number or a stringified number. U.isNumber('3') will return true
    static isNumerizable(o) { return o !== null && o !== undefined && !isNaN(+0); }
    static isNumberArray(o, minn = Number.NEGATIVE_INFINITY, max = Number.POSITIVE_INFINITY, ifItIsEmptyArrReturn = true) {
        const validation = (val) => U.isNumber(val) && val >= minn && val <= max;
        return U.isArrayOf(o, validation, ifItIsEmptyArrReturn);
    }
    static isIntegerArray(o, minn = Number.NEGATIVE_INFINITY, max = Number.POSITIVE_INFINITY, ifItIsEmptyArrReturn = true) {
        const validation = (val) => (U.isNumber(val) && Math.floor(val) === val && val >= minn && val <= max);
        return U.isArrayOf(o, validation, ifItIsEmptyArrReturn);
    }
    static isCharArray(values, ifItIsEmpryArrayReturn = true) {
        const charValidator = (val) => (val.length === 1);
        return U.isArrayOf(values, charValidator, ifItIsEmpryArrayReturn);
    }
    static isArrayOf(value, functionCheck, ifItIsEmptyArrayReturn = true) {
        if (!Array.isArray(value)) {
            return false;
        }
        let i;
        if (value.length === 0) {
            return ifItIsEmptyArrayReturn;
        }
        for (i = 0; i < value.length; i++) {
            if (!functionCheck(value[i]) && !U.isArrayOf(value[i], functionCheck, ifItIsEmptyArrayReturn)) {
                return false;
            }
        }
        return true;
    }
    static isStringArray(value, ifItIsEmptyArrayReturn = true) {
        if (!Array.isArray(value)) {
            return false;
        }
        let i;
        if (value.length === 0) {
            return ifItIsEmptyArrayReturn;
        }
        for (i = 0; i < value.length; i++) {
            if (!U.isString(value[i]) && !U.isStringArray(value[i], true)) {
                return false;
            }
        }
        return true;
    }
    static clipboardCopy(text) {
        if (!U.clipboardinput) {
            U.clipboardinput = document.createElement('input');
            U.clipboardinput.id = U.prefix + 'CopyDataToClipboard';
            U.clipboardinput.type = 'text';
            U.clipboardinput.style.display = 'block';
            U.clipboardinput.style.position = 'absolute';
            U.clipboardinput.style.top = '-100vh';
        }
        document.body.appendChild(U.clipboardinput);
        U.clipboardinput.value = text;
        U.clipboardinput.select();
        document.execCommand('copy');
        document.body.removeChild(U.clipboardinput);
        U.clearSelection();
    }
    static clearSelection() { }
    static refreshPage() { window.location.href += ''; }
    static isArray(v) { return Array.isArray(v); }
    static isEmptyObject(v, returnIfNull = true, returnIfUndefined = false) {
        return U.isObject(v, returnIfNull, returnIfUndefined) && $.isEmptyObject(v);
    }
    static isObject(v, returnIfNull = true, returnIfUndefined = false, retIfArray = false) {
        if (v === null) {
            return returnIfNull;
        }
        if (v === undefined) {
            return returnIfUndefined;
        }
        if (Array.isArray(v)) {
            return retIfArray;
        }
        // nb: mind that typeof [] === 'array'
        return typeof v === 'object';
    }
    static isFunction(v) { return (typeof v === 'function'); }
    static isPrimitive(v, returnIfNull = true, returnIfUndefined = true) {
        if (v === null) {
            return returnIfNull;
        }
        if (v === undefined) {
            return returnIfUndefined;
        }
        // return (typeof v !== 'function') && (typeof v !== 'object') && (!U.isArray(v));
        return !U.isObject(v) && !Array.isArray(v) && !U.isFunction(v);
    }
    static getEndingNumber(s, ignoreNonNumbers = false, allowDecimal = false) {
        let i = s.length;
        let numberEnd = -1;
        while (--i > 0) {
            if (!isNaN(+s[i])) {
                if (numberEnd === -1) {
                    numberEnd = i;
                }
                continue;
            }
            if (s[i] === '.' && !allowDecimal) {
                break;
            }
            if (s[i] === '.') {
                allowDecimal = false;
                continue;
            }
            if (!ignoreNonNumbers) {
                break;
            }
            if (numberEnd !== -1) {
                ignoreNonNumbers = false;
            }
        }
        s = numberEnd === -1 ? '1' : s.substring(i, numberEnd);
        return +parseFloat(s);
    }
    static increaseEndingNumber(s, allowLastNonNumberChars = false, allowDecimal = false, increaseWhile = null) {
        /*let i = s.length;
        let numberEnd = -1;
        while (--i > 0) {
          if (!isNaN(+s[i])) { if (numberEnd === -1) { numberEnd = i; } continue; }
          if (s[i] === '.' && !allowDecimal) { break; }
          if (s[i] === '.') { allowDecimal = false; continue; }
          if (!ignoreNonNumbers) { break; }
          if (numberEnd !== -1) { ignoreNonNumbers = false; }
        }
        if (numberEnd === -1) { return s + '_1'; }
        // i++;
        numberEnd++;*/
        let regexpstr = '([0-9]+' + (allowDecimal ? '|[0-9]+\\.[0-9]+' : '') + ')' + (allowLastNonNumberChars ? '[^0-9]*' : '') + '$';
        const matches = new RegExp(regexpstr, 'g').exec(s); // Global (return multi-match) Single line (. matches \n).
        // S flag removed for browser support (firefox), should work anyway.
        let prefix;
        let num;
        if (!matches) {
            prefix = s;
            num = 2;
        }
        else {
            U.pe(matches.length > 2, 'parsing error: /' + regexpstr + '/gs.match(' + s + ')');
            let i = s.length - matches[0].length;
            prefix = s.substring(0, i);
            num = 1 + (+matches[1]);
            // U.pe(isNaN(num), 'wrong parsing:', s, s.substring(i, numberEnd), i, numberEnd);
            // const prefix: string = s.substring(0, i);
            // console.log('increaseendingNumber:  prefix: |' + prefix+'| num:'+num, '[i] = ['+i+']; s: |'+s+"|");
        }
        while (increaseWhile !== null && increaseWhile(prefix + num)) {
            num++;
        }
        return prefix + num;
    }
    static isValidName(name) { return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name); }
    static getTSClassName(thing) { return thing.constructor.name + ''; }
    static detailButtonSetup($root = null) {
        if (!$root)
            $root = $(document.body);
        $root.find('button.detail').off('click.detailbutton').on('click.detailbutton', (e, forceHide) => {
            const btn = e.currentTarget;
            const $btn = $(btn);
            const $detailPanel = $root.find(btn.getAttribute('target'));
            const otherButtons = $(btn.parentElement).find('button.detail').toArray().filter(x => x != btn);
            // $styleown.find('div.detail:not(' + btn.getAttribute('target') + ')');
            const b = btn.dataset.on === '1';
            if (forceHide || b) {
                btn.style.width = '';
                btn.dataset.on = '0';
                btn.style.borderBottom = '';
                btn.style.borderBottomLeftRadius = '';
                btn.style.borderBottomRightRadius = '';
                $btn.find('.closed').show();
                $btn.find('.opened').hide();
                // $detailcontainers.show();
                $detailPanel.hide();
            }
            else {
                const size = U.sizeof(btn);
                btn.style.width = size.w + 'px';
                btn.dataset.on = '1';
                btn.style.borderBottom = 'none'; // '3px solid #252525';
                btn.style.borderBottomLeftRadius = '0';
                btn.style.borderBottomRightRadius = '0';
                $btn.find('.closed').hide();
                $btn.find('.opened').show()[0].style.width = (size.w - 15 * 2) + 'px';
                console.log('others:', otherButtons, 'me:', $btn);
                $(otherButtons).data('on', '1').trigger('click', true);
                $detailPanel.show();
            }
        });
        $root.find('div.detail').hide();
    }
    // Prevent the backspace key from navigating back.
    static preventBackSlashHistoryNavigation(event) {
        if (!event || !event.key || event.key.toLowerCase() !== 'backspace') {
            return true;
        }
        const types = ['text', 'password', 'file', 'search', 'email', 'number', 'date',
            'color', 'datetime', 'datetime-local', 'month', 'range', 'search', 'tel', 'time', 'url', 'week'];
        const srcElement = $(event['' + 'srcElement'] || event.target);
        const disabled = srcElement.prop('readonly') || srcElement.prop('disabled');
        if (!disabled) {
            if (srcElement[0].isContentEditable || srcElement.is('textarea')) {
                return true;
            }
            if (srcElement.is('input')) {
                const type = srcElement.attr('type');
                if (!type || types.indexOf(type.toLowerCase()) > -1) {
                    return true;
                }
            }
        }
        event.preventDefault();
        return false;
    }
    // esercizio per antonella array deep copy
    /// copy all the element inside the array, eventually deep cloning but not duplicating objects or leaf elements.
    static ArrayCopy(arr, deep) {
        const ret = [];
        let i;
        for (i = 0; i < arr.length; i++) {
            if (deep && Array.isArray(arr[i])) {
                const tmp = U.ArrayCopy(arr[i], deep);
                ret.push(tmp);
            }
            else {
                ret.push(arr[i]);
            }
        }
        return ret;
    }
    static ArrayMerge(arr1, arr2) {
        if (!arr1 || !arr2)
            return;
        Array.prototype.push.apply(arr1, arr2);
    }
    static ArrayMergeUnique(arr1, arr2) {
        if (!arr1 || !arr2)
            return;
        let i;
        for (i = 0; i < arr2.length; i++) {
            U.ArrayAdd(arr1, arr2[i]);
        }
    }
    static ArrayAdd(arr, elem, unique = true, throwIfContained = false) {
        U.pe(!arr || !Array.isArray(arr), 'arr null or not array:', arr);
        if (!unique) {
            arr.push(elem);
            return true;
        }
        if (arr.indexOf(elem) === -1) {
            arr.push(elem);
            return true;
        }
        U.pe(throwIfContained, 'element already contained:', arr, elem);
        return false;
    }
    static fieldCount(obj) {
        let counter = 1 - 1;
        for (const key in obj) {
            if (!(key in obj)) {
                continue;
            }
            counter++;
        }
        return counter;
    }
    static isPositiveZero(m) {
        if (Object['is' + '']) {
            return Object['is' + ''](m, +0);
        }
        return (1 / m === Number.POSITIVE_INFINITY);
    }
    static isNegativeZero(m) {
        if (Object['is' + '']) {
            return Object['is' + ''](m, -0);
        }
        return (1 / m === Number.NEGATIVE_INFINITY);
    }
    static TanToRadian(n) { return U.DegreeToRad(U.TanToDegree(n)); }
    static TanToDegree(n) {
        if (U.isPositiveZero(n)) {
            return 0;
        }
        if (n === Number.POSITIVE_INFINITY) {
            return 90;
        }
        if (U.isNegativeZero(n)) {
            return 180;
        }
        if (n === Number.POSITIVE_INFINITY) {
            return 270;
        }
        return U.RadToDegree(Math.atan(n));
    }
    static RadToDegree(radians) { return radians * (180 / Math.PI); }
    static DegreeToRad(degree) { return degree * (Math.PI / 180); }
    static replaceAllRegExp(value, regExp, replacement) { return value.replace(regExp, replacement); }
    static fixHtmlSelected($root) {
        const $selecteds = $root.find('select');
        let i;
        for (i = 0; i < $selecteds.length; i++) {
            const $option = $($selecteds[i]).find('option[selected]');
            U.selectHtml($selecteds[i], $option.length ? $option[0].value : null);
        }
    }
    // ignores first N equal chars and return the substring of s1 from N to N+len or until s1 end.
    static strFirstDiff(s1, s2, len) {
        let i;
        if (!s1 && !s2) {
            return [s1, s2];
        }
        if (s1 && !s2) {
            return [s1.substr(0, len), s2];
        }
        if (!s1 && s2) {
            return [s1, s2.substr(0, len)];
        }
        const min = Math.min(s1.length, s2.length);
        for (i = 0; i < min; i++) {
            if (s1[i] !== s2[i]) {
                return [s1.substr(i, len), s2.substr(i, len)];
            }
        }
        return null;
    }
    static mergeArray(a, b, inplace, asSet) {
        a = a || [];
        b = b || [];
        let ret;
        if (inplace) {
            (ret = a).push(...b);
        }
        else {
            ret = a.concat(...b);
        }
        return asSet ? [...new Set(ret)] : ret;
    }
    static mergeClasses(elem1, elem2) {
        const classes1 = elem1.getAttribute('class').split(' ');
        const classes2 = elem2.getAttribute('class').split(' ');
        elem1.setAttribute('class', U.mergeArray(classes1, classes2, true, true).join(' '));
    }
    static mergeStyles(html, fake, styleString = null) {
        let i;
        const styles1 = html.getAttribute('style').split(';');
        const styles2 = (styleString ? styleString : fake.getAttribute('style')).split(';');
        let stylesKv1 = {};
        const stylesKv2 = {};
        let key;
        let val;
        let pos;
        for (i = 0; i < styles1.length; i++) {
            pos = styles1[i].indexOf(':');
            key = styles1[i].substr(0, pos).trim();
            val = styles1[i].substr(pos + 1).trim();
            if (key == '' || val == '')
                continue;
            stylesKv1[key] = val;
        }
        for (i = 0; i < styles2.length; i++) {
            pos = styles2[i].indexOf(':');
            key = styles2[i].substr(0, pos).trim();
            val = styles2[i].substr(pos + 1).trim();
            if (key == '' || val == '')
                continue;
            stylesKv2[key] = val;
        }
        stylesKv1 = U.join(stylesKv1, stylesKv2, true, false);
        let style = '';
        for (key in stylesKv1) {
            style += key + ':' + stylesKv1[key] + '; ';
        }
        html.setAttribute('style', style);
    }
    static merge(a, b, overwriteNull = true, clone = true) { return U.join(a, b, overwriteNull, clone); }
    static join(a, b, overwriteNull = true, clone = true) {
        if (clone) {
            a = U.cloneObj(a);
        }
        let key;
        for (key in b) {
            if (!b.hasOwnProperty(key)) {
                continue;
            }
            if (b[key] !== undefined && a[key] === null && overwriteNull || a[key] === undefined) {
                a[key] = b[key];
            }
        }
        return a;
    }
    static getChildIndex_old(html, allNodes = true) {
        if (allNodes) {
            return Array.prototype.indexOf.call(html.parentNode.childNodes, html);
        }
        return Array.prototype.indexOf.call(html.parentNode.children, html);
    }
    static getChildIndex(array, child) {
        return Array.prototype.indexOf.call(array, child);
    }
    static getIndexesPath_old(parent, child) {
        let ret = [];
        while (child && child !== parent) {
            ret.push(U.getChildIndex(parent.childNodes, child));
            child = child.parentElement;
        }
        // ret = ret.splice(ret.length - 2, 1);
        return ret.reverse();
    }
    static getIndexesPath_NoParentKey(child, parent) {
        U.pe(true, 'getindexespath without parent key: todo');
        return null;
        // todo: top-down ricorsivo a tentativi. implementa loop detection. senza childkey (può variare es: parent.a[3].b.c[1] = child)
        //  return string array con nomi di campi e indici di array.
    }
    static getIndexesPath(child, parentKey, childKey = null /* null = parent is raw array*/, parentLimit = null) {
        let ret = [];
        while (child) {
            const parent = child[parentKey];
            if (child === parentLimit) {
                break;
            }
            if (!parent || parent === child) {
                break;
            }
            const parentArrChilds = childKey ? parent[childKey] : parent;
            ret.push(U.getChildIndex(parentArrChilds, child));
            child = child[parentKey];
        }
        return ret.reverse();
    }
    static followIndexesPath(root, indexedPath, childKey, outArr = { indexFollowed: [],
        debugArr: [{ index: 'Start', elem: root }] }, debug = false) {
        let j;
        let ret = root;
        let oldret = ret;
        U.pe(!childKey, 'must define a childkey', childKey);
        if (outArr)
            outArr.debugArr.push({ index: 'start', elem: root, childKey: childKey });
        debug = +window['debugi'] === 1;
        U.pe(childKey && childKey !== '' + childKey, 'U.followIndexesPath() childkey must be a string or a null:', childKey, 'root:', root);
        for (j = 0; j < indexedPath.length; j++) {
            let key = indexedPath[j];
            let childArr = childKey ? ret[childKey] : ret;
            U.pif(debug, 'path ' + j + ') = elem.' + childKey + ' = ', childArr);
            if (!childArr) {
                U.pif(debug, 'U.followIndexEnd 1:', outArr);
                return oldret;
            }
            ret = childArr[key];
            if (key >= childArr.length) {
                key = 'Key out of boundary: ' + key + '/' + childArr.length + '.';
            }
            U.pif(debug, 'path ' + j + ') = elem.' + childKey + '[ ' + key + '] = ', ret);
            if (outArr)
                outArr.debugArr.push({ index: key, elem: ret });
            if (!ret) {
                U.pif(debug, 'U.followIndexEnd 2:', outArr);
                return oldret;
            }
            if (outArr)
                outArr.indexFollowed.push(key);
            oldret = ret;
        }
        U.pif(debug, 'U.followIndexEnd 3:', outArr);
        return ret;
    }
    static followIndexesPathOld(templateRoot, indexedPath, allNodes = true, outArr = { indexFollowed: [] }, debug = false) {
        let j;
        let ret = templateRoot;
        let oldret = ret;
        const debugarr = [{ index: 'Start', html: ret }];
        for (j = 0; j < indexedPath.length; j++) {
            const index = indexedPath[j];
            ret = (allNodes ? ret.childNodes[index] : ret.children[index]);
            if (!ret) {
                console.log('folllowPath: clicked on some dinamically generated content, returning the closest static parent.', debugarr);
                U.pw(debug, 'clicked on some dinamically generated content, returning the closest static parent.', debugarr);
                return oldret;
            }
            oldret = ret;
            outArr.indexFollowed.push(index);
            debugarr.push({ index: index, html: ret });
        }
        U.pif(debug, 'followpath debug arr:', debugarr);
        return ret;
    }
    static removeDuplicates(arr0, clone = false) { return U.mergeArray(arr0, [], !clone, true); }
    static getStartSeparatorKey() { return ++U.startSeparatorKeyMax + ''; }
    static startSeparator(key, separator = ', ') {
        if (key in U.startSeparatorKeys)
            return separator;
        U.startSeparatorKeys[key] = true;
        return '';
    }
    static arrayContains(arr, searchElem) {
        if (!arr)
            return false;
        // return arr && arr.indexOf(searchElem) === -1; not working properly on strings. maybe they are evaluated by references and not by values.
        let i;
        for (i = 0; i < arr.length; i++) {
            if (arr[i] === searchElem)
                return true;
        }
        return false;
    }
    static toBoolString(bool) { return bool ? "true" : "false"; }
    static fromBoolString(str) { return str === "true" || str === 't' || +str === 1; }
    static parseSvgPath(str) {
        let i;
        let letter = null;
        let num1 = null;
        let num2 = null; // useless initializing phase to avoid IDE warnings
        let foundFloat = null;
        let pt = null;
        let current = null;
        const assoc = [];
        const pts = [];
        const ret = { assoc: assoc, pts: pts };
        const debug = false;
        str = str.toUpperCase();
        const startNextEntry = () => {
            num1 = '';
            num2 = '';
            pt = new Point(0, 0);
            pt.x = null;
            pt.y = null;
            foundFloat = false;
        };
        const endCurrentEntry = () => {
            pt.y = +num2;
            U.pe(isNaN(pt.y), 'parsed non-number as value of: |' + letter + '| in svg.path attribute: |' + str + '|', ret);
            current = { letter: letter, pt: pt };
            U.pe(pt.x === null || pt.y === null, num1, num2, pt, i, str);
            pts.push(pt);
            assoc.push(current);
            U.pif(debug, 'endEntry:', current, ' position: |' + str.substr(0, i) + '|' + str.substr(i) + "|");
            startNextEntry();
        };
        startNextEntry();
        for (i = 0; i < str.length; i++) {
            const c = str[i];
            switch (c) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case '.':
                case '-':
                case '+':
                    if (c === '.') {
                        U.pe(foundFloat, ' found 2 floating points in a single parsed number in svg.path attribute: |' + str + '|');
                        foundFloat = true;
                    }
                    U.pe((c === '+' || c === '-') && (pt.x === null && num1 !== '' || pt.y === null && num2 !== ''), 'found a ' + c + ' sign inside a number:', ret, i, str);
                    if (pt.x === null) {
                        num1 += c;
                        break;
                    }
                    if (pt.y === null) {
                        num2 += c;
                        break;
                    }
                    U.pe(true, 'found 3 numbers while parsing svg.path attribute: |' + str + '|', ret);
                    break;
                case ' ':
                    if (pt.x === null) {
                        pt.x = +num1;
                        foundFloat = false;
                        U.pe(isNaN(+pt.x), 'parsed non-number as value of: |' + letter + '| in svg.path attribute: |' + str + '|', ret);
                        break;
                    }
                    if (pt.y === null) {
                        pt.y = +num2;
                        U.pe(isNaN(+pt.y), 'parsed non-number as value of: |' + letter + '| in svg.path attribute: |' + str + '|', ret);
                        break;
                    }
                    break;
                default:
                    if (letter) {
                        endCurrentEntry();
                    }
                    letter = c;
                    break;
            }
        }
        endCurrentEntry();
        return ret;
    }
    static focusHistorySetup() {
        U.focusHistoryEntries = U.focusHistoryEntries || [];
        U.focusHistoryElements = U.focusHistoryElements || [];
        U.focusHistoryEntriesAndIdleTimes = U.focusHistoryEntriesAndIdleTimes || [];
        $(document).off('focusin.history').on('focusin.history', (e) => {
            const element = e.target;
            // if (document.activeElement === element) return; // do i need to avoid duplicates or not?
            const entry = new FocusHistoryEntry(e, element);
            U.focusHistoryEntriesAndIdleTimes.push(entry);
            U.focusHistoryElements.push(element);
            U.focusHistoryEntries.push(entry);
            setTimeout(() => { U.focusHistoryEntriesAndIdleTimes.push(null); }, 0);
        });
    }
    static focusHistoryReset() {
        U.focusHistoryEntries = [];
        U.focusHistoryElements = [];
    }
    static getLastFocusEntry() {
        U.pe(!U.focusHistoryEntries, 'focus history not initializated. call U.focusHistorySetup() before');
        return U.focusHistoryEntries[U.focusHistoryEntries.length];
    }
    /*
      static unescapeHtmlEntities(s: string): string { return HE.decode(s); }
      static escapeHtmlEntities(s: string): string { return HE.encode(s); }*/
    static shallowArrayCopy(arr) {
        let ret = [];
        let i;
        if (!arr)
            return null;
        for (i = 0; i < arr.length; i++) {
            ret.push(arr[i]);
        }
        return ret;
    }
    static arrayInsertAt(arr, index, item) {
        U.pe(!arr || !Array.isArray(arr), 'ArrayInsertAt() must have a parameter array');
        index = Math.max(0, index);
        index = Math.min(arr.length, index);
        arr.splice(index, 0, item);
    }
    static newArray(size) {
        let ret = [];
        ret.length = Math.max(0, size);
        return ret;
    }
    static isInput(target, deep_up, select = true, input = true, textarea = true, contenteditable = true) {
        let tag;
        let attrcontenteditable;
        let inputcheck = input ? 'input' : 'mustfail';
        let selectcheck = select ? 'select' : 'mustfail';
        let textareacheck = textarea ? 'textarea' : 'mustfail';
        while (target) {
            if (target === window.document)
                return false;
            let targetElement = target instanceof Element ? target : null;
            tag = targetElement ? targetElement.tagName.toLowerCase() : null;
            if (tag === inputcheck || tag === selectcheck || tag === textareacheck) {
                console.log('isInput:', target);
                return true;
            }
            attrcontenteditable = contenteditable && targetElement ? targetElement.getAttribute('contenteditable') : null;
            if (attrcontenteditable === '' || attrcontenteditable === 'true') {
                console.log('isInput:', target);
                return true;
            }
            if (!deep_up)
                return false;
            target = target.parentNode;
        }
        return false;
    }
    static getValue(input0) {
        const input = (input0 instanceof HTMLInputElement) ? input0 : null;
        if (input)
            return input.value;
        const textarea = (input0 instanceof HTMLTextAreaElement) ? input0 : null;
        if (textarea)
            return textarea.value;
        return input0.getAttribute('value') || input0['' + 'innerText'] || input0.innerHTML;
    }
    static followsPattern(input0, value = null) {
        let input = (input0 instanceof HTMLInputElement) ? input0 : null;
        let pattern = input ? input.pattern : input0.getAttribute('pattern');
        if (pattern === null || pattern === undefined)
            return true;
        const val = value || (input ? input.value : U.getValue(input0));
        const regex = new RegExp(pattern);
        return regex && regex.test(val);
    }
    static trimStart(s, trimchars) {
        let i;
        for (i = 0; i < s.length && trimchars.indexOf(s[i]) !== -1; i++) {
            ;
        }
        return s.substr(i);
    }
    static arraySubtract(arr1, arr2, inPlace) {
        let i;
        const ret = inPlace ? arr1 : [...arr1];
        for (i = 0; i < arr2.length; i++) {
            U.arrayRemoveAll(ret, arr2[i]);
        }
        return ret;
    }
    static getAttributesByRegex(elem, regexp) {
        const ret = [];
        let i;
        for (i = 0; i < elem.attributes.length; i++) {
            const attr = elem.attributes[i];
            if (regexp.test(attr.name))
                ret.push(attr);
        }
        return ret;
    }
    static getRelativeParentNode(node) {
        while (node && node instanceof Element) {
            if (window.getComputedStyle(node.parentElement).position === 'relative') {
                return node;
            }
            node = node.parentElement;
        }
        return document.body;
    }
    static swapChildrens(node1, node2) {
        const arr = Array.from(node1.childNodes);
        let i;
        for (i = 0; i < node2.childNodes.length; i++) {
            node1.appendChild(node2.childNodes[i]);
        }
        for (i = 0; i < arr.length; i++) {
            node2.appendChild(arr[i]);
        }
    }
    static swap(node1, node2) {
        U.pe(node1 && !(node1 instanceof Node) || node2 && !(node2 instanceof Node), 'aU.swap() arguments mudt be nodes, found instead:', node1, node2);
        const parent1 = node1.parentNode;
        const parent2 = node2.parentNode;
        // const next1: Node = node1.nextSibling; // qui non è necessario
        const next2 = node2.nextSibling; // se non metto almeno next2, il secondo insertBefore fallisce perchè node2 è stato spostato.
        //console.log('if (parent1 (', parent1, '))  parent1.insertBefore(', node2, node1, '); parent1.removeChild(', node1, '); }');
        //console.log('if (parent2 (', parent2, '))  parent2.insertBefore(', node1, next2, '); parent2.removeChild(', node2, '); }');
        if (parent1) {
            parent1.insertBefore(node2, node1);
            parent1.removeChild(node1);
        }
        if (parent2) {
            parent2.insertBefore(node1, next2);
            parent2.removeChild(node2);
        }
    }
    static validateDatalist(input, addinvalidclass = true, checkByValueAttribute = true) {
        console.log('input.list', input.list);
        if (!input.list)
            return true;
        let valid;
        if (checkByValueAttribute) {
            console.log($(input.list), '.find(\'option[value="' + input.value + '"]');
            valid = $(input.list).find('option[value="' + input.value + '"]').length >= 1;
        }
        else {
            const arr = $(input.list).find('option[value="' + input.value + '"]');
            let i;
            valid = false;
            for (i = 0; i < arr.length; i++) {
                if (arr[i].innerText === input.value) {
                    valid = true;
                    break;
                }
            }
        }
        console.log('input:', input, 'addclass:', addinvalidclass, 'valid:', valid);
        if (addinvalidclass) {
            if (valid) {
                input.removeAttribute('invalidDataList');
            }
            else {
                input.setAttribute('invalidDataList', 'true');
            }
        }
        return valid;
    }
    /// usage: U.varname({wrappedVariableName}) = 'wrappedVariableName';
    static varname(wrappedVariable) { return Object.keys(wrappedVariable)[0]; }
    static varname2(parentObject, variable) {
        for (let key in parentObject) {
            if (parentObject[key] === variable)
                return key;
        }
        U.pe(true, 'not a valid parent:', parentObject, variable);
    }
    static isTriggered(e) {
        // nb: actually JQ.ClickEvent implements JQ.EventBase extends JQ.TriggeredEvent that extends Event (native)
        // but for some reason the IDE is telling me clickEVent is a TriggeredEVent but not not an Event.
        let ist = !!e['isTrigger'];
        let orig = !!e['originalEvent'];
        U.pe(ist === orig, 'assertion failed (istrigger):', ist, orig);
        return ist;
    }
    static ArrayToMap(arr, useLastIndexAsValue = false) { return U.toMap(arr, useLastIndexAsValue); }
    static toDictionary(arr, useLastIndexAsValue = false) { return U.toMap(arr, useLastIndexAsValue); }
    static toMap(arr, useLastIndexAsValue = false) {
        const ret = {};
        for (let i = 0; i < arr.length; i++) {
            ret['' + arr[i]] = useLastIndexAsValue ? i : true;
        }
        return ret;
    }
}
U.loopcounter = 0;
U.prefix = 'ULibrary_';
U.sizeofvar = null;
U.$sizeofvar = null;
U.clipboardinput = null;
U.PermuteArr = [];
U.PermuteUsedChars = [];
U.resizingBorder = null;
U.resizingContainer = null;
// static he = null;
U.production = false;
U.addCssAvoidDuplicates = {};
U.varTextToSvg = null;
U.dblclickchecker = new Date().getTime(); // todo: move @ start
U.dblclicktimerms = 300;
U.mouseLeftButton = 0;
U.mouseWheelButton = 1;
U.mouseRightButton = 2;
U.mouseBackButton = 3;
U.mouseForwardButton = 4;
U.mouseLeftButtons = 1; // "evt.buttons" is binary. 7 = left + right + wheel; 0 = no button pressed.
U.mouseRightButtons = 2;
U.mouseWheelButtons = 4;
U.mouseBackButtons = 8;
U.mouseForwardButtons = 16;
U.vertexOldPos = null;
U.$alertcontainer = null;
U.alertcontainer = null;
U.startSeparatorKeys = {};
U.startSeparatorKeyMax = -1;
U.focusHistoryEntriesAndIdleTimes = undefined;
U.focusHistoryEntries = undefined;
U.focusHistoryElements = undefined;
var AttribETypes;
(function (AttribETypes) {
    //  FakeElementAddFeature = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//FakeElement',
    // era il 'pulsante per aggiungere feature nel mm.',
    // reference = 'reference??',
    AttribETypes["void"] = "???void";
    AttribETypes["EChar"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EChar";
    AttribETypes["EString"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString";
    AttribETypes["EDate"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate";
    AttribETypes["EFloat"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat";
    AttribETypes["EDouble"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble";
    AttribETypes["EBoolean"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean";
    AttribETypes["EByte"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EByte";
    AttribETypes["EShort"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EShort";
    AttribETypes["EInt"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt";
    AttribETypes["ELong"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong";
    /*
    ECharObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ECharObject',
    EStringObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EStringObject',
    EDateObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDateObject',
    EFloatObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloatObject',
    EDoubleObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject',
    EBooleanObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObj',
    EByteObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EByteObject',
    EShortObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EShortObject',
    EIntObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject',
    ELongObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELongObject', */
    // EELIST = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList', // List<E> = List<?>
})(AttribETypes || (AttribETypes = {}));
// export type Json = object;
class Json {
    constructor(j) { }
    static getAnnotations(thiss) {
        const ret = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].eAnnotations];
        if (!ret || $.isEmptyObject(ret)) {
            return [];
        }
        if (Array.isArray(ret)) {
            return ret;
        }
        else {
            return [ret];
        }
    }
    static getDetails(thiss) {
        const ret = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].details];
        if (!ret || $.isEmptyObject(ret)) {
            return [];
        }
        if (Array.isArray(ret)) {
            return ret;
        }
        else {
            return [ret];
        }
    }
    static getChildrens(thiss, throwError = false, functions = false) {
        if (!thiss && !throwError) {
            return [];
        }
        const mod = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreRoot"].ecoreEPackage];
        const pkg = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].eClassifiers];
        const cla = thiss[functions ? _Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eOperations : _Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eStructuralFeatures];
        const fun = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eParameters];
        const lit = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].eLiterals];
        const ret = mod || pkg || cla || fun || lit;
        /*if ( ret === undefined || ret === null ) {
          if (thiss['@name'] !== undefined) { ret = thiss; } // if it's the root with only 1 child arrayless
        }*/
        // U.pe(true, debug, 'getchildrens(', thiss, ')');
        U.pe(throwError && !ret, 'getChildrens() Failed: ', thiss, ret);
        // console.log('ret = ', ret, ' === ', {}, ' ? ', ($.isEmptyObject(ret) ? [] : [ret]));
        if (!ret || $.isEmptyObject(ret)) {
            return [];
        }
        if (Array.isArray(ret)) {
            return ret;
        }
        else {
            return [ret];
        }
    }
    static read(json, field, valueIfNotFound = 'read<T>()CanThrowError') {
        let ret = json ? json[field] : null;
        if (ret !== null && ret !== undefined && field.indexOf(_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker) !== -1) {
            U.pe(U.isObject(ret, false, false, true), 'inline value |' + field + '| must be primitive.', ret);
            ret = U.multiReplaceAll('' + ret, ['&amp;', '&#38;', '&quot;'], ['&', '\'', '"']);
        }
        if ((ret === null || ret === undefined)) {
            U.pe(valueIfNotFound === 'read<T>()CanThrowError', 'Json.read<', '> failed: field[' + field + '], json: ', json);
            return valueIfNotFound;
        }
        return ret;
    }
    static write(json, field, val) {
        if (val !== null && field.indexOf(_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker) !== -1) {
            U.pe(val !== '' + val, 'inline value |' + field + '| must be a string.', val);
            val = U.multiReplaceAll(val, ['&', '\'', '"'], ['&amp;', '&#38;', '&quot;']);
        }
        else
            U.pe(val !== '' + val || !U.isObject(val, true), 'primitive values should be inserted only inline in the xml:', field, val);
        json[field] = val;
        return val;
    }
}
class DetectZoom {
    static device() { return detect_zoom__WEBPACK_IMPORTED_MODULE_2__["device"](); }
    static zoom() { U.pe(true, 'better not use this, looks like always === 1'); return detect_zoom__WEBPACK_IMPORTED_MODULE_2__["zoom"](); }
    test() {
        let a;
        return a = null;
    }
}
class ISize {
    constructor(x = 0, y = 0, w = 0, h = 0) {
        if (isNaN(+x)) {
            x = 0;
        }
        if (isNaN(+y)) {
            y = 0;
        }
        if (isNaN(+w)) {
            w = 0;
        }
        if (isNaN(+h)) {
            h = 0;
        }
        this.x = x;
        this.y = y;
        this.w = w;
        this.h = h;
    }
    tl() { return this.makePoint(this.x, this.y); }
    tr() { return this.makePoint(this.x + this.w, this.y); }
    bl() { return this.makePoint(this.x, this.y + this.h); }
    br() { return this.makePoint(this.x + this.w, this.y + this.h); }
    equals(size) { return this.x === size.x && this.y === size.y && this.w === size.w && this.h === size.h; }
    /// field-wise Math.min()
    min(minSize, clone) {
        const ret = clone ? this.duplicate() : this;
        if (!isNaN(minSize.x) && ret.x < minSize.x) {
            ret.x = minSize.x;
        }
        if (!isNaN(minSize.y) && ret.y < minSize.y) {
            ret.y = minSize.y;
        }
        if (!isNaN(minSize.w) && ret.w < minSize.w) {
            ret.w = minSize.w;
        }
        if (!isNaN(minSize.h) && ret.h < minSize.h) {
            ret.h = minSize.h;
        }
        return ret;
    }
    max(maxSize, clone) {
        const ret = clone ? this.duplicate() : this;
        if (!isNaN(maxSize.x) && ret.x > maxSize.x) {
            ret.x = maxSize.x;
        }
        if (!isNaN(maxSize.y) && ret.y > maxSize.y) {
            ret.y = maxSize.y;
        }
        if (!isNaN(maxSize.w) && ret.w > maxSize.w) {
            ret.w = maxSize.w;
        }
        if (!isNaN(maxSize.h) && ret.h > maxSize.h) {
            ret.h = maxSize.h;
        }
        return ret;
    }
    contains(pt) {
        return pt.x >= this.x && pt.x <= this.x + this.w && pt.y >= this.y && pt.y <= this.y + this.h;
    }
}
class Size extends ISize {
    static fromPoints(firstPt, secondPt) {
        const minX = Math.min(firstPt.x, secondPt.x);
        const maxX = Math.max(firstPt.x, secondPt.x);
        const minY = Math.min(firstPt.y, secondPt.y);
        const maxY = Math.max(firstPt.y, secondPt.y);
        return new Size(minX, minY, maxX - minX, maxY - minY);
    }
    clone(json) { return new Size(json.x, json.y, json.w, json.h); }
    duplicate() { return new Size().clone(this); }
    makePoint(x, y) { return new Point(x, y); }
    tl() { return super.tl(); }
    tr() { return super.tr(); }
    bl() { return super.bl(); }
    br() { return super.br(); }
    equals(size) { return super.equals(size); }
    min(minSize, clone) { return super.min(minSize, clone); }
    max(minSize, clone) { return super.max(minSize, clone); }
    intersection(size) {
        // anche "isinside"
        let startx, starty, endx, endy;
        startx = Math.max(this.x, size.x);
        starty = Math.max(this.y, size.y);
        endx = Math.min(this.x + this.w, size.x + size.w);
        endy = Math.min(this.y + this.h, size.y + size.h);
        const intersection = new Size(0, 0, 0, 0);
        intersection.x = startx;
        intersection.y = starty;
        intersection.w = endx - startx;
        intersection.h = endy - starty;
        const doesintersect = intersection.w > 0 && intersection.h > 0;
        return (doesintersect) ? intersection : null;
    }
}
class GraphSize extends ISize {
    static fromPoints(firstPt, secondPt) {
        const minX = Math.min(firstPt.x, secondPt.x);
        const maxX = Math.max(firstPt.x, secondPt.x);
        const minY = Math.min(firstPt.y, secondPt.y);
        const maxY = Math.max(firstPt.y, secondPt.y);
        return new GraphSize(minX, minY, maxX - minX, maxY - minY);
    }
    static closestIntersection(vertexGSize, prevPt, pt0, gridAlign = null) {
        let pt = pt0.duplicate();
        const m = GraphPoint.getM(prevPt, pt);
        const q = GraphPoint.getQ(prevPt, pt);
        U.pe(Math.abs((pt.y - m * pt.x) - (prevPt.y - m * prevPt.x)) > .001, 'wrong math in Q:', (pt.y - m * pt.x), ' vs ', (prevPt.y - m * prevPt.x));
        /*const isL = prevPt.x < pt.x;
        const isT = prevPt.y < pt.y;
        const isR = !isL;
        const isB = !isT; */
        if (m === Number.POSITIVE_INFINITY && q === Number.NEGATIVE_INFINITY) { // bottom middle
            return new GraphPoint(vertexGSize.x + vertexGSize.w / 2, vertexGSize.y + vertexGSize.h);
        }
        // console.log('pt:', pt, 'm:', m, 'q:', q);
        let L = new GraphPoint(0, 0);
        let T = new GraphPoint(0, 0);
        let R = new GraphPoint(0, 0);
        let B = new GraphPoint(0, 0);
        L.x = vertexGSize.x;
        L.y = m * L.x + q;
        R.x = vertexGSize.x + vertexGSize.w;
        R.y = m * R.x + q;
        T.y = vertexGSize.y;
        T.x = (T.y - q) / m;
        B.y = vertexGSize.y + vertexGSize.h;
        B.x = (B.y - q) / m;
        // prendo solo il compreso pt ~ prevPt (escludo così il "pierce" sulla faccia opposta), prendo il più vicino al centro.
        // console.log('4 possibili punti di intersezione (LTBR):', L, T, B, R);
        /* this.owner.mark(this.owner.toHtmlCoord(T), true, 'blue');
        this.owner.mark(this.owner.toHtmlCoord(B), false, 'violet');
        this.owner.mark(this.owner.toHtmlCoord(L), false, 'red');
        this.owner.mark(this.owner.toHtmlCoord(R), false, 'orange');*/
        if ((B.x >= pt.x && B.x <= prevPt.x) || (B.x >= prevPt.x && B.x <= pt.x)) { }
        else {
            B = null;
        }
        if ((T.x >= pt.x && T.x <= prevPt.x) || (T.x >= prevPt.x && T.x <= pt.x)) { }
        else {
            T = null;
        }
        if ((L.y >= pt.y && L.y <= prevPt.y) || (L.y >= prevPt.y && L.y <= pt.y)) { }
        else {
            L = null;
        }
        if ((R.y >= pt.y && R.y <= prevPt.y) || (R.y >= prevPt.y && R.y <= pt.y)) { }
        else {
            R = null;
        }
        // console.log('superstiti step1: (LTBR):', L, T, B, R);
        const vicinanzaT = !T ? Number.POSITIVE_INFINITY : ((T.x - pt.x) * (T.x - pt.x)) + ((T.y - pt.y) * (T.y - pt.y));
        const vicinanzaB = !B ? Number.POSITIVE_INFINITY : ((B.x - pt.x) * (B.x - pt.x)) + ((B.y - pt.y) * (B.y - pt.y));
        const vicinanzaL = !L ? Number.POSITIVE_INFINITY : ((L.x - pt.x) * (L.x - pt.x)) + ((L.y - pt.y) * (L.y - pt.y));
        const vicinanzaR = !R ? Number.POSITIVE_INFINITY : ((R.x - pt.x) * (R.x - pt.x)) + ((R.y - pt.y) * (R.y - pt.y));
        const closest = Math.min(vicinanzaT, vicinanzaB, vicinanzaL, vicinanzaR);
        // console.log( 'closest:', closest);
        // succede quando pt e prevPt sono entrambi all'interno del rettangolo del vertice.
        // L'edge non è visibile e il valore ritornato è irrilevante.
        if (closest === Number.POSITIVE_INFINITY) {
            /* top center */
            pt = vertexGSize.tl();
            pt.x += vertexGSize.w / 2;
        }
        else if (closest === Number.POSITIVE_INFINITY) {
            /* bottom center */
            pt = vertexGSize.br();
            pt.x -= vertexGSize.w / 2;
        }
        else if (closest === vicinanzaT) {
            pt = T;
        }
        else if (closest === vicinanzaB) {
            pt = B;
        }
        else if (closest === vicinanzaR) {
            pt = R;
        }
        else if (closest === vicinanzaL) {
            pt = L;
        }
        if (!gridAlign) {
            return pt;
        }
        if ((pt === T || pt === B || isNaN(closest)) && gridAlign.x) {
            const floorX = Math.floor(pt.x / gridAlign.x) * gridAlign.x;
            const ceilX = Math.ceil(pt.x / gridAlign.x) * gridAlign.x;
            let closestX;
            let farthestX;
            if (Math.abs(floorX - pt.x) < Math.abs(ceilX - pt.x)) {
                closestX = floorX;
                farthestX = ceilX;
            }
            else {
                closestX = ceilX;
                farthestX = floorX;
            }
            // todo: possibile causa del bug che non allinea punti fake a punti reali. nel calcolo realPT questo non viene fatto.
            // if closest grid intersection is inside the vertex.
            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) {
                pt.x = closestX;
            }
            else 
            // if 2° closer grid intersection is inside the vertex.
            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) {
                pt.x = farthestX;
                // if no intersection are inside the vertex (ignore grid)
            }
            else {
                pt = pt;
            }
        }
        else if ((pt === L || pt === R) && gridAlign.y) {
            const floorY = Math.floor(pt.y / gridAlign.y) * gridAlign.y;
            const ceilY = Math.ceil(pt.y / gridAlign.y) * gridAlign.y;
            let closestY;
            let farthestY;
            if (Math.abs(floorY - pt.y) < Math.abs(ceilY - pt.y)) {
                closestY = floorY;
                farthestY = ceilY;
            }
            else {
                closestY = ceilY;
                farthestY = floorY;
            }
            // if closest grid intersection is inside the vertex.
            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) {
                pt.y = closestY;
            }
            else 
            // if 2° closer grid intersection is inside the vertex.
            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) {
                pt.y = farthestY;
                // if no intersection are inside the vertex (ignore grid)
            }
            else {
                pt = pt;
            }
        }
        return pt;
    }
    clone(json) { return new GraphSize(json.x, json.y, json.w, json.h); }
    duplicate() { return new GraphSize().clone(this); }
    makePoint(x, y) { return new GraphPoint(x, y); }
    tl() { return super.tl(); }
    tr() { return super.tr(); }
    bl() { return super.bl(); }
    br() { return super.br(); }
    equals(size) { return super.equals(size); }
    min(minSize, clone) { return super.min(minSize, clone); }
    max(minSize, clone) { return super.max(minSize, clone); }
    intersection(size) {
        // anche "isinside"
        let startx, starty, endx, endy;
        startx = Math.max(this.x, size.x);
        starty = Math.max(this.y, size.y);
        endx = Math.min(this.x + this.w, size.x + size.w);
        endy = Math.min(this.y + this.h, size.y + size.h);
        const intersection = new GraphSize(0, 0, 0, 0);
        intersection.x = startx;
        intersection.y = starty;
        intersection.w = endx - startx;
        intersection.h = endy - starty;
        const doesintersect = intersection.w > 0 && intersection.h > 0;
        return (doesintersect) ? intersection : null;
    }
    contains(pt) { return super.contains(pt); }
}
class IPoint {
    static getM(firstPt, secondPt) { return (firstPt.y - secondPt.y) / (firstPt.x - secondPt.x); }
    static getQ(firstPt, secondPt) { return firstPt.y - IPoint.getM(firstPt, secondPt) * firstPt.x; }
    constructor(x, y) {
        if (isNaN(+x)) {
            x = 0;
        }
        if (isNaN(+y)) {
            y = 0;
        }
        this.x = +x;
        this.y = +y;
    }
    toString() { return '(' + this.x + ', ' + this.y + ')'; }
    subtract(p2, newInstance) {
        U.pe(!p2, 'subtract argument must be a valid point: ', p2);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x -= p2.x;
        p1.y -= p2.y;
        return p1;
    }
    add(p2, newInstance) {
        U.pe(!p2, 'add argument must be a valid point: ', p2);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x += p2.x;
        p1.y += p2.y;
        return p1;
    }
    addAll(p, newInstance) {
        let i;
        let p0;
        if (!newInstance) {
            p0 = this;
        }
        else {
            p0 = this.duplicate();
        }
        for (i = 0; i < p.length; i++) {
            p0.add(p[i], true);
        }
        return p0;
    }
    subtractAll(p, newInstance) {
        let i;
        let p0;
        if (!newInstance) {
            p0 = this;
        }
        else {
            p0 = this.duplicate();
        }
        for (i = 0; i < p.length; i++) {
            p0.subtract(p[i], true);
        }
        return p0;
    }
    multiply(scalar, newInstance) {
        U.pe(isNaN(+scalar), 'scalar argument must be a valid number: ', scalar);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x *= scalar;
        p1.y *= scalar;
        return p1;
    }
    divide(scalar, newInstance) {
        U.pe(isNaN(+scalar), 'scalar argument must be a valid number: ', scalar);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x /= scalar;
        p1.y /= scalar;
        return p1;
    }
    isInTheMiddleOf(firstPt, secondPt, tolleranza) {
        const rectangle = Size.fromPoints(firstPt, secondPt);
        const tolleranzaX = tolleranza; // actually should be cos * arctan(m);
        const tolleranzaY = tolleranza; // actually should be sin * arctan(m);
        if (this.x < rectangle.x - tolleranzaX || this.x > rectangle.x + rectangle.w + tolleranzaX) {
            return false;
        }
        if (this.y < rectangle.y - tolleranzaX || this.y > rectangle.y + rectangle.h + tolleranzaY) {
            return false;
        }
        const m = IPoint.getM(firstPt, secondPt);
        const q = IPoint.getQ(firstPt, secondPt);
        const lineDistance = this.distanceFromLine(firstPt, secondPt);
        // console.log('distance:', lineDistance, ', this:', this, ', p1:', firstPt, ', p2:', secondPt);
        return lineDistance <= tolleranza;
    }
    distanceFromLine(p1, p2) {
        const top = +(p2.y - p1.y) * this.x
            - (p2.x - p1.x) * this.y
            + p2.x * p1.y
            - p1.x * p2.y;
        const bot = (p2.y - p1.y) * (p2.y - p1.y) +
            (p2.x - p1.x) * (p2.x - p1.x);
        return Math.abs(top) / Math.sqrt(bot);
    }
    equals(pt, tolleranzaX = 0, tolleranzaY = 0) {
        if (pt === null) {
            return false;
        }
        return Math.abs(this.x - pt.x) <= tolleranzaX && Math.abs(this.y - pt.y) <= tolleranzaY;
    }
    moveOnNearestBorder(startVertexSize, clone, debug = true) {
        const pt = clone ? this.duplicate() : this;
        const tl = startVertexSize.tl();
        const tr = startVertexSize.tr();
        const bl = startVertexSize.bl();
        const br = startVertexSize.br();
        const L = pt.distanceFromLine(tl, bl);
        const R = pt.distanceFromLine(tr, br);
        const T = pt.distanceFromLine(tl, tr);
        const B = pt.distanceFromLine(bl, br);
        const min = Math.min(L, R, T, B);
        if (min === L) {
            pt.x = tl.x;
        }
        if (min === R) {
            pt.x = tr.x;
        }
        if (min === T) {
            pt.y = tr.y;
        }
        if (min === B) {
            pt.y = br.y;
        }
        if (debug && pt instanceof GraphPoint) {
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markg(pt, false, 'purple');
        }
        return pt;
    }
    getM(pt2) { return IPoint.getM(this, pt2); }
    degreeWith(pt2, toRadians) {
        const directionVector = this.subtract(pt2, true);
        const ret = Math.atan2(directionVector.y, directionVector.x);
        return toRadians ? ret : U.RadToDegree(ret);
    }
    absolute() { return Math.sqrt(this.x * this.x + this.y * this.y); }
}
class GraphPoint extends IPoint {
    static fromEvent(e) {
        if (!e) {
            return null;
        }
        const p = new Point(e.pageX, e.pageY);
        const g = _Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph;
        return g.toGraphCoord(p);
    }
    duplicate() { return new GraphPoint(this.x, this.y); }
    clone(other) { this.x = other.x; this.y = other.y; }
    subtract(p2, newInstance) { return super.subtract(p2, newInstance); }
    add(p2, newInstance) { return super.add(p2, newInstance); }
    multiply(scalar, newInstance) { return super.multiply(scalar, newInstance); }
    divide(scalar, newInstance) { return super.divide(scalar, newInstance); }
    isInTheMiddleOf(firstPt, secondPt, tolleranza) { return super.isInTheMiddleOf(firstPt, secondPt, tolleranza); }
    distanceFromLine(p1, p2) { return super.distanceFromLine(p1, p2); }
    equals(pt, tolleranzaX = 0, tolleranzaY = 0) { return super.equals(pt, tolleranzaX, tolleranzaY); }
    moveOnNearestBorder(startVertexSize, clone, debug = true) {
        return super.moveOnNearestBorder(startVertexSize, clone, debug);
    }
    getM(pt2) { return super.getM(pt2); }
    degreeWith(pt2, toRadians) { return super.degreeWith(pt2, toRadians); }
}
class Point extends IPoint {
    static fromEvent(e) {
        if (!e) {
            return null;
        }
        const p = new Point(e.pageX, e.pageY);
        return p;
    }
    duplicate() { return new Point(this.x, this.y); }
    clone(other) { this.x = other.x; this.y = other.y; }
    subtract(p2, newInstance) { return super.subtract(p2, newInstance); }
    add(p2, newInstance) { return super.add(p2, newInstance); }
    multiply(scalar, newInstance) { return super.multiply(scalar, newInstance); }
    divide(scalar, newInstance) { return super.divide(scalar, newInstance); }
    isInTheMiddleOf(firstPt, secondPt, tolleranza) { return super.isInTheMiddleOf(firstPt, secondPt, tolleranza); }
    distanceFromLine(p1, p2) { return super.distanceFromLine(p1, p2); }
    equals(pt, tolleranzaX = 0, tolleranzaY = 0) { return super.equals(pt, tolleranzaX, tolleranzaY); }
    moveOnNearestBorder(startVertexSize, clone, debug = true) {
        return super.moveOnNearestBorder(startVertexSize, clone, debug);
    }
    getM(pt2) { return super.getM(pt2); }
    degreeWith(pt2, toRadians) { return super.degreeWith(pt2, toRadians); }
}
class FileReadTypeEnum {
}
FileReadTypeEnum.image = "image/*";
FileReadTypeEnum.audio = "audio/*";
FileReadTypeEnum.video = "video/*";
/// a too much huge list https://www.iana.org/assignments/media-types/media-types.xhtml
FileReadTypeEnum.AndManyOthersButThereAreTooMuch = "And many others... https://www.iana.org/assignments/media-types/media-types.xhtml";
FileReadTypeEnum.OrJustPutFileExtension = "OrJustPutFileExtension";


/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.

const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/guiElements/console/console.component.css":
/*!*******************************************************!*\
  !*** ./src/guiElements/console/console.component.css ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\n.consoleRoot{\r\n  color: var(--mainFontColor);\r\n  background-color: var(--mainBackgroundColor);\r\n  font-family: monospace,monospace;\r\n  position: relative;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n}\r\n.consoleContent{\r\n  width: 100%;\r\n}\r\n.inputLine{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-top: auto;\r\n}\r\n.inputEcho, .input, .output, .suggestion{\r\n  width: 100%;\r\n  /* padding: 16px 4px;*/\r\n  padding-top: 0.5em;\r\n  padding-bottom: 0.5em;\r\n  padding-left: 5em;\r\n  line-height: 1.5;\r\n}\r\n.input{\r\n  -webkit-box-flex: 0;\r\n          flex-grow: 0;\r\n  flex-shrink: 0;\r\n  width: auto;\r\n}\r\n.suggestion{\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  width: auto;\r\n  padding-left: 0;\r\n}\r\n.inputEcho{\r\n  font-style: italic;\r\n}\r\n.inputEcho:before, .input:before, .output:before{\r\n  content: '> ';\r\n  color: palevioletred;\r\n  vertical-align: top; }\r\n.input:before {\r\n  color: #FC3565;\r\n}\r\n.output:before {\r\n  color: #5F8787;\r\n  font-weight: 600 !important;\r\n}\r\n.suggestion{\r\n  color: gray;\r\n}\r\n.error {\r\n  color: palevioletred;\r\n}\r\n.console_error, .console_input{\r\n  display: inline-block;\r\n  color: red;\r\n}\r\n/*\r\n.output-cmd:before {\r\n  content: '> ';\r\n  color: #FC3565;\r\n  vertical-align: top;\r\n}*/\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9jb25zb2xlL2NvbnNvbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSwyQkFBMkI7RUFDM0IsNENBQTRDO0VBQzVDLGdDQUFnQztFQUNoQyxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBaUI7RUFBakIsNkJBQWlCO1VBQWpCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxtQkFBWTtVQUFaLFlBQVk7RUFDWixjQUFjO0VBQ2QsV0FBVztBQUNiO0FBQ0E7RUFDRSxtQkFBWTtVQUFaLFlBQVk7RUFDWixXQUFXO0VBQ1gsZUFBZTtBQUNqQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLG1CQUFtQixFQUFFO0FBQ3ZCO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsY0FBYztFQUNkLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxvQkFBb0I7QUFDdEI7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixVQUFVO0FBQ1o7QUFDQTs7Ozs7RUFLRSIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvY29uc29sZS9jb25zb2xlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmNvbnNvbGVSb290e1xyXG4gIGNvbG9yOiB2YXIoLS1tYWluRm9udENvbG9yKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQmFja2dyb3VuZENvbG9yKTtcclxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLG1vbm9zcGFjZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1heC1oZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWZsb3c6IGNvbHVtbjtcclxufVxyXG4uY29uc29sZUNvbnRlbnR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmlucHV0TGluZXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi10b3A6IGF1dG87XHJcbn1cclxuLmlucHV0RWNobywgLmlucHV0LCAub3V0cHV0LCAuc3VnZ2VzdGlvbntcclxuICB3aWR0aDogMTAwJTtcclxuICAvKiBwYWRkaW5nOiAxNnB4IDRweDsqL1xyXG4gIHBhZGRpbmctdG9wOiAwLjVlbTtcclxuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XHJcbiAgcGFkZGluZy1sZWZ0OiA1ZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNTtcclxufVxyXG4uaW5wdXR7XHJcbiAgZmxleC1ncm93OiAwO1xyXG4gIGZsZXgtc2hyaW5rOiAwO1xyXG4gIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5zdWdnZXN0aW9ue1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICB3aWR0aDogYXV0bztcclxuICBwYWRkaW5nLWxlZnQ6IDA7XHJcbn1cclxuLmlucHV0RWNob3tcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuLmlucHV0RWNobzpiZWZvcmUsIC5pbnB1dDpiZWZvcmUsIC5vdXRwdXQ6YmVmb3Jle1xyXG4gIGNvbnRlbnQ6ICc+ICc7XHJcbiAgY29sb3I6IHBhbGV2aW9sZXRyZWQ7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxyXG4uaW5wdXQ6YmVmb3JlIHtcclxuICBjb2xvcjogI0ZDMzU2NTtcclxufVxyXG4ub3V0cHV0OmJlZm9yZSB7XHJcbiAgY29sb3I6ICM1Rjg3ODc7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMCAhaW1wb3J0YW50O1xyXG59XHJcbi5zdWdnZXN0aW9ue1xyXG4gIGNvbG9yOiBncmF5O1xyXG59XHJcbi5lcnJvciB7XHJcbiAgY29sb3I6IHBhbGV2aW9sZXRyZWQ7XHJcbn1cclxuXHJcbi5jb25zb2xlX2Vycm9yLCAuY29uc29sZV9pbnB1dHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4vKlxyXG4ub3V0cHV0LWNtZDpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6ICc+ICc7XHJcbiAgY29sb3I6ICNGQzM1NjU7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufSovXHJcbiJdfQ== */");

/***/ }),

/***/ "./src/guiElements/console/console.component.ts":
/*!******************************************************!*\
  !*** ./src/guiElements/console/console.component.ts ***!
  \******************************************************/
/*! exports provided: ConsoleComponent, MyConsole */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConsoleComponent", function() { return ConsoleComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyConsole", function() { return MyConsole; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! util */ "./node_modules/util/util.js");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_3__);




// @ts-ignore
let ConsoleComponent = class ConsoleComponent {
    constructor() { }
    ngOnInit() {
    }
};
ConsoleComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-console',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./console.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/console/console.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./console.component.css */ "./src/guiElements/console/console.component.css")).default]
    })
], ConsoleComponent);

class MyConsole {
    constructor() {
        this.container = null;
        this.content = null;
        this.inputLine = null;
        this.input = null;
        this.suggestion = null;
        this.commandindex = 0;
        this.commandHistory = [];
        this.newline = '<br/>';
        this.tab = '&nbsp;&nbsp;&nbsp;&nbsp;';
        /*
        * azioni:
        * arrowUp: history--
        * arrowDown: history++
        * enter: apply suggestion, if suggestion is empty executes the user input as command
        * escape: delete suggestion, if suggestion is empty deletes user input too
        * tab: iterate through suggestion list
        * */
        this.suggestionArray = [];
        this.suggestionIndex = -1;
        MyConsole.console = this;
        const $consoleRoot = $('.consoleRoot');
        const $inputLine = $consoleRoot.find('.inputLine');
        this.container = $consoleRoot[0];
        this.content = $consoleRoot.find('.consoleContent')[0];
        this.inputLine = $inputLine[0];
        this.input = $consoleRoot.find('span.input')[0];
        this.suggestion = $consoleRoot.find('.suggestion')[0];
        $inputLine.off('keydown.input').on('keydown.input', (e) => { this.onKeyDown(e); });
        $inputLine.off('keyup.input').on('keyup.input', (e) => { this.onKeyUp(e); });
    }
    onKeyUp(e) {
        switch (e.key) {
            default:
                this.scrollBottom();
                break;
            case 'ArrowUp':
            case 'Enter':
                this.scrollBottom();
                break;
        }
    }
    getText() { return (this.input.innerText + this.suggestion.innerText).trim(); }
    onKeyDown(e) {
        switch (e.key) {
            case 'Enter':
                this.position = 0;
                if (this.suggestion.innerText.length !== 0) {
                    this.input.innerText += this.suggestion.innerText;
                    this.suggestion.innerText = '';
                    this.suggestionArray = [];
                    break;
                }
                this.command(this.getText());
                return;
            case 'Backspace':
                if (this.position === 0) {
                    break;
                }
                this.generateSuggestion();
                break;
            case 'Escape':
                if (this.suggestion.innerText.length > 0) {
                    this.suggestion.innerText = '';
                    break;
                }
                this.input.innerText = '';
                break;
            case 'Tab':
                this.inputLine.focus();
                this.iterateNextSuggestion();
                break;
            case 'ArrowUp':
                e.preventDefault(); // avoid scroll.
                this.suggestionIndex = -1;
                this.suggestionArray = [];
                this.suggestion.innerText = '';
                if (--this.commandindex === -1) {
                    this.commandindex = this.commandHistory.length - 1;
                }
                this.commandindex = (this.commandindex % this.commandHistory.length);
                this.input.innerText = this.commandHistory[this.commandindex];
                this.position = this.input.innerText.length - 1;
                console.log('command[' + (this.commandindex) + '/' + this.commandHistory.length + '] = ' +
                    this.commandHistory[this.commandindex], 'arr:', this.commandHistory);
                break;
            case 'ArrowDown':
                e.preventDefault(); // avoid scroll.
                this.suggestionIndex = -1;
                this.suggestionArray = [];
                this.suggestion.innerText = '';
                this.commandindex = (++this.commandindex % this.commandHistory.length);
                this.input.innerText = this.commandHistory[this.commandindex];
                this.position = this.input.innerText.length - 1;
                console.log('command[' + (this.commandindex) + '/' + this.commandHistory.length + '] = ' +
                    this.commandHistory[this.commandindex], 'arr:', this.commandHistory);
                break;
            case 'ArrowRight':
                if (this.position !== this.input.innerText.length - 1 || this.suggestion.innerText.length === 0)
                    break;
                this.position++;
                this.input.innerText += this.suggestion.innerText.charAt(0);
                this.generateSuggestion();
                break;
            case 'ArrowLeft':
                this.position = Math.max(0, this.position - 1);
                this.suggestion.innerText = '';
                break;
            default:
                // this.input.innerHTML += e.key === ' ' ? '&nbsp;' : e.key;
                this.generateSuggestion();
                this.scrollBottom();
                break;
        }
    }
    scrollBottom() {
        console.log('scrollBottom()');
        // this.container.scrollTop = this.inputLine.offsetHeight;
        this.container.scrollTop = this.content.offsetHeight;
    } /*
    todo:
      comando "setcontext" stessi parametri di getinfo, imposta l'oggetto root.
      comando "getcontext" senza parametri, risponde con l'oggetto root, visualizzato come getinfo.*/
    command(str) {
        str = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(str, ' ', ' ').trim(); // &nbsp; with space
        console.log('myConsole.command(' + str + ')');
        this.commandHistory.push(str);
        // così quando fa keyUp si ritrova l'ultimo comando, se fa keyDown il 2°.
        // dovrei dargli il 1° ma servirebbe un bool o un valore decimale (.5) per metterlo in una posizione tra l'ultimo e il primo
        // invece di sovrapposto al primo o all'ultimo (ho scelto di sovrapporlo al primo).
        this.commandindex = 0;
        this.input.innerText = this.suggestion.innerText = '';
        this.appendInput(str);
        this.appendOutput(this.execCommand(str));
        this.scrollBottom();
    }
    appendInput(str, compoundCommandPart = false) {
        const input = document.createElement('div');
        input.setAttribute('tabindex', '-1');
        input.classList.add('inputEcho');
        if (compoundCommandPart) {
            input.classList.add('compoundCommandPart');
        }
        input.innerHTML = str;
        this.content.appendChild(input);
    }
    appendOutput(str, compoundCommandPart = false) {
        if (str === '') {
            return;
        } // CLS special rule
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!str, 'null output');
        const output = document.createElement('div');
        output.setAttribute('tabindex', '-1');
        output.classList.add('output');
        if (compoundCommandPart) {
            output.classList.add('compoundCommandPart');
        }
        output.innerHTML = str;
        this.content.appendChild(output);
    }
    exampleFormatting(s) {
        const es = '<b style="color: forestgreen;">&lt;';
        const ee = '&gt;</b>';
        return es + s + ee;
    }
    optionalFormatting(s) {
        const os = '<i style="color: cornflowerblue;">[';
        const oe = ']</i>';
        return os + s + oe;
    }
    commandFormatting(s) { return '&nbsp;&nbsp;○&nbsp;' + s + this.newline; }
    xmp(str) { return '<xmp style="display: inline;">' + str + '</xmp>'; }
    descriptionFormatting(s) { return this.tab + '<span style = "color: lightsteelblue;">' + s + '</span>' + this.newline; }
    help() {
        const nl = this.newline;
        const tab = this.tab;
        const desc = (s) => this.descriptionFormatting.call(this, s);
        const command = (s) => this.commandFormatting.call(this, s);
        const e = (s) => this.exampleFormatting.call(this, s);
        const o = (s) => this.optionalFormatting.call(this, s);
        return '' +
            'Available Commands:' + this.newline +
            'Normal text like this means literal constants.' + this.newline +
            e('Text like this') + ' are examples that should be replaced without brakets' + this.newline +
            o('Text like this') + ' are optional parameters' + this.newline +
            e('leftCommand') + '|' + e('rightCommand') + ' The vertical bar means "OR", you must choose to insert the left or the ' +
            'right command piece or argument.' + this.newline +
            // 'Non-underlined text is just comments and explanations.' + this.newline +
            'Commands executed without arguments or preceded by the "?" prefix will show the command guide.' + this.newline +
            // '••••'
            command('info ' + e('className') + o('.' + e('attributeName') + '|' + e('referenceName') + '|')) +
            desc('Visualizza informationi riguardo la classe, reference o attributo fornito dal parametro.') +
            command('cc ' + e('Comando Composito')) +
            desc('Consente di concatenare ed eseguire multipli comandi elementari in una sola linea di comando composita, ' +
                'di utilizzare l\'output di un comando come parte dei parametri input di altri comandi e di poter eseguire un qualsiasi ' +
                'codice javascript che interagisca con l\'output dei comandi console') +
            command('raw ' + e('ProssimoComando')) +
            desc('Esegue il prossimo comando mostrandone l\'output come testo grezzo invece che come html ' +
                'per individuare eventuali errori nell\'html impedendo che il browser esegua la correzione automatica, nascondendo il problema.') +
            command('cls') +
            desc(this.cls_Help());
    }
    execCommand(str) {
        str = str.trim();
        const pos = str.indexOf(' ');
        let command = (pos > 0 ? str.substring(0, pos) : str).toLowerCase();
        const params = str.substring(pos).trim();
        console.log('com: "' + command + '", par: "' + params + '"; pos:' + pos + '; str:' + str);
        if (params === '/?' || params === 'help') {
            command = '?' + command;
        }
        switch (command) {
            default:
                console.log(command, str, (command === 'help'), (str === 'help'));
                return 'unrecognized command: |' + this.errorFormatting(this.xmp(command))
                    + '| To see the full list of commands type "help".';
            case '?h':
            case '?help':
            case '?/?':
            case 'h':
            case 'help':
            case '/?': return this.help();
            case '?i':
            case '?info': return this.getModelPieceInfo_Help();
            case 'i':
            case 'info': return this.getModelPieceInfo(params);
            case '?cc':
            case '?compoundcommand': return this.compoundCommand_Help();
            case 'cc':
            case 'compoundcommand': return this.compoundCommand(params);
            case '?raw':
            case '?debug': return this.rawDebug_Help();
            case 'raw':
            case 'debug': return this.rawDebug(params);
            case '?cls': return this.cls_Help();
            case 'cls':
                this.cls();
                return '';
        }
    }
    compoundCommand_Help() {
        let ret;
        const nl = this.newline;
        ret = '' +
            'Consente di concatenare ed eseguire multipli comandi elementari in una sola linea di comando composita' +
            ', di utilizzare l\'output di un comando come parte dei parametri input di altri comandi' +
            ' e di poter eseguire un qualsiasi codice javascript che interagisca con l\'output dei comandi console.' + nl +
            'Il corpo del comando va scritto in codice javascript, all\'interno del quale è possibile eseguire comandi console ' + nl +
            'delimitati dal carattere "$" come prefisso e appendice al comando desiderato, l\'output di tale comando può essere utilizzato ' +
            'dal codice javascript come se fosse una variabile o una funzione che ritorna un oggetto.' + nl +
            'esempio 1:' + nl +
            'cc alert("L\'output del comando help è: " + $help$);' + nl +
            'È anche possibile utilizzare l\'output di un comando come parametro di un altro comando, ' +
            'aggiungendo un ulteriore delimitatore "$" per ogni livello di nesting dei comandi.' + nl +
            'Se ipotizziamo che il ' + nl +
            'esempio 2:' + nl +
            'cc alert($info $$comando2$$.name$);' + nl +
            'Se ad esempio l\'output di \"comando2\" è "Book", il comando diventerà "cc alert($info Book.name$);"' +
            ' e verrà poi eseguito come nell\'esempio 1.' + nl +
            'Terzo esempio ulteriormente compesso, con due compound command concatenati.' +
            'cc alert($info $$cc [altro codice js]$$$comando2$$$[altro codice js] $$.name$);';
        return ret;
    }
    compoundCommand(str, debug = true) {
        const prefix = '$';
        const fullPrefix = prefix + '';
        str = str.replace(/(^\$|(((?!\$).|^))[\$](?!\$))(.*?)(^\$|((?!\$).|^)[\$](?!\$))/gm, (match, capture) => {
            // console.log('matched:', match, 'capture: ', capture);
            if (match === '$') {
                return '';
            }
            // prefixError: un lieve fix manuale alla regexp non 100% esatta.
            let prefixError = '';
            if (match.charAt(0) !== '$') {
                prefixError = match.charAt(0);
                match = match.substring(1);
            }
            let subcommand = match.substring(fullPrefix.length, match.length - 1);
            // todo: max nesting attuale = 3. se faccio nesting 4 allora $$$$ ---> $$
            // per risolvere: sostituisci [not($)]$^n[not($)]  --->  [not($)]$^(n-1)[not($)] in pratica: riduci di una singola $.
            // oppure usa 2^n volte il $ al posto di solo n volte. es 4 nested: $$$$$$$$$$$$$$$$ ---> $$$$$$$$ -> $$$$ -> $$ -> $
            subcommand = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(subcommand, '$$', '$');
            const debugtext = subcommand + '(' + match + ')';
            const tmp = prefixError + '' + this.execCommand(subcommand);
            this.appendInput(subcommand, true);
            this.appendOutput(tmp, true);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'replaceSingleVar: ' + debugtext + ' --> ' + tmp);
            return tmp;
        });
        return this.execCommand(str);
    }
    rawDebug_Help() {
        let ret;
        const nl = this.newline;
        const e = this.exampleFormatting;
        ret = 'Sintassi: ' + nl + this.commandFormatting('raw' + e('Command'));
        this.descriptionFormatting('Esegue il prossimo comando mostrandone l\'output come testo grezzo invece che come html per individuare' +
            ' eventuali errori nell\'html impedendo che il browser esegua la correzione automatica, nascondendo il problema.');
        return ret;
    }
    cls_Help() {
        return 'Svuota la console cancellando tutti gli input e gli output dei comandi precedenti.';
    }
    cls() { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(this.content); }
    rawDebug(params) {
        let ret = this.execCommand(params);
        ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(ret, '<', '&lt;');
        ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(ret, '>', '&gt;');
        return '<xmp>' + (ret) + '</xmp>';
    }
    errorFormatting(s) { return '<div class="console_error">' + s + '</div>'; }
    getModelPieceInfo_Help() {
        const nl = this.newline;
        let ret;
        ret = '' +
            'Displays the available sub-fields of an object accessible through the \'.\' operator.' + nl +
            'If a name conflict arise with a childrenObject or instanceObject name, that name will be added with the \'_\' prefix.' + nl +
            'If a name conflict arise with a property only owned by a particular model piece type (es: reference target),' +
            ' that name will be added with the \'@\' prefix.';
        return ret;
    }
    getModelPieceInfo(name) {
        console.log('getModelPieceInfo:', name);
        if (name.indexOf(' ') !== -1) {
            return this.errorFormatting('Spaces are not allowed inside a class, attribute or reference name-path.');
        }
        const tokens = name.split('.');
        const modelPrio = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel();
        let info = this.getModelPieceInfoByModel(modelPrio, tokens);
        if (info) {
            return this.stringify(info);
        }
        // info = this.getModelPieceInfoByModel(modelPrio.isMM() ? Status.status.m : Status.status.mm, tokens);
        info = this.getModelPieceInfoByModel(modelPrio.isMM() ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm, tokens);
        if (info) {
            return this.stringify(info);
        }
        return this.errorFormatting('"' + name + '" is not matching any class, attribute or reference name-path.');
    }
    stringify(obj) {
        let str = util__WEBPACK_IMPORTED_MODULE_3__["inspect"](obj, false, 0, true);
        str = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ansiUp"].ansi_to_html(str);
        return str;
    }
    stringify_Old(obj) {
        const duplicateChecker = [];
        return JSON.stringify(obj, (key, value) => {
            if (!value) {
                return value;
            }
            if ($.isEmptyObject(value)) {
                return '{}';
            }
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isObject(value)) {
                return '{' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getTSClassName(value) + '(' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].fieldCount(value) + ' fields)}';
            }
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isArray(value)) {
                return '[Array(' + value.length + ')]';
            }
            if (duplicateChecker.indexOf(value) === -1) {
                return '{_CIRCULAR_REFERENCE_}';
            }
            duplicateChecker.push(value);
            return '' + value;
        });
    }
    getModelPieceInfoByModel(m, tokens, debug = true) {
        const toLower = true;
        const classes = m.getAllClasses();
        debug = true;
        let i = -1;
        if (toLower) {
            while (++i < tokens.length) {
                tokens[i] = toLower ? tokens[i].toLowerCase() : tokens[i];
            }
        }
        i = -1;
        let current = null;
        while (++i < classes.length) {
            const classe = classes[i];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!classe.name, 'err');
            if (!classe.name) {
                return null;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, tokens[0] + '===' + classe.name + ' ? ' + (classe.name.toLowerCase() === tokens[0]));
            if (classe.name.toLowerCase() === tokens[0]) {
                current = classe;
                break;
            }
        }
        let ret = current;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'tokens:', tokens);
        i = 0;
        while (++i < tokens.length) {
            const oldRet = ret;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'PRE_ret: ', oldRet, ' ---> ', ret, 'token[' + i + '/' + tokens.length + '] = |' + tokens[i] + '|, tok:', tokens);
            if (ret instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"]) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'Modelpiece');
                ret = ret.getInfo(toLower);
            }
            else {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'Terminale');
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'gotInfo:', ret);
            ret = ret[tokens[i]];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'POST_ret: ', oldRet, ' ---> ', ret, 'token[' + i + '] = |' + tokens[i] + '|');
        }
        if (ret instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"]) {
            return ret.getInfo();
        }
        return ret;
    }
    iteratePrevSuggestion() { this.iterateSuggestionDONOTUSEDirectly(-1); }
    iterateNextSuggestion() { this.iterateSuggestionDONOTUSEDirectly(+1); }
    iterateSuggestionDONOTUSEDirectly(offset) {
        if (!this.suggestionArray.length)
            return;
        this.suggestionIndex = Math.abs((this.suggestionIndex + offset) % this.suggestionArray.length);
        this.suggestion.innerText = this.suggestionArray[this.suggestionIndex];
    }
    generateSuggestion() {
        const oldSuggestion = this.suggestion.innerText;
        return;
        // NB: after the generation, if oldSuggestion is still viable, set that index, otherwise set this.suggestionArray[0];
        this.suggestion.innerText = '//GenerateSuggestion(): to do.';
    }
}


/***/ }),

/***/ "./src/guiElements/dam-context-menu/dam-context-menu.component.css":
/*!*************************************************************************!*\
  !*** ./src/guiElements/dam-context-menu/dam-context-menu.component.css ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#damContextMenuTemplateContainer{\r\n  display: none;\r\n}\r\n.contextMenuRoot{\r\n  position: absolute;\r\n  display: inline-block;\r\n  max-height: 100vh;\r\n  max-width: 100vw;\r\n  overflow: visible;\r\n}\r\n.reflist{ display: none; }\r\n.reflistparent:hover > .reflist { display: block; }\r\n.refli {\r\n  white-space: nowrap;\r\n  flex-wrap: nowrap;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  padding-right: 10px; }\r\n.refli .firstempty{\r\n  width: 100%;\r\n}\r\n.refli .byindex {\r\n  width: 35px;\r\n}\r\n.reflistparent{\r\n  position: relative;\r\n}\r\n.refli .index {\r\n  padding-left: 3px;\r\n  color: orange;\r\n}\r\n.refli .text{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\nbutton.refli.delete{\r\n  padding: 0 4px;\r\n  margin-left: auto;\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n.reflist {\r\n  left: calc(100%);\r\n  position: absolute;\r\n  background: white;\r\n  border: 1px solid black;\r\n  border-left: none;\r\n  padding: 2px 5px;\r\n  padding-right: 0;\r\n  top: 0;\r\n}\r\nul.contextMenu{\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  padding: 10px;\r\n  padding-top: 6px;\r\n  padding-bottom: 8px;\r\n  padding-right: 0;\r\n}\r\nli:first-child{\r\n  padding-top: 0;\r\n}\r\nli.separator{\r\n  margin-top: 2px;\r\n  height: 1px;\r\n  padding: 0;\r\n  background-color: gray;\r\n}\r\nli:last-child{\r\n  border-bottom: none;\r\n}\r\nli:hover{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  color: dodgerblue;\r\n}\r\nli{\r\n  display: block;\r\n  cursor: default;\r\n  font-size: 0.75rem;\r\n  padding-top: 2px;\r\n  padding-right: 10px;\r\n  color: #b2b2ba;\r\n}\r\nli:hover li{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  cursor: default;\r\n  font-size: 0.75rem;\r\n  padding-top: 2px;\r\n  padding-right: 10px;\r\n  color: #b2b2ba; }\r\nli:hover li:hover{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  color: dodgerblue;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9kYW0tY29udGV4dC1tZW51L2RhbS1jb250ZXh0LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjtBQUNBLFVBQVUsYUFBYSxFQUFFO0FBQ3pCLGtDQUFrQyxjQUFjLEVBQUU7QUFDbEQ7RUFDRSxtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLG9CQUFhO0VBQWIsYUFBYTtFQUNiLG1CQUFtQixFQUFFO0FBQ3ZCO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7QUFDZjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixvQkFBYTtFQUFiLGFBQWE7QUFDZjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLE1BQU07QUFDUjtBQUNBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGVBQWU7RUFDZixXQUFXO0VBQ1gsVUFBVTtFQUNWLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixjQUFjO0FBQ2hCO0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsY0FBYyxFQUFFO0FBRWxCO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2d1aUVsZW1lbnRzL2RhbS1jb250ZXh0LW1lbnUvZGFtLWNvbnRleHQtbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2RhbUNvbnRleHRNZW51VGVtcGxhdGVDb250YWluZXJ7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4uY29udGV4dE1lbnVSb290e1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWF4LWhlaWdodDogMTAwdmg7XHJcbiAgbWF4LXdpZHRoOiAxMDB2dztcclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG4ucmVmbGlzdHsgZGlzcGxheTogbm9uZTsgfVxyXG4ucmVmbGlzdHBhcmVudDpob3ZlciA+IC5yZWZsaXN0IHsgZGlzcGxheTogYmxvY2s7IH1cclxuLnJlZmxpIHtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIGZsZXgtd3JhcDogbm93cmFwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcGFkZGluZy1yaWdodDogMTBweDsgfVxyXG4ucmVmbGkgLmZpcnN0ZW1wdHl7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnJlZmxpIC5ieWluZGV4IHtcclxuICB3aWR0aDogMzVweDtcclxufVxyXG4ucmVmbGlzdHBhcmVudHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLnJlZmxpIC5pbmRleCB7XHJcbiAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgY29sb3I6IG9yYW5nZTtcclxufVxyXG4ucmVmbGkgLnRleHR7XHJcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgcGFkZGluZy1yaWdodDogNXB4O1xyXG59XHJcbmJ1dHRvbi5yZWZsaS5kZWxldGV7XHJcbiAgcGFkZGluZzogMCA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG4ucmVmbGlzdCB7XHJcbiAgbGVmdDogY2FsYygxMDAlKTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgcGFkZGluZzogMnB4IDVweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gIHRvcDogMDtcclxufVxyXG51bC5jb250ZXh0TWVudXtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIHBhZGRpbmctdG9wOiA2cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDhweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG59XHJcbmxpOmZpcnN0LWNoaWxke1xyXG4gIHBhZGRpbmctdG9wOiAwO1xyXG59XHJcbmxpLnNlcGFyYXRvcntcclxuICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgcGFkZGluZzogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG59XHJcbmxpOmxhc3QtY2hpbGR7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxufVxyXG5saTpob3ZlcntcclxuICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgY29sb3I6IGRvZGdlcmJsdWU7XHJcbn1cclxubGl7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcclxuICBwYWRkaW5nLXRvcDogMnB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgY29sb3I6ICNiMmIyYmE7XHJcbn1cclxubGk6aG92ZXIgbGl7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xyXG4gIHBhZGRpbmctdG9wOiAycHg7XHJcbiAgcGFkZGluZy1yaWdodDogMTBweDtcclxuICBjb2xvcjogI2IyYjJiYTsgfVxyXG5cclxubGk6aG92ZXIgbGk6aG92ZXJ7XHJcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgcGFkZGluZy1yaWdodDogNXB4O1xyXG4gIGNvbG9yOiBkb2RnZXJibHVlO1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "./src/guiElements/dam-context-menu/dam-context-menu.component.ts":
/*!************************************************************************!*\
  !*** ./src/guiElements/dam-context-menu/dam-context-menu.component.ts ***!
  \************************************************************************/
/*! exports provided: DamContextMenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DamContextMenuComponent", function() { return DamContextMenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
var DamContextMenuComponent_1;



let DamContextMenuComponent = DamContextMenuComponent_1 = class DamContextMenuComponent {
    constructor() {
        this.html = null;
        this.$html = null;
        this.$html = $('#damContextMenuTemplateContainer');
        this.html = this.$html[0];
        $(document).off('mousedown.hideContextMenu').on('mousedown.hideContextMenu', (e) => this.checkIfHide(e));
        this.$vertexcontext = this.$html.find('ul.vertex');
        this.$edgecontext = this.$html.find('ul.edge');
        this.$extedgecontext = this.$html.find('ul.extedge');
        this.vertexcontext = this.$vertexcontext[0];
        this.edgecontext = this.$edgecontext[0];
        this.extedgecontext = this.$extedgecontext[0];
        this.$html.on('contextmenu', (e) => { e.preventDefault(); e.stopPropagation(); return false; });
    }
    static staticInit() {
        DamContextMenuComponent_1.contextMenu = new DamContextMenuComponent_1();
    }
    ngOnInit() { }
    show(location, classSelector, target) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!target, 'target is null.');
        this.clickTarget = target;
        this.html.style.display = 'none'; // if was already displaying, start the scrollDown animation without doing the scrollUp()
        this.$html.slideDown();
        const vertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getvertexByHtml(target);
        let edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IEdge"].getByHtml(target);
        let extedge = null;
        if (edge instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ExtEdge"]) {
            extedge = edge;
            edge = null;
        }
        console.log('contextmenu target:', this.clickTarget);
        const templateSize = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].sizeof(this.html);
        // todo:
        const viewPortSize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Size"](0, 0, window.innerWidth, window.innerHeight);
        location.x = Math.max(0, location.x);
        location.y = Math.max(0, location.y);
        location.x = Math.min(viewPortSize.w - (templateSize.w), location.x);
        console.log('vp.w:', viewPortSize.w, ' - t.w:', templateSize.w, ', loc.x', location.x, ', t.size:', templateSize, this.html);
        location.y = Math.min(viewPortSize.h - (templateSize.h), location.y);
        this.html.style.position = 'absolute';
        this.html.style.zIndex = '1000';
        this.html.style.left = '' + location.x + 'px';
        this.html.style.top = '' + location.y + 'px';
        this.extedgecontext.style.display = 'none';
        this.edgecontext.style.display = 'none';
        this.vertexcontext.style.display = 'none';
        this.edgecontext.style.display = edge ? '' : 'none';
        this.extedgecontext.style.display = extedge ? '' : 'none';
        this.vertexcontext.style.display = vertex ? '' : 'none';
        this.$vertexcontext.find('.Reference').hide();
        this.$vertexcontext.find('.refli.dynamic').remove();
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getLogic(target);
        const model = mp.getModelRoot();
        if (vertex) {
            if (model.isM1()) {
                this.$vertexcontext.find('.m1hide').hide();
                this.$vertexcontext.find('.m2hide').show();
            }
            else {
                this.$vertexcontext.find('.m1hide').show();
                this.$vertexcontext.find('.m2hide').hide();
            }
            if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClassifier"]) {
                this.$vertexcontext.find('.Feature').hide();
                this.$vertexcontext.find('.Vertex').show();
            }
            else {
                if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MReference"]) {
                    let i;
                    const $refli = this.$vertexcontext.find('.refli.template');
                    for (i = 0; i < mp.mtarget.length; i++) {
                        const target = mp.mtarget[i];
                        const li = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($refli[0], true);
                        li.classList.remove('template');
                        li.classList.add('dynamic');
                        li.dataset.index = '' + i;
                        const $li = $(li);
                        $li.find('.index').text('' + i);
                        $li.find('.text').text(target ? target.printableNameshort() : 'Empty');
                        $refli[0].parentNode.appendChild(li);
                    }
                    this.$vertexcontext.find('.Reference').show();
                }
                this.$vertexcontext.find('.Feature').show();
                this.$vertexcontext.find('.Vertex').hide();
            }
            const mr = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MReference"] ? mp : null;
            const $indexinput = this.$vertexcontext.find('input.byindex');
            const upperbound = mr ? mr.metaParent.upperbound : null;
            if (mr) {
                if (upperbound === -1)
                    $indexinput[0].removeAttribute('max');
                else
                    $indexinput[0].setAttribute('max', '' + upperbound);
            }
            else
                $indexinput[0].setAttribute('max', '-999');
        }
        this.addEventListeners(location); // [??? what?] must be done here, per facilità di fare binding usando variabili esterne agli eventi.
    }
    hide() {
        this.$html.slideUp();
    }
    addEventListeners(location) {
        const graphLocation = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().graph.toGraphCoord(location);
        const html = this.html;
        const $html = $(html);
        const v = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getvertexByHtml(this.clickTarget);
        const m = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getLogic(this.clickTarget);
        console.log('contextMenu target:', this.clickTarget, 'modelPiece:', m);
        const mr = m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MReference"] ? m : null;
        const $indexinput = +$html.find('input.byindex');
        const upperbound = mr ? mr.metaParent.upperbound : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!v, 'vertex null:', v);
        $html.find('.refli .firstempty').off('click.setref').on('click.setref', (e) => {
            let index = mr.getfirstEmptyTarget();
            if (index === -1) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pw(true, 'This reference is already filled to his upperbound.');
                e.preventDefault();
                e.stopPropagation();
                return;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].linkVertexMouseDown(null, mr.edges[index], graphLocation);
        });
        $html.find('.refli button.byindex').off('click.setref').on('click.setref', (e) => {
            let index = +$indexinput[0].value;
            if (index < 0 || index >= upperbound) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pw(true, 'invalid reference index. It must be a value inside the [0,' + upperbound + '] interval.');
                return;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].linkVertexMouseDown(null, mr.edges[index], graphLocation);
        });
        $html.find('li.refli.dynamic').off('click.setref').on('click.setref', (e) => {
            const index = +e.currentTarget.dataset.index;
            console.log('setting reference[' + index + '] = ', mr.mtarget[index], mr);
            const edge = mr.edges[index] ? mr.edges[index] : new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IEdge"](mr, index, v);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].linkVertexMouseDown(null, edge, graphLocation);
        });
        // U.pe(true, $html.find('li.refli.dynamic'), $html);
        $html.find('button.refli.delete').off('click.setref').on('click.setref', (e) => {
            e.preventDefault();
            e.stopPropagation(); // impedisco di nascondere il contextmenù per tanto poco
            const li = e.currentTarget.parentNode;
            const index = li.dataset.index;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!index || _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isNumber(index), 'failed to get index.');
            mr.setTarget(index, null);
            $(li).find('.text').text('Empty');
        });
        $html.find('.Vertex.duplicate').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.duplicate('_Copy', m.parent); });
        $html.find('.Vertex.delete').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.delete(true); });
        $html.find('.Vertex.minimize').off('click.ctxMenu').on('click.ctxMenu', (e) => { v.minimize(); });
        $html.find('.Vertex.extend').off('click.ctxMenu').on('click.ctxMenu', (e) => {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ExtEdge"](m, m.getVertex(), null);
        });
        $html.find('.Vertex.up').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushDown(true); m.getModelRoot().refreshGUI_Alone(); }); // must be the opposite of the text
        $html.find('.Vertex.down').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushUp(true); m.getModelRoot().refreshGUI_Alone(); }); // must be the opposite of the text
        $html.find('.Vertex.editStyle').off('click.ctxMenu').on('click.ctxMenu', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pw(true, 'deprecato'); /*StyleEditor.editor.show(m);*/ });
        $html.find('.Feature.autofix').off('click.ctxMenu').on('click.ctxMenu', (e) => { alert('autofix conformity: todo.'); });
        $html.find('.Feature.autofixinstances').off('click.ctxMenu').on('click.ctxMenu', (e) => { alert('autofix instances: todo.'); });
        $html.find('.Feature.duplicate').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.duplicate('_Copy', m.parent); v.refreshGUI(); });
        $html.find('.Feature.delete').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.delete(true); });
        $html.find('.Feature.minimize').off('click.ctxMenu').on('click.ctxMenu', (e) => { v.minimize(); });
        $html.find('.Feature.up').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushUp(false); v.refreshGUI(); });
        $html.find('.Feature.down').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushDown(false); v.refreshGUI(); });
        $html.find('.Feature.link').off('click.ctxMenu').on('click.ctxMenu', (e) => {
            let index = e.currentTarget.dataset.edgeindex;
            let r = m;
            let edge = r.edges[index];
            if (!edge)
                new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IEdge"](r, index, null, null);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].linkVertexMouseDown(null, edge, graphLocation); /*StyleEditor.editor.show(m); */
        });
    }
    checkIfHide(e) {
        // const originalTarget: Node = e.target;
        const cond = true; // !U.isParentOf(this.html, originalTarget);
        if (cond) {
            this.hide();
        }
    }
};
DamContextMenuComponent.contextMenu = null;
DamContextMenuComponent = DamContextMenuComponent_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dam-context-menu',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./dam-context-menu.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/dam-context-menu/dam-context-menu.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./dam-context-menu.component.css */ "./src/guiElements/dam-context-menu/dam-context-menu.component.css")).default]
    })
], DamContextMenuComponent);



/***/ }),

/***/ "./src/guiElements/graph-tab-html/graph-tab-html.component.css":
/*!*********************************************************************!*\
  !*** ./src/guiElements/graph-tab-html/graph-tab-html.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".RatioBox{\r\n  position: relative;\r\n  width: 50%;\t\t/* desired width */\r\n}\r\n.RatioBox:before{\r\n  content: \"\";\r\n  display: block;\r\n  padding-top: 100%; \t/* initial ratio of 1:1*/\r\n}\r\n.RatioContent{\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n.sidebarClassContainer{\r\n  padding-top: 16px;\r\n  padding-left: 10px;\r\n  padding-right: 5px;\r\n}\r\n.sidebarNode{\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n.sidebarNodeName{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto;\r\n}\r\n.modelTab{\r\n  background-color: var(--mainBackgroundColor);\r\n  margin-top: -11px;\r\n}\r\n.mat-tab-label{\r\n  border-top-left-radius: 20px;\r\n  border-top-right-radius: 20px;\r\n  border: var(--mainBorder);\r\n  border-bottom: unset;\r\n  opacity: 1 !important;\r\n  width: 160px !important;\r\n}\r\n.mat-tab-label.mat-tab-label-active{\r\n  background-color: var(--mainBorderColor);}\r\n.mat-tab-label{\r\n  background-color: var(--mainBackgroundColor);}\r\n.mat-tab-label-container{\r\n  background-color: var(--mainBackgroundColor);\r\n  border-bottom: var(--mainBorder);\r\n}\r\n/* property bar raws */\r\n.propertyTab{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  height: 40px;\r\n}\r\nh2.rawTitle{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n.rawecore{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex:1;\r\n          flex-grow:1;\r\n  flex-shrink:1;\r\n}\r\n/*\r\n\r\n.tablist{\r\n  display: inline-block;\r\n  padding: 0px;\r\n  margin: 0px;\r\n}\r\n.tabButton{\r\n  cursor: default;\r\n  display: inline-block;\r\n  background-color: var(--mainBackgroundColor);\r\n  border: var(--mainBorder);\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  padding: 3px 15px;\r\n\r\n}\r\n.tabButton[data-tabselected=\"true\"]{\r\n  background-color: var(--mainBorderColor); }\r\n#editorTabContainer{\r\n  display: inline-block;\r\n  width: 100vw;\r\n  background-color: var(--mainBackgroundColor);\r\n  border-bottom: var(--mainBorder);\r\n  top: calc(var(--topbarH));\r\n  height: var(--tabH);\r\n}*/\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9ncmFwaC10YWItaHRtbC9ncmFwaC10YWItaHRtbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVUsR0FBRyxrQkFBa0I7QUFDakM7QUFDQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsaUJBQWlCLEdBQUcsd0JBQXdCO0FBQzlDO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxTQUFTO0VBQ1QsUUFBUTtBQUNWO0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsWUFBWTtBQUNkO0FBQ0E7RUFDRSw0Q0FBNEM7RUFDNUMsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0Usd0NBQXdDLENBQUM7QUFDM0M7RUFDRSw0Q0FBNEMsQ0FBQztBQUMvQztFQUNFLDRDQUE0QztFQUM1QyxnQ0FBZ0M7QUFDbEM7QUFDQSxzQkFBc0I7QUFDdEI7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixZQUFZO0FBQ2Q7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGtCQUFXO1VBQVgsV0FBVztFQUNYLGFBQWE7QUFDZjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTBCRSIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvZ3JhcGgtdGFiLWh0bWwvZ3JhcGgtdGFiLWh0bWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5SYXRpb0JveHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDUwJTtcdFx0LyogZGVzaXJlZCB3aWR0aCAqL1xyXG59XHJcbi5SYXRpb0JveDpiZWZvcmV7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwYWRkaW5nLXRvcDogMTAwJTsgXHQvKiBpbml0aWFsIHJhdGlvIG9mIDE6MSovXHJcbn1cclxuLlJhdGlvQ29udGVudHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG59XHJcblxyXG4uc2lkZWJhckNsYXNzQ29udGFpbmVye1xyXG4gIHBhZGRpbmctdG9wOiAxNnB4O1xyXG4gIHBhZGRpbmctbGVmdDogMTBweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbn1cclxuLnNpZGViYXJOb2Rle1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbi5zaWRlYmFyTm9kZU5hbWV7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuLm1vZGVsVGFie1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CYWNrZ3JvdW5kQ29sb3IpO1xyXG4gIG1hcmdpbi10b3A6IC0xMXB4O1xyXG59XHJcbi5tYXQtdGFiLWxhYmVse1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDIwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDIwcHg7XHJcbiAgYm9yZGVyOiB2YXIoLS1tYWluQm9yZGVyKTtcclxuICBib3JkZXItYm90dG9tOiB1bnNldDtcclxuICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDE2MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbC1hY3RpdmV7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJvcmRlckNvbG9yKTt9XHJcbi5tYXQtdGFiLWxhYmVse1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CYWNrZ3JvdW5kQ29sb3IpO31cclxuLm1hdC10YWItbGFiZWwtY29udGFpbmVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CYWNrZ3JvdW5kQ29sb3IpO1xyXG4gIGJvcmRlci1ib3R0b206IHZhcigtLW1haW5Cb3JkZXIpO1xyXG59XHJcbi8qIHByb3BlcnR5IGJhciByYXdzICovXHJcbi5wcm9wZXJ0eVRhYntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogNDBweDtcclxufVxyXG5oMi5yYXdUaXRsZXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG4ucmF3ZWNvcmV7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWdyb3c6MTtcclxuICBmbGV4LXNocmluazoxO1xyXG59XHJcbi8qXHJcblxyXG4udGFibGlzdHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcGFkZGluZzogMHB4O1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcbi50YWJCdXR0b257XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQmFja2dyb3VuZENvbG9yKTtcclxuICBib3JkZXI6IHZhcigtLW1haW5Cb3JkZXIpO1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgcGFkZGluZzogM3B4IDE1cHg7XHJcblxyXG59XHJcbi50YWJCdXR0b25bZGF0YS10YWJzZWxlY3RlZD1cInRydWVcIl17XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJvcmRlckNvbG9yKTsgfVxyXG4jZWRpdG9yVGFiQ29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB3aWR0aDogMTAwdnc7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJhY2tncm91bmRDb2xvcik7XHJcbiAgYm9yZGVyLWJvdHRvbTogdmFyKC0tbWFpbkJvcmRlcik7XHJcbiAgdG9wOiBjYWxjKHZhcigtLXRvcGJhckgpKTtcclxuICBoZWlnaHQ6IHZhcigtLXRhYkgpO1xyXG59Ki9cclxuIl19 */");

/***/ }),

/***/ "./src/guiElements/graph-tab-html/graph-tab-html.component.ts":
/*!********************************************************************!*\
  !*** ./src/guiElements/graph-tab-html/graph-tab-html.component.ts ***!
  \********************************************************************/
/*! exports provided: GraphTabHtmlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraphTabHtmlComponent", function() { return GraphTabHtmlComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let GraphTabHtmlComponent = class GraphTabHtmlComponent {
    // static matTabModel: MatTabGroup = null;
    // private static timesCanFailDuringInit = 1;
    //private selectedTab = 0;
    // @ViewChild('tabs') tabGroup: MatTabGroup;
    constructor() {
    }
    ngOnInit() {
        // this.selectModelTabOnInit(0);
    }
};
GraphTabHtmlComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].None,
        selector: 'app-graph-tab-html',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./graph-tab-html.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/graph-tab-html/graph-tab-html.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./graph-tab-html.component.css */ "./src/guiElements/graph-tab-html/graph-tab-html.component.css")).default]
    })
], GraphTabHtmlComponent);



/***/ }),

/***/ "./src/guiElements/isidebar/isidebar.component.css":
/*!*********************************************************!*\
  !*** ./src/guiElements/isidebar/isidebar.component.css ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvaXNpZGViYXIvaXNpZGViYXIuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/guiElements/isidebar/isidebar.component.ts":
/*!********************************************************!*\
  !*** ./src/guiElements/isidebar/isidebar.component.ts ***!
  \********************************************************/
/*! exports provided: IsidebarComponent, ISidebar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsidebarComponent", function() { return IsidebarComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISidebar", function() { return ISidebar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



let IsidebarComponent = class IsidebarComponent {
    constructor() { }
    ngOnInit() {
    }
};
IsidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-isidebar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./isidebar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/isidebar/isidebar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./isidebar.component.css */ "./src/guiElements/isidebar/isidebar.component.css")).default]
    })
], IsidebarComponent);

class ISidebar {
    // htmls: Dictionary<string /*ModelPiece.fullname*/, HTMLElement | SVGGElement> = null;
    // nodeContainer: HTMLDivElement = null;
    constructor(model, container) {
        this.container = null;
        this.packageContainer = null;
        this.classContainer = null;
        this.model = model;
        // this.mm = (model instanceof MetaModel);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mmm === this.model) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.sidebar = this;
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.sidebar = this;
        }
        this.container = container;
        this.packageContainer = document.createElement('div');
        this.packageContainer.classList.add('sidebarPackageContainer');
        this.classContainer = document.createElement('div');
        this.classContainer.classList.add('sidebarClassContainer');
        this.container.appendChild(this.packageContainer);
        this.container.appendChild(this.classContainer);
        this.updateAll();
        // this.htmls = this.loadDefaultHtmls();
    }
    /*
      loadDefaultHtmls(): Dictionary<string, HTMLElement | SVGGElement> /*
        console.log('refresh left iSidebar');
        // bug: todo: not refreshing quando cambio il nome di un m2class. però i classSelector si aggiornano.
        this.clear();
        let arr: IClassifier[];
        let i;
        // this.htmls = {};
        /*if (false && false) {
          arr = this.model.childrens;
          for (i = 0; i < arr.length; i++) { this.htmls[arr[i].fullname()] = IPackage.defaultSidebarHtml(); } } * /
        // arr = this.model.getAllClasses();
        // if (this.model.isM3()) Array.prototype.push.apply(arr, this.model.getAllEnums());
        // for (i = 0; i < arr.length; i++) { this.htmls[arr[i].fullname()] = arr[i].getSidebarHtml();  }
        this.updateAll();
        return this.htmls; */
    clear() {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(this.packageContainer);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(this.classContainer);
    }
    updateAll() {
        this.clear();
        let i;
        const cla = this.model.getAllClasses();
        const enu = this.model.isM2() ? [] : this.model.getAllEnums();
        for (i = 0; i < cla.length; i++) {
            this.updateNode(cla[i], this.classContainer);
        }
        for (i = 0; i < enu.length; i++) {
            this.updateNode(enu[i], this.classContainer);
        }
    }
    addEventListeners(html) {
        const $html = $(html);
        $html.off('click.sidebarNode').on('click.sidebarNode', (e) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().sidebar.sidebarNodeClick(e);
        });
    }
    sidebarNodeClick(e) {
        console.log('sidebarNodeClick()', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel() === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel());
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().isMM()) {
            this.sidebarNodeClick0(e);
        }
        else {
            this.sidebarNodeClick0(e);
        }
    }
    sidebarNodeClick0(e) {
        console.log('sidebarNodeClick()');
        let html = e.currentTarget;
        while (!html.dataset.modelpieceid) {
            html = html.parentElement;
        }
        const metaParent = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getLogic(html);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!metaParent, 'the id does not match any class or package', e);
        const modelOfSidebar = metaParent.getModelRoot();
        const modelOfGraph = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel();
        const graph = modelOfGraph.graph; /*m2*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!graph, 'invalid graph of model:', modelOfGraph);
        const pkg = modelOfGraph.getDefaultPackage();
        if (metaParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"] /*m3*/) {
            pkg.addEmptyClass(metaParent);
        }
        else if (metaParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EEnum"] /*m3*/) {
            pkg.addEmptyEnum();
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unxpected class type of metaparent:', metaParent);
        }
        console.log('addSidebarNodeClick done');
    }
    updateNode(piece, containerr) {
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceVars(piece, piece.getSidebarHtml(), true);
        piece.linkToLogic(html);
        this.addEventListeners(html);
        containerr.appendChild(html);
    }
}


/***/ }),

/***/ "./src/guiElements/m-graph-html/m-graph-html.component.css":
/*!*****************************************************************!*\
  !*** ./src/guiElements/m-graph-html/m-graph-html.component.css ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/************************************************** statici */\r\n\r\n.template, .MDefaultStyles{\r\n  display: none;\r\n}\r\n\r\n.tabContent{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-flow: nowrap;/*?*/\r\n  /*margin-top: calc( var(--mainBorderWidth) * 2 );*/\r\n}\r\n\r\n/*olds*/\r\n\r\n#defaultMGraphHtmlVertex, #defaultMSidebarHtmlVertex, replace{\r\n  display:none;\r\n}\r\n\r\n.HiddenStructures > *{\r\n  display: none;\r\n}\r\n\r\n#mproperty_sidebar, .sidebarShell, .editorShell, .propertyBarContainer{\r\n  flex-basis: 0;/* calc(var(--sidebarW));*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  background-color: var(--mainBackgroundColor);\r\n  /*border-right: var(--mainBorder);*/\r\n  width: calc(var(--sidebarW));\r\n  /*height: calc(100vh - (var(--topbarH) + var(--tabH)));*/\r\n  overflow: hidden;\r\n  /*flex-wrap: wrap;\r\n  margin-top: 5px;\r\n  border-top: var(--mainBorder);*/\r\n}\r\n\r\n.sidebarShell{ border-right: var(--mainBorder); }\r\n\r\n.propertyBarContainer{ border-left: var(--mainBorder); }\r\n\r\n.editorShell{\r\n  -webkit-box-flex: 3;\r\n          flex-grow: 3;\r\n}\r\n\r\n/*#sidebar, */\r\n\r\n#metamodel_sidebar, #model_sidebar, .property_sidebar{\r\n                -webkit-box-orient: horizontal;\r\n                -webkit-box-direction: normal;\r\n                        flex-direction: row;\r\n                flex-wrap: wrap;\r\n                -webkit-box-pack: justify;\r\n                        justify-content: space-between;/*si attiva solo se entra tutto in una riga e avanza pure spazio*/\r\n                -webkit-box-align: start;\r\n                        align-items: flex-start;\r\n                align-content: flex-start;/*accatasta tutto verticalmente verso la cima invece di spaziarli.*/\r\n                padding-right:5px;\r\n              }\r\n\r\n#msidebar>*:first-child, #metamodel_sidebar>*:first-child, #model_sidebar>*:first-child{\r\n  background-color: var(--mainBorderColor);\r\n  width: var(--mainBorderWidth);\r\n  right: 0px;\r\n}\r\n\r\n#msidebar>*:not(:first-child), #metamodel_sidebar>*:not(:first-child), #model_sidebar>*:not(:first-child){\r\n  padding: 2px;\r\n  max-width: 200px;\r\n  min-width: 75px;\r\n  flex-basis: 75px;/*should === min-width per mantenere l'effetto.*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-shrink: 1;\r\n}\r\n\r\n.sidebarVertex:hover{\r\n  background-color: var(--mainBorderColor);\r\n  border: 2px solid var(--secondaryBorderColor);\r\n  padding: 0px;\r\n}\r\n\r\n.sidebarVertex{\r\n  min-width: 50px;\r\n  min-height: 50px;\r\n  flex-basis:50px;\r\n}\r\n\r\n@media all and (min-width: 200px) {\r\n  .sidebarVertex {\r\n    -webkit-box-flex: 0;\r\n            flex-grow: 0; }\r\n}\r\n\r\n#metamodel_editor, #model_editor{\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.rawContainer{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  height: 100%;\r\n}\r\n\r\nh2.rawTitle{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.rawecore{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex:1;\r\n          flex-grow:1;\r\n  flex-shrink:1;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9tLWdyYXBoLWh0bWwvbS1ncmFwaC1odG1sLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEOztBQUU3RDtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGlCQUFpQixDQUFDLElBQUk7RUFDdEIsa0RBQWtEO0FBQ3BEOztBQUVBLE9BQU87O0FBR1A7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhLENBQUMsMEJBQTBCO0VBQ3hDLG1CQUFZO1VBQVosWUFBWTtFQUNaLDRDQUE0QztFQUM1QyxtQ0FBbUM7RUFDbkMsNEJBQTRCO0VBQzVCLHdEQUF3RDtFQUN4RCxnQkFBZ0I7RUFDaEI7O2lDQUUrQjtBQUNqQzs7QUFDQSxlQUFlLCtCQUErQixFQUFFOztBQUNoRCx1QkFBdUIsOEJBQThCLEVBQUU7O0FBQ3ZEO0VBQ0UsbUJBQVk7VUFBWixZQUFZO0FBQ2Q7O0FBQ0EsYUFBYTs7QUFBQztnQkFDRSw4QkFBbUI7Z0JBQW5CLDZCQUFtQjt3QkFBbkIsbUJBQW1CO2dCQUNuQixlQUFlO2dCQUNmLHlCQUE4Qjt3QkFBOUIsOEJBQThCLENBQUMsaUVBQWlFO2dCQUNoRyx3QkFBdUI7d0JBQXZCLHVCQUF1QjtnQkFDdkIseUJBQXlCLENBQUMsbUVBQW1FO2dCQUM3RixpQkFBaUI7Y0FDbkI7O0FBRWQ7RUFDRSx3Q0FBd0M7RUFDeEMsNkJBQTZCO0VBQzdCLFVBQVU7QUFDWjs7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGdCQUFnQixDQUFDLGdEQUFnRDtFQUNqRSxtQkFBWTtVQUFaLFlBQVk7RUFDWixjQUFjO0FBQ2hCOztBQUNBO0VBQ0Usd0NBQXdDO0VBQ3hDLDZDQUE2QztFQUM3QyxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7O0FBRUE7RUFDRTtJQUNFLG1CQUFZO1lBQVosWUFBWSxFQUFFO0FBQ2xCOztBQUNBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFHQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLDRCQUFpQjtFQUFqQiw2QkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZDs7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixrQkFBVztVQUFYLFdBQVc7RUFDWCxhQUFhO0FBQ2YiLCJmaWxlIjoic3JjL2d1aUVsZW1lbnRzL20tZ3JhcGgtaHRtbC9tLWdyYXBoLWh0bWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiBzdGF0aWNpICovXHJcblxyXG4udGVtcGxhdGUsIC5NRGVmYXVsdFN0eWxlc3tcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4udGFiQ29udGVudHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZmxvdzogbm93cmFwOy8qPyovXHJcbiAgLyptYXJnaW4tdG9wOiBjYWxjKCB2YXIoLS1tYWluQm9yZGVyV2lkdGgpICogMiApOyovXHJcbn1cclxuXHJcbi8qb2xkcyovXHJcblxyXG5cclxuI2RlZmF1bHRNR3JhcGhIdG1sVmVydGV4LCAjZGVmYXVsdE1TaWRlYmFySHRtbFZlcnRleCwgcmVwbGFjZXtcclxuICBkaXNwbGF5Om5vbmU7XHJcbn1cclxuXHJcbi5IaWRkZW5TdHJ1Y3R1cmVzID4gKntcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jbXByb3BlcnR5X3NpZGViYXIsIC5zaWRlYmFyU2hlbGwsIC5lZGl0b3JTaGVsbCwgLnByb3BlcnR5QmFyQ29udGFpbmVye1xyXG4gIGZsZXgtYmFzaXM6IDA7LyogY2FsYyh2YXIoLS1zaWRlYmFyVykpOyovXHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CYWNrZ3JvdW5kQ29sb3IpO1xyXG4gIC8qYm9yZGVyLXJpZ2h0OiB2YXIoLS1tYWluQm9yZGVyKTsqL1xyXG4gIHdpZHRoOiBjYWxjKHZhcigtLXNpZGViYXJXKSk7XHJcbiAgLypoZWlnaHQ6IGNhbGMoMTAwdmggLSAodmFyKC0tdG9wYmFySCkgKyB2YXIoLS10YWJIKSkpOyovXHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAvKmZsZXgtd3JhcDogd3JhcDtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgYm9yZGVyLXRvcDogdmFyKC0tbWFpbkJvcmRlcik7Ki9cclxufVxyXG4uc2lkZWJhclNoZWxseyBib3JkZXItcmlnaHQ6IHZhcigtLW1haW5Cb3JkZXIpOyB9XHJcbi5wcm9wZXJ0eUJhckNvbnRhaW5lcnsgYm9yZGVyLWxlZnQ6IHZhcigtLW1haW5Cb3JkZXIpOyB9XHJcbi5lZGl0b3JTaGVsbHtcclxuICBmbGV4LWdyb3c6IDM7XHJcbn1cclxuLyojc2lkZWJhciwgKi8jbWV0YW1vZGVsX3NpZGViYXIsICNtb2RlbF9zaWRlYmFyLCAucHJvcGVydHlfc2lkZWJhcntcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47LypzaSBhdHRpdmEgc29sbyBzZSBlbnRyYSB0dXR0byBpbiB1bmEgcmlnYSBlIGF2YW56YSBwdXJlIHNwYXppbyovXHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7LyphY2NhdGFzdGEgdHV0dG8gdmVydGljYWxtZW50ZSB2ZXJzbyBsYSBjaW1hIGludmVjZSBkaSBzcGF6aWFybGkuKi9cclxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6NXB4O1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiNtc2lkZWJhcj4qOmZpcnN0LWNoaWxkLCAjbWV0YW1vZGVsX3NpZGViYXI+KjpmaXJzdC1jaGlsZCwgI21vZGVsX3NpZGViYXI+KjpmaXJzdC1jaGlsZHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQm9yZGVyQ29sb3IpO1xyXG4gIHdpZHRoOiB2YXIoLS1tYWluQm9yZGVyV2lkdGgpO1xyXG4gIHJpZ2h0OiAwcHg7XHJcbn1cclxuI21zaWRlYmFyPio6bm90KDpmaXJzdC1jaGlsZCksICNtZXRhbW9kZWxfc2lkZWJhcj4qOm5vdCg6Zmlyc3QtY2hpbGQpLCAjbW9kZWxfc2lkZWJhcj4qOm5vdCg6Zmlyc3QtY2hpbGQpe1xyXG4gIHBhZGRpbmc6IDJweDtcclxuICBtYXgtd2lkdGg6IDIwMHB4O1xyXG4gIG1pbi13aWR0aDogNzVweDtcclxuICBmbGV4LWJhc2lzOiA3NXB4Oy8qc2hvdWxkID09PSBtaW4td2lkdGggcGVyIG1hbnRlbmVyZSBsJ2VmZmV0dG8uKi9cclxuICBmbGV4LWdyb3c6IDE7XHJcbiAgZmxleC1zaHJpbms6IDE7XHJcbn1cclxuLnNpZGViYXJWZXJ0ZXg6aG92ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJvcmRlckNvbG9yKTtcclxuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1zZWNvbmRhcnlCb3JkZXJDb2xvcik7XHJcbiAgcGFkZGluZzogMHB4O1xyXG59XHJcblxyXG4uc2lkZWJhclZlcnRleHtcclxuICBtaW4td2lkdGg6IDUwcHg7XHJcbiAgbWluLWhlaWdodDogNTBweDtcclxuICBmbGV4LWJhc2lzOjUwcHg7XHJcbn1cclxuXHJcbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDIwMHB4KSB7XHJcbiAgLnNpZGViYXJWZXJ0ZXgge1xyXG4gICAgZmxleC1ncm93OiAwOyB9XHJcbn1cclxuI21ldGFtb2RlbF9lZGl0b3IsICNtb2RlbF9lZGl0b3J7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5cclxuLnJhd0NvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZmxvdzogY29sdW1uO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5oMi5yYXdUaXRsZXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG4ucmF3ZWNvcmV7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWdyb3c6MTtcclxuICBmbGV4LXNocmluazoxO1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "./src/guiElements/m-graph-html/m-graph-html.component.ts":
/*!****************************************************************!*\
  !*** ./src/guiElements/m-graph-html/m-graph-html.component.ts ***!
  \****************************************************************/
/*! exports provided: MGraphHtmlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MGraphHtmlComponent", function() { return MGraphHtmlComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MGraphHtmlComponent = class MGraphHtmlComponent {
    constructor() { }
    ngOnInit() {
    }
};
MGraphHtmlComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-m-graph-html',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./m-graph-html.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/m-graph-html/m-graph-html.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./m-graph-html.component.css */ "./src/guiElements/m-graph-html/m-graph-html.component.css")).default]
    })
], MGraphHtmlComponent);



/***/ }),

/***/ "./src/guiElements/mGraph/Edge/EdgePoint.ts":
/*!**************************************************!*\
  !*** ./src/guiElements/mGraph/Edge/EdgePoint.ts ***!
  \**************************************************/
/*! exports provided: EdgePointFittizio, EdgePoint, CursorFollowerEP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePointFittizio", function() { return EdgePointFittizio; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePoint", function() { return EdgePoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CursorFollowerEP", function() { return CursorFollowerEP; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class EdgePointFittizio {
    constructor(pos, realPoint = null) {
        this.pos = null;
        this.realPoint = null;
        this.pos = pos;
        this.realPoint = realPoint;
    }
    link(realPoint) { this.realPoint = realPoint; }
    getPreviousRealPt(fittizi, includeMySelf = true) {
        let index = fittizi.indexOf(this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index < 0, 'the element must be inside the array. this:', this, ', arr:', fittizi, ', index:', index);
        index += (includeMySelf ? 1 : 0);
        while (--index >= 0) {
            if (fittizi[index].realPoint) {
                return fittizi[index].realPoint;
            }
        }
        return null;
    }
    getNextRealPt(fittizi, includeMySelf = true, debug = false) {
        let index = fittizi.indexOf(this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index < 0, 'the element must be inside the array');
        index -= (includeMySelf ? 1 : 0);
        while (++index < fittizi.length) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, index + '/' + fittizi.length + ']', fittizi[index], 'fittiziAll:', fittizi);
            if (fittizi[index].realPoint) {
                return fittizi[index].realPoint;
            }
        }
        return null;
    }
}
class EdgePoint {
    constructor(e, pos, endPointOfVertex = null) {
        this.id = null;
        this.pos = null;
        this.html = null;
        this.edge = null;
        this.endPointOfVertex = null;
        this.isSelected = null;
        this.isHighlighted = null;
        this.edge = e;
        this.endPointOfVertex = endPointOfVertex;
        // edge = null is ok, è il cursorfollower statico.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.edge === undefined, 'edge === undefined on EdgePoint constructor.');
        this.html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('circle');
        this.id = EdgePoint.ID++;
        if (e) {
            e.logic.linkToLogic(this.html);
        }
        EdgePoint.all[this.id] = this;
        this.html.dataset.EdgePointID = '' + this.id;
        this.pos = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        this.isSelected = false;
        this.isHighlighted = false;
        this.refreshGUI();
        this.moveTo(pos, false);
        this.addEventListeners();
    }
    static getFromHtml(html) { return EdgePoint.all[html.dataset.EdgePointID]; }
    follow(e = null) {
        CursorFollowerEP.activeEP = this;
        const edge = this.edge;
        if (this !== CursorFollowerEP.cursorFollower && this === edge.endNode) {
            CursorFollowerEP.activeEP = null;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].linkVertexMouseDown(e, edge);
        }
    }
    unfollow() {
        console.log('un-follow');
        CursorFollowerEP.activeEP = null;
    }
    addEventListeners() {
        const $html = $(this.html);
        // $html.off('click.ep').on('click.ep', (e: ClickEvent) => { EdgePoint.getFromHtml(e.currentTarget).onClick(e); });
        $html.off('mousedown.ep').on('mousedown.ep', (e) => { EdgePoint.getFromHtml(e.currentTarget).onMouseDown(e); });
        // $html.off('mousemove.ep').on('mousemove.ep', (e: MouseMoveEvent) => { EdgePoint.getFromHtml(e.currentTarget).onMouseMove(e); });
        $html.off('mouseup.ep').on('mouseup.ep', (e) => { EdgePoint.getFromHtml(e.currentTarget).onMouseUp(e); });
        $html.off('mouseenter.ep').on('mouseenter.ep', (e) => { EdgePoint.getFromHtml(e.currentTarget).onMouseEnter(e); });
        $html.off('mouseleave.ep').on('mouseleave.ep', (ee) => { EdgePoint.getFromHtml(ee.currentTarget).onMouseLeave(ee); });
        // $html.off('mouseover.ep').on('mouseover.ep', (e: MouseLeaveEvent) => { EdgePoint.getFromHtml(e.currentTarget).onMouseOver(e); });
        $html.off('contextmenu.deleteEdgePoint').on('contextmenu.deleteEdgePoint', (e) => { this.detach(); return false; });
    }
    isAttached() { return this.edge !== null; }
    detach(refreshGUI = true) {
        if (!this.isAttached()) {
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.edge.midNodes, this);
        if (this.html && this.html.parentNode) {
            this.html.parentNode.removeChild(this.html);
        }
        if (refreshGUI) {
            this.edge.refreshGui();
        }
        this.edge = null;
        this.unfollow();
    }
    onClick(e) { }
    onMouseEnter(e) {
        // console.log('enter');
        this.refreshGUI(null, true);
    }
    onMouseLeave(e) {
        // console.log('leave');
        // if (this.isMoving) { this.onMouseMove(e); }
        this.refreshGUI(null, false);
    }
    onMouseDown(e) {
        this.refreshGUI(true);
        // console.log('leave');
        this.follow(e);
        e.preventDefault();
        e.stopPropagation();
    }
    // onMouseOver(e: MouseOverEvent): void { e.preventDefault(); e.stopPropagation(); }
    /* onMouseMoveOld(e: MouseMoveEvent | MouseLeaveEvent): void {
      if (!this.isMoving) { return; }
      const screenPt: Point = new Point(e.pageX, e.pageY);
      const graphPt: GraphPoint = this.edge.owner.toGraphCoord(screenPt);
      this.moveTo(graphPt, true); }*/
    onMouseUp(e) {
        this.refreshGUI(false);
        e.stopPropagation();
        // console.log('up');
        this.unfollow();
    }
    getCenter(fitHorizontal = false, fitVertical = false) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging)
            return this.pos.duplicate();
        return this.edge.owner.fitToGrid(this.pos, true, false, fitHorizontal, fitVertical);
    }
    getStartPoint(fitHorizontal = true, fitVertical = true) {
        return this.getCenter(fitHorizontal, fitVertical);
    }
    getEndPoint(fitHorizontal = true, fitVertical = true) {
        return this.getCenter(fitHorizontal, fitVertical);
    }
    moveTo(pos, refresh, centra = true) {
        if (!this.edge) {
            return;
        }
        const r = centra ? 0 : (isNaN(-this.html.r) ? 0 : -this.html.r);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.pos || this.pos.x === null || this.pos.x === undefined, 'this.pos.x undefined', this.pos);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!pos || pos.x === null || pos.x === undefined, 'pos.x undefined', pos);
        this.pos.x = (pos.x + r);
        this.pos.y = (pos.y + r);
        this.html.setAttribute('cx', '' + this.pos.x);
        this.html.setAttribute('cy', '' + this.pos.y);
        this.show();
        if (refresh) {
            this.edge.refreshGui();
        }
    }
    show(debug = false) {
        const oldParent = this.html.parentElement;
        if (oldParent) {
            oldParent.removeChild(this.html);
        }
        this.edge.shell.appendChild(this.html);
        this.html.style.display = 'block';
        this.refreshGUI(null, null, debug);
    }
    hide() { this.html.style.display = 'none'; }
    refreshGUI(select = null, highlight = null, debug = false) {
        if (select !== null) {
            this.isSelected = select;
        }
        if (highlight !== null) {
            this.isHighlighted = highlight;
        }
        if (this.isSelected) {
            this.styleSelected();
        }
        else if (this.isHighlighted) {
            this.styleHighlight();
        }
        else {
            this.styleCommon(debug);
        }
    }
    styleCommon(debug = false) {
        if (!this.isAttached()) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'not attached', this);
            return;
        }
        const eps = this.edge.logic.edgeStyleCommon.edgePointStyle;
        if (debug) {
            this.html.setAttributeNS(null, 'debug', 'styleCommon');
        }
        this.html.setAttributeNS(null, 'r', '' + eps.radius);
        this.html.setAttributeNS(null, 'stroke-width', '' + eps.strokeWidth);
        this.html.setAttributeNS(null, 'stroke', eps.strokeColor);
        this.html.setAttributeNS(null, 'fill', eps.fillColor);
    }
    styleHighlight() {
        if (!this.isAttached()) {
            return;
        }
        const eps = this.edge.logic.edgeStyleHighlight.edgePointStyle;
        this.html.setAttributeNS(null, 'r', '' + eps.radius);
        this.html.setAttributeNS(null, 'stroke-width', '' + eps.strokeWidth);
        this.html.setAttributeNS(null, 'stroke', eps.strokeColor);
        this.html.setAttributeNS(null, 'fill', eps.fillColor);
    }
    styleSelected() {
        if (!this.isAttached()) {
            return;
        }
        const eps = this.edge.logic.edgeStyleSelected.edgePointStyle;
        this.html.setAttributeNS(null, 'r', '' + eps.radius);
        this.html.setAttributeNS(null, 'stroke-width', '' + eps.strokeWidth);
        this.html.setAttributeNS(null, 'stroke', eps.strokeColor);
        this.html.setAttributeNS(null, 'fill', eps.fillColor);
    }
}
EdgePoint.ID = 0;
EdgePoint.all = {};
class CursorFollowerEP extends EdgePoint {
    constructor() {
        super(null, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0));
        this.endPointOfVertex = undefined;
        this.html.setAttributeNS(null, 'fill', 'purple');
        this.html.setAttributeNS(null, 'stroke', 'purple');
        this.html.setAttributeNS(null, 'r', '5');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].eventiDaAggiungereAlBody('cursor follower');
        const $b = $(document.body);
        $b.off('mousemove.cursorFollowerEdgePoint_Move').on('mousemove.cursorFollowerEdgePoint_Move', (e) => {
            const debug =  false && false;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'mousemove.cursorFollowerEdgePoint_Move()');
            const f = CursorFollowerEP.activeEP;
            if (!f || !f.isAttached()) {
                return;
            }
            const graph = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph;
            f.moveTo(graph.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY)), true);
            f.edge.refreshGui(true);
            /// here bug edge
        });
        $b.off('click.cursorFollowerEdgePoint_Detach').on('click.cursorFollowerEdgePoint_Detach', (e) => {
            const f = CursorFollowerEP.get();
            f.detach();
        });
        this.addEventListeners();
    }
    static get() {
        if (!this.cursorFollower) {
            this.cursorFollower = new CursorFollowerEP();
        }
        return this.cursorFollower;
    }
    /*
      cursorFollowerClick(e: ClickEvent) {
        const coord: GraphPoint = this.getCenter();
        this.detach();
        const useless = new EdgePoint(this.edge, coord);
        this.attach(this.edge, null);
      }*/
    onMouseUp(e) { if (this.isAttached()) {
        this.edge.onMouseUp(e);
    } }
    moveTo(pos, refresh, centra = true) {
        super.moveTo(pos, refresh, centra);
        if (!this.isAttached()) {
            return;
        }
        if (refresh) {
            this.edge.refreshGui();
        }
    }
    isAttached() { return this.edge !== null; }
    attach(edge, position, index = Number.POSITIVE_INFINITY) {
        this.detach();
        edge.logic.linkToLogic(this.html);
        this.graph = edge.owner;
        if (index < 0) {
            index = -1;
        }
        if (index === null || index === Number.POSITIVE_INFINITY) {
            index = this.edge.midNodes.length;
        }
        // console.log('CursorFollower.Attach()');
        this.edge = edge;
        this.html.dataset.modelpieceid = '' + this.edge.logic.id;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].insertAt(this.edge.midNodes, index + 1, this);
        if (position) {
            this.moveTo(position, false);
        }
        this.graph.container.appendChild(this.html);
        this.follow();
        this.refreshGUI(true);
    }
    addEventListeners() {
        super.addEventListeners();
        /*$(this.html).off('click.makeEdgePoint').on('click.makeEdgePoint',
          (e: ClickEvent) => { CursorFollowerEP.cursorFollower.cursorFollowerClick(e); });*/
        $(this.html).off('mouseup.makeEdgePoint').on('mouseup.makeEdgePoint', (e) => { CursorFollowerEP.get().onMouseUp(e); });
    }
}
CursorFollowerEP.cursorFollower = null;
CursorFollowerEP.activeEP = null;


/***/ }),

/***/ "./src/guiElements/mGraph/Edge/ExtEdge.ts":
/*!************************************************!*\
  !*** ./src/guiElements/mGraph/Edge/ExtEdge.ts ***!
  \************************************************/
/*! exports provided: ExtEdge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtEdge", function() { return ExtEdge; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class ExtEdge extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"] {
    constructor(logic, startv = null, end = null) {
        super(logic, null, startv, end);
    }
    canBeLinkedTo(target0) {
        const target = target0;
        return target && this.logic !== target && target.extends.indexOf(this.logic) === -1;
    }
}


/***/ }),

/***/ "./src/guiElements/mGraph/Edge/edgeStyle.ts":
/*!**************************************************!*\
  !*** ./src/guiElements/mGraph/Edge/edgeStyle.ts ***!
  \**************************************************/
/*! exports provided: EdgePointStyle, EdgeHeadStyle, EdgeStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePointStyle", function() { return EdgePointStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeHeadStyle", function() { return EdgeHeadStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeStyle", function() { return EdgeStyle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class EdgePointStyle {
    constructor(radius = null, strokeWidth = null, strokeColor = null, fillColor = null) {
        this.radius = null;
        this.strokeWidth = null;
        this.strokeColor = null;
        this.fillColor = null;
        this.radius = radius;
        this.strokeColor = strokeColor;
        this.strokeWidth = strokeWidth;
        this.fillColor = fillColor;
    }
}
class EdgeHeadStyle {
    constructor(width, height, fill, stroke) {
        this.width = width;
        this.height = height;
        this.fill = fill;
        this.stroke = stroke;
    }
    clone() { return new EdgeHeadStyle(this.width, this.height, this.fill, this.stroke); }
}
class EdgeStyle {
    constructor(style = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, width = 2, color = '#ffffff', edgePointStyle, edgeHeadStyle) {
        this.style = null;
        this.width = null;
        this.color = null;
        this.edgePointStyle = edgePointStyle;
        this.edgeHeadStyle = edgeHeadStyle;
        this.style = style;
        this.width = width;
        this.color = color;
    }
    clone() { return new EdgeStyle(this.style, this.width, this.color, this.edgePointStyle, this.edgeHeadStyle); }
}


/***/ }),

/***/ "./src/guiElements/mGraph/Edge/iEdge.ts":
/*!**********************************************!*\
  !*** ./src/guiElements/mGraph/Edge/iEdge.ts ***!
  \**********************************************/
/*! exports provided: EdgeModes, IEdge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeModes", function() { return EdgeModes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IEdge", function() { return IEdge; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


var EdgeDecoratorType;
(function (EdgeDecoratorType) {
    EdgeDecoratorType["containment"] = "containment";
    EdgeDecoratorType["generalization"] = "generalization";
    EdgeDecoratorType["simple"] = "simple";
})(EdgeDecoratorType || (EdgeDecoratorType = {}));
var EdgeModes;
(function (EdgeModes) {
    EdgeModes["straight"] = "straight";
    EdgeModes["angular2"] = "angular con 2 segmenti.";
    EdgeModes["angular3"] = "angular con 3 segmenti (un break centrale)";
    EdgeModes["angular23Auto"] = "angular 2 o angular 3 automatico";
})(EdgeModes || (EdgeModes = {}));
class IEdge {
    constructor(logic, index, startv = null, end = null) {
        this.headtype = EdgeDecoratorType.simple;
        this.tailtype = EdgeDecoratorType.simple;
        // private static tempMidPoint_Clicked: GraphPoint = null;
        // private static tempMidPoint_ModelPiece: ModelPiece = null;
        this.owner = null;
        this.start = null;
        this.end = null;
        this.midNodes = null;
        this.shell = null;
        this.html = null;
        this.shadow = null;
        this.logic = null;
        this.isSelected = null;
        this.isHighlighted = null;
        // mode: EdgeModes = null;
        this.edgeHead = null;
        this.edgeTail = null;
        this.headShell = null;
        this.tailShell = null;
        this.tmpEnd = null;
        this.tmpEndVertex = null;
        this.useMidNodes =  true || false;
        this.useRealEndVertex =  true || false;
        this.id = null;
        if (!startv) {
            if (logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
                startv = logic.getVertex();
            }
            if (logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
                startv = logic.getVertex();
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!startv, 'startVertex missing');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!logic || !startv, 'new Edge() invalid parameters. logic:', logic, 'start:', startv, 'end:', end);
        if (!end) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!IEdge.edgeChanging, 'cannot create a pending edge (without target) while there are other pending edges.');
            IEdge.edgeChanging = this;
        }
        IEdge.all.push(this);
        this.id = IEdge.edgeCount++;
        IEdge.idToEdge[this.id] = this;
        this.logic = logic;
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"])) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index === null || index === undefined, 'index must be set.');
            this.logic.edges[index] = this;
        }
        this.shell = document.createElementNS('http://www.w3.org/2000/svg', 'g'); // U.newSvg<SVGGElement>('g');
        this.html = document.createElementNS('http://www.w3.org/2000/svg', 'path'); // U.newSvg<SVGPathElement>('Path');
        this.shadow = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('path');
        this.shell.appendChild(this.html);
        this.shell.appendChild(this.shadow);
        this.shadow.dataset.edgeid = this.shell.dataset.edgeid = this.html.dataset.edgeid = '' + this.id;
        this.start = startv;
        this.start.edgesStart.push(this);
        this.setTarget(end);
        this.startNode = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0), this.start);
        this.midNodes = [];
        this.endNode = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0), this.end);
        this.owner = this.start.owner;
        this.isSelected = false;
        this.isHighlighted = false;
        this.edgeHead = null;
        this.edgeTail = null;
        this.headShell = null;
        this.tailShell = null;
        this.owner.edgeContainer.append(this.shell);
        this.shell.classList.add('EdgeShell');
        this.html.classList.add('Edge');
        this.shadow.classList.add('Edge', 'Shadow');
        this.shell.dataset.modelpieceid = '' + this.logic.id;
        this.html.dataset.modelpieceid = '' + this.logic.id;
        this.shadow.dataset.modelpieceid = '' + this.logic.id;
        this.html.setAttribute('fill', 'none');
        this.shadow.setAttribute('fill', 'none');
        this.shadow.setAttribute('stroke', 'none');
        this.shadow.setAttribute('visibility', 'hidden');
        this.shadow.setAttribute('pointer-events', 'stroke');
        this.addEventListeners(true, false);
        this.refreshGui();
    }
    static staticInit() {
        IEdge.all = [];
        IEdge.selecteds = [];
        // todo: prevent propagation on click on edges.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].eventiDaAggiungereAlBody('trigger onBlur of all IEdge.selecteds.');
        $(document.body).off('click.blurEdgeSelection').on('click.blurEdgeSelection', (ee) => {
            const debug = false;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'body.click(): clear All Edge Selections');
            let i;
            let arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(IEdge.selecteds);
            for (i = 0; i < arr.length; i++) {
                arr[i].onBlur();
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'graph clicked:', ee);
            const modelPieceClicked = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].get(ee);
            const edgeClicked = IEdge.get(ee);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'modelPieceClicked ? ', modelPieceClicked);
            if (!modelPieceClicked) {
                return;
            }
            const htmlClicked = ee.target;
            let parent = htmlClicked;
            while (parent && parent.classList && !parent.classList.contains('EdgeShell')) {
                parent = parent.parentNode;
            }
            // const edgeClicked: IEdge = (parent && parent.classList) ? edge : null;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'edgeClicked ? ', edgeClicked);
            if (!edgeClicked) {
                return;
            }
            edgeClicked.onClick(ee);
        });
        $(document.body).off('keydown.deletethings').on('keydown.deletethings', (evt) => {
            let i;
            const target = document.activeElement; // evt.target;
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isChildrenOf(target, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.container))
                return;
            const tag = target.tagName.toLowerCase();
            const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isInput(target, true);
            if (isInput)
                return;
            const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel();
            const mp = model.graph.propertyBar.selectedModelPiece;
            const ism2 = mp && model.isM2();
            if (mp === model)
                return;
            const v = mp.getVertex(); // IVertex.getvertexByHtml(target);
            const e = []; //U.shallowArrayCopy(IEdge.selecteds);// IEdge.getByHtml(target);
            const ext = [];
            const elogic = [];
            const extlogic = [];
            for (i = 0; i < IEdge.selecteds.length; i++) {
                const elem = IEdge.selecteds[i];
                if (elem instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
                    ext.push(elem);
                    extlogic.push(elem.logic);
                }
                else {
                    e.push(elem);
                    elogic.push(elem.logic);
                }
            }
            console.log('document.keydown.deletethings: ', evt, e, v, mp);
            if (e && e.length) {
                console.log('edge: evt.key.toLowerCase() = ', evt.key.toLowerCase());
                switch (evt.key.toLowerCase()) {
                    default: break;
                    case 'delete':
                        for (i = 0; i < elogic.length; i++) {
                            elogic[i].delete(true);
                        }
                        for (i = 0; i < ext.length; i++) {
                            ext[i].remove();
                        }
                        break;
                }
                return;
            }
            if (v) {
                switch (evt.key.toLowerCase()) {
                    default: break;
                    case 'd':
                        if (!evt.ctrlKey || !ism2)
                            return;
                        if (mp === model)
                            return;
                        mp.duplicate();
                        break;
                    case 'delete': // case 'Backspace':
                        // if (isInput) return; was only here, moved to everyone
                        if (mp === model)
                            return;
                        if (ism2)
                            mp.delete(true);
                        else {
                            if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"])
                                mp.setValues(null);
                            else if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"])
                                mp.clearTargets();
                        }
                        break;
                }
            }
        });
        return IEdge.all;
    }
    static get(e) {
        // return ModelPiece.getLogic(e.classType).edge;
        return IEdge.getByHtml(e.target);
    }
    static getByHtml(html0, debug = true) {
        if (!html0) {
            return null;
        }
        let html = html0;
        while (html && (!html.dataset || !html.dataset.edgeid)) {
            html = html.parentElement;
        }
        const ret = html ? IEdge.getByID(+html.dataset.edgeid) : null;
        // U.pe(debug && !ret, 'failed to find edge. html0:', html0, 'html:', html, 'map:', IEdge.idToEdge);
        return ret;
    }
    static getByID(id) { return IEdge.idToEdge[id]; }
    generateAggregationHead(style) { return null; }
    generateContainmentHead(style) { return this.generateAggregationHead(style); }
    generateContainmentTail(style) { return this.generateAggregationTail(style); }
    generateAggregationTail(style) {
        let svg;
        let path;
        const bugfigo = false;
        // if (this instanceof ExtEdge) svg = this.edgeTail = this.edgeHead || U.newSvg('svg');
        if (bugfigo || this.edgeTail && this.tailtype === EdgeDecoratorType.containment) {
            svg = this.edgeTail;
            // U.clear(svg);
            path = svg.firstChild;
        }
        else {
            svg = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('svg');
            path = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('path');
            svg.appendChild(path);
            path.setAttributeNS(null, 'd', 'M100 0 L200 100 L100 200 L0 100 Z');
        }
        this.tailtype = EdgeDecoratorType.containment;
        svg.setAttributeNS(null, 'width', '' + style.width);
        svg.setAttributeNS(null, 'height', '' + style.width);
        svg.setAttributeNS(null, 'viewBox', (-style.width) + ' ' + (-style.width) + ' ' + (200 + style.width * 2) + ' ' + (200 + style.width * 2));
        path.setAttributeNS(null, 'fill', style.fill);
        path.setAttributeNS(null, 'stroke', style.stroke);
        path.setAttributeNS(null, 'stroke-width', '' + style.width);
        return svg;
    }
    generateGeneralizationHead(style) {
        let svg;
        let path;
        const bugfigo = false;
        if (bugfigo || this.edgeHead && this.headtype === EdgeDecoratorType.generalization) {
            svg = this.edgeHead;
            // U.clear(svg);
            path = svg.firstChild;
        }
        else {
            svg = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('svg');
            path = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('path');
            svg.appendChild(path);
            path.setAttributeNS(null, 'd', 'M100 0 L200 200 L000 200 Z');
        }
        this.headtype = EdgeDecoratorType.generalization;
        svg.setAttributeNS(null, 'width', '' + style.width);
        svg.setAttributeNS(null, 'height', '' + style.width);
        svg.setAttributeNS(null, 'viewBox', (-style.width) + ' ' + (-style.width) + ' ' + (200 + style.width * 2) + ' ' + (200 + style.width * 2));
        path.setAttributeNS(null, 'fill', style.fill);
        path.setAttributeNS(null, 'stroke', style.stroke);
        path.setAttributeNS(null, 'stroke-width', '' + style.width);
        return svg;
    }
    generateGeneralizationTail(style) { return null; }
    static makePathSegment(prevPt, nextPt, mode0, angularFavDirectionIsHorizontal = null, prevVertexSize, nextVertexSize, type = ' L', debug = false) {
        // todo old: devi rifare totalmente la parte di "angularFavDirection" basandoti su se cade perpendicolare sul vertice e devi usare
        // 2 variabili, forzando la direzione ad essere per forza perpendicolare sul lato su cui risiede il vertex.startPt o .endPt
        // poi: se le direzioni forzate coincidono, allora è un angular3, se sono vertical+horizontal, allora è un angular2.
        // nb: in prevVertexSize e nextVertexSize la favDirection viene calcolata uguale, ma l'assenamento prevVertexSize = nextVertexSize;
        // poi deve sparire perchè devo generare 2 diverse favDirection e non una sola.
        let m;
        let pathStr = '';
        const pt1IsOnHorizontalSide = !prevVertexSize ? null : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(prevPt, prevVertexSize);
        const pt2IsOnHorizontalSide = !nextVertexSize ? null : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(nextPt, nextVertexSize);
        // if (prevVertexSize) { prevPt = prevVertexSize} //IVertex.closestIntersection(); }
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markg(prevPt, true, 'green');
            if (prevVertexSize) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markgS(prevVertexSize, false, 'white');
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markg(nextPt, false, 'green');
            if (nextVertexSize) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markgS(nextVertexSize, false);
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'prev:' + (pt1IsOnHorizontalSide) + ', next:' + (pt2IsOnHorizontalSide), 'm0:' + mode0 + ' --> ' + mode0 + ', favDirection' + angularFavDirectionIsHorizontal);
        // return '';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'directions:', pt1IsOnHorizontalSide, pt2IsOnHorizontalSide);
        if (prevVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(prevPt, prevVertexSize)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'prev not on border');
            return '';
        }
        if (nextVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(nextPt, nextVertexSize)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'next not on border');
            return '';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(prevVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(prevPt, prevVertexSize) || nextVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(nextPt, nextVertexSize), 'not on border');
        if (prevVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(prevPt, prevVertexSize) || nextVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(nextPt, nextVertexSize)) {
            /*console.clear();
            const g = Status.status.getActiveModel().graph;
            g.markg(prevPt, false, 'green');
            g.markgS(prevVertexSize, false, 'green');
            g.markg(prevPt, false);
            g.markgS(prevVertexSize, false);
            console.log('not on vertex border. pt:', prevPt, 'vertex:', prevVertexSize);
            console.log('not on vertex border. nextpt:', nextPt, 'nextvertex:', nextVertexSize);
            U.pw(true, (!U.isOnEdge(prevPt, prevVertexSize) ? 'prev' : 'next') + ' not on vertex border.');
            return '';
            */
        }
        let mode = mode0;
        if (prevVertexSize && nextVertexSize) {
            // mode = (pt1IsOnHorizontalSide && pt2IsOnHorizontalSide) ? EdgeModes.angular3 : EdgeModes.angular2;
        }
        // if (mode === EdgeModes.angular23Auto) { mode = EdgeModes.angular3; }
        /*
        if (prevVertexSize && mode === EdgeModes.angular23Auto) {
          // U.pe(angularFavDirectionIsHorizontal === null, 'preferred direction is useless with prevVertexSize');
          U.pif(debug, 'favdirection pre:', angularFavDirectionIsHorizontal,
            'isOnVerticalEdge:', U.isOnVerticalEdges(prevPt, prevVertexSize),
            'isOnHorizontalEdge:', U.isOnHorizontalEdges(prevPt, prevVertexSize), 'prevPt:', prevPt, 'prevSize:', prevVertexSize);
          if (angularFavDirectionIsHorizontal === false && U.isOnVerticalEdges(prevPt, prevVertexSize)) {
            mode = EdgeModes.angular2; angularFavDirectionIsHorizontal = true; }
          if (angularFavDirectionIsHorizontal === true && U.isOnHorizontalEdges(prevPt, prevVertexSize)) {
            mode = EdgeModes.angular2; angularFavDirectionIsHorizontal = false; }
          U.pif(debug, 'favdirection post:', angularFavDirectionIsHorizontal);
        } */
        /* compute last favorite direction * /
    let lastIsHorizontalSide: boolean = null;
    const endPt: GraphPoint = allRealPt[allRealPt.length - 1].pos;
    const penultimoPt: GraphPoint = allRealPt[allRealPt.length - 2].getStartPoint();
    console.log('endVertex:', endVertex, 'endPt:', endPt, '; useRealEnd ? ', useRealEndVertex, ' = ', this.tmpEnd, this.tmpEndVertex);
    if (!endVertex) { lastIsHorizontalSide = Math.abs(GraphPoint.getM(penultimoPt, endPt)) < 1; } else
    if (endPt.x === endVertexSize.x) {                   /*from Left* /   lastIsHorizontalSide = true; } else
    if (endPt.x === endVertexSize.x + endVertexSize.w) { /*from Right* /  lastIsHorizontalSide = true; } else
    if (endPt.y === endVertexSize.y) {                   /*from Top* /    lastIsHorizontalSide = false; } else
    if (endPt.y === endVertexSize.y + endVertexSize.h) { /*from Bottom* / lastIsHorizontalSide = false;
    } else { lastIsHorizontalSide = null; }
    U.pe(lastIsHorizontalSide === null, 'endpoint is not on the boundary of vertex.',
      ' Vertex.endpoint:', endPt, '; vertexSize:', endVertexSize);*/
        /* done setting realpoints.pos, now draw path */
        let oldPathStr = pathStr;
        if (mode === EdgeModes.angular23Auto) {
            mode = mode0 = EdgeModes.angular3;
        }
        const angular23 = EdgeModes.angular3;
        // if (mode0 === angular23 && prevVertexSize && !pt1IsOnHorizontalSide && nextVertexSize && pt2IsOnHorizontalSide) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, mode0 === angular23, !!prevVertexSize, pt1IsOnHorizontalSide);
        if (mode0 === angular23 && prevVertexSize && pt1IsOnHorizontalSide) {
            angularFavDirectionIsHorizontal = false;
            mode = EdgeModes.angular3;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fixed');
        }
        // if (prevVertexSize) { angularFavDirectionIsHorizontal = pt1IsOnHorizontalSide; }
        // if (nextVertexSize) { angularFavDirectionIsHorizontal = !pt2IsOnHorizontalSide; }
        // if (mode === angular23 && prev)
        switch (mode) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected EdgeMode:', mode);
                break;
            case EdgeModes.angular2:
                m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].getM(prevPt, nextPt); // coefficiente angolare della prossima linea disegnata (come se fosse dritta)
                if (angularFavDirectionIsHorizontal === null) {
                    angularFavDirectionIsHorizontal = Math.abs(m) <= 1;
                } // angolo <= abs(45°)
                if (angularFavDirectionIsHorizontal) {
                    // qui resizer orizzontale
                    oldPathStr = pathStr;
                    pathStr += type + (nextPt.x) + ' ' + (prevPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; ang2 favdirectionHorizontal');
                }
                else {
                    // qui resizer verticale.
                    oldPathStr = pathStr;
                    pathStr += type + (prevPt.x) + ' ' + (nextPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; ang2 favdirectionVertical');
                }
                // qui resizer opposto al precedente.
                // oldPathStr = pathStr;
                // pathStr += type + (nextPt.x) + ' ' + (nextPt.y);
                // U.pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; ang2 end ridondante?');
                break;
            case EdgeModes.angular23Auto + '':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'mode.angular23Auto should be replaced before entering here');
                break;
            case EdgeModes.angular3:
                m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].getM(prevPt, nextPt); // coefficiente angolare della prossima linea disegnata (come se fosse dritta)
                if (angularFavDirectionIsHorizontal === null) {
                    angularFavDirectionIsHorizontal = Math.abs(m) <= 1;
                } // angolo <= abs(45°)
                if (angularFavDirectionIsHorizontal) {
                    const midX = (nextPt.x + prevPt.x) / 2;
                    // todo: e qui dovrei appendere un path invisibile che cambia cursore in HorizontalResizer intercettare gli eventi edge.
                    oldPathStr = pathStr;
                    pathStr += type + (midX) + ' ' + (prevPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 orizzontale: orizzontale big');
                    // qui invece uno piccolino verticale
                    oldPathStr = pathStr;
                    pathStr += type + (midX) + ' ' + (nextPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 orizzontale: verticale small');
                }
                else {
                    const midY = (nextPt.y + prevPt.y) / 2;
                    // todo: qui resizer verticale.
                    oldPathStr = pathStr;
                    pathStr += type + prevPt.x + ' ' + (midY);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 verticale: verticale big');
                    // qui invece uno piccolino orizzontale
                    oldPathStr = pathStr;
                    pathStr += type + nextPt.x + ' ' + (midY);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 verticale: orizzontale small');
                }
                // todo: qui resizer opposto al precedente.
                break;
            case EdgeModes.straight: /* nessun punto fittizio di mezzo */ break;
        }
        oldPathStr = pathStr;
        pathStr += type + (nextPt.x) + ' ' + (nextPt.y);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; lastPt comune a tutti.');
        return pathStr;
    }
    /*private static midPointMouseDown(e: JQuery.MouseDownEvent) {
      IEdge.tempMidPoint_ModelPiece = ModelPiece.getLogic(e.currentTarget);
      IEdge.tempMidPoint_Clicked = Status.status.getActiveModel().graph.toGraphCoord( new Point(e.pageX, e.pageY) );
    }*/ /*
    private static midPointMouseMove(e: JQuery.MouseMoveEvent) {
      const p: GraphPoint = Status.status.getActiveModel().graph.toGraphCoord( new Point(e.pageX, e.pageY) );
  
    }
    private static midPointMouseUp(e: JQuery.MouseUpEvent) { }*/
    canBeLinkedTo(target) { return this.logic.canBeLinkedTo(target); }
    refreshGui(debug = false, useRealEndVertex = null, usemidnodes = null) {
        debug = false;
        let debugi = window['' + 'debug'];
        if (debugi === 1)
            return;
        // || this.start.size.isinside(this.end.size) ||  this.end.size.isinside(this.start.size
        // quando startpoint o endpoint sono dentro un vertice size
        if (!this.midNodes.length && (this.start === this.end)) { //this.start.size.intersection(this.end.size))) {
            $(this.shell).hide();
            return;
        }
        else
            $(this.shell).show();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.logic, 'IEdge.logic is null:', this);
        if (useRealEndVertex === null) {
            useRealEndVertex = this.useRealEndVertex;
        }
        if (usemidnodes === null) {
            usemidnodes = this.useMidNodes;
        }
        /* setup variables */
        const startVertex = this.start;
        const startVertexSize = this.start.getSize();
        let endVertex = null;
        let endVertexSize = null;
        let allRealPt = this.getAllRealMidPoints();
        if (!usemidnodes) {
            allRealPt = [allRealPt[0], allRealPt[allRealPt.length - 1]];
        }
        if (useRealEndVertex) {
            endVertex = this.end;
            endVertexSize = endVertex.getSize();
            this.startNode.moveTo(startVertex.getStartPoint(allRealPt[1].getEndPoint()), false);
            this.endNode.moveTo(endVertex.getEndPoint(allRealPt[allRealPt.length - 2].getStartPoint()), false);
        }
        else {
            endVertex = this.tmpEndVertex;
            endVertexSize = endVertex ? endVertex.getSize() : null;
            this.startNode.moveTo(startVertex.getStartPoint(allRealPt[1].getEndPoint()), false);
            this.endNode.moveTo(endVertex ? endVertex.getEndPoint(allRealPt[allRealPt.length - 2].getStartPoint()) : this.tmpEnd, false);
        }
        if (debugi === 2)
            return;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'allRealPt:', allRealPt);
        let i;
        let pathStr; // 'M' + (allRealPt[0].getStartPoint().x) + ' ' + (allRealPt[0].getStartPoint().y);
        let oldpathStr;
        const graph = this.logic.getModelRoot().graph;
        if (debugi === 3)
            return;
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
            if (startVertexSize) {
                graph.markgS(startVertexSize, true, 'blue');
            }
            if (endVertexSize) {
                graph.markgS(endVertexSize, false);
            }
        }
        for (i = 1; i < allRealPt.length; i++) { // escludo il primo punto dal loop.
            const curr = allRealPt[i];
            const prev = allRealPt[i - 1];
            const favdirection = null; // i === allRealPt.length - 1 ? lastdirectionIsHorizontal : null;
            const prevVertexSize = i === 1 ? startVertexSize : null;
            const nextVertexSize = i === allRealPt.length - 1 ? endVertexSize : null;
            const prevPt = prev.getStartPoint(!prevVertexSize, !prevVertexSize);
            const currPt = curr.getEndPoint(!nextVertexSize, !nextVertexSize);
            // console.log(prevVertexSize, new GraphSize());
            const intersection = nextVertexSize && prevVertexSize ? nextVertexSize.intersection(prevVertexSize) : null;
            if (intersection)
                console.log('midenodes.length:', !this.midNodes.length, '&&', prevPt, currPt, ' contained in ', intersection, intersection.contains(prevPt), intersection.contains(currPt));
            if (debug) {
                if (intersection)
                    this.owner.markgS(intersection, true, 'black');
                this.owner.markg(prevPt, true, 'orange');
                this.owner.markg(currPt, false, 'yellow');
                if (prevVertexSize) {
                    graph.markgS(prevVertexSize, false, 'blue');
                }
                if (nextVertexSize) {
                    graph.markgS(nextVertexSize, false);
                }
            }
            if (!this.midNodes.length && intersection && (intersection.contains(prevPt) || intersection.contains(currPt))) {
                $(this.shell).hide();
                return;
            }
            // if (i === 1) { pt1.moveOnNearestBorder(startVertexSize, false); }
            // if (i === allRealPt.length - 1) { pt2.moveOnNearestBorder(endVertexSize, false); }
            if (i === 1) {
                pathStr = 'M' + prevPt.x + ' ' + prevPt.y;
            }
            oldpathStr = pathStr;
            pathStr += IEdge.makePathSegment(prevPt, currPt, this.getEdgeMode(), favdirection, prevVertexSize, nextVertexSize);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: RealPts:' + '[' + i + '] = ' + currPt.toString() + '; prev:' + prevPt.toString());
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr[' + (i) + '/' + allRealPt.length + ']: ' + oldpathStr + ' --> ' + pathStr);
        }
        if (debugi === 3)
            return;
        this.setPath(pathStr, debug);
        if (debugi === 4)
            return;
        this.getEdgeHead();
        this.getEdgeTail();
        if (debugi === 5)
            return;
        this.appendTailHead(true, pathStr);
        this.appendTailHead(false, pathStr);
        if (debugi === 6)
            return;
        // this.addEventListeners(true, false);
    }
    getEdgeMode() {
        let tmp = this.logic.edgeStyleCommon.style;
        return tmp ? tmp : this.logic.edgeStyleCommon.style = EdgeModes.straight;
    }
    getStyle() {
        if (this.isSelected) {
            return this.logic.edgeStyleSelected;
        }
        if (this.isHighlighted) {
            return this.logic.edgeStyleHighlight;
        }
        else {
            return this.logic.edgeStyleCommon;
        }
    }
    setPath(pathStr, debug = false) {
        let style = this.getStyle();
        /* update style */
        this.html.setAttribute('stroke', style.color);
        this.html.setAttribute('stroke-width', '' + style.width);
        this.shadow.setAttribute('stroke-width', '' + (style.width + IEdge.shadowWidthIncrease));
        // U.clear(this.shell);
        this.shell.appendChild(this.html);
        this.shell.appendChild(this.shadow);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'edgeHead:', this.edgeHead, 'tail:', this.edgeTail);
        this.html.setAttributeNS(null, 'd', pathStr);
        this.shadow.setAttributeNS(null, 'd', pathStr);
        let i;
        if (this.isSelected) {
            this.startNode.show();
            for (i = 0; i < this.midNodes.length; i++) {
                this.midNodes[i].show();
            }
            this.endNode.show();
        }
        else if (this.isHighlighted) {
            this.startNode.hide();
            for (i = 0; i < this.midNodes.length; i++) {
                this.midNodes[i].show();
            }
            this.endNode.hide();
        }
        else {
            this.startNode.hide();
            for (i = 0; i < this.midNodes.length; i++) {
                this.midNodes[i].hide();
            }
            this.endNode.hide();
        }
    }
    addEventListeners(foredge, forheadtail) {
        const $edgetail = forheadtail ? $(this.headShell).add(this.tailShell) : $();
        const $shell = foredge ? $(this.shell) : $();
        const $edgeparts = $shell.find('.Edge').add($edgetail);
        // U.pe(!$shell.length, 'html+', $htmlplus, 'html', $html, 'tailhead', $edgetail);
        //  U.pe(!$edgetail.length, 'html+', $htmlplus, 'html', $html, 'tailhead', $edgetail, 'head-tail:', this.edgeHead, this.edgeTail);
        // $shell.off('click.pbar').on('click.pbar', (e: ClickEvent) => IVertex.ChangePropertyBarContentClick(e, this) );
        /*$html.off('mousedown.showStyle').on('mousedown.showStyle',
          (e: MouseDownEvent) => { Status.status.getActiveModel().graph.propertyBar.styleEditor.showE(this.logic); });*/
        $shell.off('mousedown.startSetMidPoint').on('mousedown.startSetMidPoint', (e) => {
            // const ownermp: M2Class | IReference = ModelPiece.getLogic(e.currentTarget) as M2Class | IReference;
            // U.pe( ownermp === null || ownermp === undefined, 'unable to get logic of:', e.currentTarget);
            const edge = IEdge.get(e);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!e, 'unable to get edge of:', e.currentTarget);
            edge.onMouseDown(e);
        });
        $shell.off('mousemove.startSetMidPoint').on('mousemove.startSetMidPoint', (e) => {
            // const ownermp: M2Class | IReference = ModelPiece.getLogic(e.currentTarget) as M2Class | IReference;
            // U.pe( ownermp === null || ownermp === undefined, 'unable to get logic of:', e.currentTarget);
            const edge = IEdge.getByHtml(e.target, true);
            edge.onMouseMove(e);
        });
        $shell.off('click.addEdgePoint').on('click.addEdgePoint', (e) => { IEdge.get(e).onClick(e); });
        $edgeparts.off('mouseover.cursor').on('mouseover.cursor', (e) => { IEdge.get(e).onMouseOver(e); });
        $edgeparts.off('mouseenter.cursor').on('mouseenter.cursor', (e) => { IEdge.get(e).onMouseEnter(e); });
        $edgeparts.off('mouseleave.cursor').on('mouseleave.cursor', (e) => { IEdge.get(e).onMouseLeave(e); });
    }
    onBlur() {
        this.isSelected = false;
        this.html.classList.remove('selected_debug');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(IEdge.selecteds, this);
        let i;
        for (i = 0; i < this.midNodes; i++) {
            this.midNodes[i].hide();
        }
        this.refreshGui();
    }
    getAllRealMidPoints() {
        const allNodes = [];
        allNodes.push(this.startNode);
        let i = 0;
        while (i < this.midNodes.length) {
            allNodes.push(this.midNodes[i++]);
        }
        allNodes.push(this.endNode);
        return allNodes;
    }
    getAllFakePoints(debug = false) {
        // if (!this.html) { return null; }
        const d = this.html.getAttributeNS(null, 'd'); // .replace('M', 'L');
        // let dArr: string[] = d.split('L'); /// consider instead: U.parseSvgPath(pathStr).pts;
        // if (dArr.length === 1) { dArr = [dArr[0], dArr[0]]; }
        let i;
        const realMidPoints = this.getAllRealMidPoints();
        const nodiFittizi = [];
        let realNodeIndex = 0;
        let puntiReali = 0;
        const parsedpts = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].parseSvgPath(d);
        for (i = 0; i < parsedpts.pts.length; i++) {
            const pt = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](parsedpts.pts[i].x, parsedpts.pts[i].y);
            let target = null;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'getAllFakePoints() d:', d, 'pt', pt, 'realMidPoints:', realMidPoints, 'index:', realNodeIndex, 'match?', realNodeIndex >= realMidPoints.length ? 'overflow' : realMidPoints[realNodeIndex].pos.equals(pt));
            let fitHorizontal;
            let fitVertical;
            if (i !== 0 && i !== parsedpts.pts.length - 1) {
                fitHorizontal = fitVertical = true;
            }
            if (i === 0 && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.start.getSize())) {
                fitHorizontal = false;
                fitVertical = true;
            }
            if (i === 0 && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.start.getSize())) {
                fitHorizontal = true;
                fitVertical = false;
            }
            if (i === parsedpts.pts.length - 1 && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.end.getSize())) {
                fitHorizontal = false;
                fitVertical = true;
            }
            if (i === parsedpts.pts.length - 1 && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.end.getSize())) {
                fitHorizontal = true;
                fitVertical = false;
            }
            // fitHorizontal = (i === 0 && U.isOnHorizontalEdges(pt, this.start.getSize()));
            const midPoint = realMidPoints[realNodeIndex].getStartPoint(fitHorizontal, fitVertical);
            // todo: se cambi endpoint !== startpoint, devi fare due check.
            // const prevPt: GraphPoint = allNodes[realNodeIndex].getStartPoint(!!prevVertexSize, !!prevVertexSize);
            // const currPt: GraphPoint = curr.getEndPoint(!!nextVertexSize, !!nextVertexSize);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, pt, ' =?= ', midPoint, pt.equals(midPoint));
            if (pt.equals(midPoint)) {
                puntiReali++;
                target = realMidPoints[realNodeIndex++];
            }
            nodiFittizi.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointFittizio"](pt, target));
        }
        if (puntiReali < 2 || puntiReali < realMidPoints.length) {
            const prettyFittizi = [];
            const prettyRealMidPoints = [];
            i = -1;
            while (++i < nodiFittizi.length) {
                prettyFittizi.push(nodiFittizi[i].pos.toString());
            }
            i = -1;
            while (++i < realMidPoints.length) {
                prettyRealMidPoints.push(realMidPoints[i].pos.toString());
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'fallimento nell\'assegnare fakepoints ai punti reali. Assegnati:' + puntiReali + ' / ' + prettyRealMidPoints.length
                + '; fittizi trovati:', prettyFittizi, ' reali:', prettyRealMidPoints, ', parsedpts:', parsedpts, ', path:', d);
        }
        return nodiFittizi;
    }
    getBoundingMidPoints(e, style = null, canFail = false, arrFittizi = null) {
        const fittizi = arrFittizi ? arrFittizi : this.getAllFakePoints();
        const tmp = this.getBoundingMidPointsFake(e, style, canFail, fittizi);
        return { prev: tmp[0].getPreviousRealPt(fittizi), next: tmp[1].getNextRealPt(fittizi) };
    }
    getBoundingMidPointsFake(e, style = null, canFail = false, arrFittizi = null) {
        // if (style.style === EdgeModes.straight) { return this.getBoundingMidPointsStraight(e, canFail); }
        // const edge: IEdge = ModelPiece.getLogic(e.classType).edge;
        const clickedPt = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(e);
        const lineWidth = +this.shadow.getAttributeNS(null, 'stroke-width');
        const allNodes = this.getAllRealMidPoints();
        const fittizi = arrFittizi ? arrFittizi : this.getAllFakePoints();
        let i = 0;
        let closestPrev = null;
        let closestNext = null;
        let closestDistance = Number.POSITIVE_INFINITY;
        if (fittizi.length <= 2)
            return null;
        while (++i < fittizi.length) {
            const prev = fittizi[i - 1];
            const next = fittizi[i];
            const currentDistance = clickedPt.distanceFromLine(prev.pos, next.pos);
            /*if (clickedPt.isInTheMiddleOf(prev.pos, next.pos, lineWidth)) { return [prev, next]; }*/
            if (currentDistance < closestDistance) {
                closestPrev = prev;
                closestNext = next;
                closestDistance = currentDistance;
            }
        }
        return [closestPrev, closestNext];
    }
    getBoundingMidPointsStraight_OLD(e, canFail = false) {
        const edge = null; // ModelPiece.getLogic(e.classType).edge;
        const clickedPt = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(e);
        const first = this.startNode;
        const second = (this.midNodes.length === 0 ? this.endNode : this.midNodes[0]);
        const penultimo = (this.midNodes.length === 0 ? this.startNode : this.midNodes[this.midNodes.length - 1]);
        const last = this.endNode;
        const lineWidth = +this.shadow.getAttributeNS(null, 'stroke-width');
        if (clickedPt.isInTheMiddleOf(first.pos, second.pos, lineWidth)) {
            /*console.log('bounding (first[' + edge.midNodes.indexOf(second)
              + '] && second[' + + edge.midNodes.indexOf(penultimo) + ']); e:', edge);*/
            return [first, second];
        }
        /* if (penultimo !== first && second !== penultimo && clickedPt.isInTheMiddleOf(second.pos, penultimo.pos, lineWidth)) {
          console.log('bounding (second[' + edge.midNodes.indexOf(second)
            + '] && penultimo[' + + edge.midNodes.indexOf(penultimo) + ']), e:', edge);
          U.pe(edge.midNodes.indexOf(second) + 1 !== edge.midNodes.indexOf(penultimo), 'non conseguenti');
          return [second, penultimo]; } */
        if (last !== second && clickedPt.isInTheMiddleOf(penultimo.pos, last.pos, lineWidth)) {
            /*console.log('bounding (penultimo[' + edge.midNodes.indexOf(penultimo)
              + '] && ultimo[' + + edge.midNodes.indexOf(last) + ']); e:', edge);*/
            return [penultimo, last];
        }
        let i;
        for (i = 0; i < this.midNodes.length; i++) { // ottimizzazione: può partire da 1 e terminare 1 prima (penultimo)
            const pre = i === 0 ? first : this.midNodes[i - 1];
            const now = this.midNodes[i];
            if (clickedPt.isInTheMiddleOf(pre.pos, now.pos, lineWidth)) {
                /*console.log('bounding (pre[' + edge.midNodes.indexOf(pre)
                  + '] && now[' + + edge.midNodes.indexOf(now) + ']), e:', edge);*/
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(edge.midNodes.indexOf(pre) + 1 !== edge.midNodes.indexOf(now), 'non consecutivi.');
                return [pre, now];
            }
        }
        console.log('clickedPt:', clickedPt, ', start:', this.startNode.pos, ', mids:', this.midNodes, ', end:', this.endNode.pos);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!canFail, 'bounding points not found:', e, this, 'edge:', IEdge.get(e));
        return null;
    }
    onMouseLeave(e) {
        this.isHighlighted = false;
        this.startNode.refreshGUI(null, false);
        this.endNode.refreshGUI(null, false);
        let i;
        for (i = 0; i < this.midNodes.length; i++) {
            this.midNodes[i].refreshGUI(null, false);
        }
        this.refreshGui();
    }
    onMouseEnter(e) {
        this.onMouseLeave(null);
        this.isHighlighted = true;
        this.refreshGui(true);
    }
    onMouseMove(e) { this.onMouseOver(e, false); }
    onMouseOver(e, canFail = false, debug = false) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().isAttached() || IEdge.edgeChanging) {
            return;
        }
        const fakePoints = this.getAllFakePoints();
        const tmp = this.getBoundingMidPointsFake(e, null, canFail, fakePoints);
        if (!tmp || tmp.length < 2) {
            return;
        }
        const preFake = tmp[0];
        const nextFake = tmp[1];
        const pre = preFake.getPreviousRealPt(fakePoints);
        const next = nextFake.getNextRealPt(fakePoints);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!pre, 'failed to get previousRealPt of point:', preFake, ', all fakePoints:', fakePoints);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!next, 'failed to get nextRealPt of point:', nextFake, ', all fakePoints:', fakePoints);
        let i = -1;
        this.startNode.refreshGUI(null, false);
        this.endNode.refreshGUI(null, false);
        let cursor;
        switch (this.getEdgeMode()) {
            default:
                cursor = 'help';
                break;
            case EdgeModes.straight:
                cursor = 'select';
                break;
            case EdgeModes.angular2:
            case EdgeModes.angular3:
            case EdgeModes.angular23Auto:
                if (preFake.pos.x === nextFake.pos.x) {
                    cursor = 'col-resize';
                }
                else if (preFake.pos.y === nextFake.pos.y) {
                    cursor = 'row-resize';
                }
                else {
                    cursor = 'no-drop';
                }
                break;
        }
        this.shadow.style.cursor = this.html.style.cursor = cursor;
        while (++i < this.midNodes.length) {
            this.midNodes[i].refreshGUI(null, false);
        }
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fake     pre: ', preFake, ', next:', nextFake);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'real     pre: ', pre, ', next:', next);
        pre.refreshGUI(null, true);
        next.refreshGUI(null, true);
    }
    onClick(e) {
        // console.log('IEdge.clicked:', this);
        const debug = false;
        this.isSelected = true;
        IEdge.selecteds.push(this);
        let i;
        this.html.setAttributeNS(null, 'stroke-width', '' + 5);
        this.html.classList.add('selected_debug');
        this.startNode.show();
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'midnodes:', this.midNodes);
        for (i = 0; i < this.midNodes; i++) {
            this.midNodes[i].show(debug);
        }
        this.endNode.show();
        // if (!triggered) { Status.status.getActiveModel().graph.propertyBar.styleEditor.showE(this.logic); }
        this.refreshGui();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].ChangePropertyBarContentClick(e, this);
        e.stopPropagation();
    }
    onMouseDown(e) {
        if (!this.isSelected) {
            return;
        }
        const tmp = this.getBoundingMidPoints(e);
        const pos = this.owner.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().attach(this, pos, this.midNodes.indexOf(tmp.prev));
    }
    onMouseUp(e) {
        const len0 = this.midNodes.length;
        const index = this.midNodes.indexOf(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get());
        if (!this.isSelected) {
            return;
        }
        // console.log('point inserted Pre', this.midNodes, ' [0]:', this.midNodes[0], this.midNodes[1]);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().detach(false);
        const len1 = this.midNodes.length;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].insertAt(this.midNodes, index, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().pos));
        const len2 = this.midNodes.length;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(len0 !== this.midNodes.length, 'size varied: ' + len0 + ' --> ' + len1 + ' --> ' + len2 + ' --> ' + this.midNodes.length);
        // console.log('point inserted Post:', this.midNodes,  len0 + ' --> ' + this.midNodes.length);
        this.refreshGui();
    }
    remove() {
        console.log('edge.remove()');
        this['' + 'removedtwice'] = 1 + (+this['' + 'removedtwice'] || 0);
        if (this['' + 'removedtwice'] > 1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'edge removed ' + this['' + 'removedtwice'] + ' times.', this);
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.start.edgesStart, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.end.edgesEnd, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(IEdge.all, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(IEdge.selecteds, this);
        const index = this.getIndex();
        this.logic.edges[index] = null;
        if (this.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"])
            this.logic.mtarget[index] = null;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"])
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.logic.extends, this.end.logic());
        this.shell.parentNode.removeChild(this.shell);
        // gc helper
        this.end = null;
        this.logic = null;
        this.tmpEnd = null;
        this.tmpEndVertex = null;
        this.endNode = null;
        this.midNodes = null;
        this.owner = null;
        this.start = null;
        this.startNode = null;
    }
    unsetTarget() {
        const v = this.end;
        if (!v) {
            return null;
        }
        this.end = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(v.edgesEnd, this);
        return v;
    }
    setTarget(v) {
        this.unsetTarget();
        this.end = v;
        if (v) {
            v.edgesEnd.push(this);
        }
    }
    mark(markb, key = 'errorGeneric', color = 'red') {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'IEdge.mark() todo.');
    }
    getEdgeHead() { return this.getEdgeHeadTail(true); }
    getEdgeTail() { return this.getEdgeHeadTail(false); }
    // bug: https://bugzilla.mozilla.org/show_bug.cgi?id=577785#c2
    getEdgeHeadTail(isHead, debug = false) {
        const logic = this.logic;
        const logicref = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] ? logic : null;
        const logicclass = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] ? logic : null;
        let html = null;
        let debugi;
        let edgeTailHeadSVG = isHead ? this.edgeHead : this.edgeTail;
        if (debug) {
            console.trace();
            console.log('getEdge' + (isHead ? 'Head' : 'Tail') + '(), ', this.getStyle().edgeHeadStyle, this.isHighlighted);
            debugi = window['' + 'debug'];
            if (debugi === 4.1)
                return (edgeTailHeadSVG ? edgeTailHeadSVG : html);
        }
        if (isHead) {
            if (logicref && logicref.isContainment()) {
                html = this.generateContainmentHead(this.getStyle().edgeHeadStyle);
            }
            if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
                html = this.generateGeneralizationHead(this.getStyle().edgeHeadStyle);
            }
        }
        else {
            if (logicref && logicref.isContainment()) {
                html = this.generateContainmentTail(this.getStyle().edgeHeadStyle);
            }
            if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
                html = this.generateGeneralizationTail(this.getStyle().edgeHeadStyle);
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"] && !html, 'cannot return null on extedge:', html, this);
        if (debug && debugi === 4.2)
            return edgeTailHeadSVG ? edgeTailHeadSVG : html;
        if (!html) {
            if (isHead)
                this.edgeHead = null;
            else
                this.edgeTail = null;
            return null;
        }
        if (isHead) {
            if (html === this.edgeHead)
                return html;
            if (!html)
                return this.edgeHead = null;
            this.edgeHead = html;
            html.classList.add('Edge', 'EdgeHead');
            if (this.headShell)
                this.headShell.appendChild(html);
        }
        else {
            if (html === this.edgeTail)
                return html;
            if (!html)
                return this.edgeTail = null;
            this.edgeTail = html;
            html.classList.add('Edge', 'EdgeTail');
            if (this.tailShell)
                this.tailShell.appendChild(html);
        }
        return html;
    }
    appendTailHead(tail, pathStr, debug = false) {
        const svg = tail ? this.edgeTail : this.edgeHead;
        const shell = tail ? this.tailShell : this.headShell;
        if (!svg) {
            return;
        }
        // debug = true;
        if (debug)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
        const oldPathStr = pathStr;
        let startsub;
        let endsub;
        // filtro il pathStr estraendo solo i primi 2 o gli ultimi 2 punti. (migliora performance su edge pieni di edgepoints)
        let pt1;
        let pt2;
        if (!tail) {
            endsub = pathStr.length;
            startsub = pathStr.lastIndexOf('L');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(startsub === -1, 'the pathString have no L (but should have at least 2 points)');
            startsub = pathStr.lastIndexOf('L', startsub - 1);
            if (startsub === -1) {
                startsub = 0;
            }
        }
        else {
            startsub = 0;
            endsub = pathStr.indexOf('L');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(endsub === -1, 'the pathString have no L (but should have at least 2 points)');
            endsub = pathStr.indexOf('L', endsub + 1);
            if (endsub === -1) {
                endsub = pathStr.length;
            }
        }
        pathStr = pathStr.substring(startsub, endsub);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ' + oldPathStr + ' --> ' + pathStr, 'onEnd ? ', !tail);
        const points = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].parseSvgPath(pathStr).pts;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(points.length !== 2, 'expected exactly 2 points, the pathStr got substringed for that.', points);
        if (!tail) {
            pt1 = points[1];
            pt2 = points[0];
        }
        else {
            pt1 = points[0];
            pt2 = points[1];
        }
        if (debug) {
            this.owner.markg(pt1, true, 'red');
            this.owner.markg(pt2, false, 'blue');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'size of head: ', svg, 'pt1:', pt1, 'pt2:', pt2, ', pts:', points, pathStr, oldPathStr);
        this.appendTailHead2(tail, pt1, pt2);
    }
    appendTailHead2(tail, pt1, pt2real, debug = false) {
        const m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].getM(pt1, pt2real);
        const svg = tail ? this.edgeTail : this.edgeHead;
        let shell = tail ? this.tailShell : this.headShell;
        const HeadSize = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getSvgSize(svg);
        const firstEdgePointHtml = this.html.nextElementSibling;
        if (!shell) {
            shell = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g');
            shell.appendChild(svg);
            if (tail) {
                this.tailShell = shell;
            }
            else {
                this.headShell = shell;
            }
            if (firstEdgePointHtml) {
                this.shell.insertBefore(shell, firstEdgePointHtml);
            }
            else {
                this.shell.appendChild(shell);
            }
            this.addEventListeners(false, true);
        }
        if (debug) {
            this.owner.markg(pt1, true, 'red');
            this.owner.markg(pt2real, false, 'green');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'size of head: ', HeadSize, 'pt1:', pt1, 'pt2:', pt2real, 'm:', m);
        const degreeRad = pt1.degreeWith(pt2real, true); // U.TanToDegree(m);
        const center = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        const pt2 = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        //todo: perchè zindex e position?
        // svg.style.zIndex = '' + 100;
        // svg.style.position = 'absolute';
        pt2.x = pt1.x - HeadSize.w * Math.cos(degreeRad);
        pt2.y = pt1.y - HeadSize.h * Math.sin(degreeRad);
        center.x = (pt1.x + pt2.x) / 2;
        center.y = (pt1.y + pt2.y) / 2;
        const degree = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].RadToDegree(degreeRad) + 90; // uso riferimento con 0 = top invece di 0 = right
        if (debug) {
            this.owner.markg(pt2, false, 'blue');
        }
        shell.setAttributeNS(null, 'transform', 'rotate(' + degree + ' ' + center.x + ' ' + center.y + ')');
        (svg).setAttributeNS(null, 'x', '' + (center.x - HeadSize.w / 2));
        (svg).setAttributeNS(null, 'y', '' + (center.y - HeadSize.h / 2));
    }
    getIndex() { return this.logic.edges.indexOf(this); }
}
IEdge.selecteds = [];
IEdge.all = null;
IEdge.shadowWidthIncrease = 7;
IEdge.edgeChangingStopTime = Date.now();
IEdge.idToEdge = {};
IEdge.edgeCount =  false || 0;


/***/ }),

/***/ "./src/guiElements/mGraph/Field/iField.ts":
/*!************************************************!*\
  !*** ./src/guiElements/mGraph/Field/iField.ts ***!
  \************************************************/
/*! exports provided: IField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IField", function() { return IField; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class IField {
    constructor(logic) { this.logic = logic; }
    getHtml() { return this.html; }
    refreshGUI(debug = true) { }
    remove() {
        if (this.html && this.html.parentNode) {
            this.html.parentNode.removeChild(this.html);
        }
        this.logic.field = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.owner.fields, this);
    }
}


/***/ }),

/***/ "./src/guiElements/mGraph/Vertex/iVertex.ts":
/*!**************************************************!*\
  !*** ./src/guiElements/mGraph/Vertex/iVertex.ts ***!
  \**************************************************/
/*! exports provided: IVertex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IVertex", function() { return IVertex; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _common_measurable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/measurable */ "./src/common/measurable.ts");
/* harmony import */ var _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../app/measurabletemplate/measurabletemplate.component */ "./src/app/measurabletemplate/measurabletemplate.component.ts");




class IVertex {
    constructor(logical, size = null) {
        this.fields = [];
        this.edgesStart = [];
        this.edgesEnd = [];
        this.dragaxis = { x: true, y: true };
        this.reshandles = { n: false, s: false, e: false, w: false, ne: false, nw: false, sw: false, se: false };
        this.Vmarks = {};
        this.id = IVertex.ID++;
        IVertex.all[this.id] = this;
        const graph = logical.getModelRoot().graph;
        this.logic(logical);
        if (graph) {
            graph.addVertex(this);
        }
        this.contains = [];
        this.fields = [];
        this.edgesStart = [];
        this.edgesEnd = [];
        this.classe = logical;
        this.classe.vertex = this;
        this.setGraph(logical.getModelRoot().graph);
        if (!size) {
            size = IVertex.defaultSize;
            const gsize = this.owner.getSize();
            size.x = this.owner.scroll.x + (gsize.w - size.w) / 2;
            size.y = this.owner.scroll.y + (gsize.h - size.h) / 2;
        }
        this.size = size;
        this.refreshGUI();
        // this.refreshGUI(); // need both refresh
    }
    static staticinit() {
        const g = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        g.x = 'prevent_doublemousedowncheck';
        g.y = 'prevent_doublemousedowncheck';
        IVertex.minSize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](null, null, 0, 0);
        IVertex.defaultSize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](5, 5, 201, 41);
        return IVertex.selectedGridWasOn = g;
    }
    /*
      static linkVertexMouseDownButton(e: MouseDownEvent): void {
        const ref: IReference = ModelPiece.get(e) as IReference;
        U.pe(!(ref instanceof IReference), 'linkVertexButtons are currently only allowed on IReferences.');
        const edges: IEdge[] = ref.getEdges();
        U.pe(!edges, 'ref.edges === null', ref);
        let edge: IEdge;
        let index: number;
        if (ref.getModelRoot().isMM()) { edge = edges[index = 0]; } else
        if (ref.upperbound > 0 && edges.length >= ref.upperbound) { edge = edges[index = ref.upperbound - 1]; }
        else { edge = new IEdge(ref); index = edges.length - 1; }
        if (!edge) edge = new IEdge(ref);
        IVertex.linkVertexMouseDown(e, edge); }*/
    static linkVertexMouseDown(e, edge = null, location = null) {
        if (e) {
            e.stopPropagation();
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging.owner.edgeChangingAbort(e);
        }
        edge = edge ? edge : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].get(e);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!edge, 'IVertex.linkVertexMouseDown() failed to get edge:', e);
        const logic = edge.logic;
        const classe = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] ? logic : null;
        const ref = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] ? logic : null;
        // U.pe( !ref, 'The .LinkVertex element must be inserted only inside a reference field.');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging = edge;
        edge.useRealEndVertex = false;
        edge.useMidNodes = true;
        edge.tmpEnd = location ? location : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(e);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!edge.tmpEnd, 'failed to get coordinates from event:', e);
        edge.tmpEndVertex = null;
        // edge.tmpEndVertex = ref.parent.getVertex();
        edge.refreshGui();
    }
    static getvertex(e) {
        return IVertex.getvertexByHtml(e.currentTarget);
    }
    static getvertexByHtml(node0) {
        let node = node0;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!node, 'getVertexByHtml: parameter is not a DOM node:', node);
        while (node && node.dataset && !node.dataset.vertexID) {
            node = node.parentElement;
        }
        // console.log('getVertex by id:' + node.dataset.vertexID, 'all:', IVertex.all);
        return node && node.dataset ? IVertex.getByID(+(node.dataset.vertexID)) : null;
    }
    static getByID(id) { return IVertex.all[id]; }
    static FieldNameChanged(e) {
        const html = e.currentTarget;
        const modelPiece = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(html);
        modelPiece.fieldChanged(e);
        modelPiece.getModelRoot().graph.propertyBar.show(null, html, null, true);
        // $(html).trigger('click'); // updates the propertyBar
        // const m: IModel = modelPiece.getModelRoot();
        const mm = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm;
        const m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m;
        setTimeout(() => { mm.refreshGUI(); m.refreshGUI(); }, 1);
    }
    static ChangePropertyBarContentClick(e, isEdge = null) {
        const html = e.target; // todo: approfondisci i vari tipi di classType (current, orginal...)
        const modelPiece = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(html);
        const model = modelPiece.getModelRoot();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!modelPiece, 'failed to get modelPiece from html:', html);
        const pbar = model.graph.propertyBar;
        pbar.show(modelPiece, html, isEdge, false);
        return modelPiece;
    }
    static GetMarkedWith(markKey, colorFilter = null) {
        const ret = [];
        for (const id in IVertex.all) {
            if (!IVertex.all[id]) {
                continue;
            }
            const vertex = IVertex.all[id];
            if (vertex.isMarkedWith('refhover', colorFilter)) {
                ret.push(vertex);
            }
        }
        return ret;
    }
    mark(markb, key, color = 'red', radiusX = 10, radiusY = 10, width = 5, backColor = 'none', extraOffset = null) {
        if (!this.isDrawn()) {
            return;
        }
        if (color === null) {
            color = 'yellow';
        }
        if (radiusX === null) {
            radiusX = 10;
        }
        if (radiusY === null) {
            radiusY = 10;
        }
        if (backColor === null) {
            backColor = 'none';
        }
        if (width === null) {
            width = 5;
        }
        let mark = this.Vmarks[key];
        if (key === 'refhover') { // crosshair (+), alias (default+link), cell (excel)
            const vertexRoot = this.htmlForeign;
            const $inputs = $(vertexRoot).find('input, textarea, select, button');
            let cursor = null;
            console.log('markedHover', markb, vertexRoot, $inputs);
            if (markb) {
                vertexRoot.style.cursor = cursor = (color === 'red' ? 'no-drop' : 'crosshair'); // NO important, bugga e non setta il campo.
            }
            else {
                vertexRoot.style.removeProperty('cursor');
            }
            let i;
            for (i = 0; i < $inputs.length; i++) {
                if (!cursor) {
                    $inputs[i].style.removeProperty('cursor');
                }
                else {
                    $inputs[i].style.cursor = cursor;
                }
            }
        }
        // mark off
        if (!markb) { // se non deve essere marchiato
            if (mark) { // ma lo è attualmente
                if (mark.parentNode) {
                    mark.parentNode.removeChild(mark);
                }
                delete this.Vmarks[key];
            }
            return;
        }
        // mark on
        if (!extraOffset) {
            const same = 5;
            extraOffset = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](same, same, same, same);
        }
        mark = this.Vmarks[key] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('rect');
        const size = this.getSize();
        // console.log('extraoffset:', extraOffset, 'size:', size);
        size.x -= extraOffset.x;
        size.y -= extraOffset.y;
        size.w += extraOffset.x + extraOffset.w;
        size.h += extraOffset.y + extraOffset.h;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].setSvgSize(mark, size, null);
        /*
        mark.setAttributeNS(null, 'x', '' + size.x);
        mark.setAttributeNS(null, 'y', '' + size.y);
        mark.setAttributeNS(null, 'width', '' + (size.w));
        mark.setAttributeNS(null, 'height', '' + (size.h));*/
        mark.setAttributeNS(null, 'rx', '' + (radiusX));
        mark.setAttributeNS(null, 'ry', '' + (radiusY));
        mark.setAttributeNS(null, 'stroke', '' + (color));
        mark.setAttributeNS(null, 'stroke-width', '' + (width));
        mark.setAttributeNS(null, 'fill', '' + (backColor));
        this.logic().getModelRoot().graph.vertexContainer.prepend(mark);
    }
    getStartPoint(nextPt = null) { return this.getMidPoint(nextPt); }
    getEndPoint(nextPt = null) { return this.getMidPoint(nextPt); }
    getMidPoint(prevPt = null) {
        // NB: MAI fare sizeof() di un SVGForeignObjectElement, ridà valori sballati. fallo ai suoi childs.
        const html = this.getHtml();
        const $htmlEP = $(html).find('.EndPoint');
        let htmlEP;
        let endPointSize;
        let pt;
        if ($htmlEP.length === 0) {
            htmlEP = html;
        }
        else {
            htmlEP = $htmlEP[0];
        }
        endPointSize = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(htmlEP);
        // console.log('htmlsize:', htmlSize, 'childSize:', U.sizeof(html.firstChild as HTMLElement));
        // console.log('real size(', htmlSize, ') vs graphSize(', this.toGraphCoordS(htmlSize), '), html:', html);
        const endPointGSize = this.owner.toGraphCoordS(endPointSize);
        const vertexGSize = this.getSize();
        pt = endPointGSize.tl();
        pt.x += endPointGSize.w / 2;
        pt.y += endPointGSize.h / 2;
        if (!prevPt) {
            return pt;
        }
        pt = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"].closestIntersection(vertexGSize, prevPt, pt, this.owner.grid);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(pt, vertexGSize), 'not on Vertex edge.');
        return pt;
    }
    setSize(size, refreshVertex = true, refreshEdge = true, trigger = null && false) {
        if (!size)
            return;
        if (this.getSize().equals(size))
            return;
        /*
        if(window['debug'] === 1) for (let key in IVertex.all) {
          let v2 = (IVertex.all[key] as IVertex);
          U.pe(v2 !== this && v2.size.equals(size), 'err:', this.getSize(), '->', size);
        }*/
        this.size.x = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.x)) ? +size.x : this.size.x;
        this.size.y = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.y)) ? +size.y : this.size.y;
        this.size.w = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.w)) ? +size.w : this.size.w;
        this.size.h = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.h)) ? +size.h : this.size.h;
        const htmlForeign = this.getHtmlRawForeign();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].setSvgSize(htmlForeign, this.size, IVertex.defaultSize);
        // todo: cerca tutti gli as string, non è un vero cast ma solo un cambiotipo senza trasformazione, crea errori.
        // const spostamento: GraphPoint = this.size.tl().subtract(oldSize.tl(), true);
        // todo: cambia struttura interna size in tl+br, controlla tutti i riferimenti a tl(newinstnce = false) e considera di cambiarli a true.
        if (refreshVertex) {
            this.refreshGUI();
        }
        if (!refreshEdge) {
            return;
        }
        const refEnd = this.edgesEnd; // this.getReferencesEnd();
        const refStart = this.edgesStart; // this.getReferencesStart();
        let i;
        for (i = 0; i < refEnd.length; i++) {
            if (refEnd[i]) {
                refEnd[i].refreshGui();
            }
        }
        for (i = 0; i < refStart.length; i++) {
            if (refStart[i]) {
                refStart[i].refreshGui();
            }
        }
        if (trigger) {
            let measnode = this.getMeasurableNode();
            if (measnode.classList.contains('measurable'))
                this.measuringEventTrigger(null, null, trigger, measnode);
        }
    }
    draw() {
        // return this.draw0();
        try {
            this.draw0();
        }
        catch (e) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to draw vertex of "' + this.logic().printableNameshort() + '".', e);
        }
    }
    draw0() {
        /*const htmlRaw: SVGForeignObjectElement = U.newSvg('foreignObject');
        htmlRaw.appendChild(this.classe.getStyleObj().html);*/
        const style = this.classe.getStyle();
        const htmlRaw0 = style.html;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.classe || !(htmlRaw0 instanceof Element), 'class null?', this, htmlRaw0);
        const htmlRaw = this.setHtmls(this.classe, htmlRaw0);
        if (this.classe instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"])
            this.drawC(this.classe);
        if (this.classe instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"])
            this.drawE(this.classe);
        this.addEventListeners();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fixHtmlSelected($(htmlRaw));
        this.autosizeNew(false, false);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors($(this.getHtml()));
        let onrefresh = this.htmlForeign.getAttribute('onrefreshgui');
        const $htmlraw = $(htmlRaw);
        let i;
        const parenttmp = htmlRaw.parentNode;
        const next = htmlRaw.nextSibling;
        if (parenttmp)
            parenttmp.removeChild(htmlRaw);
        // duplicate id removal. TODO: non funziona, forse rileva ancora gli id del vecchio html generato e risultano già inseriti on refresh.
        /*const idarr = $htmlraw.find('[id]').addBack('[id]');
        for (i = 0; i < idarr.length; i++) {
          if (!document.getElementById(idarr[i].id)) { continue; }
          idarr[i].innerHTML = '';
          U.clearAttributes(idarr[i]);
          idarr[i].style.display = 'none';
        }*/
        const scripts = $htmlraw.find('script');
        for (i = 0; i < scripts.length; i++) {
            // clone the script, empty it while keeping (to keep same indexedPath structure as the template), execute id
            // todo: problema: tutti i successivi elementi con id statici verranno rimossi e avranno struttura template != struttura ongraph
            //  e falliranno a mostrare il clicked fragment nello styleeditor.
            // non va bene: se cambio lo stile quello script appeso al body rimane e devo aggiornare la pagina.
            // since newlines are replaced with spaces, scripts inline // comments are not allowed. use /*comments*/
            // const oldid = scripts[i].id;
            // delete scripts[i].id;
            //console.log('script:', scripts[i], 'length:', scripts[i].innerHTML.length, scripts[i].innerText.length);
            if (!scripts[i].innerHTML.length) {
                continue;
            } // "deleted" empty element
            const cloned = scripts[i];
            /*const cloned: HTMLScriptElement = U.cloneHtml(scripts[i]); bug: probably getbyid is working on detached elements too.
            it is altering the ViewRule.
            cloned.id = oldid;
            scripts[i].innerHTML = '';
            document.body.appendChild(cloned);*/
            console.log('eval:', cloned.innerHTML);
            try {
                eval(cloned.innerHTML);
            }
            catch (e) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'error in user script of "' + this.logic().printableName() + '":', e, 'script:', cloned);
            }
        }
        if (parenttmp) {
            if (next)
                parenttmp.insertBefore(htmlRaw, next);
            else
                parenttmp.appendChild(htmlRaw);
        }
        // console.log('onrefresh:', onrefresh, 'window.onrefresh:', window[onrefresh]);
        if (onrefresh) {
            window[onrefresh](this, this.logic(), htmlRaw);
        }
    }
    autosizeNew(refreshVertex = true, refreshEdge = true, trigger = null) {
        let html = this.getMeasurableNode();
        if (html.tagName.toLowerCase() === 'foreignobject')
            html = html.children[0];
        const actualSize = this.owner.toGraphCoordS(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(html));
        actualSize.x = this.size.x;
        actualSize.y = this.size.y;
        this.setSize(actualSize, refreshVertex, refreshEdge, trigger);
        return this;
    }
    autosize(refreshVertex = true, refreshEdge = true, debug = false) {
        const html = this.getHtml();
        const autosize = html.dataset.autosize;
        // NB: se dataset non è settato a true crea casini con jqui che cambia la size come html (css-width) e devo riportarlo in svg tramite autosize.
        // console.log('autosize() ? ', modelPiece.html, ' dataset.autosize:', autosize);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(autosize !== '1' && autosize !== 't' && autosize !== 'true', 'foreignObject:first-child must have data-autosize="true", and style {height: 100%;} required for now.' +
            ' html:', html, 'foreign:', this.htmlForeign);
        if (autosize !== '1' && autosize !== 't' && autosize !== 'true') {
            return this;
        }
        // console.log('autosize() started');
        if (html.style.height !== 'auto') {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'To use autosize the root node must have "height: auto;", this has been automatically solved. was:' + html.style.height);
            html.style.height = 'auto';
        }
        // const zoomLevel: number = DetectZoom.device();
        const actualSize = this.owner.toGraphCoordS(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(html));
        // const minSize: GraphSize = new GraphSize(null, null, 200, 30);
        actualSize.min(IVertex.minSize, false);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(actualSize.h === 100, '', IVertex.minSize, actualSize, html);
        actualSize.x = this.size.x;
        actualSize.y = this.size.y;
        this.setSize(actualSize, refreshVertex, refreshEdge);
        return this;
    }
    drawE(data, canfail = true) {
        try {
            this.drawE0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : 'default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of enum "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            this.htmlForeign = null;
            this.drawE(data, false);
        }
    }
    drawC(data, canfail = true) {
        canfail = false;
        try {
            this.drawC0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : 'default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + (m.isM() ? 'm1-object' : 'class') + ' "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            this.htmlForeign = null;
            this.drawC(data, false);
        }
    }
    drawO(data, canfail = true) {
        try {
            return this.drawO0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : 'default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + m.getPrefix() + '-operation "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            return this.drawO(data, false);
        }
    }
    drawParam(data, canfail = true) {
        try {
            return this.drawParam0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : 'default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + m.getPrefix() + '-parameter "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            return this.drawParam(data, false);
        }
    }
    drawEChild(data) { return this.drawTerminal(data); }
    drawA(data) { return this.drawTerminal(data); }
    drawR(data) { return this.drawTerminal(data); }
    drawTerminal(data, canfail = true) {
        try {
            return this.drawTerminal0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : 'default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + m.getPrefix() + '"' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            return this.drawTerminal(data, false);
        }
    }
    drawE0(logic) {
        if (!this.htmlForeign) {
            const style = this.classe.getStyle();
            this.htmlForeign = style.html;
        }
        const html = this.htmlForeign;
        /// append childrens:
        const $eContainer = $(html).find('.LiteralContainer');
        let i;
        for (i = 0; i < logic.childrens.length; i++) {
            const field = this.drawEChild(logic.childrens[i]);
            $eContainer.append(field);
        }
    }
    drawC0(data) {
        // console.log('drawC()');
        if (!this.htmlForeign) {
            const style = this.classe.getStyle();
            this.htmlForeign = style.html;
        }
        const html = this.htmlForeign;
        /// append childrens:
        const $attContainer = $(html).find('.AttributeContainer');
        const $refContainer = $(html).find('.ReferenceContainer');
        const $opContainer = $(html).find('.OperationContainer');
        // U.pe($attContainer.length !== 1, 'there must be exactly one element with class "AttributeContainer".', $attContainer);
        // U.pe($refContainer.length !== 1, 'there must be exactly one element with class "ReferenceContainer".', $refContainer);
        // U.pe($opContainer.length !== 1, 'there must be exactly one element with class "OperationContainer".', $opContainer);
        // const attContainer = $attContainer[0];
        // const refContainer = $refContainer[0];
        // const opContainer = $opContainer[0];
        let i;
        for (i = 0; i < data.attributes.length; i++) {
            const field = this.drawA(data.attributes[i]);
            field.id = 'ID' + data.attributes[i].id;
            $attContainer.append(field);
        }
        for (i = 0; i < data.references.length; i++) {
            const field = this.drawR(data.references[i]);
            field.id = 'ID' + data.references[i].id;
            $refContainer.append(field);
        }
        const operations = data.getOperations();
        for (i = 0; i < operations.length; i++) {
            // console.log('append ref:', data.references[i]);
            const field = this.drawO(operations[i]);
            field.id = 'ID' + operations[i].id;
            $opContainer.append(field);
        }
    }
    getStartPointHtml() {
        const html = this.getHtml();
        const $start = $(html).find('.StartPoint');
        if ($start.length > 0) {
            return $start[0];
        }
        else {
            return html;
        }
    }
    getEndPointHtml() {
        const html = this.getHtml();
        const $start = $(html).find('.EndPoint');
        if ($start.length > 0) {
            return $start[0];
        }
        return (html.tagName.toLowerCase() === 'foreignobject') ? html.firstChild : html;
    }
    getMeasurableNode() { return this.htmlForeign; }
    setHtmls(data, htmlRaw) {
        // console.log('drawCV()');
        if (!this.htmlg) {
            this.owner.vertexContainer.appendChild(this.htmlg = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g'));
            data.linkToLogic(this.htmlg);
            this.addRootEventListeners();
        }
        else
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(this.htmlg);
        let i;
        const graphHtml = this.owner.vertexContainer;
        const $graphHtml = $(graphHtml);
        // console.log('drawing Vertex[' + data.name + '] with style:', htmlRaw, 'logic:', data);
        // console.log('drawVertex: template:', htmlRaw);
        const foreign = this.htmlForeign = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].textToSvg(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVars(data, htmlRaw, true).outerHTML);
        const $foreign = $(foreign);
        data.linkToLogic(foreign);
        const $elementWithID = $foreign.find('[id]');
        this.prepareVertexMeasurable();
        // duplicate prevention.
        for (i = 0; i < $elementWithID.length; i++) {
            const elem = $elementWithID[i];
            const id = '#' + elem.id;
            const $duplicate = $graphHtml.find(id);
            if ($duplicate.length) {
                $foreign.remove(id);
            }
        }
        this.htmlg.appendChild(foreign);
        foreign.id = 'ID' + data.id;
        foreign.dataset.vertexID = '' + this.id;
        if (!this.size) {
            this.size = this.getSize();
        }
        else {
            this.setSize(this.size, false, false);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.htmlForeign.tagName.toLowerCase() !== 'foreignobject', 'The custom style root must be a foreignObject node.', this.htmlForeign);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.htmlForeign.childNodes.length !== 1, 'The custom style must have a single child node,' +
            ' without spaces between <foreignObject> and the next tag. found ' + this.htmlForeign.childNodes.length + ' childrens.', this.htmlForeign, this.htmlForeign.childNodes);
        // this.html = this.htmlForeign.firstChild as HTMLElement;
        return foreign;
    }
    prepareVertexMeasurable() {
        let i;
        const measurableNode = this.getMeasurableNode();
        this.dragaxis.x = true;
        this.dragaxis.y = true;
        for (let key in this.reshandles) {
            this.reshandles[key] = false;
        }
        this.reshandles.se = true;
        if (measurableNode.classList.contains('measurable')) {
            let astr;
            if (astr = measurableNode.getAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"]._jquiDra + _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Draggableoptions"].axis)) {
                if (!astr.indexOf('x'))
                    this.dragaxis.x = false;
                if (!astr.indexOf('y'))
                    this.dragaxis.y = false;
            }
        }
    }
    drawO0(data) {
        const html = this.drawTerminal(data);
        const $html = $(html);
        const $signature = $html.find('.specialjs.signature');
        let i;
        for (i = 0; i < $signature.length; i++) {
            const htmldataset = $signature[0];
            data.setSignatureHtml(htmldataset, ', ', +htmldataset.dataset.maxargumentchars, +htmldataset.dataset.maxarguments);
        }
        const $detailHtml = $html.find('.operationDetail');
        $signature.off('click.show').on('click.show', (e) => {
            const target = e.target;
            let avoidToggle;
            switch (target.tagName.toLowerCase()) {
                case 'input':
                case 'textarea':
                case 'select':
                    avoidToggle = true;
                    break;
                default:
                    avoidToggle = ((target instanceof HTMLElement) && target.isContentEditable);
                    break;
            }
            if (avoidToggle) {
                return;
            }
            data.detailIsOpened = !data.detailIsOpened;
            data.detailIsOpened ? $detailHtml.show() : $detailHtml.hide();
            this.autosizeNew(false, true);
        });
        data.detailIsOpened ? $detailHtml.show() : $detailHtml.hide();
        $html.find('input.name').val(data.name);
        const $parameterList = $detailHtml.find('.parameterList');
        let j;
        for (j = 0; j < $parameterList.length; j++) {
            const parameterList = $parameterList[j];
            // U.clear(parameterList);
            const lastChild = parameterList.childNodes[parameterList.childNodes.length - 1];
            for (i = 0; i < data.childrens.length; i++) {
                const field = this.drawParam(data.childrens[i]);
                parameterList.insertBefore(field, lastChild);
            }
            // for (i = oldChilds.length; i > 0; i--) { parameterList.prepend(oldChilds.item(i)); }
        }
        const $addParamButton = $html.find('.addParameterButton');
        // $addParamButton.html('<button style="width: 100%; height: 100%;">+</button>');
        $addParamButton.off('click.add').on('click.add', (e) => { data.addParameter(); this.refreshGUI(); });
        return html;
    }
    drawParam0(data) {
        let i;
        const html = this.drawTerminal(data);
        const $html = $(html);
        // const $typeHtml: JQuery<HTMLSelectElement> = $html.find('select.fullType') as JQuery<HTMLSelectElement>;
        const $nameHtml = $html.find('input.name');
        $nameHtml.val(data.name);
        return html;
    }
    drawTerminal0(data) {
        data.replaceVarsSetup();
        const style = data.getStyle();
        const htmlRaw = style.html;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!htmlRaw, 'failed to get attribute style:', data);
        // todo: sposta l'opearzione nei Graph.Field
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVars(data, htmlRaw, true);
        data.linkToLogic(html);
        return html;
    }
    toEdge(start, end) {
        // todo
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'vertexToEdge() todo.');
        return null;
    }
    addRootEventListeners() {
        const $html = $(this.htmlg);
        $html.off('mousedown.vertex').on('mousedown.vertex', (e) => { this.onMouseDown(e); });
        $html.off('mouseup.vertex').on('mouseup.vertex', (e) => { this.onMouseUp(e); });
        $html.off('mousemove.vertex').on('mousemove.vertex', (e) => { this.onMouseMove(e); });
        $html.off('mouseenter.vertex').on('mouseenter.vertex', (e) => { this.onMouseEnter(e); });
        $html.off('mouseleave.vertex').on('mouseleave.vertex', (e) => { this.onMouseLeave(e); });
        $html.off('click').on('click', (e) => { this.onClick(e); });
        $html.off('contextmenu').on('contextmenu', (e) => { return this.vertexContextMenu(e); });
        // const $addFieldButtonContainer: JQuery<HTMLElement> = $html.find('.addFieldButtonContainer') as any as JQuery<HTMLElement>;
        // this.setAddButtonContainer($addFieldButtonContainer[0]);
    }
    addEventListeners() {
        let i;
        const $html = $(this.htmlg);
        $html.find('.addFieldButton').off('click.addField').on('click.addField', (e) => { this.addFieldClick(e); });
        $html.find('.AddFieldSelect').off('change.addField').on('change.addField', (e) => { this.addFieldClick(e); });
        $html.find('input, select, textarea').off('change.fieldchange').on('change.fieldchange', (e) => IVertex.FieldNameChanged(e));
        // NB: deve essere solo un off, oppure metti selettore .NOT(class) nel selettore dei 'select' di sopra
        // if (!IVertex.contextMenu) { IVertex.contextMenu = new MyContextMenuClass(new ContextMenuService()); }
        $html.find('.Attribute, .Reference, .ELiteral, .Operation, .Parameter').off('contextmenu').on('contextmenu', (e) => { return this.featureContextMenu(e); });
        // todo: viene chiamato 1 volta per ogni elementNode con modelID, ma io eseguo tutto dalla radice.
        // quindi viene eseguito N +1 volte per ogni vertice dove N sono i suoi (attributes + references)
        // console.log(html.tagName, html.dataset.modelpieceid);
        // if (html.tagName.toLowerCase() === 'foreignobject' && html.dataset.modelpieceid )
        //   { html = html.firstChild as Element; }
        // while (!(html.classList.contains('Vertex'))) { console.log(html); html = html.parentNode as Element; }
        // $html.find('.LinkVertex').off('mousedown.setReference').on('mousedown.setReference', IVertex.linkVertexMouseDownButton);
        const defaultResizeConfig = {};
        const defaultDragConfig = {};
        const defaultRotConfig = new _common_measurable__WEBPACK_IMPORTED_MODULE_2__["RotatableOptions"]();
        // NB: do not delete the apparantly useless dynamic functions.
        // jqueryui is binding this to e.currentTarget and e.currentTarget to document.body, the dynamic function makes this instanceof iVertex again.
        // defaultResizeConfig.create = (e: Event, ui: ResizableUIParams) => this.measuringTrigger(ui, e, measurableRules.onRefresh);
        defaultResizeConfig.start = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onResizeStart);
        defaultResizeConfig.resize = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileResizing);
        defaultResizeConfig.stop = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onResizeEnd);
        // defaultDragConfig.create = (e: Event, ui: DraggableEventUIParams) => this.measuringTrigger(ui, e, measurableRules.onRefresh);
        defaultDragConfig.start = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onDragStart);
        defaultDragConfig.drag = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileDragging);
        defaultDragConfig.stop = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onDragEnd);
        defaultRotConfig.start = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRotationStart);
        defaultRotConfig.rotate = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileRotating);
        defaultRotConfig.stop = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRotationEnd);
        //     console.log('measurableElementSetup:', defaultResizeConfig, defaultDragConfig);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Measurable"].measurableElementSetup($html, defaultResizeConfig, defaultRotConfig, defaultDragConfig, this);
        const $elementsWithRefreshTrigger = $html.find('[' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRefresh + ']');
        for (i = 0; i < $elementsWithRefreshTrigger.length; i++) {
            const elem = $elementsWithRefreshTrigger[i];
            this.measuringEventTrigger({ currentTarget: elem }, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRefresh);
        }
    }
    measuringEventTrigger(uiseless = null, e = null, prefix, html = null) {
        if (!html)
            html = e.currentTarget;
        if (!html.attributes)
            return;
        let i;
        if (prefix === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRefresh) {
            let a = html.attributes.getNamedItem(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRefresh);
            if (a)
                new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableRuleParts"](a, prefix.length).process(false, this, this.owner);
            return;
        }
        for (i = 0; i < html.attributes.length; i++) {
            const a = html.attributes[i];
            if (a.name.indexOf('prefix') !== 0)
                continue;
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableRuleParts"](a, prefix.length).process(false, this, this.owner);
        }
    }
    /*
      measuringInit(ui: ResizableUIParams | DraggableEventUIParams, e: Event): void {
        const m = U.measurableGetArrays(null, e);
        console.log('measuringInit:', ui, e, m);
        let i: number;
        const size: Size = U.sizeof(m.html);
        const absTargetSize: Size = this.owner.getSize();
        const logic: IClassifier = this.logic();
        for (i = 0; i < m.variables.length; i++) { U.processMeasurableVariable(m.variables[i], logic, m.html, size, absTargetSize); }
        for (i = 0; i < m.dstyle.length; i++) { U.processMeasurableDstyle(m.dstyle[i], logic, m.html, null, absTargetSize); }
        for (i = 0; i < m.imports.length; i++) { U.processMeasurableImport(m.imports[i], logic, m.html, null, absTargetSize); }
      }
  
      measuringChanging(ui: ResizableUIParams | DraggableEventUIParams, e: Event, measurHtml: Element = null): void {
        const m: MeasurableArrays = U.measurableGetArrays(measurHtml, e);
        console.log('Changing.measurableHtml parsed special attributes:', m);
        m.imports = [];
        m.chainFinal = [];
        // m.dstyle = [];
        // m.rules = [];
        // m.variables = [];
        U.processMeasuring(this.logic(), m, ui);
      }
  
      measuringChanged(ui: ResizableUIParams | DraggableEventUIParams, e: Event, measurHtml: Element = null): void {
        const m = U.measurableGetArrays(measurHtml, e);
        console.log('Changed.measurableHtml parsed special attributes:', m);
        m.chain = [];
        m.imports = [];
        U.processMeasuring(this.logic(), m, ui);
      }*/
    clickSetReference(e, debug = true) {
        if (e) {
            e.stopPropagation();
            e.preventDefault();
        }
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        if (!edge) {
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'setreferenceClick success!');
        const vertexLogic = this.logic();
        if (!(vertexLogic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            return;
        if (!edge.canBeLinkedTo(vertexLogic)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'edge ', edge.logic, 'cannot be linked to ', vertexLogic, 'hoveringvertex:', this);
            return;
        }
        if (edge.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"])
            edge.logic.linkClass(vertexLogic, edge.getIndex(), true);
        if (edge.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"])
            edge.logic.setType(vertexLogic.getEcoreTypeName());
        if (edge instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
            if (edge.end)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(edge.logic.extends, edge.end.logic());
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(edge.logic.extends, this.logic());
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(edge.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"], 'cst: class edges are currently not supported');
        }
        this.mark(false, 'refhover');
        // altrimenti parte l'onClick su AddFieldButton quando fissi la reference.
        // setTimeout( () => { IEdge.edgeChanging = null; }, 1);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChangingStopTime = Date.now();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging = null;
        edge.tmpEnd = null;
        edge.useMidNodes = true;
        edge.useRealEndVertex = true;
        edge.end = this;
        edge.refreshGui();
    }
    onClick(e) {
        // IVertex.ChangePropertyBarContentClick(e);
    }
    vertexContextMenu(evt) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["DamContextMenuComponent"].contextMenu.hide();
        // only if is focused input
        const lastSelected = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].focusHistoryEntries[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].focusHistoryElements.length - 1];
        const gotSelectedNow = lastSelected && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(lastSelected.element, evt.target) && (new Date().valueOf() - lastSelected.time.valueOf() < 0.3 * 1000);
        const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isInput(evt.target, true, false) && !gotSelectedNow;
        const gotMoved = this.size.tl().subtract(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].vertexOldPos, false).absolute() > IVertex.tolleranzaRightClickMove;
        const ret = isInput && !gotMoved;
        if (ret)
            return true;
        else {
            evt.preventDefault();
            evt.stopPropagation();
        }
        if (gotMoved)
            return ret;
        // only if: !input && !gotMoved
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["DamContextMenuComponent"].contextMenu.show(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](evt.pageX, evt.pageY), '.Vertex', evt.currentTarget);
        return false;
    }
    featureContextMenu(evt) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["DamContextMenuComponent"].contextMenu.hide();
        // only if is focused input
        const lastSelected = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].focusHistoryEntries[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].focusHistoryElements.length - 1];
        const gotSelectedNow = lastSelected && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(lastSelected.element, evt.target) && (new Date().valueOf() - lastSelected.time.valueOf() < 0.3 * 1000);
        const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isInput(evt.target, true, false) && !gotSelectedNow;
        const gotMoved = this.size.tl().subtract(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].vertexOldPos, false).absolute() > IVertex.tolleranzaRightClickMove;
        const ret = isInput && !gotMoved;
        if (ret)
            return true;
        else {
            evt.preventDefault();
            evt.stopPropagation();
        }
        if (gotMoved)
            return ret;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["DamContextMenuComponent"].contextMenu.show(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](evt.pageX, evt.pageY), '.Feature', evt.currentTarget);
        return false;
    }
    onMouseDown(e) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            this.clickSetReference(e);
            return;
        }
        let tmp = e.target;
        console.log(e.button, e.buttons, e);
        if (e.button === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseLeftButton && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isInput(tmp, true))
            return;
        if (e.button === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseWheelButton)
            return this.owner.onMouseDown(e, true);
        if (e.button === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseRightButton)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].vertexOldPos = this.size.tl();
        const thisHtml = this.getHtml();
        // i will not move the vertex while moving a measurable children.
        while (tmp && tmp !== thisHtml) {
            // if (tmp.classList.contains('measurable')) { return; }
            tmp = tmp.parentElement;
        }
        IVertex.selected = this;
        if (IVertex.selectedGridWasOn.x === 'prevent_doublemousedowncheck') {
            IVertex.selectedGridWasOn.x = IVertex.selected.owner.grid.x;
        }
        if (IVertex.selectedGridWasOn.y === 'prevent_doublemousedowncheck') {
            IVertex.selectedGridWasOn.y = IVertex.selected.owner.grid.y;
        }
        IVertex.selected.owner.grid.x = null;
        IVertex.selected.owner.grid.y = null;
        IVertex.selectedStartPt = this.owner.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY));
        IVertex.selectedStartPt.subtract(this.size.tl(), false);
    }
    onMouseUp(e) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            this.clickSetReference(e);
            return;
        }
        const v = IVertex.selected;
        if (!v)
            return;
        v.owner.grid.x = IVertex.selectedGridWasOn.x;
        v.owner.grid.y = IVertex.selectedGridWasOn.y;
        IVertex.selectedGridWasOn.x = 'prevent_doublemousedowncheck';
        IVertex.selectedGridWasOn.y = 'prevent_doublemousedowncheck';
        this.owner.fitToGridS(v.size, false);
        this.setSize(this.size);
    }
    onMouseMove(e) { }
    onMouseEnter(e) { this.mouseEnterLinkPreview(e); }
    onMouseLeave(e) { this.mouseLeaveLinkPreview(e); }
    mouseEnterLinkPreview(e) {
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        if (!edge) {
            return;
        }
        const ref = edge.logic;
        /*const edges: IEdge[] = ref.getEdges();
        U.pe(!edges, 'ref.edges === null', ref);
        let edge: IEdge;
        if (ref.upperbound > 0 && edges.length - 1 >= ref.upperbound) { edge = edges[edges.length - 1]; } else { edge = new IEdge(ref); }*/
        const html2 = e.currentTarget;
        // while (html2 && html2.classList && !html2.classList.contains('vertexShell')) { html2 = html2.parentNode as Element;}
        let hoveringTarget = html2 ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(html2) : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!hoveringTarget || !(hoveringTarget instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"]), 'the currentTarget should point to the vertex root, only classifier should be retrieved.', hoveringTarget, e, html2);
        const linkable = hoveringTarget instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] ? edge.canBeLinkedTo(hoveringTarget) : false;
        const size = hoveringTarget.getVertex().getSize();
        const width = 3;
        const pad = 5 + width;
        const padding = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](pad, pad, pad, pad);
        const vertex = hoveringTarget.getVertex();
        // const oldHoverVertex: IVertex = window.oldEdgeLink_HoveringVertex;
        // if (oldHoverVertex) { vertex.mark(false, 'refhover'); }
        // window.oldEdgeLink_HoveringVertex = vertex;
        vertex.mark(true, 'refhover', linkable ? 'green' : 'red', (size.w + padding.x + padding.w) / 10, (size.h + padding.y + padding.h) / 10, width, null, padding);
        edge.tmpEndVertex = hoveringTarget.getVertex();
        // NB: serve farlo 2 volte, alla prima ripristina il targetEnd ma non corregge lo startingpoint adattandolo alla nuova destinazione.
        edge.refreshGui(null, false);
        edge.refreshGui(null, false);
    }
    mouseLeaveLinkPreview(evt, debug = true) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            return;
        }
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'vertexLeave()');
        edge.tmpEndVertex = null;
        edge.tmpEnd = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(evt);
        this.mark(false, 'refhover');
    }
    addFieldClick(e) {
        // impedisco che un click mentre fisso un edge triggeri altre cose, 100ms di "cooldown"
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging || Date.now() - _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChangingStopTime < 100) {
            return;
        }
        const modelPiece = this.logic();
        const classe = modelPiece instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"] ? modelPiece : null;
        const enumm = modelPiece instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] ? modelPiece : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!enumm && !classe, 'AddFieldClick should only be allowed on M2-Classes or enumerations.');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.classe, 'called addFieldClick on a package');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.debug = true;
        const html = this.getHtml();
        let select;
        // const debugOldJson = U.cloneObj(modelPiece.generateModel());
        select = $(html).find('.AddFieldSelect')[0];
        switch (select.value.toLowerCase()) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected select value for addField:' + select.value + ' allowed values are: ["Reference", "Attribute", "Operation", "Literal"]');
                break;
            case 'reference':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!classe, '"Reference" as .AddFieldSelect value is only allowed on M2-classes');
                classe.addReference();
                break;
            case 'attribute':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!classe, '"Attribute" as .AddFieldSelect value is only allowed on M2-classes');
                classe.addAttribute();
                break;
            case 'operation':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!classe, '"Operation" as .AddFieldSelect value is only allowed on M2-classes');
                classe.addOperation();
                break;
            case 'literal':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!enumm, '"Literal" as .AddFieldSelect value is only allowed on Enumerations');
                enumm.addLiteral();
                break;
        }
    }
    /*
      setAddButtonContainer(container: HTMLElement): void {
        U.toHtml('<span style="display:flex; margin:auto;">Add&nbsp;</span>' +
          '<select class="AddFieldSelect" style="display:flex; margin:auto;"><optgroup label="FeatureType">' +
          '<option value="Attribute" selected="">Attribute</option>' +
          '<option value="Reference">Reference</option>' +
          '<option value="Operation">Operation</option>' +
          '</optgroup></select>' +
          '<span style="display:flex; margin:auto;">&nbsp;field</span>\n' +
          '<button>Go</button>', container); }
    */
    setFields(f) {
        this.fields = f;
    }
    setGraph(graph) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!graph, 'Vertex should only be created after Graph initialization.');
        this.owner = graph;
    }
    refreshGUI() { this.draw(); }
    moveTo(graphPoint, gridIgnore = false) {
        // console.log('moveTo(', graphPoint, '), gridIgnore:', gridIgnore, ', grid:');
        // const oldsize: GraphSize = this.size; // U.getSvgSize(this.logic().html as SVGForeignObjectElement);
        if (!gridIgnore) {
            graphPoint = this.owner.fitToGrid(graphPoint);
        }
        this.setSize(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](graphPoint.x, graphPoint.y, null, null), false, true, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileDragging);
    }
    logic(set = null) {
        if (set) {
            return this.classe = set;
        }
        return this.classe;
    }
    // todo: elimina differenze html e htmlforeign o almeno controlla e riorganizza
    getHtmlRawForeign() { return this.htmlForeign; }
    getHtml() { return this.htmlForeign.firstChild; }
    minimize() {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'minimize() to do.');
    }
    isDrawn() { return !!(this.htmlForeign && this.htmlForeign.parentNode); }
    /*pushDown(): void {
      if (!this.isDrawn()) { return; }
      const html = this.htmlForeign;
      const parent = html.parentNode;
      parent.removeChild(html);
      parent.appendChild(html); }
  
    pushUp(): void {
      if (!this.isDrawn()) { return; }
      const html = this.htmlForeign;
      const parent = html.parentNode;
      parent.removeChild(html);
      parent.prepend(html); }*/
    remove() {
        console.log('IVertex.delete();');
        let i;
        // for (i = 0; i < this.edgesStart.length; i++) {}
        let arr;
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.edgesStart, false);
        for (i = 0; i < arr.length; i++) {
            arr[i].remove();
        }
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.edgesEnd, false);
        for (i = 0; i < arr.length; i++) {
            arr[i].remove();
        }
        const html = this.htmlForeign;
        html.parentNode.removeChild(html);
        delete IVertex.all[this.id];
        for (const key in this.Vmarks) {
            if (this.Vmarks[key]) {
                continue;
            }
            const mark = this.Vmarks[key];
            if (mark.parentNode) {
                mark.parentNode.removeChild(mark);
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.owner.vertex, this);
        this.classe.vertex = null;
        const fields = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.fields, false);
        for (i = 0; i < fields.length; i++) {
            fields[i].remove();
        }
        // gc helper
        this.owner = null;
        this.size = null;
        this.edgesStart = null;
        this.edgesEnd = null;
    }
    getSize(debug = false) {
        const html0 = this.htmlForeign;
        let sizeOld;
        if (debug) {
            sizeOld = this.size ? this.size.duplicate() : null;
            if (this.size) {
                this.owner.markgS(this.size, true, 'blue');
            }
        }
        const size = this.size = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getSvgSize(html0, IVertex.minSize);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(debug && !sizeOld.equals(size), 'Wrong size. this:', this);
        return this.size;
    }
    /// end of IVertex
    isMarkedWith(markKey, colorFilter = null) {
        if (!this.Vmarks.hasOwnProperty(markKey)) {
            return false;
        }
        if (!colorFilter) {
            return true;
        }
        const markRect = this.Vmarks[markKey];
        return (markRect.getAttributeNS(null, 'stroke') === colorFilter);
    }
}
IVertex.all = {};
IVertex.ID = 0;
IVertex.selected = null;
IVertex.selectedGridWasOn = null;
IVertex.selectedStartPt = null;
IVertex.oldEdgeLinkHoveringVertex = null;
IVertex.minSize = null;
IVertex.defaultSize = null;
IVertex.tolleranzaRightClickMove = 5;


/***/ }),

/***/ "./src/guiElements/mGraph/iGraph.ts":
/*!******************************************!*\
  !*** ./src/guiElements/mGraph/iGraph.ts ***!
  \******************************************/
/*! exports provided: ViewPointShell, IGraph */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewPointShell", function() { return ViewPointShell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IGraph", function() { return IGraph; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class ViewPointShell {
    constructor(g) {
        this.lastVP = null; // se ne sono attivi multipli e modifichi lo stile di qualcosa, questo sarà quello che viene aggiornato.
        this.getViewpointGUI = {};
        this.graph = g;
        this.model = g.model;
        this.$html = $(g.container.parentElement).find('.viewpointShell');
        this.html = this.$html[0];
        this.$template = this.$html.find('li.viewpointrow.template');
        this.template = this.$template[0];
        const $checkboxlidefault = this.$html.find('li.viewpointrow.default');
        const $defaultCheckbox = $checkboxlidefault.find('input[type="radio"]');
        this.defaultCheckbox = $defaultCheckbox[0];
        this.checkboxes = [];
        this.getViewpointGUI = {};
        let i;
        // this.ignoreEvents = false;
        $defaultCheckbox.on('click', (e) => { this.undoAll(true); });
        $checkboxlidefault.find('button.duplicate').on('click', (e) => this.duplicateEvent(e, null, this.defaultCheckbox));
    }
    /*undoAllOld(model :IModel): void {
      let i1: number;
      let i2: number;
      let i3: number;
      let i4: number;
      model.graph.gridDisplay = IGraph.defaultGridDisplay;
      model.graph.scroll = new GraphPoint(0, 0);
      model.graph.setZoom(IGraph.defaultZoom);
      model.graph.setGrid(IGraph.defaultGrid);
      const undostyle = (m: ModelPiece) => { m.resetViews(); };
      for (i1 = 0; i1 < model.childrens.length; i1++) {
        const pkg: IPackage = model.childrens[i1];
        undostyle(pkg);
        for (i2 = 0; i2 < pkg.childrens.length; i2++) {
          const c: IClass = pkg.childrens[i2];
          undostyle(c);
          c.shouldBeDisplayedAsEdge(false);
          for (i3 = 0; i3 < c.attributes.length; i3++) {
            const a: IAttribute = c.attributes[i3];
            undostyle(a); }
          for (i3 = 0; i3 < c.references.length; i3++) {
            const r: IReference = c.references[i3];
            undostyle(r); }
          const operations = c.getOperations();
          for (i3 = 0; i3 < operations.length; i3++) {
            const o: EOperation = operations[i3];
            undostyle(o);
            for (i4 = 0; i4 < o.childrens.length; i4++) {
              const p: EParameter = o.childrens[i4];
              undostyle(p); }
          }
        }
      }
      model.refreshGUI_Alone();
    }*/
    undoAll(changingGuiChecked) {
        let i;
        // de-apply all
        for (i = 0; i < this.model.viewpoints.length; i++) {
            this.model.viewpoints[i].detach();
        }
        // update gui
        this.ignoreEvents = true;
        if (changingGuiChecked) {
            for (i = 0; i < this.checkboxes.length; i++) {
                this.checkboxes[i].checked = false;
            }
            this.graph.model.refreshGUI_Alone();
        }
        const defaultradio = this.$html.find('input[type="radio"]')[0];
        defaultradio.checked = true;
        this.ignoreEvents = false;
    }
    refreshApplied() {
        // this.undoAll(false);
        let i;
        let stylecustomized = false;
        const makeSureAllCheckboxesAreProcessed = this.checkboxes.slice();
        for (i = this.model.viewpoints.length; --i >= 0;) {
            const vp = this.model.viewpoints[i];
            const checkbox = this.getCheckbox(vp);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!checkbox, 'failed to get checkbox of:', vp, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(makeSureAllCheckboxesAreProcessed, checkbox);
            stylecustomized = stylecustomized || checkbox.checked;
            if (vp.isApplied === checkbox.checked) {
                continue;
            }
            if (vp.isApplied) {
                vp.detach();
            }
            else {
                vp.apply();
            }
        } /*
        for (i = 0; i < makeSureAllCheckboxesAreProcessed.length; i++) {
          const cbox: HTMLInputElement = makeSureAllCheckboxesAreProcessed[i];
          const vp = ViewPoint.getbyID(+cbox.dataset.vpid);
          if (vp.isApplied === checkbox.checked) { continue; }
          if (vp.isApplied) { vp.detach(); } else { vp.apply(); }
        }*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!makeSureAllCheckboxesAreProcessed.length, 'Error: some checkbox are not yet processed.', makeSureAllCheckboxesAreProcessed, this);
        // U.pe(true, 'stopped here still works? 2');
        const defaultradio = this.$html.find('input[type="radio"]')[0];
        defaultradio.checked = !stylecustomized;
        this.updatelastvp();
        this.graph.model.refreshGUI_Alone();
        this.graph.propertyBar.refreshGUI();
    }
    duplicateEvent(e, oldvp, oldvpCheckbox, debug = false) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'duplicate(' + (oldvp ? oldvp.name : null) + ') Start:', this.model.viewpoints);
        // const vp: ViewPoint = ViewPoint.get($input[0].value);
        let newvp = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ViewPoint"](this.model, oldvp ? oldvp.name : null);
        if (oldvp) {
            newvp.clone(oldvp);
            newvp.updateTarget(this.model);
        }
        this.ignoreEvents = true;
        this.add(newvp, false);
        if (oldvpCheckbox) {
            oldvpCheckbox.checked = false;
        }
        this.ignoreEvents = false;
        this.refreshApplied();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'duplicate() End:', this.model.viewpoints);
    }
    add(v, allowApply) {
        const $li = this.$template.clone();
        const li = $li[0];
        const $checkbox = $li.find('input[type="checkbox"]');
        const checkbox = $checkbox[0];
        this.checkboxes.push(checkbox);
        this.getViewpointGUI[v.id] = li;
        const $input = $li.find('input.name');
        const input = $input[0];
        const $duplicate = $li.find('button.duplicate');
        const $delete = $li.find('button.remove');
        const $rename = $li.find('button.edit');
        $duplicate.on('click', (e) => this.duplicateEvent(e, v, checkbox));
        $delete.on('click', (e) => {
            this.html.removeChild(li);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.checkboxes, checkbox);
            delete this.getViewpointGUI[v.id];
            v.delete();
        });
        $rename.on('click', (e) => {
            input.readOnly = false;
            input.focus();
            //
            //
            // $rename.hide(); $delete.hide(); $duplicate.hide();
        });
        const inputConfirm = (confirm = true) => {
            if (confirm) {
                v.setname(input.name);
            }
            input.value = v.name;
            input.readOnly = true;
            // $rename.show();
            // $delete.show();
            // $duplicate.show();
        };
        $input.on('keydown', (e) => { if (e.key === 'return') {
            inputConfirm(true);
        }
        else if (e.key === 'escape') {
            inputConfirm(false);
        } });
        $input.on('blur', (e) => { inputConfirm(false); });
        $input.on('click', (e) => {
            // todo: se non lo fa già di suo: (per triggerare default.click() = this.undoAll();
            // if (input.readOnly) { this.undoAll(true); }
        });
        checkbox.dataset.vpid = '' + v.id;
        input.value = v.name;
        checkbox.checked = v.isApplied;
        $checkbox.on('change', (e) => {
            if (this.ignoreEvents) {
                e.preventDefault();
                return false;
            }
            this.refreshApplied();
            return true;
        });
        if (allowApply && v.isApplied) {
            $checkbox.trigger('change');
        }
        li.classList.remove('template');
        this.html.appendChild(li);
    }
    updatelastvp() {
        this.$html.find('li[islastvp]').removeAttr('islastvp');
        const vp = this.model.getLastView();
        console.log('updatelastvp() ', this.model.viewpoints, this.getViewpointGUI, this);
        if (!vp)
            return;
        this.lastVP = vp;
        const li = this.getViewpointGUI[vp.id];
        li.setAttribute('islastvp', 'true');
    }
    getCheckbox(vp) {
        let i;
        for (i = 0; i < this.checkboxes.length; i++) {
            const cbox = this.checkboxes[i];
            if (cbox.dataset.vpid === '' + vp.id)
                return cbox;
        }
        return null;
    }
}
var CursorAction;
(function (CursorAction) {
    CursorAction[CursorAction["drag"] = 0] = "drag";
    CursorAction[CursorAction["select"] = 1] = "select";
    CursorAction[CursorAction["multiselect"] = 2] = "multiselect";
})(CursorAction || (CursorAction = {}));
class IGraph {
    constructor(model, container) {
        this.id = null;
        this.container = null;
        this.model = null;
        this.vertex = null;
        this.edges = null;
        this.scroll = null;
        this.propertyBar = null;
        this.zoom = null;
        this.grid = null;
        this.gridDisplay =  false && false;
        // campi per robe di debug
        this.allMarkgp = [];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!container, 'graph container is null. model:', model);
        this.id = IGraph.ID++;
        IGraph.all[this.id + ''] = this;
        this.model = model;
        this.model.graph = this;
        this.container = container;
        this.container.dataset.graphID = '' + this.id;
        this.edgeContainer = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g');
        this.edgeContainer.classList.add('allEdgeContainer');
        this.vertexContainer = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g');
        this.vertexContainer.classList.add('allVertexContainer');
        this.container.appendChild(this.edgeContainer);
        this.container.appendChild(this.vertexContainer);
        this.gridDefsHtml = $(this.container).find('g.gridContainer>defs')[0];
        this.gridHtml = $(this.container).find('g.gridContainer>rect.grid')[0];
        this.gridHtml.setAttributeNS(null, 'fill', 'url(#grid_' + this.id + ')');
        this.isMoving = null;
        this.clickedScroll = null;
        this.cursorAction = CursorAction.select;
        // this.svg = $(this.container).find('svg.graph')[0] as unknown as SVGElement;
        this.vertex = [];
        this.edges = [];
        this.zoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](1, 1);
        this.scroll = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        this.grid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](20, 20);
        this.gridPos = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](0, 0);
        this.gridDisplay = true;
        let i;
        let j;
        const earr = this.model.getAllEnums();
        for (i = 0; i < earr.length; i++) {
            earr[i].generateVertex();
        }
        const classArr = this.model.getAllClasses();
        const classEdges = [];
        for (i = 0; i < classArr.length; i++) {
            if (classArr[i].shouldBeDisplayedAsEdge()) {
                classEdges.push(classArr[i]);
                continue;
            }
            classArr[i].generateVertex();
        }
        // vertex disegnati, ora disegno gli edges.
        // Class-extends-edges
        if (this.model.isM2()) {
            for (i = 0; i < classArr.length; i++) {
                const classe = classArr[i];
                for (j = 0; j < classe.extends.length; j++) {
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.edges, classe.makeExtendEdge(classe.extends[j]));
                }
            }
        }
        // Class-edges
        for (i = 0; i < classEdges.length; i++) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(this.edges, classEdges[i].generateEdge());
        }
        // Reference-edges
        const arrReferences = this.model.getAllReferences();
        for (i = 0; i < arrReferences.length; i++) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(this.edges, arrReferences[i].generateEdges());
        }
        this.propertyBar = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["PropertyBarr"](this.model);
        this.viewPointShell = new ViewPointShell(this);
        this.addGraphEventListeners();
        this.setGrid0();
    }
    static getByID(id) { return IGraph.all[id]; }
    static getByHtml(html) {
        for (const id in IGraph.all) {
            if (!IGraph.all.hasOwnProperty(id)) {
                continue;
            }
            const graph = IGraph.all[id];
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(graph.container, html)) {
                return graph;
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to find parent graph of:', html);
        return null;
    }
    fitToGrid(pt0, clone = true, debug = false, fitHorizontal = true, fitVertical = true) {
        const pt = clone ? pt0.duplicate() : pt0;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.grid, 'grid not initialized.');
        if (fitHorizontal && !isNaN(this.grid.x) && this.grid.x > 0) {
            pt.x = Math.round(pt.x / this.grid.x) * this.grid.x;
        }
        if (fitVertical && !isNaN(this.grid.y) && this.grid.y > 0) {
            pt.y = Math.round(pt.y / this.grid.y) * this.grid.y;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fitToGrid(', pt0, '); this.grid:', this.grid, ' = ', pt);
        return pt;
    }
    fitToGridS(pt0, clone = true, debug = false, fitHorizontal = true, fitVertical = true) {
        const pt = clone ? pt0.duplicate() : pt0;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.grid, 'grid not initialized.');
        if (fitHorizontal && !isNaN(this.grid.x) && this.grid.x > 0) {
            pt.x = Math.round(pt.x / this.grid.x) * this.grid.x;
        }
        if (fitVertical && !isNaN(this.grid.y) && this.grid.y > 0) {
            pt.y = Math.round(pt.y / this.grid.y) * this.grid.y;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fitToGrid(', pt0, '); this.grid:', this.grid, ' = ', pt);
        return pt;
    }
    addGraphEventListeners() {
        const $graph = $(this.container);
        const thiss = this;
        this.model.linkToLogic(this.container);
        // $graph.off('mousedown.graph').on('mousedown.graph', (evt: MouseDownEvent) => { thiss.onMouseDown(evt); });
        // $graph.off('mouseup.graph').on('mouseup.graph', (evt: MouseUpEvent) => { thiss.onMouseUp(evt); });
        $graph.off('mousemove.graph').on('mousemove.graph', (evt) => { this.onMouseMove(evt); });
        // $graph.off('keydown.graph').on('keydown.graph', (evt: KeyDownEvent) => { thiss.onKeyDown(evt); }); non triggerabile, non ha focus.
        // $graph.off('click.mark').on('click.mark', (e: ClickEvent) => { thiss.markClick(e, true); } );
        $graph.off('mousedown.move').on('mousedown.move', (e) => this.onMouseDown(e, false));
        $graph.off('mouseup.move').on('mouseup.move', (e) => this.onMouseUp(e));
        // @ts-ignore
        if (!!ResizeObserver) { // not supported by edge, android firefox.
            if (!window['' + 'resizeobservers'])
                window['' + 'resizeobservers'] = [];
            // @ts-ignore
            const tmp = new ResizeObserver((entryes, observer) => { this.onResize(); });
            window['' + 'resizeobservers'] = tmp;
            tmp.observe(this.container.parentElement);
        }
        // @ts-ignore
        if (!ResizeObserver) {
            let oldSize = null;
            setInterval(() => {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(true, 'setinterval graphsize checker');
                const size = this.getSize();
                if (!size.equals(oldSize))
                    this.onResize(size);
            }, 100);
        }
        // altre opzioni:
        // 1) MutationObserver (detect dom changes (attributes like "style" too)),
        // 2) http://marcj.github.io/css-element-queries/ : sembra simile a mutationObserver, no timers, funziona su flexbox che non cambiano
        // direttamente valori. non ho capito perchè parsa tutti i file css.
        // 3) "Use a combination of mousedown, mousemove and/or mouseup to tell whether the div is being / has been resized.
        // If you want really fine-grained control you can check in every mousemove event how much / if the div has been resized. If you don't need that,
        // you can simply not use mousemove at all and just measure the div in mousedown and mouseup and figure out if it was resized in the latter."
        // PROBLEMA: potrebbe avvenire un resize dovuto a serverEvents, keyboardEvents, timers.
    }
    onMouseDown(evt, isTrigger) {
        // console.log('graphONMouseDown', evt);
        isTrigger = isTrigger || !evt || evt['' + 'isTrigger'] || !evt.originalEvent;
        switch (this.cursorAction) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected cursorAction:', this.cursorAction);
                break;
            case CursorAction.drag:
            case CursorAction.select:
                let e = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].get(evt);
                if (e instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"])
                    e = null;
                const mp = isTrigger ? null : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].ChangePropertyBarContentClick(evt, e);
                // console.log('graphONMouseDown', isTrigger, mp instanceof IModel);
                if (!(isTrigger || (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"])))
                    return;
                this.isMoving = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"].fromEvent(evt);
                this.clickedScroll = this.scroll.duplicate();
                break;
            case CursorAction.multiselect: break;
        }
    }
    onMouseUp(evt) {
        if (this.isMoving) {
            this.isMoving = this.clickedScroll = null;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selected = null;
    }
    onMouseMoveSetReference(evt, edge) {
        // console.log('graph.movereference()', edge, edge ? edge.tmpEndVertex : null);
        if (!edge || edge.tmpEndVertex) {
            return;
        }
        // const ref: IReference | IClass = edge.logic;
        edge.tmpEnd = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(evt);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!edge.tmpEnd, 'failed to get coordinates from event:', evt);
        // console.log('graph.movereference: success!', edge.tmpEnd);
        edge.refreshGui(null, false);
    }
    onMouseMoveVertexMove(evt, v) {
        if (!v) {
            return;
        }
        // if (U.vertexOldPos === 1) U.vertexOldPos = 2;
        console.log('onMouseMoveVertexMove:', v.logic().name, evt, v);
        const currentMousePos = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](evt.pageX, evt.pageY);
        // console.log('evt:', evt);
        let currentGraphCoord = this.toGraphCoord(currentMousePos);
        currentGraphCoord = currentGraphCoord.subtract(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selectedStartPt, false);
        if (!v.dragaxis.x)
            currentGraphCoord.x = null;
        if (!v.dragaxis.y)
            currentGraphCoord.y = null;
        v.moveTo(currentGraphCoord);
    }
    onMouseMoveDrag(e) {
        if (!this.isMoving)
            return;
        const offset = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"].fromEvent(e);
        offset.subtract(this.isMoving, false);
        this.scroll.x = this.clickedScroll.x - offset.x;
        this.scroll.y = this.clickedScroll.y - offset.y;
        this.setGridPos();
        // console.log('scroll:', this.scroll, 'offset:', offset, ' scroll0: ', this.clickedScroll, ' currentCursor:', this.isMoving);
        this.updateViewbox();
    }
    onMouseMove(evt) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging)
            return this.onMouseMoveSetReference(evt, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selected)
            return this.onMouseMoveVertexMove(evt, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selected);
        if (this.isMoving)
            return this.onMouseMoveDrag(evt);
    }
    edgeChangingAbort(e) {
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        if (!edge) {
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging = null;
        // unmark hovering vertex
        const hoveringVertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].GetMarkedWith('refhover');
        let i;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(hoveringVertex.length > 1, 'hovering on more than one target at the same time should be impossible.', hoveringVertex);
        for (i = 0; i < hoveringVertex.length; i++) {
            hoveringVertex[i].mark(false, 'refhover');
        }
        // restore previous endTarget or delete edge.
        console.log('edgeChange abort');
        if (!edge.end) {
            edge.remove();
            return;
        }
        edge.useMidNodes = true;
        edge.useRealEndVertex = true;
        edge.tmpEnd = null;
        edge.refreshGui();
        edge.refreshGui();
    }
    toGraphCoordS(s) {
        const tl = this.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](s.x, s.y));
        const br = this.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](s.x + s.w, s.y + s.h));
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](tl.x, tl.y, br.x - tl.x, br.y - tl.y);
        return ret;
    }
    computeSize() { this.size = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(this.container); }
    getSize() {
        if (!this.size)
            this.computeSize();
        return this.size;
    }
    toGraphCoord(p) {
        const graphSize = this.getSize();
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](p.x, p.y);
        const debug = true;
        ret.x -= graphSize.x;
        ret.y -= graphSize.y;
        ret.x += this.scroll.x;
        ret.y += this.scroll.y;
        ret.x /= this.zoom.x;
        ret.y /= this.zoom.y;
        // console.log('toGraph()  - graphSize:', graphSize, ' + scroll: ', this.scroll, ' / zoom', this.zoom);
        if (debug) {
            const ver = this.toHtmlCoord(ret);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(ver.x !== p.x || ver.y !== p.y, 'error in toGraphCoord or toHtmlCoord: inputPt:', p, ', result: ', ret, 'verify:', ver, 'point:', p, 'scroll:', this.scroll, 'zoom:', this.zoom, 'GraphHtmlSize:', graphSize);
        }
        return ret;
    }
    toHtmlCoordS(s) {
        if (s === null) {
            return null;
        }
        const tl = this.toHtmlCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](s.x, s.y));
        const br = this.toHtmlCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](s.x + s.w, s.y + s.h));
        return new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Size"](tl.x, tl.y, br.x - tl.x, br.y - tl.y);
    }
    toHtmlCoord(p) {
        const graphSize = this.getSize();
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](p.x, p.y);
        // console.log('toHtml()', ' * zoom', this.zoom, ' - scroll: ', this.scroll, ' + graphSize:', graphSize);
        ret.x *= this.zoom.x;
        ret.y *= this.zoom.y;
        ret.x -= this.scroll.x;
        ret.y -= this.scroll.y;
        ret.x += graphSize.x;
        ret.y += graphSize.y;
        return ret;
    }
    getAllVertexIsBroke() { return this.vertex; }
    markClick(e, clean = true) { return this.mark(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY), clean); }
    markg(gp, clean = false, colorTop = 'red') {
        return this.mark(this.toHtmlCoord(gp), clean, colorTop);
    }
    markgS(gs, clean = false, colorTop = 'red', colorBot = null) {
        /*if (!colorBot) { colorBot = colorTop; }
        this.markg(gs.tl(), clean, colorTop);
        this.markg(gs.tr(), false, colorTop);
        this.markg(gs.bl(), false, colorBot);
        this.markg(gs.br(), false, colorBot);*/
        // const htmls: Size = this.owner.toHtmlCoordS(size0);
        return this.markS(this.toHtmlCoordS(gs), clean, colorTop, colorBot);
    }
    markS(s, clean = false, colorTop = 'red', colorBot = null) {
        if (!colorBot) {
            colorBot = colorTop;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!s, 'size cannot be null.');
        this.mark(s.tl(), clean, colorTop);
        // color = 'white';
        this.mark(s.tr(), false, colorTop);
        // color = 'purple';
        this.mark(s.bl(), false, colorBot);
        // color = 'orange';
        this.mark(s.br(), false, colorBot);
    }
    mark(p, clean = false, color = 'red') {
        const gp = this.toGraphCoord(p);
        if (clean) {
            let i;
            for (i = 0; i < this.allMarkgp.length; i++) {
                const node = this.allMarkgp[i];
                if (this.container.contains(node)) {
                    this.container.removeChild(node);
                }
            }
            for (i = 0; i < IGraph.allMarkp.length; i++) {
                const node = IGraph.allMarkp[i];
                if (document.body.contains(node)) {
                    document.body.removeChild(node);
                }
            }
        }
        // console.log('mark:', p, gp);
        this.markp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml('<div style="width:10px; height:10px; top:' + (p.y - 5) + 'px; left:' + (p.x - 5) + 'px;' +
            ' position: absolute; border: 1px solid ' + color + '; z-index:1;">');
        this.markgp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('circle');
        this.markgp.setAttribute('cx', '' + gp.x);
        this.markgp.setAttribute('cy', '' + gp.y);
        this.markgp.setAttribute('r', '' + 1);
        this.markgp.setAttribute('stroke', color);
        this.allMarkgp.push(this.markgp);
        IGraph.allMarkp.push(this.markp);
        document.body.appendChild(this.markp);
        this.container.appendChild(this.markgp);
    }
    setGrid(x, y) {
        this.grid.x = x;
        this.grid.y = y;
        this.setGrid0();
    }
    setScroll(x, y) {
        this.scroll.x = x;
        this.scroll.y = y;
        this.setGrid0();
        this.updateViewbox();
    }
    setZoom(x, y) {
        const oldZoom = this.zoom.duplicate();
        y = x;
        this.zoom.x = !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumber(x) || x === 0 ? this.zoom.x : +x;
        this.zoom.y = !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumber(y) || y === 0 ? this.zoom.y : +y;
        console.log('zoomOld:', oldZoom, 'x:', x, 'y:', y, ' zoom:', this.zoom);
        this.updateViewbox();
    }
    onResize(currSize = null) {
        if (currSize)
            this.size = currSize;
        else
            this.computeSize();
        this.updateViewbox();
    }
    updateViewbox() {
        const vbox = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getViewBox(this.container);
        vbox.w = this.size.w / this.zoom.x;
        vbox.h = this.size.h / this.zoom.y;
        vbox.x = this.scroll.x;
        vbox.y = this.scroll.y;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].setViewBox(this.container, vbox);
    }
    setGridPos() {
        const biggerSquareX = this.grid.x * 10;
        const biggerSquareY = this.grid.y * 10;
        const safetySquares = 1;
        this.gridHtml.setAttributeNS(null, 'x', '' + ((this.scroll.x - this.scroll.x % biggerSquareX) - biggerSquareX * safetySquares));
        this.gridHtml.setAttributeNS(null, 'y', '' + ((this.scroll.y - this.scroll.y % biggerSquareY) - biggerSquareY * safetySquares));
        const size = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Size"](0, 0, window.screen.width, window.screen.height);
        size.w = Math.max(size.w, window.outerWidth);
        size.h = Math.max(size.h, window.outerHeight);
        this.gridHtml.setAttributeNS(null, 'width', ((size.w + biggerSquareX * safetySquares * 2) / this.zoom.x) + '');
        this.gridHtml.setAttributeNS(null, 'height', ((size.h + biggerSquareY * safetySquares * 2) / this.zoom.y) + '');
    }
    setGrid0(checked = null) {
        const graph = (this.model === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph);
        if (checked === null) {
            checked = graph.gridDisplay;
        }
        graph.gridDisplay = checked;
        const maxSquareSize = 10000; // Number.MAX_SAFE_INTEGER sarebbe meglio maxint, ma temo per il consumo di memoria.
        const x = isNaN(this.grid.x) || this.grid.x <= 0 ? maxSquareSize : this.grid.x; // if the size of squares in grid is zero or negative, i just use a big number.
        const y = isNaN(this.grid.y) || this.grid.y <= 0 ? maxSquareSize : this.grid.y;
        this.gridDefsHtml.innerHTML =
            '<pattern id="smallGrid_' + this.id + '" width="' + x + '" height="' + y + '" patternUnits="userSpaceOnUse">\n' +
                '  <path d="M ' + x + ' 0 L 0 0 0 ' + y + '" fill="none" stroke="gray" stroke-width="0.5"/>\n' +
                '</pattern>\n' +
                '<pattern id="grid_' + this.id + '" width="' + (x * 10) + '" height="' + (y * 10) + '" patternUnits="userSpaceOnUse">\n' +
                '  <rect width="' + (x * 10) + '" height="' + (y * 10) + '" fill="url(#smallGrid_' + this.id + ')"/>\n' +
                '  <path d="M ' + (x * 10) + ' 0 L 0 0 0 ' + (y * 10) + '" fill="none" stroke="gray" stroke-width="1"/>\n' +
                '</pattern>';
        this.setGridPos();
        // $grid[0].setAttributeNS(null, 'justForRefreshingIt', 'true');
        // $grid.x
        if (checked) {
            $(this.gridHtml).show();
        }
        else {
            $(this.gridHtml).hide();
        }
    }
    addVertex(v) {
        v.owner = this;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.vertex, v);
        // todo: aggiungi edges tra i vertici. in matrix edgeMatrix[vertex][vertex] = edge
    }
}
// todo: this.vertex non è mai aggiornato reealmente.
IGraph.all = {};
IGraph.ID = 0;
IGraph.allMarkp = []; // campo per robe di debug
IGraph.defaultGridDisplay = true;
IGraph.defaultGrid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](20, 20);
IGraph.defaultZoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](1, 1);


/***/ }),

/***/ "./src/guiElements/mm-graph-html/mm-graph-html.component.css":
/*!*******************************************************************!*\
  !*** ./src/guiElements/mm-graph-html/mm-graph-html.component.css ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("::ng-deep foreignObject.Class *{\r\n  cursor: default;\r\n}\r\n::ng-deep foreignObject.Class input, foreignObject.Class *[contenteditable=\"true\"], foreignObject.Class textarea{\r\n  cursor: text;\r\n}\r\n::ng-deep foreignObject.Class select{\r\n  cursor: pointer;\r\n}\r\n/* viewpoint */\r\n::ng-deep .viewpointShell{\r\n  max-width: 107px;\r\n  overflow: visible;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px; }\r\n::ng-deep .viewpointrow.template { display: none; }\r\n::ng-deep .viewpointrow button {\r\n  display: none;\r\n  height: 21px;\r\n  width: 21px;\r\n  min-width: 21px;\r\n  float: right;\r\n  margin-left: 5px; }\r\n::ng-deep .viewpointrow:hover button { display: inline-block; }\r\n::ng-deep .viewpointrow{ background-color: transparent; display: -webkit-box; display: flex; position: relative; }\r\n/*::ng-deep .viewpointrow .buttons{ display: none }*/\r\n::ng-deep .viewpointrow:hover .buttons{\r\n  z-index: 1;\r\n  position: absolute;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  top: 100%;\r\n  right: 0; }\r\n::ng-deep .viewpointrow > label{\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  margin: auto;\r\n  margin-left: 0; }\r\n::ng-deep .viewpointrow > label.checkbox{ }\r\n::ng-deep .viewpointrow > label.name{\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n  min-width: 0;\r\n}\r\n::ng-deep .viewpointrow input[type=\"text\"]{ min-width: 0; height: 21px; background: transparent; border: none; }\r\n/* ::ng-deep .viewpointrow:hover input[type=\"text\"]{ box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25); }*/\r\n::ng-deep .viewpointrow input[type='checkbox'], ::ng-deep .viewpointrow input[type='radio']{\r\n  width: 17px;\r\n  min-width: 17px;\r\n  height: 17px;\r\n  margin: 0;\r\n}\r\n::ng-deep .viewpointrow button{ margin: auto; background-color: transparent }\r\n::ng-deep .viewpointrow input[readonly]{ background-color: transparent; border: none; }\r\n::ng-deep .viewpointrow input.name{ opacity: 0.75; }\r\n::ng-deep .viewpointrow[islastvp='true'] input.name{ opacity: 1; }\r\n/************************************************** statici */\r\n.template, .MMDefaultStyles{\r\n  display: none;\r\n}\r\n.tabContent{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-flow: nowrap;/*?*/\r\n  /*margin-top: calc( var(--mainBorderWidth) * 2 );*/\r\n}\r\n/*olds*/\r\n.HiddenStructures > *{\r\n  display: none;\r\n}\r\n.property_sidebar, .editorShell, .propertyBarContainer{/*.sidebarShell,*/\r\n  flex-basis: 0;/* calc(var(--sidebarW));*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  background-color: var(--mainBackgroundColor);\r\n  /*border-right: var(--mainBorder);*/\r\n  width: calc(var(--sidebarW));\r\n  /*height: calc(100vh - (var(--topbarH) + var(--tabH)));*/\r\n  overflow: hidden;\r\n  /*flex-wrap: wrap;\r\n  margin-top: 5px;\r\n  border-top: var(--mainBorder);*/\r\n}\r\n.sidebarShell{ border-right: var(--mainBorder); }\r\n.propertyBarContainer{ border-left: var(--mainBorder); }\r\n.editorShell{\r\n  -webkit-box-flex: 3;\r\n          flex-grow: 3;\r\n}\r\n/*#sidebar, */\r\n#metamodel_sidebar, #model_sidebar, .property_sidebar{\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-direction: row;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n          justify-content: space-between;/*si attiva solo se entra tutto in una riga e avanza pure spazio*/\r\n  -webkit-box-align: start;\r\n          align-items: flex-start;\r\n  align-content: flex-start;/*accatasta tutto verticalmente verso la cima invece di spaziarli.*/\r\n  padding-right:5px;\r\n}\r\n/*\r\n#sidebarResizer, .sidebarResizer{\r\n    margin: 0px;\r\n    padding: 0px;\r\n    width: var(--mainBorderWidth);\r\n    cursor: ew-resize;\r\n    background-color: var(--mainBorderColor);\r\n    user-drag: none;\r\n    user-select: none;\r\n    -moz-user-select: none;\r\n    -webkit-user-drag: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n}*/\r\n#sidebar>*:first-child, #metamodel_sidebar>*:first-child, #model_sidebar>*:first-child{\r\n  background-color: var(--mainBorderColor);\r\n  width: var(--mainBorderWidth);\r\n  right: 0px;\r\n}\r\n#sidebar>*:not(:first-child), #metamodel_sidebar>*:not(:first-child), #model_sidebar>*:not(:first-child){\r\n  padding: 2px;\r\n  max-width: 200px;\r\n  min-width: 75px;\r\n  flex-basis: 75px;/*should === min-width per mantenere l'effetto.*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-shrink: 1;\r\n}\r\n.sidebarVertex:hover{\r\n  background-color: var(--mainBorderColor);\r\n  border: 2px solid var(--secondaryBorderColor);\r\n  padding: 0px;\r\n}\r\n.sidebarVertex{\r\n  min-width: 50px;\r\n  min-height: 50px;\r\n  flex-basis:50px;\r\n}\r\n@media all and (min-width: 200px) {\r\n  .sidebarVertex {\r\n    -webkit-box-flex: 0;\r\n            flex-grow: 0; }\r\n}\r\n#metamodel_editor, #model_editor{\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n/* property bar raws */\r\n::ng-deep .propertyBarContainer .mat-tab-label{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  height: 20px;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n  min-width: 0 !important;\r\n  /*width: auto !important;*/\r\n  max-width: 50% !important\r\n}\r\n::ng-deep .propertyBarContainer .mat-tab-header-pagination{\r\n  display: none !important;\r\n}\r\n.rawContainer{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  height: 100%;\r\n}\r\nh2.rawTitle{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n.rawecore{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex:1;\r\n          flex-grow:1;\r\n  flex-shrink:1;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/guiElements/mm-graph-html/mm-graph-html.component.ts":
/*!******************************************************************!*\
  !*** ./src/guiElements/mm-graph-html/mm-graph-html.component.ts ***!
  \******************************************************************/
/*! exports provided: MmGraphHtmlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MmGraphHtmlComponent", function() { return MmGraphHtmlComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
var MmGraphHtmlComponent_1;



let MmGraphHtmlComponent = MmGraphHtmlComponent_1 = class MmGraphHtmlComponent {
    constructor() { }
    static graphMain() {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status === null) {
            setTimeout(MmGraphHtmlComponent_1.graphMain, 1000);
            return;
        }
        // real main can start
    }
    ngOnInit() {
        MmGraphHtmlComponent_1.graphMain();
    }
};
MmGraphHtmlComponent = MmGraphHtmlComponent_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mm-graph-html',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./mm-graph-html.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mm-graph-html/mm-graph-html.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./mm-graph-html.component.css */ "./src/guiElements/mm-graph-html/mm-graph-html.component.css")).default]
    })
], MmGraphHtmlComponent);



/***/ }),

/***/ "./src/guiElements/mminput/mminput.component.css":
/*!*******************************************************!*\
  !*** ./src/guiElements/mminput/mminput.component.css ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#MM_INPUT{\r\n  width: 100vw;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9tbWlucHV0L21taW5wdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvbW1pbnB1dC9tbWlucHV0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjTU1fSU5QVVR7XHJcbiAgd2lkdGg6IDEwMHZ3O1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "./src/guiElements/mminput/mminput.component.ts":
/*!******************************************************!*\
  !*** ./src/guiElements/mminput/mminput.component.ts ***!
  \******************************************************/
/*! exports provided: MminputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MminputComponent", function() { return MminputComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MminputComponent = class MminputComponent {
    constructor() { }
    ngOnInit() {
    }
};
MminputComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mminput',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./mminput.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mminput/mminput.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./mminput.component.css */ "./src/guiElements/mminput/mminput.component.css")).default]
    })
], MminputComponent);



/***/ }),

/***/ "./src/guiElements/mmsidebar/mmsidebar.component.css":
/*!***********************************************************!*\
  !*** ./src/guiElements/mmsidebar/mmsidebar.component.css ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvbW1zaWRlYmFyL21tc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/guiElements/mmsidebar/mmsidebar.component.ts":
/*!**********************************************************!*\
  !*** ./src/guiElements/mmsidebar/mmsidebar.component.ts ***!
  \**********************************************************/
/*! exports provided: MmsidebarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MmsidebarComponent", function() { return MmsidebarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MmsidebarComponent = class MmsidebarComponent {
    constructor() { }
    ngOnInit() {
    }
};
MmsidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mmsidebar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./mmsidebar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mmsidebar/mmsidebar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./mmsidebar.component.css */ "./src/guiElements/mmsidebar/mmsidebar.component.css")).default]
    })
], MmsidebarComponent);



/***/ }),

/***/ "./src/guiElements/msidebar/msidebar.component.css":
/*!*********************************************************!*\
  !*** ./src/guiElements/msidebar/msidebar.component.css ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvbXNpZGViYXIvbXNpZGViYXIuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/guiElements/msidebar/msidebar.component.ts":
/*!********************************************************!*\
  !*** ./src/guiElements/msidebar/msidebar.component.ts ***!
  \********************************************************/
/*! exports provided: MsidebarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MsidebarComponent", function() { return MsidebarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MsidebarComponent = class MsidebarComponent {
    constructor() { }
    ngOnInit() {
    }
};
MsidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-msidebar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./msidebar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/msidebar/msidebar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./msidebar.component.css */ "./src/guiElements/msidebar/msidebar.component.css")).default]
    })
], MsidebarComponent);



/***/ }),

/***/ "./src/guiElements/property-barr/property-barr.component.css":
/*!*******************************************************************!*\
  !*** ./src/guiElements/property-barr/property-barr.component.css ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\ninput, select {\r\n  height: 21px;\r\n  border-radius: 5px;\r\n  border-bottom-right-radius: 12px; }\r\ninput:hover, select:hover, input:focus, select:focus {\r\n  outline: none;\r\n  border: 2px solid dodgerblue;\r\n  height: 22px;\r\n}\r\n/* label > input[type='checkbox']{ height: 21px; } */\r\n/* input[type='checkbox']:hover, input[type='checkbox']:focus { height: 23px; }*/\r\ninput[disabled]:hover, select[disabled]:hover{\r\n  outline: none;\r\n  border: 2px solid gray;\r\n  /* height: auto; */\r\n}\r\n/*propertyBar*/\r\n#modelTemplate, #packageTemplate, #classTemplate, #attributeTemplate, #referenceTemplate{\r\n  width: 100%;\r\n}\r\n.propertySidebarTemplates{\r\n  display: none;\r\n}\r\n.wastemplate {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.wastemplate > * {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n.wastemplate > *{\r\n  width: 100%;\r\n}\r\n.minimizer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  border-left: 2px dashed dodgerblue;\r\n  border-bottom: 2px dashed dodgerblue;\r\n  min-width: 8px !important;\r\n  height: auto;\r\n  width: 8px !important;\r\n}\r\n.wastemplate.minimized > *{\r\n  display: none;\r\n}\r\n.wastemplate.minimized:hover {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  border-color: var(--secondary);\r\n}\r\n.wastemplate.minimized:before {\r\n  color: dodgerblue;\r\n  content: '+';\r\n  font-size: 20px;\r\n  margin: auto;\r\n  line-height: 0;\r\n}\r\n.wastemplate.minimized:hover:before {\r\n  color: var(--secondary);\r\n}\r\n.minimizer:hover, .attributeMinimizer:hover{\r\n  border-left: 2px dashed var(--secondary);\r\n  border-bottom: 2px dashed var(--secondary);\r\n}\r\n.wastemplate.minimized{\r\n  border: 2px solid dodgerblue;\r\n  height: 20px;\r\n  margin-bottom: 8px;\r\n}\r\n.wastemplate.minimized.list{\r\n  border-style: dashed;\r\n}\r\n.minimizer.single {\r\n  border-style: solid;\r\n  border-right: none;\r\n  border-top: none;\r\n}\r\n.content {\r\n  margin-left: 8px;\r\n  width: 100%;\r\n  height: -webkit-min-content;\r\n  height: -moz-min-content;\r\n  height: min-content;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  /*width: calc(100% - 16px);*/\r\n\r\n}\r\nlabel{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 24px;\r\n  line-height: 24px;\r\n  white-space: nowrap;\r\n}\r\nlabel > input, label > select{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto;\r\n  margin-right: 0;\r\n  margin-left: 20px;\r\n  width: inherit;\r\n  min-width: 60px;\r\n  /* float: right; */\r\n  /*margin-right: 0;*/\r\n}\r\nlabel > input[type=\"number\"] {\r\n  min-width: 30px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9wcm9wZXJ0eS1iYXJyL3Byb3BlcnR5LWJhcnIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGdDQUFnQyxFQUFFO0FBQ3BDO0VBQ0UsYUFBYTtFQUNiLDRCQUE0QjtFQUM1QixZQUFZO0FBQ2Q7QUFFQSxvREFBb0Q7QUFFcEQsZ0ZBQWdGO0FBQ2hGO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7QUFDQSxjQUFjO0FBQ2Q7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsV0FBVztFQUNYLFlBQVk7QUFDZDtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2Isa0JBQWtCO0FBQ3BCO0FBRUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGtDQUFrQztFQUNsQyxvQ0FBb0M7RUFDcEMseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixxQkFBcUI7QUFDdkI7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGVBQWU7RUFDZixZQUFZO0VBQ1osY0FBYztBQUNoQjtBQUNBO0VBQ0UsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSx3Q0FBd0M7RUFDeEMsMENBQTBDO0FBQzVDO0FBQ0E7RUFDRSw0QkFBNEI7RUFDNUIsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usb0JBQW9CO0FBQ3RCO0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCwyQkFBbUI7RUFBbkIsd0JBQW1CO0VBQW5CLG1CQUFtQjtFQUNuQiw0QkFBaUI7RUFBakIsNkJBQWlCO1VBQWpCLGlCQUFpQjtFQUNqQiw0QkFBNEI7O0FBRTlCO0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLFlBQVk7RUFDWixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvcHJvcGVydHktYmFyci9wcm9wZXJ0eS1iYXJyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW5wdXQsIHNlbGVjdCB7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTJweDsgfVxyXG5pbnB1dDpob3Zlciwgc2VsZWN0OmhvdmVyLCBpbnB1dDpmb2N1cywgc2VsZWN0OmZvY3VzIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIGRvZGdlcmJsdWU7XHJcbiAgaGVpZ2h0OiAyMnB4O1xyXG59XHJcblxyXG4vKiBsYWJlbCA+IGlucHV0W3R5cGU9J2NoZWNrYm94J117IGhlaWdodDogMjFweDsgfSAqL1xyXG5cclxuLyogaW5wdXRbdHlwZT0nY2hlY2tib3gnXTpob3ZlciwgaW5wdXRbdHlwZT0nY2hlY2tib3gnXTpmb2N1cyB7IGhlaWdodDogMjNweDsgfSovXHJcbmlucHV0W2Rpc2FibGVkXTpob3Zlciwgc2VsZWN0W2Rpc2FibGVkXTpob3ZlcntcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XHJcbiAgLyogaGVpZ2h0OiBhdXRvOyAqL1xyXG59XHJcbi8qcHJvcGVydHlCYXIqL1xyXG4jbW9kZWxUZW1wbGF0ZSwgI3BhY2thZ2VUZW1wbGF0ZSwgI2NsYXNzVGVtcGxhdGUsICNhdHRyaWJ1dGVUZW1wbGF0ZSwgI3JlZmVyZW5jZVRlbXBsYXRle1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5wcm9wZXJ0eVNpZGViYXJUZW1wbGF0ZXN7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4ud2FzdGVtcGxhdGUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbi53YXN0ZW1wbGF0ZSA+ICoge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG59XHJcblxyXG4ud2FzdGVtcGxhdGUgPiAqe1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5taW5pbWl6ZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYm9yZGVyLWxlZnQ6IDJweCBkYXNoZWQgZG9kZ2VyYmx1ZTtcclxuICBib3JkZXItYm90dG9tOiAycHggZGFzaGVkIGRvZGdlcmJsdWU7XHJcbiAgbWluLXdpZHRoOiA4cHggIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgd2lkdGg6IDhweCAhaW1wb3J0YW50O1xyXG59XHJcbi53YXN0ZW1wbGF0ZS5taW5pbWl6ZWQgPiAqe1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLndhc3RlbXBsYXRlLm1pbmltaXplZDpob3ZlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBib3JkZXItY29sb3I6IHZhcigtLXNlY29uZGFyeSk7XHJcbn1cclxuLndhc3RlbXBsYXRlLm1pbmltaXplZDpiZWZvcmUge1xyXG4gIGNvbG9yOiBkb2RnZXJibHVlO1xyXG4gIGNvbnRlbnQ6ICcrJztcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG59XHJcbi53YXN0ZW1wbGF0ZS5taW5pbWl6ZWQ6aG92ZXI6YmVmb3JlIHtcclxuICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5KTtcclxufVxyXG4ubWluaW1pemVyOmhvdmVyLCAuYXR0cmlidXRlTWluaW1pemVyOmhvdmVye1xyXG4gIGJvcmRlci1sZWZ0OiAycHggZGFzaGVkIHZhcigtLXNlY29uZGFyeSk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IGRhc2hlZCB2YXIoLS1zZWNvbmRhcnkpO1xyXG59XHJcbi53YXN0ZW1wbGF0ZS5taW5pbWl6ZWR7XHJcbiAgYm9yZGVyOiAycHggc29saWQgZG9kZ2VyYmx1ZTtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG59XHJcbi53YXN0ZW1wbGF0ZS5taW5pbWl6ZWQubGlzdHtcclxuICBib3JkZXItc3R5bGU6IGRhc2hlZDtcclxufVxyXG4ubWluaW1pemVyLnNpbmdsZSB7XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgYm9yZGVyLXRvcDogbm9uZTtcclxufVxyXG4uY29udGVudCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IG1pbi1jb250ZW50O1xyXG4gIGZsZXgtZmxvdzogY29sdW1uO1xyXG4gIC8qd2lkdGg6IGNhbGMoMTAwJSAtIDE2cHgpOyovXHJcblxyXG59XHJcbmxhYmVse1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAyNHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbn1cclxubGFiZWwgPiBpbnB1dCwgbGFiZWwgPiBzZWxlY3R7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gIHdpZHRoOiBpbmhlcml0O1xyXG4gIG1pbi13aWR0aDogNjBweDtcclxuICAvKiBmbG9hdDogcmlnaHQ7ICovXHJcbiAgLyptYXJnaW4tcmlnaHQ6IDA7Ki9cclxufVxyXG5sYWJlbCA+IGlucHV0W3R5cGU9XCJudW1iZXJcIl0ge1xyXG4gIG1pbi13aWR0aDogMzBweDtcclxufVxyXG4iXX0= */");

/***/ }),

/***/ "./src/guiElements/property-barr/property-barr.component.ts":
/*!******************************************************************!*\
  !*** ./src/guiElements/property-barr/property-barr.component.ts ***!
  \******************************************************************/
/*! exports provided: PropertyBarrComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyBarrComponent", function() { return PropertyBarrComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let PropertyBarrComponent = class PropertyBarrComponent {
    constructor() { }
    ngOnInit() {
    }
};
PropertyBarrComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-property-barr',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./property-barr.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/property-barr/property-barr.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./property-barr.component.css */ "./src/guiElements/property-barr/property-barr.component.css")).default]
    })
], PropertyBarrComponent);



/***/ }),

/***/ "./src/guiElements/propertyBar/propertyBar.ts":
/*!****************************************************!*\
  !*** ./src/guiElements/propertyBar/propertyBar.ts ***!
  \****************************************************/
/*! exports provided: PropertyBarr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyBarr", function() { return PropertyBarr; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class PropertyBarr {
    constructor(model) {
        this.model = null;
        this.styleEditor = null;
        this.model = model;
        this.selectedModelPiece = null;
        const $root = this.get$root();
        this.container = $root.find('.propertySidebarCurrentContent')[0];
        this.templateContainer = $root.find('.propertySidebarTemplates')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.container, 'property bar shell not found in: ', $root);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.templateContainer, 'property bar template shell not found in: ', $root);
        this.styleEditor = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["StyleEditor"](this, $root);
    }
    templateMinimizerClick(e) {
        const minimizer = e.currentTarget;
        let templatee = minimizer;
        while (!templatee.classList.contains('wastemplate')) {
            templatee = templatee.parentNode;
        }
        templatee.classList.add('minimized');
        $(templatee).off('click.maximizeTemplate').on('click.maximizeTemplate', (ee) => { PropertyBarr.templateMaximizerClick(ee); }).on('contextmenu', (e) => { this.subTemplateShow(e); });
        e.stopImmediatePropagation();
        e.stopPropagation();
        e.preventDefault();
    }
    static templateMaximizerClick(e) {
        const template = e.currentTarget;
        template.classList.remove('minimized');
    }
    static makeVisibilitySelector(selectHtml, visibility) {
        if (selectHtml === null) {
            selectHtml = document.createElement('select');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(selectHtml);
        const optgrp = document.createElement('optgroup');
        optgrp.label = 'Access Modifier';
        selectHtml.appendChild(optgrp);
        let optionFound = false;
        for (const key in _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["OperationVisibility"]) {
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["OperationVisibility"][key]) {
                continue;
            }
            const access = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["OperationVisibility"][key];
            const opt = document.createElement('option');
            opt.value = access;
            opt.innerHTML = access;
            if (visibility === access) {
                opt.selected = true;
                optionFound = true;
            }
            optgrp.appendChild(opt);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(visibility && !optionFound, 'OperationVisibility selected option not found; optgrp:', optgrp, 'OperationVisibility:', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["OperationVisibility"], ', searchedVal:', visibility);
        return selectHtml;
    }
    subTemplateShow(e) {
        const target = e.currentTarget;
        e.preventDefault();
        e.stopPropagation();
        if (target.classList.contains('list'))
            return false;
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(target);
        this.show(mp, mp.getHtmlOnGraph(), null);
        return false;
    }
    removeOthers($html, keep) {
        const toremove = '.model, .package, .class, .enum, .attribute, .reference, .operation, .parameter, .literal';
        // ['.model', '.package', '.class', '.enum', '.attribute', '.reference', '.operation', '.parameter', '.literal'];
        const index = toremove.indexOf(keep);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index === -1, 'invalid selector to keep:', keep, toremove);
        // toremove = toremove.substr(0, index - 1) + toremove.substr(index + keep.length);
        $html.find(toremove).not(keep).remove();
    }
    getTemplate(o, selector = 'propertySidebarTemplates', root = null) {
        // selector = '.propertySidebarTemplates';
        // if (!root) { root = this.templateContainer; }
        // const $html = $(U.cloneHtml<HTMLElement>($(root).find(selector)[0]));
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneHtml(this.templateContainer);
        o.linkToLogic(html);
        html.classList.add('linkedWith_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(o));
        html.classList.remove('propertySidebarTemplates');
        html.classList.remove('template');
        html.classList.add('wastemplate');
        const $html = $(html);
        $html.find('.replaceVarOn').each((ii, elem) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVars(o, elem, false); });
        let namestr;
        const model = o.getModelRoot();
        if (!(o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] || model.isMM())) {
            namestr = o.metaParent.name;
        }
        else {
            namestr = o.name;
        }
        $html.find('input.name').val(namestr)
            .off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            console.log('value:', input.value, 'inputHtml:', input, 'evt:', evt);
            input.value = o.setName(input.value, true);
        });
        $html.find('.replaceVarOn').each((i, elem) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVars(o, elem, false); });
        $html.find((model.isM() ? '.m1' : '.m2') + 'disable').attr('disabled');
        $html.find((model.isM() ? '.m1' : '.m2') + 'hide').remove();
        return $html;
    }
    get$root() {
        let TabRootHtml = this.model.graph.container;
        // console.log('TabRootHtml:', TabRootHtml);
        while (!TabRootHtml.classList.contains('UtabContent')) {
            TabRootHtml = TabRootHtml.parentNode;
        }
        const $ret = $(TabRootHtml).find('.propertyBarContainer');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe($ret.length !== 1, 'pbar container not found:', $ret);
        return $ret;
    }
    updateRaw(o = null) {
        // o = o || this.selectedModelPiece;
        // if (!o) { return; }
        const $root = this.get$root();
        const textArea = this.rawTextArea = $root.find('.rawecore')[0];
        if (!textArea) {
            return;
        }
        textArea.value = o.generateModelString();
    }
    show(o = null, clickedLevel, isEdge, forceRefresh = true) {
        const oldClickedLevel = this.clickedLevel;
        const oldMP = this.selectedModelPiece;
        const oldisEdge = this.selectedModelPieceIsEdge;
        this.selectedModelPiece = o = (o || this.selectedModelPiece);
        this.clickedLevel = clickedLevel = (clickedLevel || this.clickedLevel);
        this.selectedModelPieceIsEdge = isEdge; // = (isEdge || this.selectedModelPieceIsEdge);
        if (!forceRefresh && oldMP === this.selectedModelPiece && oldisEdge === this.selectedModelPieceIsEdge) {
            if (oldClickedLevel === this.clickedLevel) {
                return;
            }
            if (isEdge) {
                this.styleEditor.showE(o, isEdge);
            }
            else {
                this.styleEditor.show(o, clickedLevel);
            }
            return;
        }
        if (isEdge) {
            this.styleEditor.showE(o, isEdge);
        }
        else {
            this.styleEditor.show(o, clickedLevel);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"]), 'invalid parameter type:', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(o), o);
        if (!o) {
            return;
        }
        // console.log('PropertyBar.show: ', o);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(this.container);
        if (false) {}
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"]) {
            this.container.append(this.getM_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]) {
            this.container.append(this.getP_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
            this.container.append(this.getC_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
            this.container.append(this.getE_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
            this.container.append(this.getA_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
            this.container.append(this.getR_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            this.container.append(this.getO(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            this.container.append(this.getParam(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            this.container.append(this.getEL(o));
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'invalid ModelPiece type instance: ', o);
        }
        this.updateRaw(o);
        const $container = $(this.container);
        // $container.find('.template').addClass('.wastemplate').removeClass('template');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors($container);
        $container.find('.minimizer').off('click.minimizeTemplate').on('click.minimizeTemplate', (e) => { this.templateMinimizerClick(e); });
        /// ottimizzazioni di stile.
        while ($container.find('.wastemplate:has(>.content:not(:has(*)))').remove().length) { } // remove empty minimizer-content.
        // rimuove template.minimizer nested con un solo child che è un altro template+minimizer.
        // tipo:  ((1, 2)) --> (1, 2); sopravvive invece: (1, (2)) -> (1, (2));
        const monoChildReplacer = (i, h) => {
            /*
              '<template_1>' +
                '<content_1>' +
                  '<template_2>' +
                    '<content_2>' +
                    '</content_2>' +
                  '</template_2>' +
                '</content_1>' +
              '</template_1>';*/
            const content1 = h;
            const template1 = h.parentElement;
            const template2 = content1.firstChild;
            const content2 = $(template2).find('>.content')[0];
            const parent = template1.parentElement;
            parent.insertBefore(template2, template1);
            parent.removeChild(template1);
            // template1.insertBefore(content2, content1);
            // template1.removeChild(content1);
        };
        // while ($container.find('.content:has(>.wastemplate:only-child)').each(monoChildReplacer).length) {}
        while ($container.find('.content:has(>.wastemplate:only-child)').each(monoChildReplacer).length) { }
        // rimuove il template.minimizer alla radice, non ha senso chiudere tutto e rimanere con la pbar vuota.
        $container.find('.minimizer.single').on('contextmenu', (e) => { this.subTemplateShow(e); });
        const contentRoot = $container.find('>.wastemplate>.content')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(this.container);
        while (contentRoot.firstChild) {
            this.container.append(contentRoot.firstChild);
        }
    }
    getM_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.model'); // $html.find('.model').show();
        const nsHtml = $html.find('input.namespace')[0];
        const uriHtml = $html.find('input.uri')[0];
        nsHtml.value = o.namespace();
        uriHtml.value = o.uri();
        $(uriHtml).off('change.pbar').on('change.pbar', (e) => { o.uri(uriHtml.value); });
        $(nsHtml).off('change.pbar').on('change.pbar', (e) => { o.namespace(nsHtml.value); });
        const pkgListHtml = ($html.find('.packageList')[0]);
        let i;
        for (i = 0; i < o.childrens.length; i++) {
            pkgListHtml.appendChild(this.getP_I(o.childrens[i]));
        }
        return $html[0];
    }
    getP_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.package'); // $html.find('.package').show();
        const classListHtml = $html.find('.classList')[0];
        const enumListHtml = $html.find('.enumList')[0];
        let i;
        for (i = 0; i < o.classes.length; i++) {
            classListHtml.appendChild(this.getC_I(o.classes[i]));
        }
        for (i = 0; i < o.enums.length; i++) {
            enumListHtml.appendChild(this.getE_I(o.enums[i]));
        }
        // package own properties (sembra ci sia solo il name)
        return $html[0];
    }
    getC_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.class');
        // $html.find('.class').show();
        let i;
        const attribListHtml = ($html.find('.attributeList')[0]);
        const refListHtml = ($html.find('.referenceList')[0]);
        const opListHtml = ($html.find('.operationList')[0]);
        for (i = 0; i < o.attributes.length; i++) {
            attribListHtml.appendChild(this.getA_I(o.attributes[i]));
        }
        for (i = 0; i < o.references.length; i++) {
            refListHtml.appendChild(this.getR_I(o.references[i]));
        }
        const operations = o.getOperations();
        for (i = 0; i < operations.length; i++) {
            opListHtml.appendChild(this.getO(operations[i]));
        }
        if (!(o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"])) {
            return $html[0];
        }
        /// Se MClass
        const classe = o;
        const isRoot = ($html.find('input.isRoot')[0]);
        console.log('this:', o);
        isRoot.disabled = isRoot.checked = classe.isRoot();
        $(isRoot).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            if (!input.checked) {
                input.checked = true;
                return $html[0];
            }
            classe.setRoot(input.checked);
            classe.refreshGUI();
            this.refreshGUI();
        });
        return $html[0];
    }
    getE_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.enum'); //$html.find('.enum').show();
        let i;
        const literalsHtml = ($html.find('.literalList')[0]);
        for (i = 0; i < o.childrens.length; i++) {
            literalsHtml.appendChild(this.getEL(o.childrens[i]));
        }
        return $html[0];
    }
    setClassChild(o, $html) {
        let upperbound = o.getUpperbound();
        let lowerbound = o.getLowerbound();
        const htmlUpperBound = $html.find('input.upperbound')[0];
        const htmlLowerBound = $html.find('input.lowerbound')[0];
        if (!htmlUpperBound || !htmlLowerBound)
            return;
        if (upperbound === null) {
            htmlUpperBound.placeholder = '1';
        }
        else {
            htmlUpperBound.value = '' + upperbound;
        }
        if (lowerbound === null) {
            htmlLowerBound.placeholder = '1';
        }
        else {
            htmlLowerBound.value = '' + lowerbound;
        }
        $(htmlUpperBound).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            o.setUpperbound(+target.value);
            o.refreshGUI();
        });
        $(htmlLowerBound).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            o.setLowerbound(+target.value);
            o.refreshGUI();
        });
    }
    getR_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.reference'); // $html.find('.reference').show();
        this.setClassChild(o, $html);
        const htmlContainment = $html.find('input.referenceContainment')[0];
        htmlContainment.checked = o.isContainment();
        const selectType = $html.find('select')[0];
        if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return $html[0];
        }
        const ref = o;
        $(selectType).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            ref.type.changeType(target.value);
        });
        $(htmlContainment).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            ref.setContainment(target.checked);
            ref.refreshGUI();
        });
        return $html[0];
    }
    getA_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.attribute');
        // $html.find('.attribute').show();
        this.setClassChild(o, $html);
        // const typeHtml: HTMLSelectElement = ($html.find('select.attributeType')[0] as HTMLSelectElement);
        // Type.makeTypeSelector(typeHtml, o.getType(), true, true, false, false);
        /* $(typeHtml).off('change.pbar').on('change.pbar',
          (evt: Event) => {
            const target: HTMLSelectElement = (evt.currentTarget as HTMLSelectElement);
            o.setType(target.value, null, true);} );*/
        if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            return $html[0];
        }
        // Se MAttribute
        const attr = o;
        $html.find('.attributeValue').val(attr.getValueStr()).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            attr.setValueStr(input.value);
            attr.refreshGUI();
        });
        return $html[0];
    }
    getO(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.operation'); // $html.find('.operation').show();
        this.setClassChild(o, $html);
        let i;
        const paramListHtml = ($html.find('.parameterList')[0]);
        const visibilityHtml = ($html.find('.visibilitySelector')[0]);
        PropertyBarr.makeVisibilitySelector(visibilityHtml, o.visibility);
        let paramHtml = this.getParam(o, true);
        const returnName = $(paramHtml).find('input.name')[0];
        returnName.placeholder = 'Return type.';
        returnName.disabled = true;
        returnName.value = '';
        const templateContainingParamList = paramListHtml;
        // while (!templateContainingParamList.classList.contains('replaceVarOn')) { templateContainingParamList = templateContainingParamList.parentElement; }
        templateContainingParamList.prepend(paramHtml);
        for (i = 0; i < o.childrens.length; i++) {
            paramHtml = this.getParam(o.childrens[i], false);
            paramListHtml.appendChild(paramHtml);
        }
        $html.find('input.exceptions').val(o.exceptionsStr).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            input.value = o.exceptionsStr = input.value;
        });
        return $html[0];
    }
    getEL(eLiteral) {
        const $html = this.getTemplate(eLiteral);
        this.removeOthers($html, '.literal'); // $html.find('.literal').show();
        this.setClassChild(eLiteral, $html);
        $html.find('.value').val(eLiteral.ordinal).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            eLiteral.ordinal = +input.value;
            eLiteral.refreshGUI();
        });
        $html.find('input.literal').val(eLiteral.literal).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            eLiteral.setLiteral(input.value);
            eLiteral.refreshGUI();
        });
        $html.find('.name').val(eLiteral.name).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            eLiteral.setName(input.value);
            eLiteral.refreshGUI();
        });
        return $html[0];
    }
    refreshGUI() { this.show(this.selectedModelPiece, this.clickedLevel, this.selectedModelPieceIsEdge); }
    getParam(o, asReturnType = false) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.parameter'); // $html.find('.parameter').show();
        this.setClassChild(o, $html);
        const typeHtml = $html.find('select')[0];
        typeHtml.dataset.void = asReturnType ? "true" : "false";
        const ordered = $html.find('input.ordered')[0];
        const unique = $html.find('input.unique')[0];
        ordered.checked = o.ordered;
        unique.checked = o.unique;
        $(typeHtml).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            o.setType(target.value, null, true);
        }); // .trigger('change');
        return $html[0];
    }
    onShow(isRaw = false) { this.styleEditor.onHide(); }
    onHide() { }
}


/***/ }),

/***/ "./src/guiElements/style-editor/style-editor.component.css":
/*!*****************************************************************!*\
  !*** ./src/guiElements/style-editor/style-editor.component.css ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n.styleContainer{\n  /*position: relative;\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: auto;\n  padding: 17px;\n  padding-right: calc(17px - 10px);*/\n}\n.template{\n  display: none;\n}\n.StyleEditorDisplay .template{\n  display: unset;\n}\n.preview{\n  position: relative;\n  display: block;\n  width: 100%;\n  min-height: 10px;\n  border: 1px solid red;\n  background-color: transparent;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n.preview:blank{\n  background-color: gray;\n}\n.separatorShell.top{\n  margin-top: 30px;\n}\ndiv[contenteditable=\"true\"]:focus {\n  max-height: unset;\n}\ndiv[contenteditable=\"true\"], div[contenteditable=\"false\"] {\n  overflow: auto;\n  display: -webkit-box;\n  display: flex;\n  color: black;\n  border: 1px solid black;\n  min-height: 100px;\n  max-height: 100px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n}\ndiv[contenteditable=\"true\"] {\n  background-color: white;\n  cursor: text;\n}\ndiv[contenteditable=\"false\"] {\n  background-color: gray;\n  cursor: no-drop;\n}\nlabel.allowEdit {\n  color: goldenrod;\n}\nbutton {\n  margin: 5px;\n}\n.style.own, .style.instances{\n  display: -webkit-box;\n  display: flex;\n  flex-flow: wrap;\n}\n.detail{\n  border: 3px solid #0084ff;\n  background: #252525;\n}\nbutton.detail {\n  margin: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: -webkit-box;\n  display: flex;\n  height: auto;\n  border-top-left-radius: 17px;\n  border-top-right-radius: 17px;\n  z-index: 1;\n }\nbutton.detail:first-child:not(:only-child){ /* first visible child not possible ic pure css */\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n          flex-flow: column;\n  margin-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\nbutton.detail:last-child:not(:only-child){\n  margin-left: -3px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\nbutton.detail:focus {\n  box-shadow: none !important;\n  outline: none !important;\n}\ndiv.detail{\n  padding: 5px;\n  margin-top: -3px;\n  width: calc(100%);\n}\n.saveasrow{\n  display: -webkit-box;\n  display: flex;\n  flex-wrap: wrap;\n}\nbutton.delete{\n  margin: auto;\n  margin-bottom: 5px;\n}\nbutton.saveas{\n  margin: auto;\n  margin-bottom: 5px;\n}\ninput.saveas {\n  margin: auto;\n  margin-bottom: 5px;\n  flex-basis: 100px;\n  -webkit-box-flex: 0.6;\n          flex-grow: 0.6;\n  width: 0;\n}\n.compatibleRow > label > span{\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin: auto;\n  -webkit-box-ordinal-group: 3;\n          order: 2;\n  margin-left: 0;\n}\n.saveasrow, .compatibleRow{\n  width: 100%;\n  display: -webkit-box;\n  display: flex;\n  flex-flow: wrap;\n}\n.compatibleRow > label > input {\n  -webkit-box-ordinal-group: 2;\n          order: 1;\n  margin-left: 0;\n  margin-right: 5px;\n}\n.detail > label {\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin: auto;\n  flex-wrap: nowrap;\n}\nbutton.detail > .opened, button.detail > .closed{\n  margin: auto;\n}\ntable {\n  width: 100%;\n}\ntd.title {\n  font-weight: bold;\n  padding-top: 10px;\n  text-align: center;\n}\nh1 {\n  text-align: center;\n}\nselect{\n  /* background: inherit;\n  border: none;\n  color: inherit;\n  font: inherit; */\n  /*flex-basis: 0;*/\n  flex-shrink: 1;\n  -webkit-box-flex: 0.9;\n          flex-grow: 0.9;\n  max-width: -webkit-max-content;\n  max-width: -moz-max-content;\n  max-width: max-content;\n  min-width: 0;\n}\nlabel {display: -webkit-box;display: flex; -webkit-box-flex:1; flex-grow:1;}\nlabel > *, h6 > * {\n  display: -webkit-box;\n  display: flex;\n  /* flex-grow: 1;*/\n  margin: auto;\n  flex-wrap: wrap;\n}\nh6{\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin: auto;\n\n}\n.separator > * {\n  text-align: center;\n}\n/*\nbutton {\n  background: #0084ff;\n  border: none;\n  border-radius: 5px;\n  padding: 8px 14px;\n  font-size: 15px;\n  color: #fff;\n}\n\nbutton:disabled{\n  background: gray;\n}*/\ninput[type=\"number\"] {\n  width: 40px;\n  margin-right: 5px;\n}\n.zoomX, .zoomY, .gridX, .gridY {\n  margin-left: 5px;\n  margin-right: 15px;}\nlabel>input[type=\"checkbox\"],\nlabel>input[type=\"color\"] {\n  margin-bottom: 3px;\n}\n#primary_color {\n  border-radius: 100%;\n  height: 60px;\n  width: 60px;\n  border: none;\n  outline: none;\n  -webkit-appearance: none;\n}\n[contenteditable=true]:empty:before {\n  content: attr(placeholder);\n  display: block;\n  /* For Firefox */\n  cursor: text;\n  vertical-align: middle;\n  color: darkgray;\n  text-align: center;\n  margin: auto;\n}\n.separatorShell {\n  min-height: 33px;\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-flow: row;\n  flex-wrap: nowrap;\n  margin: auto;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 100%;\n}\n.roww {\n  display: -webkit-box;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n}\n.colContainer, .columnContainer {\n  display: -webkit-box;\n  display: flex;\n  flex-flow: nowrap;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-flow: row;\n}\n.colChild, .columnChild {\n  display: -webkit-inline-box;\n  display: inline-flex;\n  flex-flow: wrap;\n  -webkit-box-flex: 1;\n          flex-grow: 1;\n  max-width: 100%;\n  min-width: 0;\n}\n.separator {\n  margin: auto;\n  display: inline-block;\n}\n.stylelabel{\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin: auto;\n  margin-right: 5px;\n}\nselect.stylename{\n  display: -webkit-box;\n  display: flex;\n  margin: auto;\n  margin-left: 0;\n}\n.HorizontalContainer{\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-flow: row;\n  flex-wrap: wrap;\n  width: 100%;\n}\n.HorizontalChild{\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin: auto;\n}\n.opened{\n  display: none;\n}\n.helpButton, .styledelete {\n  display: -webkit-box;\n  display: flex;\n  width: 35px;\n  height: 35px;\n  margin: auto;\n  margin-right: 0;\n}\n.styledelete {\n  margin-right: 5px;\n  margin-left: 5px;\n}\n.helpButton {\n  background: rgb(0, 62, 127);\n  border-color: rgb(0, 62, 127); }\n.htmlstyle > .top {\n  display: -webkit-box;\n  display: flex;\n}\n.expressionRoot {\n  flex-wrap: nowrap !important;\n  max-width: 100%;\n}\ninput.fill{\n  -webkit-box-flex: 1;\n          flex-grow: 1;\n  flex-basis: 0;\n  margin-left: 7px;\n}\n.leftside{\n  -webkit-box-flex: 3;\n          flex-grow: 3;\n  flex-basis: 0;\n  min-width: 0;\n  max-width: 150px;\n}\n.rightside{\n  -webkit-box-flex: 7;\n          flex-grow: 7;\n  flex-basis: 0;\n  min-width: 0;\n}\n.arrowContainer{\n  display: -webkit-box;\n  display: flex;\n  margin-bottom: 10px;\n}\nbutton.arrow{\n  display: -webkit-box;\n  display: flex;\n  line-height: unset;\n  padding: 0 6px;\n}\n.tsclass{\n  margin: auto;\n  display: inline;\n  text-align: center;\n}\n/* */\n/*\npre {\n  background:#EEE;\n  padding:5px;\n  width: 290px;\n}*/\n.addHeader{\n  display: -webkit-box;\n  display: flex;\n}\n.addHeader > button {\n  margin-left: 0;\n  -webkit-box-ordinal-group: 3;\n          order: 2;\n}\nselect.attributetypeadd{\n  flex-basis: 0;\n  -webkit-box-flex: 1;\n          flex-grow: 1;\n  min-width: 0;\n  margin-right: 10px;\n}\n.previewselector{\n  height: 23px;\n  outline: none;\n  border: 2px dashed #666666;\n}\n.showAsEdge{\n  margin-right: 5px !important;\n}\nbutton.delete, button.saveas{\n  font-size: 0.8rem;\n}\nbutton.deleteRule{\n  -webkit-box-flex: 0;\n          flex-grow: 0;\n  flex-basis: auto;\n  min-width: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 5px;\n}\n.nowrap{\n  flex-wrap: nowrap;\n}\n._root {\n  margin-bottom: 5px;\n}\ndiv.detail.measurable > div.template {\n  display: none;\n}\n.graphColor, .showGrid{\n  margin-left: 0;\n}\nselect.operator{\n  -moz-text-align-last: center;\n       text-align-last: center;\n  margin-left: 5px;\n  margin-right: 5px;\n  width: 25px;\n}\nspan.operatortext{\n  margin-left: 5px;\n  margin-right: 5px;\n}\nselect.operator:disabled{\n  display: none;\n  /*\n  background: inherit;\n  border: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  margin: 0;*/\n}\nspan.nameprefix {\n  margin-left: 7px;\n  background: white;\n  border: 2px inset rgb(238, 238, 238);\n  height: 21px;\n  border-right: none;\n  color: black;\n  line-height: 16px;\n}\ninput.name {\n  margin-left: 0;\n  border-left: none;\n  padding-left: 0;\n}\nlabel:focus > input.name {\n  outline: none;\n  box-shadow: 0 2px 2px 2px rgb(77, 144, 254);\n}\ninput.name:focus {\n  outline: none;\n  box-shadow: 2px 2px 0px 0px rgb(77, 144, 254), 2px -2px 0px 0px rgb(77, 144, 254);\n}\n.htmlstyle {\n  width: 100%;\n}\nlabel.allowEdit > span {\n  margin-left:0;\n}\nlabel > input[type=\"checkbox\"] ~ * { margin-left: 0; }\n.html[contenteditable] {\n  /*IDE gives error but they all actually exist, at least on mozilla.*/\n  overflow-wrap: anywhere;\n  word-wrap: anywhere;\n  white-space: break-spaces;\n}\n/* they fix outer css influence on measurable section. */\ninput[type=\"checkbox\"].arrow {\n  margin: 0; }\n.meas_acc0 button { margin: 0; }\n/***********              Measurable editor v2 start                 ********/\n.meas_acc0 .measurableSettingRoot{\n  width: 100%;\n  display: block;\n}\n.meas_acc0 .boxesroot {\n  display: -webkit-box;\n  display: flex;\n  flex-wrap: wrap;\n  -webkit-box-flex: 1;\n          flex-grow: 1;\n  flex-basis: 0;\n}\n.meas_acc0 .movementboxroot, .meas_acc0 .resizeboxroot {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-flex: 1;\n          flex-grow: 1;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n          flex-flow: column;\n}\n.meas_acc0 .columncontainer {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-flow: row;\n  flex-wrap: nowrap;\n}\n.meas_acc0 .rowcontainer {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n          flex-flow: column;\n  flex-wrap: nowrap;\n}\n.meas_acc0 .column, .meas_acc0 .row{\n  display: -webkit-box;\n  display: flex;\n  flex-wrap: nowrap;\n}\n.meas_acc0 .row {\n  max-width: 100%;\n  margin-right: unset;\n  margin-left: unset; /* dumb _grid.scss fixer */\n}\n.meas_acc0 .break { flex-wrap: wrap; }\n.meas_acc0 .autobreak { flex-wrap: initial; }\n.meas_acc0 .fill { -webkit-box-flex: 1; flex-grow: 1; }\n.meas_acc0 .boxtitle { display: block; text-align: center; margin-bottom: 12px; }\n.meas_acc0 .side { display: -webkit-box; display: flex; }\n.meas_acc0 .side.left, .meas_acc0 .side.right { width: 10px; }\n.meas_acc0 .side.top, .meas_acc0 .side.bot { height: 10px; width: calc(100% - 20px); }\n.meas_acc0 .corner { display: -webkit-box; display: flex; width: 10px; height: 10px; }\n.meas_acc0 .middle { background-color: goldenrod; display: -webkit-box; display: flex; }\n.meas_acc0 .middle .middle { width: 120px; height: 90px; }\n.meas_acc0 .rectangledrawing.inner > .row > .side, .meas_acc0 .rectangledrawing.inner > .row > .corner {\n  background-color: dimgray;\n}\n.meas_acc0 .boxroot {\n  display: block;\n  margin: auto;\n  flex-wrap: wrap;\n}\n.meas_acc0 .ruletitle{\n  display: block;\n  text-align: center;\n}\n.meas_acc0 button.ruledelete {\n  height: 100%;\n  width: 30px;\n  padding: 0;\n  margin-right: 5px;\n  border-radius: 25px 0 0 25px;\n}\n.meas_acc0 .compoundInputprefix {\n  max-width: 100%;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  margin-bottom: 0;\n  padding: 0;\n  -webkit-box-flex: 0 !important;\n          flex-grow: 0 !important;\n  width: auto;\n  flex-basis: auto !important;\n  flex-shrink: 0 !important;\n}\n.meas_acc0 .compoundInputprefix > input.attrname {\n  border-left: none;\n  padding-left: 0;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.meas_acc0 .compoundInputprefix > * { border: none; }\n.meas_acc0 .compoundInputprefix > *:first-child {\n  margin-top: 1px;\n  padding-right: 0;\n  background-color: transparent;\n}\n.meas_acc0 .compoundInputprefix > input:focus { box-shadow: none; }\n.meas_acc0 .compoundInputprefix:focus-within {\n  border-color: #80bdff;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n}\n.meas_acc0 .rulecontainer > .rightx, .meas_acc0 .rulecontainer > .leftx { margin-bottom: 0 !important; }\n/* .meas_acc0 .rightx { min-width: 0; } */\n.meas_acc0 .rightx span.operator {\n  margin: auto;\n  margin-left: 5px;\n  margin-right: 5px;\n  margin-top: 8px;\n}\n.meas_acc0 .operatorcontainer {\n  display: -webkit-box;\n  display: flex;\n  margin-bottom: 5px;\n}\n.meas_acc0 select.operator {\n  width: 45px;\n  margin: auto 5px;\n  text-align: center;\n  -moz-text-align-last: center;\n       text-align-last: center;\n}\n.meas_acc0 .rightx .compoundInputprefix, .meas_acc0 .rightx input.rightside, .meas_acc0 input.leftside, .meas_acc0 .rightx > .target {\n  margin-bottom: 5px;\n  min-width: 120px;\n  flex-basis: 0;\n  -webkit-box-flex: 1;\n          flex-grow: 1;\n}\n.meas_acc0 .rulecontainer { margin-bottom: 1rem; }\n.meas_acc0 .rightx > .target { margin-bottom: 0; }\n.meas_acc0 .rightx > .measurabledebug { margin-top: 5px; }\n.meas_acc0 .attrname {\n  max-width: 200px !important; /* todo: remove when is autosizing */\n}\n.meas_acc0 .addrule {\n  float: right;\n  margin-top: -4px;\n  padding: 4px 10px;\n}\n.meas_acc0 .ruletitle {\n  padding-right: 4px;\n  margin-bottom: 5px;\n}\n.meas_acc0 .ruletitle.collapsed { -webkit-appearance: initial; }\n.meas_acc0 .ruletitle:hover { -webkit-appearance: button; }\n.meas_acc0 .form-control > .form-control:not(:first-child){\n  border-top-left-radius: unset;\n  /* disable bootstrap rule*/\n}\n.meas_acc0 .measurableerrortext{\n  margin-left: 5px;\n  color: var(--danger);\n}\n.meas_acc0 .measurablewarningtext{\n  margin-left: 5px;\n  color: var(--warning);\n}\n.meas_acc0 .measurableoutputtext{\n  margin-left: 5px;\n  color: var(--secondary);\n}\n.meas_acc0 .rulecontainer{ margin-bottom: 5px; }\n.meas_acc0 .measurabledebug { display: none; }\n.meas_acc0 .rightx:focus-within .measurabledebug{ display: -webkit-box; display: flex; }\n.meas_acc0 .countershell { float: right; }\n.meas_acc0 .rectangledrawing.outer > * {\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n.meas_acc0 .rectangledrawing.outer > .row > *, .meas_acc0 .arrowh, .meas_acc0 .arrowv {\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n.meas_acc0 .rectangledrawing.outer > .top > .left {\n  /*background-image: url(https://i.ibb.co/tqxXhk4/tl.png);*/\n  background-image: url(https://i.ibb.co/Zgvpywz/tll.png);\n}\n.meas_acc0 .rectangledrawing.outer > .top > .side.top {\n  background-image: url(https://i.ibb.co/M9fC7DP/t.png); }\n.meas_acc0 .rectangledrawing.outer > .top > .right {\n  /*background-image: url(https://i.ibb.co/Pzsmjxf/tr.png);*/\n  background-image: url(https://i.ibb.co/SN2THLt/trl.png); }\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\n  background-image: url(https://i.ibb.co/7jm9BBQ/l.png); }\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\n  background-image: url(https://i.ibb.co/RYZnVN5/r.png); }\n.meas_acc0 .rectangledrawing.outer > .bot > .left {\n  /*background-image: url(https://i.ibb.co/qrYWdpH/bl.png);*/\n  background-image: url(https://i.ibb.co/gDKFry5/bll.png); }\n.meas_acc0 .rectangledrawing.outer > .bot > .side.bot {\n  background-image: url(https://i.ibb.co/cXc0nmS/b.png); }\n.meas_acc0 .rectangledrawing.outer > .bot > .right {\n  /*background-image: url(https://i.ibb.co/K0pVVT7/br.png);*/\n  background-image: url(https://i.ibb.co/QpwRSsT/brl.png); }\n.meas_acc0 input.side.top {\n  margin-bottom: 3px;\n  margin-top: -3px; }\n.meas_acc0 input.side.bot {\n  margin-bottom: -3px;\n  margin-top: 3px; }\n.meas_acc0 input.side.left {\n  margin-right: 3px;\n  margin-left: -3px; }\n.meas_acc0 input.side.right {\n  margin-right: -3px;\n  margin-left: 3px; }\n.meas_acc0 .arrowh {\n  background-image: url(https://i.ibb.co/Zd3jtbc/lr.png); }\n.meas_acc0 .arrowv {\n  background-image: url(https://i.ibb.co/jHTtPDx/tb.png); }\n.meas_acc0 .rectangledrawing.outer > .row > .corner {\n  height: 50px;\n  min-width: 50px;\n}\n.meas_acc0 .rectangledrawing.outer > .top > * {\n  height: 50px; }\n.meas_acc0 .rectangledrawing.outer > .bot > * {\n  height: 50px; }\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\n  height: auto;\n  width: 50px; }\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\n  height: auto;\n  width: 50px; }\n.meas_acc0 .arrow { -webkit-appearance: initial; }\n.meas_acc0 .arrowh, .meas_acc0 .arrowv{\n  width: 75px;\n  height: 75px; }\n.meas_acc0 .arrow:focus{ outline: none; }\n.meas_acc0 .arrow:checked{\n  -webkit-filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%);\n          filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%); }\n.meas_acc0 .directions {\n  display: -webkit-box;\n  display: flex;\n  flex-wrap: wrap;\n  margin: auto; }\n.meas_acc0 .directions > * { margin: auto; }\n.meas_acc0 .draggable.boxroot{\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n          flex-flow: column;\n  /*height: 237px;*/\n}\n.meas_acc0 .collapse:not(.show) { display: none; }\n.meas_acc0 .selected { background-color: #37ff66 !important; }\n/***********              Measurable editor v2 end                   ********/\n\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/guiElements/style-editor/style-editor.component.ts":
/*!****************************************************************!*\
  !*** ./src/guiElements/style-editor/style-editor.component.ts ***!
  \****************************************************************/
/*! exports provided: StyleEditorComponent, StyleEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleEditorComponent", function() { return StyleEditorComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleEditor", function() { return StyleEditor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../app/measurabletemplate/measurabletemplate.component */ "./src/app/measurabletemplate/measurabletemplate.component.ts");




let StyleEditorComponent = class StyleEditorComponent {
    constructor() { }
    ngOnInit() {
    }
};
StyleEditorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-style-editor',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./style-editor.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/style-editor/style-editor.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./style-editor.component.css */ "./src/guiElements/style-editor/style-editor.component.css")).default]
    })
], StyleEditorComponent);

class editorcontext {
}
class StyleEditor {
    constructor(propertyBar, $root) {
        this.propertyBar = null;
        this.$root = null;
        this.$templates = null;
        this.$display = null;
        this.root = null;
        this.templates = null;
        this.display = null;
        this.clickedLevel = null;
        this.propertyBar = propertyBar;
        this.$root = $root.find('.styleContainer');
        this.$display = this.$root.find('.StyleEditorDisplay');
        this.$templates = this.$root.find('.styleTemplates');
        this.root = this.$root[0];
        this.display = this.$display[0];
        this.templates = this.$templates[0];
    }
    onHide() {
        this.updateClickedGUIHighlight();
    }
    onShow() {
        this.propertyBar.onHide();
        this.updateClickedGUIHighlight();
    }
    onPaste(e) {
        e.preventDefault();
        const div = e.currentTarget;
        let text = e.originalEvent.clipboardData.getData('text/plain');
        text = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(text, '\n', ' ');
        div.innerText = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(text, '\r', ' ');
    }
    isVisible() { return this.$root.is(':visible'); }
    show(m, clickedLevel) {
        m = m || this.propertyBar.selectedModelPiece;
        if (!m)
            m = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel();
        // console.log('styleShow(', m, ')');
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IModel"]) {
            this.showM(m);
            return;
        }
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IPackage"]) {
            this.showM(m.parent);
            return;
        }
        // if (m instanceof IPackage) { this.showP(m); return; }
        this.clickedLevel = clickedLevel = clickedLevel || m.getHtmlOnGraph();
        this.showMP(m, null, false, null);
        return; /*
        if (m instanceof IClass) { this.showC(m); }
        if (m instanceof IAttribute) { this.showA(m); }
        if (m instanceof IReference) { this.showR(m); }
        if (m instanceof EOperation) { this.showO(m); }
        if (m instanceof EParameter) { this.showParam(m); }*/
    }
    updateClickedGUIHighlight() {
        $(this.propertyBar.model.graph.container).find('.styleEditorSelected').removeClass('styleEditorSelected');
        if (this.isVisible() && this.clickedLevel) {
            this.clickedLevel.classList.add('styleEditorSelected');
        }
    }
    getCopyOfTemplate(m, s, appendTo, clear) {
        let $html = this.$templates.find('.template' + s);
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($html[0]);
        html.classList.remove('template');
        html.dataset.modelpieceid = '' + m.id;
        html.style.display = 'block';
        if (appendTo) {
            if (clear)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(appendTo);
            appendTo.appendChild(html);
        }
        $html = $(html).find('.' + (m.getModelRoot().isM() ? 'm1' : 'm2') + 'hide').hide();
        return html;
    }
    showM(m) {
        console.log('styleShowM(', m, ')');
        const html = this.getCopyOfTemplate(m, '.model', this.display, true);
        const $html = $(html);
        const gridX = $html.find('.gridX')[0];
        const gridY = $html.find('.gridY')[0];
        const zoomX = $html.find('.zoomX')[0];
        const zoomY = $html.find('.zoomY')[0];
        const showGrid = $html.find('.showGrid')[0];
        const color = $html.find('.graphColor')[0];
        gridX.value = m.graph.grid ? '' + m.graph.grid.x : '';
        gridY.value = m.graph.grid ? '' + m.graph.grid.y : '';
        zoomX.value = m.graph.zoom.x + '';
        zoomY.value = m.graph.zoom.y + '';
        showGrid.checked = m.graph.gridDisplay;
        color.value = '#000ff'; // todo.
        // event listeners:
        $(gridX).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.grid.x = isNaN(+input.value) ? 0 : +input.value;
            showGrid.checked = true;
            $(showGrid).trigger('change');
            m.refreshGUI();
        });
        $(gridY).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.grid.y = isNaN(+input.value) ? 0 : +input.value;
            showGrid.checked = true;
            $(showGrid).trigger('change');
            m.refreshGUI();
        });
        $(zoomX).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.setZoom(+input.value, null);
        });
        $(zoomY).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.setZoom(null, +input.value);
        });
        $(showGrid).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.setGrid0(input.checked);
        });
    }
    showP(m) { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'styles of Package(', m, '): unexpected.'); }
    setStyleEditor($styleown, model, mp, style, context, indexedPath = null) {
        /// getting the template to fill.
        const debug = false;
        let i;
        let styleowntemplate = $styleown[0];
        const isInherited = styleowntemplate.classList.contains('inherited');
        const isInheritable = styleowntemplate.classList.contains('inheritable');
        const isOwn = styleowntemplate.classList.contains('own');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe((isInheritable ? 1 :  false || isInherited ? 1 :  false || isOwn ? 1 : 0) !== 1, 'failed to get html styleEditor template');
        let tmp = this.getCopyOfTemplate(mp, '.htmlstyle', null, false);
        styleowntemplate.appendChild(tmp);
        styleowntemplate.classList.remove('template');
        // styleowntemplate.parentElement.insertBefore(tmp, styleowntemplate);
        // styleowntemplate.parentElement.removeChild(styleowntemplate);
        styleowntemplate = tmp;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!styleowntemplate.parentElement, 'null parent: ', styleowntemplate, $styleown);
        $styleown = $(styleowntemplate);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'styleComplexEntry:', style, 'mp:', mp, styleowntemplate, $styleown);
        const obj = {
            editLabel: null,
            editAllowed: null,
            // selectstyle: null,
            previewselect: null,
            preview: null,
            input: null,
            detailButton: null,
            detailPanel: null,
            isM1: null,
            isM2: null,
            isClass: null,
            isReference: null,
            isAttribute: null,
            isOperation: null,
            isParameter: null,
            stylename: null,
            forkButton: null,
            delete: null,
            saveasName: null,
            styledelete: null
        };
        //// setting up labelAllowEdit (checking if the (own, inherited or inheritable) style exist or a modelpiece local copy is needed.)
        obj.editAllowed = $styleown.find('button.allowEdit')[0];
        obj.editLabel = $styleown.find('label.allowEdit')[0];
        // obj.selectstyle = $styleown.find('select.stylename')[0] as HTMLSelectElement;
        obj.detailButton = $styleown.find('button.detail')[0];
        obj.detailPanel = $styleown.find('div.detail')[0];
        obj.input = $styleown.find('.html[contenteditable="true"]')[0];
        obj.preview = $styleown.find('.preview')[0];
        obj.previewselect = $styleown.find('select.previewselector')[0];
        obj.styledelete = $styleown.find('button.styledelete')[0];
        const $detail = $styleown.find('div.detail');
        obj.isM1 = $detail.find('.model')[0];
        obj.isM2 = $detail.find('.metamodel')[0];
        obj.isClass = $detail.find('.class')[0];
        obj.isAttribute = $detail.find('.attribute')[0];
        obj.isReference = $detail.find('.reference')[0];
        obj.isOperation = $detail.find('.operation')[0];
        obj.isParameter = $detail.find('.parameter')[0];
        obj.saveasName = $detail.find('input.saveas')[0];
        obj.delete = $detail.find('button.delete')[0];
        obj.forkButton = $detail.find('button.saveas')[0];
        // let inheritableStyle: StyleComplexEntry = isInheritable ? mp.getInheritableStyle() : null;
        // let inheritedStyle: StyleComplexEntry = isInherited ? mp.getInheritedStyle() : null;
        const lastvp = model.getLastView();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'isOwn && !style.isownhtml || isInherited && !inheritedStyle.html || isInheritable && !inheritableStyle.html)', style);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, !style ? '' : isOwn + ' && ' + style.isownhtml + ' || ' + isInherited + ' && ' + style.html + ' || ' + isInheritable + ' && ' + style.html);
        if (!!style && !(isOwn && !style.isownhtml || isInherited && !style.html || isInheritable && !style.html)) {
            $(obj.editLabel).hide();
        }
        else {
            obj.input.setAttribute('disabled', 'true');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(obj.styledelete);
            obj.input.contentEditable = 'false';
            if (!lastvp) {
                obj.editLabel.innerText = 'Is required to have at least one non-default viewpoint applied to customize styles.';
                obj.editAllowed.style.display = 'none';
            }
            else
                $(obj.editAllowed).on('click', (e) => {
                    const mptarget = isInherited ? mp.metaParent : mp;
                    let v = lastvp.viewsDictionary[mptarget.id];
                    if (!v)
                        v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewRule"](lastvp);
                    if (isOwn) {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!v.htmlo, 'htmlo should be undefined at this point.');
                        v.htmlo = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewHtmlSettings"]();
                        v.htmlo.setHtmlStr((style ? style.html : mptarget.getStyle().html).outerHTML);
                    }
                    if (isInheritable) {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!v.htmli, 'htmli should be undefined at this point.');
                        v.htmli = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewHtmlSettings"]();
                        const instanceCurrentStyle = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].GetStyle(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m, mp.getInstanceClassName());
                        v.htmli.setHtmlStr(instanceCurrentStyle.outerHTML);
                    }
                    if (isInherited) {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!v.htmli, 'htmli should be undefined at this point.');
                        v.htmli = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewHtmlSettings"]();
                        v.htmli.setHtmlStr((style ? style.html : mp.getStyle().html).outerHTML);
                    }
                    v.apply(mptarget);
                    this.showMP(mp);
                    // todo: se stylecomplexEntry è null mostra un altro button.editAllowed per inserire lo stile ereditabile che generi htmli.
                });
            if (!style) {
                if (isInheritable) {
                    obj.editLabel.innerHTML = 'This element does not have a inheritable style.';
                }
                if (isInherited) {
                    obj.editLabel.innerHTML = 'The metaParent of this element does not have a inheritable style appliable to this element.';
                }
                obj.editLabel.appendChild(obj.editAllowed);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(styleowntemplate);
                styleowntemplate.appendChild(obj.editLabel);
                return null;
            }
        }
        /// start!
        obj.input.setAttribute('placeholder', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceVarsString(mp, obj.input.getAttribute('placeholder')));
        obj.input.innerText = context.templateLevel.outerHTML;
        $styleown.find('.htmllevel').html((isInherited ? 'Instances Html' : 'Own html')
            + ' (' + (indexedPath && indexedPath.length ? 'Level&nbsp;' + indexedPath.length : 'Root&nbsp;level') + ')');
        let graphRoot = mp.getHtmlOnGraph();
        context.graphLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(graphRoot, indexedPath, 'childNodes');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!graphRoot, 'failed to get graphroot', graphRoot, indexedPath, mp);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!context.graphLevel, 'failed to get graphlv', graphRoot, indexedPath, mp);
        context.applyNodeChangesToInput = () => {
            // console.log(templateLevel.outerHTML);
            obj.input.innerText = context.templateLevel.outerHTML;
            onStyleChange();
        };
        const onStyleChange = () => {
            const inputHtml = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toHtml(obj.input.innerText);
            if (inputHtml.getAttribute('disabled') !== 'false')
                return;
            // console.log('PRE: ', inputHtml, 'outer:', inputHtml.outerHTML, 'innertext:', obj.input.innerText);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, '*** setting inheritable PRE. style.htmlobj:', style.htmlobj, ', style:', style, ', context:', context, 'templatelvl.parent:', context.templateLevel.parentElement, ', inputHtml:', inputHtml);
            if (context.templateLevel.parentElement) {
                context.templateLevel.parentElement.insertBefore(inputHtml, context.templateLevel);
                context.templateLevel.parentElement.removeChild(context.templateLevel);
                context.templateLevel = inputHtml;
            }
            else {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!style.view || style.isGlobalhtml, 'default html cannot be modified.', style, 'todo: automatically make new ClassVieww');
                // ??old message?: se tutto va bene qui deve dare errore, crea una nuova ClassVieww e applicalo al modelpiece ed edita quello.
                style.htmlobj.setHtml(context.templateLevel = inputHtml);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, '*** setting inheritable POST. style.htmlobj', style.htmlobj, 'style:', style);
            }
            if (isOwn) {
                mp.refreshGUI();
            }
            if (isInheritable) {
                mp.refreshInstancesGUI();
            }
            if (isInherited) {
                mp.metaParent.refreshInstancesGUI();
            }
            if (!isInheritable && indexedPath)
                this.clickedLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(mp.getHtmlOnGraph(), indexedPath, 'childNodes');
            graphRoot = mp.getHtmlOnGraph();
            context.graphLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(graphRoot, indexedPath, 'childNodes');
            this.updateClickedGUIHighlight();
            // obj.input.innerText = inputHtml.outerHTML;
            // DANGER: se lo fai con l'evento onchange() ti sposta il cursore all'inizio e finisci per scrivere rawtext prima dell'html invalidandolo.
            // tenendolo dovresti scrivere i caratteri uno alla volta riposizionando il cursore nel punto giusto ogni volta.
            // console.log('POST: ', inputHtml, 'outer:', inputHtml.outerHTML, 'innertext:', obj.input.innerText);
            // updatePreview();
        };
        $(obj.input).off('paste.set').on('paste.set', (e /*ClipboardEvent*/) => { this.onPaste(e); onStyleChange(); })
            // .off('change.set').on('change.set', onStyleChange)
            // .off('input.set').on('input.set', onStyleChange)
            .off('blur.set').on('blur.set', onStyleChange)
            .off('keydown.set').on('keydown.set', (e) => { if (e.key === 'Esc') {
            this.propertyBar.refreshGUI();
        } });
        // setup measurable options.
        const measurableRoot = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableTemplateGenerator"].generateMeasurableTemplate();
        tmp = $styleown.find('.measurablePlaceholder')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].swap(measurableRoot, tmp);
        // .log('swap End:', measurableRoot.childNodes.length, tmp.childNodes.length);
        //U.pe(true,'swapend');
        const $measurableRoot = $(measurableRoot);
        // obj.input is same const ownhtmlinput: HTMLDivElement | HTMLTextAreaElement = $measurableRoot.find('.html[contenteditable="true"]')[0] as HTMLDivElement | HTMLTextAreaElement;
        const $measurableCheckbox = $measurableRoot.find('input.ismeasurable');
        const measurableCheckbox = $measurableCheckbox[0];
        measurableCheckbox.disabled = obj.input.getAttribute('disabled') === 'true';
        measurableCheckbox.checked = (context.templateLevel.classList.contains('measurable') || context.graphLevel.classList.contains('measurable'));
        const $measurableTitle = $measurableRoot.find('.meas_acc0 > .ruletitle');
        $measurableTitle.on('click', (e) => {
            const $innerroot = $measurableRoot.find('.measurableSettingRoot ');
            const innerroot = $innerroot[0];
            if (innerroot.classList.contains('show')) {
                innerroot.setAttribute('style', '');
                innerroot.classList.add('collapsing');
                // todo: elimina slideup e usa la transizione css su collapsing, come?
                $innerroot.slideUp(400, () => {
                    innerroot.classList.remove('show', 'collapsing');
                    innerroot.classList.remove('collapse');
                    innerroot.classList.add('collapse');
                    $measurableTitle[0].classList.add('collapsed');
                });
                return;
            }
            innerroot.classList.remove('collapse');
            innerroot.classList.add('collapse');
            innerroot.classList.add('show');
            $measurableTitle[0].classList.remove('collapsed');
            $innerroot.slideDown();
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
        });
        $(obj.styledelete).on('click', () => { style.view.delete(); mp.refreshGUI(); this.show(mp, mp.getHtmlOnGraph()); });
        $measurableCheckbox.on('click', (e) => { e.stopPropagation(); });
        $measurableCheckbox.on('mousedown', (e) => { e.stopPropagation(); });
        $measurableCheckbox.on('mouseup', (e) => { e.stopPropagation(); });
        $measurableCheckbox.off('change.enabledisablemeasurable').on('change.enabledisablemeasurable', (e) => {
            context.templateLevel.classList.remove('measurable');
            if (measurableCheckbox.checked) {
                context.templateLevel.classList.add('measurable');
                $measurableTitle.slideDown();
                if (!measurableRoot.classList.contains('show')) {
                    $measurableTitle.trigger('click');
                }
            }
            else {
                if (measurableRoot.classList.contains('show')) {
                    $measurableTitle.trigger('click');
                }
                $measurableTitle.slideUp();
            }
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isTriggered(e))
                return;
            context.applyNodeChangesToInput();
        }).trigger('change');
        this.makeMeasurableOptions(measurableRoot, obj.input, style, context, indexedPath);
        // const measurableSelect: HTMLSelectElement = $measurableRoot.find('select.attributetypeadd')[0] as HTMLSelectElement;
        /*$measurableRoot.find('button.addmeasurable').on('click', () => {
          this.addmeasurableAttributeButton(measurableSelect, $measurableRoot, mp, style, templateLevel as Element, ownhtmlinput, indexedPath);
        });* /
        for (i = 0; i < templateLevel.attributes.length; i++) {
          const a: Attr = templateLevel.attributes[i];
          if (a.name[0] === '_' || a.name.indexOf('r_') == 0 || a.name.indexOf('r_') == 0) {
            const val: Attr = this.clickedLevel.attributes.getNamedItem(a.name.substr(1));
            const style = null;
            this.addmeasurableAttributeButton(measurableSelect, $measurableRoot, mp, style, templateLevel as Element, ownhtmlinput, indexedPath, a, val)
          }
        }*/
        return indexedPath;
    }
    showMP(m, clickedLevel = null, asMeasurable = false, asEdge = null) {
        // console.log('styleShow(', m, ', ' + U.getTSClassName(m) + ')');
        let i;
        this.clickedLevel = clickedLevel = clickedLevel || this.clickedLevel;
        // set htmls
        const style = m.getStyle();
        const styleinheritable = m.getInheritableStyle();
        const styleinherited = m.getInheritedStyle();
        const clickedRoot = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getLogicalRootOfHtml(clickedLevel);
        const templateRoot = style.html; // m.styleobj.html;// m.getStyle();
        // let templateLevel: Element = templateRoot;
        let indexedPath = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getIndexesPath(clickedLevel, 'parentNode', 'childNodes', clickedRoot);
        // console.log('clickedRoot', clickedRoot, 'clickedLevel', clickedLevel, 'path:', indexedPath);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(clickedRoot, indexedPath, 'childNodes') !== clickedLevel, 'mismatch.', indexedPath);
        const realindexfollowed = { indexFollowed: [], debugArr: [] };
        let context = new editorcontext();
        context.templateLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(templateRoot, indexedPath, 'childNodes', realindexfollowed);
        // console.log('clickedRoot:',clickedRoot, 'clikedLevel:', clickedLevel, 'indexedPath:', indexedPath, 'followed:', realindexfollowed,
        // 'templateRoot:', templateRoot, 'templateLevel:', templateLevel);
        if (realindexfollowed.indexFollowed.length !== indexedPath.length) {
            indexedPath = realindexfollowed.indexFollowed;
            this.clickedLevel = clickedLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(clickedRoot, indexedPath, 'childNodes');
        }
        this.updateClickedGUIHighlight();
        // html set END.
        const model = m.getModelRoot();
        if (asEdge && (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"] || m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IReference"]) && m.shouldBeDisplayedAsEdge()) {
            return this.showE(m, asEdge);
        }
        const html = this.getCopyOfTemplate(m, '.modelpiece', this.display, true);
        const $html = $(html);
        const showAsEdge = $html.find('.showAsEdge')[0];
        const showAsEdgeText = $html.find('.showAsEdgeText')[0];
        const $styleown = $html.find('.style.own');
        const $styleInherited = $html.find('.style.inherited');
        const $styleInheritable = $html.find('.style.inheritable');
        //const ownhtml = m.getStyle();
        const htmlPath = this.setStyleEditor($styleown, model, m, style, context, indexedPath);
        // U.pe(!style.html, $styleown, m, clickedLevel, model, style, instanceshtml);
        // const clickedonStyle: Element = U.followIndexesPath(style.html, htmlPath) as Element;
        $html.find('.tsclass').html('' + m.printableName()); // + (htmlDepth === 0 ? ' (root level)' : ' (level&nbsp;' + htmlDepth + ')') );
        // console.log('setStyleEditor inherited, ', styleinherited);
        let inheritedcontext = new editorcontext();
        if (styleinherited) {
            const inheritedTemplateRoot = styleinherited.html;
            inheritedcontext.templateLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(inheritedTemplateRoot, indexedPath, 'childNodes', realindexfollowed);
            // se ho cliccato su un non-radice non-ereditato, non posso prendere un frammento dell'ereditato, sarebbe un frammento diverso.
            if (inheritedcontext.templateLevel !== context.templateLevel) {
                inheritedcontext.templateLevel = inheritedTemplateRoot;
            }
        }
        this.setStyleEditor($styleInherited, model, m, styleinherited, inheritedcontext);
        // console.log('setStyleEditor inheritable, ', styleinheritable);
        let inheritablecontext = new editorcontext();
        inheritablecontext.templateLevel = styleinheritable ? styleinheritable.html : null;
        if (!model.isM1()) {
            this.setStyleEditor($styleInheritable, model, m, styleinheritable, inheritablecontext);
        }
        else {
            $styleInheritable[0].innerHTML = '<h5 class="text-danger">M1 elements cannot give inheritance.</h5>';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].detailButtonSetup($html);
        // <meta>
        //     <dependency><attributes><type>double</ </ </
        //     <preview><img src=imgurl</img> or html diretto.</
        // </meta>
        // pulsanti per settare preview: "takesnapshotOf / set as example... + select vertex with that style"
        const $arrowup = $html.find('button.arrow.up').on('click', (e) => {
            // $(clickedLevel.parentNode).trigger('click');
            this.propertyBar.show(null, clickedLevel.parentElement, null, false);
            // this.show(this.propertyBar.selectedModelPiece, clickedLevel.parentElement); this will not update clickedHtml
        });
        $arrowup[0].disabled = htmlPath.length === 0 && m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"];
        $html.find('button.arrow.down')[0].disabled = true;
        showAsEdge.checked = false;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"]) {
            showAsEdge.disabled = m.references.length < 2;
            showAsEdgeText.innerHTML = 'Show as an edge' + (showAsEdge.disabled ? ' (require&nbsp;>=&nbsp;2&nbsp;references)' : '');
            $(showAsEdge).off('change.set').on('change.set', (e) => {
                m.shouldBeDisplayedAsEdge(true);
                this.showE(m, asEdge);
            });
        }
    }
    showE(m, edge) {
        const index = edge.getIndex();
        console.log('styleShowE(', m, ')');
        const html = this.getCopyOfTemplate(m, '.edge', this.display, true);
        const $html = $(html);
        const edgeStyle = $html.find('.edgeStyle')[0];
        const eColorCommon = $html.find('.edgeColor.common')[0];
        const eColorHighlight = $html.find('.edgeColor.highlight')[0];
        const eColorSelected = $html.find('.edgeColor.selected')[0];
        const eWidthCommon = $html.find('.edgeWidth.common')[0];
        const eWidthHighlight = $html.find('.edgeWidth.highlight')[0];
        const eWidthSelected = $html.find('.edgeWidth.selected')[0];
        const epRadiusC = $html.find('.edgePoint.radius')[0];
        const epStrokeWC = $html.find('.edgePoint.strokeW')[0];
        const epStrokeC = $html.find('.edgePoint.stroke')[0];
        const epFillC = $html.find('.edgePoint.fill')[0];
        const epRadiusH = $html.find('.edgePointPreview.radius')[0];
        const epStrokeWH = $html.find('.edgePointPreview.strokeW')[0];
        const epStrokeH = $html.find('.edgePointPreview.stroke')[0];
        const epFillH = $html.find('.edgePointPreview.fill')[0];
        const epRadiusS = $html.find('.edgePointSelected.radius')[0];
        const epStrokeWS = $html.find('.edgePointSelected.strokeW')[0];
        const epStrokeS = $html.find('.edgePointSelected.stroke')[0];
        const epFillS = $html.find('.edgePointSelected.fill')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!edgeStyle, 'edgeStyle not found. root:', $html, 'selector: ' + '.edgeStyle');
        let styleName = '';
        switch (m.edgeStyleCommon.style) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unrecognized EdgeStyle:', m.edgeStyleCommon.style);
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular23Auto:
                styleName = 'angular23Auto';
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular2:
                styleName = 'angular2';
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular3:
                styleName = 'angular3';
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].straight:
                styleName = 'straight';
                break;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].selectHtml(edgeStyle, styleName, false);
        eWidthCommon.value = '' + m.edgeStyleCommon.width;
        eWidthHighlight.value = '' + m.edgeStyleHighlight.width;
        eWidthSelected.value = '' + m.edgeStyleSelected.width;
        eColorCommon.value = m.edgeStyleCommon.color;
        eColorHighlight.value = m.edgeStyleHighlight.color;
        eColorSelected.value = m.edgeStyleSelected.color;
        console.log('logic:', m, 'styleCColor:', m.edgeStyleCommon.color, 'output value:', eColorCommon.value);
        epRadiusC.value = '' + m.edgeStyleCommon.edgePointStyle.radius;
        epStrokeWC.value = '' + m.edgeStyleCommon.edgePointStyle.strokeWidth;
        epStrokeC.value = m.edgeStyleCommon.edgePointStyle.strokeColor;
        epFillC.value = m.edgeStyleCommon.edgePointStyle.fillColor;
        epRadiusH.value = '' + m.edgeStyleHighlight.edgePointStyle.radius;
        epStrokeWH.value = '' + m.edgeStyleHighlight.edgePointStyle.strokeWidth;
        epStrokeH.value = m.edgeStyleHighlight.edgePointStyle.strokeColor;
        epFillH.value = m.edgeStyleHighlight.edgePointStyle.fillColor;
        epRadiusS.value = '' + m.edgeStyleSelected.edgePointStyle.radius;
        epStrokeWS.value = '' + m.edgeStyleSelected.edgePointStyle.strokeWidth;
        epStrokeS.value = m.edgeStyleSelected.edgePointStyle.strokeColor;
        epFillS.value = m.edgeStyleSelected.edgePointStyle.fillColor;
        $(edgeStyle).off('change.set').on('change.set', (e) => {
            let mode;
            switch (edgeStyle.value) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unrecognized edgeMode(', edgeStyle.value, ') among: ', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].straight:
                case 'straight':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].straight;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular23Auto:
                case 'angular23Auto':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular23Auto;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular2:
                case 'angular2':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular2;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular3:
                case 'angular3':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular3;
                    break;
            }
            m.edgeStyleCommon.style = mode;
            m.edgeStyleHighlight.style = mode;
            m.edgeStyleSelected.style = mode;
            edge.refreshGui();
        });
        $(eColorCommon).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.color = eColorCommon.value;
            edge.refreshGui();
        });
        $(eWidthCommon).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.width = isNaN(+eWidthCommon.value) ? 0 : +eWidthCommon.value;
            edge.refreshGui();
        });
        $(eColorHighlight).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.color = eColorHighlight.value;
            edge.refreshGui();
        });
        $(eWidthHighlight).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.width = isNaN(+eWidthHighlight.value) ? 0 : +eWidthHighlight.value;
            edge.refreshGui();
        });
        $(eColorSelected).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.color = eColorSelected.value;
            edge.refreshGui();
        });
        $(eWidthSelected).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.width = isNaN(+eWidthSelected.value) ? 0 : +eWidthSelected.value;
            edge.refreshGui();
        });
        $(epRadiusC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.radius = isNaN(+epRadiusC.value) ? 0 : +epRadiusC.value;
            edge.refreshGui();
        });
        $(epStrokeWC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.strokeWidth = isNaN(+epStrokeWC.value) ? 0 : +epStrokeWC.value;
            edge.refreshGui();
        });
        $(epStrokeC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.strokeColor = epStrokeC.value;
            edge.refreshGui();
        });
        $(epFillC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.fillColor = epFillC.value;
            edge.refreshGui();
        });
        $(epRadiusH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.radius = isNaN(+epRadiusH.value) ? 0 : +epRadiusH.value;
            edge.refreshGui();
        });
        $(epStrokeWH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.strokeWidth = isNaN(+epStrokeWH.value) ? 0 : +epStrokeWH.value;
            edge.refreshGui();
        });
        $(epStrokeH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.strokeColor = epStrokeH.value;
            edge.refreshGui();
        });
        $(epFillH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.fillColor = epFillH.value;
            edge.refreshGui();
        });
        $(epRadiusS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.radius = isNaN(+epRadiusS.value) ? 0 : +epRadiusS.value;
            edge.refreshGui();
        });
        $(epStrokeWS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.strokeWidth = isNaN(+epStrokeWS.value) ? 0 : +epStrokeWS.value;
            edge.refreshGui();
        });
        $(epStrokeS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.strokeColor = epStrokeS.value;
            edge.refreshGui();
        });
        $(epFillS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.fillColor = epFillS.value;
            edge.refreshGui();
        });
    }
    makeMeasurableOptions(measurableShell, inputuseless, style, context, indexedPath) {
        const $measurableShell = $(measurableShell);
        let i;
        const resizearrows = {};
        const dragarrows = {};
        const $arrowroot = $measurableShell.find('.rectangledrawing.outer');
        const $innerroot = $arrowroot.find('.rectangledrawing');
        // todo: sposta la fase di setattribute direttamente nella generazione html.
        resizearrows.tl = $innerroot.find('.top.left').attr('direction', 'tl');
        resizearrows.t = $innerroot.find('.side.top').attr('direction', 't');
        resizearrows.tr = $innerroot.find('.top.right').attr('direction', 'tr');
        resizearrows.ml = $innerroot.find('.side.left').attr('direction', 'l');
        resizearrows.mr = $innerroot.find('.side.right').attr('direction', 'r');
        resizearrows.bl = $innerroot.find('.bot.left').attr('direction', 'bl');
        resizearrows.b = $innerroot.find('.side.bot').attr('direction', 'b');
        resizearrows.br = $innerroot.find('.bot.right').attr('direction', 'br');
        resizearrows.tla = $arrowroot.find('.top.left.arrow').attr('direction', 'tl');
        resizearrows.ta = $arrowroot.find('.side.top.arrow').attr('direction', 't');
        resizearrows.tra = $arrowroot.find('.top.right.arrow').attr('direction', 'tr');
        resizearrows.mla = $arrowroot.find('.side.left.arrow').attr('direction', 'l');
        resizearrows.mra = $arrowroot.find('.side.right.arrow').attr('direction', 'r');
        resizearrows.bla = $arrowroot.find('.bot.left.arrow').attr('direction', 'bl');
        resizearrows.ba = $arrowroot.find('.side.bot.arrow').attr('direction', 'b');
        resizearrows.bra = $arrowroot.find('.bot.right.arrow').attr('direction', 'br');
        dragarrows.x = $measurableShell.find('.arrowh').attr('direction', 'x');
        dragarrows.y = $measurableShell.find('.arrowv').attr('direction', 'y');
        const arrowchange = (e) => {
            let tmp;
            const arrow = e.currentTarget;
            const direction = arrow.getAttribute('direction');
            const innerbox = $innerroot.find('*[direction = "' + direction + '"]')[0];
            const checked = arrow.checked;
            const isrotatable = arrow.classList.contains('rot');
            const isdraggable = arrow.classList.contains('drag');
            const isresizable = !isdraggable && !isrotatable;
            if (innerbox) {
                innerbox.classList.remove('selected');
                if (checked)
                    innerbox.classList.add('selected');
            }
            if (isdraggable) {
                tmp = context.templateLevel.getAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra + _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Draggableoptions"].axis);
            }
            if (isresizable) {
                tmp = context.templateLevel.getAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes + _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Resizableoptions"].handles);
            }
            let currentHandles = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(tmp || '', ' ', '').split(',');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(currentHandles, direction);
            if (checked) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ArrayAdd(currentHandles, direction);
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(currentHandles, '');
            if (isdraggable && currentHandles.length) {
                context.templateLevel.setAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra + _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Draggableoptions"].axis, currentHandles.join(', '));
            }
            else
                context.templateLevel.removeAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra + _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Draggableoptions"].axis);
            if (isresizable && currentHandles.length) {
                context.templateLevel.setAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes + _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Resizableoptions"].handles, currentHandles.join(', '));
            }
            else
                context.templateLevel.removeAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes + _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Resizableoptions"].handles);
            console.log('resizable:', isresizable, 'draggable:', isdraggable, currentHandles, 'tmp:', tmp, context);
            context.applyNodeChangesToInput();
        };
        const rulelist = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].getRuleList(context.templateLevel);
        /*
        for (let key in measurableRules) {
          key = measurableRules[key];
          const counterselector: string = '[data-target=".meas_acc > .panel > .' + key + '"] .rulecounter';
          const counter: HTMLElement = $measurableShell.find(counterselector)[0] as any;
           U.pe(!counter, 'counter not found for rule: ' + key);
          counter.innerText = rulelist[key].length;
        }*/
        for (i = 0; i < rulelist.all.length; i++) {
            const rule = rulelist.all[i];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!rule.prefix, 'astdh', rule, rulelist, context.templateLevel);
            if (rule.prefix === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra && rule.name === _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Draggableoptions"].axis) {
                const value = rulelist._jquiDra[i].right;
                const handles = (value.indexOf('all') !== -1 ? 'x,y' : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(value, ' ', '')).split(',');
                let map = {};
                for (i = 0; i < handles.length; i++) {
                    switch (handles[i]) {
                        default: break;
                        case 'x':
                            map.x = true;
                            break;
                        case 'y':
                            map.y = true;
                            break;
                    }
                }
                dragarrows.x.checked = map.x;
                dragarrows.y.checked = map.y;
                continue;
            }
            if (rule.prefix === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes && rule.name === _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["Resizableoptions"].handles) {
                const handles = (rule.right.indexOf('all') !== -1 ? 'n,e,s,w,ne,se,sw,nw' : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(rule.right, ' ', '')).split(',');
                let map = {};
                for (i = 0; i < handles.length; i++) {
                    switch (handles[i]) {
                        default: break;
                        case 'n':
                            map.t = true;
                            break;
                        case 'ne':
                            map.tr = true;
                            break;
                        case 'nw':
                            map.tl = true;
                            break;
                        case 'e':
                            map.r = true;
                            break;
                        case 'w':
                            map.l = true;
                            break;
                        case 's':
                            map.b = true;
                            break;
                        case 'se':
                            map.br = true;
                            break;
                        case 'sw':
                            map.bl = true;
                            break;
                    }
                }
                resizearrows.tl.checked = map.tl;
                resizearrows.t.checked = map.t;
                resizearrows.tr.checked = map.tr;
                resizearrows.ml.checked = map.l;
                resizearrows.mr.checked = map.r;
                resizearrows.bl.checked = map.bl;
                resizearrows.b.checked = map.b;
                resizearrows.br.checked = map.br;
                continue;
            }
            const fakeevt = {};
            fakeevt.currentTarget = $measurableShell.find('.ruletitle[data-target=".meas_acc > .panel > .' + rule.prefix + '" > button.addrule')[0];
            fakeevt.currentTarget = fakeevt.currentTarget.parentElement;
            this.addRule(fakeevt, context, rule);
        }
        $measurableShell.find('.arrow').on('change', arrowchange).trigger('change');
        $measurableShell.find('button.addrule').off('click.addrule').on('click.addrule', (e) => { e.stopPropagation(); this.addRule(e, context); });
    }
    getruleShellRoot(node) {
        while (node.parentElement && !node.classList.contains('panel'))
            node = node.parentElement;
        return node;
    }
    addRule(e, context, ruleparts = null) {
        let i;
        const title = e.currentTarget.parentElement;
        const $title = $(title);
        const ruletype = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].trimStart(title.dataset.target.substr(title.dataset.target.lastIndexOf('>') + 1), ['.', ' ']);
        const prefix = ruletype;
        const counter = $title.find('.rulecounter')[0];
        counter.innerHTML = '' + (+counter.innerHTML + 1);
        // const targetsectionselector: string = title.dataset.target;
        // const $targetsection: JQuery<HTMLElement> = $measurableShell.find(targetsectionselector) as  JQuery<HTMLElement>;
        const appendparent = title.parentElement;
        const newtemplate = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($(appendparent).find('.template')[0], true);
        newtemplate.classList.remove('template');
        appendparent.appendChild(newtemplate);
        const $newtemplate = $(newtemplate);
        const nameinput = $newtemplate.find('input.attrname')[0];
        const left = $newtemplate.find('input.leftside')[0];
        const operator = $newtemplate.find('.operatorcontainer > select.operator')[0];
        const right = $newtemplate.find('input.rightside')[0];
        const target = $newtemplate.find('input.target')[0];
        const dynamicjquiplaceholder = (valueinput, phinput, phdictionary) => {
            $(valueinput).on('change', () => {
                let valid = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].validateDatalist(valueinput);
                if (!phdictionary)
                    return;
                console.log(' key:', valueinput.value, 'map:', phdictionary);
                phinput.placeholder = valid ? phdictionary[valueinput.value] : 'invalid jQueryUi parameter';
            });
        };
        if (left && left.list || nameinput.list)
            switch (nameinput.dataset['target'] || left && left.dataset['target']) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unexpected datalist generator:', target, nameinput, left);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes:
                    dynamicjquiplaceholder(nameinput, right, _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["ResizableoptionsPH"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra:
                    dynamicjquiplaceholder(nameinput, right, _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["DraggableOptionsPH"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot:
                    dynamicjquiplaceholder(nameinput, right, _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_3__["RotatableoptionsPH"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint:
                    dynamicjquiplaceholder(left, right, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableTemplateGenerator"].constraintPlaceholderMap);
                    break;
            }
        if (ruleparts) { // if existing rule
            nameinput.value = ruleparts.name;
            if (left)
                left.value = ruleparts.left;
            if (operator)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].selectHtml(operator, ruleparts.operator);
            right.value = ruleparts.right;
        }
        const rulespanelshell = this.getruleShellRoot(nameinput);
        const $rulespanelshell = $(rulespanelshell);
        if (e.type === "click") { // if not triggered.
            $rulespanelshell.find('.collapse').addClass('show');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(rulespanelshell === nameinput, 'a');
        let oldrulename = nameinput.value;
        let leftdataset = left ? $('datalist#' + left.getAttribute('list'))[0] : null;
        let lefthashmap = null;
        const mp = this.propertyBar.selectedModelPiece;
        const generateRuleValue = () => {
            let ret = (left ? left.value : '');
            if (!operator)
                return ret + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + right.value;
            switch (operator.value) {
                default: break; // describing separators (arrows, do, then...) are ignored.
                case '<=':
                case '<':
                case '>':
                case '>=':
                case '!=':
                case '==':
                case '===':
                case '!==':
                    ret += _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + operator.value;
                    break;
            }
            return ret + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + right.value;
        };
        const generateOldRuleName = () => { return ruletype + oldrulename; };
        const generateRuleName = () => { return ruletype + nameinput.value; };
        const updateRule = () => {
            if (left && (left.getAttribute('invalid') === '1' || right.getAttribute('invalid') === '1'))
                return;
            const name = generateRuleName();
            const value = generateRuleValue();
            console.log('setattribute: name:', name, ' generated by:', ruletype + ' + ' + nameinput.value);
            context.templateLevel.setAttribute(name, value);
            context.applyNodeChangesToInput();
        };
        const isRuleNameTaken = (name) => {
            const $allrules = $rulespanelshell.find('input.attrname');
            console.log('other names:', rulespanelshell, $allrules);
            for (i = 0; i < $allrules.length; i++) {
                const ruleinput = $allrules[i];
                if (ruleinput === nameinput)
                    continue;
                if (ruleinput.value === name)
                    return true;
            }
            return false;
        };
        nameinput.pattern = '[^ "\']*';
        const setRuleTarget = (str) => {
            context.templateLevel.setAttribute('relativeSelectorOf' + generateRuleName(), str);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(true, 'changetarget of: |' + ruletype + oldrulename + '|  |' + generateRuleName() + '|');
            context.applyNodeChangesToInput();
        };
        const targetChanged = (e) => { setRuleTarget(target.value); };
        const setRuleName = (name) => {
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followsPattern(nameinput, name))
                return;
            console.log('setRuleName pt0 ', nameinput, 'istaken?', isRuleNameTaken(name));
            if (oldrulename === name)
                return; // errore qui? durante l'add buttopn insert event questo è sempre true, e quando addo una rule sono tutte named "1". non penso più sia questo
            console.log('setRuleName pt2 ', nameinput, 'istaken?', isRuleNameTaken(name));
            const oldtarget = context.templateLevel.getAttribute('relativeSelectorOf' + ruletype + oldrulename);
            while (isRuleNameTaken(name)) {
                name = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].increaseEndingNumber(name);
            }
            context.templateLevel.removeAttribute(ruletype + oldrulename);
            if (oldtarget) {
                // non printa? ma funziona U.pif(true, 'rename) delete: |' + ruletype + oldrulename + '|; insert: |' + ruletype + name + '|');
                context.templateLevel.removeAttribute('relativeSelectorOf' + ruletype + oldrulename);
                context.templateLevel.setAttribute('relativeSelectorOf' + ruletype + name, oldtarget);
            }
            console.log('setRuleName pt3 ', nameinput, 'istaken?', isRuleNameTaken(name));
            oldrulename = nameinput.value = name;
            updateRule();
        };
        const leftChanged = () => {
            updateRule();
        };
        const operatorChanged = () => {
            updateRule();
        };
        const rightChanged = () => {
            updateRule();
        };
        const nameChanged = () => { setRuleName(nameinput.value); };
        $(nameinput).off('change.name').on('change.name', nameChanged);
        $(left).off('change.leftside').on('change.leftside', leftChanged);
        $(operator).off('change.operator').on('change.operator', operatorChanged);
        $(right).off('change.rightside').on('change.rightside', rightChanged);
        $(target).off('change.target').on('change.target', targetChanged);
        $newtemplate.find('button.ruledelete').off('click.delete').on('click.delete', () => {
            newtemplate.parentNode.removeChild(newtemplate);
            context.templateLevel.removeAttribute(generateOldRuleName());
            context.templateLevel.removeAttribute(generateRuleName()); //todo: potrebbe fare casini se qualcuno swappa nomi e cancella una regola?
            context.applyNodeChangesToInput();
        });
        if (!ruleparts)
            setRuleName(nameinput.getAttribute('defaultvalue'));
    }
}


/***/ }),

/***/ "./src/guiElements/top-bar/top-bar.component.css":
/*!*******************************************************!*\
  !*** ./src/guiElements/top-bar/top-bar.component.css ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\n#topbarShell{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-basis: 100vw;\r\n  background-color: var(--mainBackgroundColor);\r\n  /*border-bottom: var(--mainBorder);*/\r\n  width: 100vw;\r\n  height: var(--topbarH);\r\n  max-height: var(--topbarH);\r\n}\r\n#topbar {\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n#topbar > * {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  /*margin: auto 0 auto 10px; /*T?RB?L*/\r\n}\r\n/*\r\n#topbar > button{\r\n  height: calc(var(--topbarH) - 10px);\r\n  flex-basis: 100px;\r\n  min-width: 100px;\r\n  max-width: 100px;\r\n}*/\r\n#topbar button.dropdownTitle:focus{\r\n  outline: none;\r\n}\r\n::ng-deep .popupContent .closeButton{\r\n  /* float: right; */\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  height: 40px;\r\n  width: 40px;\r\n  border: 2px solid black;\r\n  background-color: transparent; }\r\n::ng-deep .popupContent .closeButton:hover{\r\n  right: 5px;\r\n  top: 5px;\r\n  height: 50px;\r\n  width: 50px;\r\n  background-color: red; }\r\n::ng-deep .screenWideShadow{\r\n  position: absolute;\r\n  display: none;\r\n  top: 0;\r\n  z-index: 2;\r\n  background-color: rgba(0,0,0,0.5);\r\n  border: none;\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\n::ng-deep .popupContent{\r\n  top: 50%;\r\n  left: 50%;\r\n  -webkit-transform: translate(-50%, -50%);\r\n          transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  display: block;\r\n  width: auto;\r\n  height: auto;\r\n  padding: 30px 60px;\r\n  border: 4px solid var(--mainBorderColor);\r\n  background-color: #44444c;\r\n}\r\n::ng-deep .typeRow {\r\n  height: 20px;\r\n  width: 600px;\r\n  margin-bottom: 5px;\r\n}\r\n::ng-deep .typeRow>*{\r\n  margin-top: auto;\r\n  margin-bottom: auto;}\r\n::ng-deep .alias{\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n::ng-deep .typeRow > *{\r\n}\r\n::ng-deep .typeName{\r\n  color: darkorange;\r\n}\r\n/************************************************     dropdown style     **********************************************/\r\n.dropdownTitle {\r\n  background-color: inherit; /*var(--mainBackgroundColor);*/\r\n  color: unset;\r\n  font-size: 16px;\r\n  border: none;\r\n  padding: 12px 16px;\r\n  cursor: inherit;\r\n}\r\n.dropdownContainer {\r\n  position: relative;\r\n  display: inline-block;\r\n  /*height: 80%;*/\r\n  width: auto;\r\n  cursor: pointer;\r\n}\r\n.dropdownContainer.right {\r\n  min-width: 100%;\r\n}\r\nul.dropdownContent {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: var(--mainBackgroundColor);\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n  border: 3px solid var(--secondaryBorderColor);\r\n  padding: 0;\r\n  margin: 0;\r\n  top: 100%;\r\n}\r\nul.dropdownContent.right{\r\n  margin:0;\r\n  top: 0;\r\n  left: 100%;\r\n}\r\nli.dropdownContent {\r\n  padding: 0;\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\nul.dropdownContent:not(:empty){\r\n  border-bottom-left-radius: 33px;\r\n}\r\n.dropdownTitle.right, .dropdownpadding{\r\n  font-size: inherit;\r\n  padding: 12px 16px;\r\n}\r\n.dropdownTitle.right:hover, .dropdownContainer.right:hover, .dropdownpadding:hover{\r\n  border-bottom-left-radius: 23px;\r\n}\r\n.dropdownTitle.right.todo, .dropdownpadding.todo{ border-bottom-left-radius: 0; }\r\n/*.dropdownTitle.right.todo:last-child, .dropdownpadding.todo:last-child{ border-bottom-left-radius: 33px; }*/\r\nli.dropdownContent:hover {\r\n  background-color: var(--secondaryBorderColor);\r\n  /*padding-left: 12px;*/\r\n  border-left: 8px solid #ff0000a0;\r\n  border-bottom-left-radius: 30px;\r\n  /*margin-left: -12px; bottom-round border, trouble con stili sovrapposti che lo ri-squadrano.\r\n   border-top-left-radius: 24px;*/\r\n}\r\n#topbar>.dropdownContainer:hover>.dropdownTitle{\r\n  border-top-left-radius: 30px;\r\n  border-top-right-radius: 30px;}\r\n#topbar>.dropdownContainer:hover>.dropdownTitle {\r\n  background-color: var(--secondaryBorderColor);\r\n}\r\n.buttonGridContainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* width: calc(40px * 5 - 1);*/\r\n  width: min(25vw, calc(40px * 5 + 10px * 5 - 1px)); /* button size + buttonshell margin, 4 per riga con massimo spazio avanzato prima del 5°*/\r\n}\r\n.buttonGridMinMargin {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex: 0;\r\n          flex-grow: 0;\r\n  flex-shrink: 0;\r\n  margin: auto;\r\n  padding: 5px; }\r\n.buttonGrid {\r\n  width: 45px;\r\n  height: 45px;\r\n}\r\nul.dropdownContent{\r\n  min-height: 100%;\r\n}\r\n.dropdownContainer:hover>ul.dropdownContent {\r\n  display: block;\r\n}\r\n.dropdownContainer:hover > ul.dropdownContent:empty{\r\n  display:-webkit-box;\r\n  display:flex;\r\n}\r\nul.dropdownContent:empty:before{\r\n  content: '... Empty ...';\r\n  margin: auto;\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\nul.dropdownContent:empty:hover{\r\n  background-color: darkred !important;\r\n  cursor: not-allowed !important;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/guiElements/top-bar/top-bar.component.ts":
/*!******************************************************!*\
  !*** ./src/guiElements/top-bar/top-bar.component.ts ***!
  \******************************************************/
/*! exports provided: TopBarComponent, TopBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopBarComponent", function() { return TopBarComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopBar", function() { return TopBar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



// @ts-ignore
let TopBarComponent = class TopBarComponent {
    constructor() { }
    ngOnInit() {
    }
};
TopBarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-top-bar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./top-bar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/top-bar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./top-bar.component.css */ "./src/guiElements/top-bar/top-bar.component.css")).default]
    })
], TopBarComponent);

class TopBar {
    constructor() {
        this.$html = null;
        this.$topbar = null;
        this.html = null;
        this.topbar = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!TopBar.topbar, 'top bar instantiated twice, but it is a singleton.');
        TopBar.topbar = this;
        this.$html = $('#topbarShell');
        this.html = this.$html[0];
        this.$topbar = this.$html.find('#topbar');
        this.topbar = this.$topbar[0];
        TopBar.topbar.updateRecents();
        this.addEventListeners();
    }
    static load_empty(e, prefix) {
        const empty = prefix === 'm' ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Model"].emptyModel : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MetaModel"].emptyModel;
        TopBar.load(empty, prefix);
    }
    static load_XMI_File(e, prefix) {
        // filename:   rootClass.name + '.' + MetaModel.name;   es: path\league.bowling
        // open file dialog
        // read file
        // transform in json
        const extension = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().isM1() ? '.' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.fullname() : '.ecore';
        let xmistring = '';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].fileRead((e, files, fileContents) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!fileContents || !files || fileContents.length !== files.length, 'Failed to get file contents:', files, fileContents);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(fileContents.length > 1, 'should not be possible to input multiple files.');
            if (fileContents.length == 0)
                return;
            xmistring = fileContents[0];
            console.log('xmistr input: ', xmistring);
            const xmlDoc = new DOMParser().parseFromString(xmistring, "text/xml");
            console.log('xml:', xmlDoc);
            let jsonstr = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["prxml2json"].xml2json(xmlDoc, '    ');
            console.log('jsonstr input: ', jsonstr);
            // U.pe(true, 'xml -> json', prxml2json, 'json -> xml', prjson2xml);
            TopBar.load(jsonstr, prefix);
        }, [extension], true);
    }
    static load(json, prefix) {
        const m = prefix === 'm' ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm;
        const num = prefix === 'm' ? 1 : 2;
        window['' + 'discardSave']();
        if (m.name)
            m.save(false);
        if (m.isM2()) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.save(false);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["LocalStorage"].deleteLastOpened(1);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["LocalStorage"].setLastOpened(num, json, null, null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].refreshPage();
    }
    static load_JSON_Text(e, prefix) {
        const onoutput = (ee) => { finish(); };
        const finish = () => {
            const input = popup.getInputNode()[0];
            popup.destroy();
            TopBar.load(input.value, prefix);
        };
        const popup = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]('paste JSON/string data', '', '', null, 'paste data here.', '', 'textarea', '', null);
        // $(popup).find('.closeButton');
        popup.addOkButton('Load', finish);
        popup.show(false);
    }
    static download_JSON_String(e, modelstr) {
        const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status[modelstr];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!model, 'invalid modelStr in export-save_str: |' + modelstr + '|, status:', status);
        const savetxt = model.generateModelString();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!savetxt || savetxt === '', 'empty str');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clipboardCopy(savetxt);
        const popup = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]((model.isM() ? 'Model' : 'Metamodel') + ' eCore/JSON', '', '<br>Already copied to clipboard.', [], null, '' + savetxt, 'textarea', null, null);
        popup.show(false);
    }
    static download_JSON_File(e, modelstr) {
        const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status[modelstr];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!model, 'invalid modelStr in export-save_json_file: |' + modelstr + '|, status:', status);
        const savetxt = model.generateModelString();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].download(model.name, savetxt);
    }
    static download_XMI_File(e, modelstr) {
        const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status[modelstr];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!model, 'invalid modelStr in export-save_xmi_file: |' + modelstr + '|, status:', status);
        let savetxt = model.generateModelString();
        const json = JSON.parse(savetxt);
        /*const parser = new FastXmi.j2xParser(new FastXmiOptions());
        const xml: string = parser.parse(json, new FastXmiOptions());
        savetxt = '' + xml; */
        // savetxt = json2xml(savetxt, { header: true } as JS2XML); // , Options.JS2XML);
        // console.log('xmljson: ', parser.parse(json));
        savetxt = '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["prjson2xml"].json2xml(json, ' ');
        savetxt = TopBar.formatXml(savetxt).trim();
        let name;
        let extension;
        if (model.isM()) {
            const classRoot = model.classRoot;
            name = (model.name || (classRoot ? classRoot.metaParent.name : 'M1_unnamed'));
            extension = '.' + (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.childrens[0].name).toLowerCase();
        }
        else {
            name = (model.name || model.getDefaultPackage().name || 'M2_unnamed');
            extension = '.ecore';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].download(name + extension, savetxt);
    }
    static formatXml(xml) {
        const reg = /(>)\s*(<)(\/*)/g; // updated Mar 30, 2015
        const wsexp = / *(.*) +\n/g;
        const contexp = /(<.+>)(.+\n)/g;
        xml = xml.replace(reg, '$1\n$2$3').replace(wsexp, '$1\n').replace(contexp, '$1\n$2');
        const pad =  false || '\t';
        let formatted = '';
        const lines = xml.split('\n');
        let indent = 0;
        let lastType = 'other';
        // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions
        const transitions = {
            'single->single': 0,
            'single->closing': -1,
            'single->opening': 0,
            'single->other': 0,
            'closing->single': 0,
            'closing->closing': -1,
            'closing->opening': 0,
            'closing->other': 0,
            'opening->single': 1,
            'opening->closing': 0,
            'opening->opening': 1,
            'opening->other': 1,
            'other->single': 0,
            'other->closing': -1,
            'other->opening': 0,
            'other->other': 0
        };
        let i = 0;
        for (i = 0; i < lines.length; i++) {
            const ln = lines[i];
            // Luca Viggiani 2017-07-03: handle optional <?xml ... ?> declaration
            if (ln.match(/\s*<\?xml/)) {
                formatted += ln + '\n';
                continue;
            }
            // ---
            const single = Boolean(ln.match(/<.+\/>/)); // is this line a single tag? ex. <br />
            const closing = Boolean(ln.match(/<\/.+>/)); // is this a closing tag? ex. </a>
            const opening = Boolean(ln.match(/<[^!].*>/)); // is this even a tag (that's not <!something>)
            const type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';
            const fromTo = lastType + '->' + type;
            lastType = type;
            let padding = '';
            indent += transitions[fromTo];
            let j;
            for (j = 0; j < indent; j++) {
                padding += pad;
            }
            if (fromTo === 'opening->closing') {
                formatted = formatted.substr(0, formatted.length - 1) + ln + '\n'; // substr removes line break (\n) from prev loop
            }
            else {
                formatted += padding + ln + '\n';
            }
        }
        return formatted;
    }
    updateRecents() {
        let tmp;
        tmp = localStorage.getItem('MM_SaveList');
        if (!tmp || tmp === '' || tmp === 'null' || tmp === 'undefined') {
            tmp = JSON.stringify([]);
        }
        const mmSaveList = JSON.parse(tmp);
        tmp = localStorage.getItem('M_SaveList');
        if (!tmp || tmp === '' || tmp === 'null' || tmp === 'undefined') {
            tmp = JSON.stringify([]);
        }
        const mSaveList = JSON.parse(tmp);
        const $metamodelHtml = this.$html.find('.metamodel');
        const $modelHtml = this.$html.find('.model');
        const recentContainerMM = $metamodelHtml.find('.recentSaveContainer')[0];
        const recentContainerM = $modelHtml.find('.recentSaveContainer')[0];
        console.log(recentContainerM, recentContainerMM);
        const exampleChilds = [recentContainerMM.childNodes[0], recentContainerM.childNodes[0]];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(recentContainerMM);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(recentContainerM);
        let i = -1;
        let j = -1;
        let child;
        const prefixarr = ['MM_', 'M_'];
        const containerArr = [recentContainerMM, recentContainerM];
        const saveList = [mmSaveList, mSaveList];
        // U.pw(true, recentContainerM, recentContainerMM, exampleChilds, saveList);
        while (++j < prefixarr.length) {
            i = -1;
            while (++i < saveList[j].length) {
                child = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml(exampleChilds[j]);
                $(child).find('.recentsave')[0].innerText = saveList[j][i];
                // child.dataset.value = prefixarr[j] + mSaveList[i];
                containerArr[j].appendChild(child);
            }
        }
        $metamodelHtml.find('.recentsave').off('click.load').on('click.load', (e) => {
            this.loadRecent(e.currentTarget.innerText, true);
        });
        $modelHtml.find('.recentsave').off('click.load').on('click.load', (e) => {
            this.loadRecent(e.currentTarget.innerText, false);
        });
    }
    loadRecent(name, isMetaModel) {
        const prefix = isMetaModel ? 'MM' : 'M';
        const tmp = localStorage.getItem(prefix + '_' + name);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!tmp || tmp === '' || tmp === 'null' || tmp === 'undefined', 'uncorrect savename: |' + prefix + '_' + name + '|');
        localStorage.setItem('LastOpened' + prefix, tmp);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].refreshPage();
    }
    addEventListeners() {
        const $t = this.$topbar;
        const $m2 = $t.find('.metamodel');
        const $m1 = $t.find('.model');
        $t.find('.TypeMapping').off('click.btn').on('click.btn', (e) => { TopBar.topbar.showTypeMap(); });
        $m2.find('.save').off('click.btn').on('click.btn', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.save(false, true); });
        $m1.find('.save').off('click.btn').on('click.btn', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.save(false, true); });
        // download
        $m2.find('.download_JSON_String').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_String(e, 'mm'); });
        $m2.find('.download_JSON').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_File(e, 'mm'); });
        $m2.find('.download_XMI').off('click.btn').on('click.btn', (e) => { TopBar.download_XMI_File(e, 'mm'); });
        $m1.find('.download_JSON_String').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_String(e, 'm'); });
        $m1.find('.download_JSON').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_File(e, 'm'); });
        $m1.find('.download_XMI').off('click.btn').on('click.btn', (e) => { TopBar.download_XMI_File(e, 'm'); });
        //// load
        $m2.find('.loadEmpty').off('click.btn').on('click.btn', (e) => { TopBar.load_empty(e, 'mm'); });
        $m2.find('.loadFile').off('click.btn').on('click.btn', (e) => { TopBar.load_XMI_File(e, 'mm'); });
        $m2.find('.loadTxt').off('click.btn').on('click.btn', (e) => { TopBar.load_JSON_Text(e, 'mm'); });
        $m1.find('.loadEmpty').off('click.btn').on('click.btn', (e) => { TopBar.load_empty(e, 'm'); });
        $m1.find('.loadFile').off('click.btn').on('click.btn', (e) => { TopBar.load_XMI_File(e, 'm'); });
        $m1.find('.loadTxt').off('click.btn').on('click.btn', (e) => { TopBar.load_JSON_Text(e, 'm'); });
    }
    showTypeMap() {
        const $shell = this.$html.find('#TypeMapper');
        const $html = $shell.find('.TypeList');
        const html = $html[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(html);
        const table = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toHtml('<table class="typeTable"><tbody></tbody></table>');
        const tbody = table.firstChild;
        for (const m3TypeName in _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"]) {
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"][m3TypeName]) {
                continue;
            }
            const type = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EType"].get(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"][m3TypeName]);
            const row = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toHtmlRow('' +
                '<tr class="typeRow">' +
                '<td class="typeName" data-m3name="' + type.short + '">' + type.short + '</td>' +
                '<td class="alias">is aliased to</td>' +
                '<td>' +
                '<input class="AliasName form-control" placeholder="Not aliased" value="' + type.name + '"' +
                ' aria-label="Small" aria-describedby="inputGroup-sizing-sm">' +
                '</td>' +
                '</tr>');
            tbody.appendChild(row);
            console.log('row:', row, ', tbody:', tbody);
        }
        html.appendChild(table);
        $html.find('input.AliasName').off('change').on('change', (e) => { TopBar.topbar.aliasChange(e); });
        $shell.show();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].closeButtonSetup($shell);
    }
    aliasChange(e) {
        const input = e.target;
        let row = input;
        while (!row.classList.contains('typeRow')) {
            row = row.parentNode;
        }
        const m3Type = $(row).find('.typeName')[0].dataset.m3name;
        const type = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EType"].get(m3Type);
        type.changeAlias(input.value);
    }
}
TopBar.topbar = null;


/***/ }),

/***/ "./src/mClass/EEnum.ts":
/*!*****************************!*\
  !*** ./src/mClass/EEnum.ts ***!
  \*****************************/
/*! exports provided: EEnum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEnum", function() { return EEnum; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class EEnum extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"] {
    constructor(parent, json) {
        super(parent, null);
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.enums, this);
        }
        this.parse(json);
    }
    fullname() { return this.parent.name + '.' + this.name; }
    refreshGUI_Alone(debug = false) { this.getVertex().refreshGUI(); }
    addLiteral() {
        const attr = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"](this, null);
        if (attr.ordinal === Number.NEGATIVE_INFINITY)
            this.autofixEnumValues();
        this.refreshGUI();
        return attr;
    }
    parse(json, destructive) {
        /*
      <eClassifiers xsi:type="ecore:EEnum" name="EnumNamecustom" instanceTypeName="instanceTypeName"
          serializable="false">
        <eLiterals name="child2name" value="3" literal="child2literal"/>
        <eLiterals name="NameStr" literal="LiteralStr"/>
      </eClassifiers>*/
        // literal, name sono entrambi unici, ma è possibile che literal1.name === literal2.literal; .name è obbligatorio, .literal può essere null/empty
        this.childrens = [];
        this.instanceTypeName = '';
        let i;
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].namee, 'Enum_1'), false);
        for (let key in json) {
            const value = json[key];
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Enum.parse() unexpected key:', key, 'in json:', json);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].xsitype:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].namee: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].eLiterals: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].serializable:
                    this.serializable = value === 'true';
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].instanceTypeName:
                    this.instanceTypeName = value + '';
                    break;
            }
        }
        const literals = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        for (i = 0; i < literals.length; i++) {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"](this, literals[i]);
        }
        if (!this.childrens.length)
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"](this, null);
        this.autofixEnumValues();
    }
    duplicate(nameAppend, newParent) {
        return undefined;
    }
    fieldChanged(e) {
        const html = e.currentTarget;
        if (html.classList.contains('AddFieldSelect'))
            return;
        switch (html.tagName.toLowerCase()) {
            case 'select':
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                break;
            case 'textarea':
            case 'input':
                const input = html;
                input.value = this.setName(input.value);
                break;
        }
    }
    generateModel() {
        const arr = [];
        const model = {};
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].xsitype] = 'ecore:EEnum';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].namee] = this.name;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].serializable] = this.serializable ? "true" : "false";
        if (this.instanceTypeName)
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].instanceTypeName] = this.instanceTypeName;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].eLiterals] = arr;
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            arr.push(this.childrens[i].generateModel());
        }
        return model;
    }
    /*must remain private*/ autofixEnumValues() {
        // valori duplicati sono ammessi se esplicitamente inseriti, ma se il campo è vuoto io cerco di generarli
        let i;
        let valuesfound = {};
        let firsthole = 0;
        for (i = 0; i < this.childrens.length; i++) {
            const lit = this.childrens[i];
            if (lit.ordinal !== Number.NEGATIVE_INFINITY) {
                valuesfound[lit.ordinal] = true;
                if (lit.ordinal === firsthole) {
                    while (valuesfound[++firsthole]) {
                        ;
                    }
                } // update first hole.
                continue;
            }
            lit.ordinal = firsthole;
            if (!lit.name)
                lit.name = this.name + '_' + lit.ordinal;
        }
    }
    isChildLiteralTaken(s) {
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            if (s === this.childrens[i].literal) {
                return true;
            }
        }
        return false;
    }
    delete(refreshgui = true) {
        const oldparent = this.parent;
        super.delete(false);
        if (oldparent)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.enums, this);
        // todo: che fare con gli attributes che hanno questo enum come tipo? per ora cambio in stringa.
        let i = 0;
        for (i = 0; i < _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all.length; i++) {
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].enumType !== this)
                continue;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].changeType(null, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EType"].get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString), null, null);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
        this.getVertex().remove();
        if (refreshgui)
            this.refreshGUI();
    }
    getDefaultValueStr() { return this.childrens[0].name; }
    getAllowedValuesStr() {
        const arr = [];
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            arr.push(this.childrens[i].name);
        }
        return arr;
    }
    getAllowedValuesInt() {
        const arr = [];
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            arr.push(this.childrens[i].ordinal);
        }
        return arr;
    }
}


/***/ }),

/***/ "./src/mClass/IClassifier.ts":
/*!***********************************!*\
  !*** ./src/mClass/IClassifier.ts ***!
  \***********************************/
/*! exports provided: IClassifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IClassifier", function() { return IClassifier; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class IClassifier extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor() {
        super(...arguments);
        this.vertex = null;
    }
    static defaultSidebarHtml() {
        return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml('<div class="sidebarNode class"><p class="sidebarNodeName">$##name$</p></div>');
    }
    generateVertex() {
        if (this.vertex)
            return;
        const lastView = this.getLastViewWith('vertexSize');
        const size = lastView ? lastView.vertexSize : null;
        const v = this.vertex = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"](this, size);
        return v;
    }
    getSidebarHtml() {
        if (this.sidebarHtml) {
            return this.sidebarHtml;
        }
        return IClassifier.defaultSidebarHtml();
    }
    setName(value, refreshGUI = false) {
        super.setName(value, refreshGUI);
        if (refreshGUI)
            this.refreshInstancesGUI();
        // for (i = 0; model && i < model.instances.length; i++) { model.instances[i].sidebar.fullnameChanged(oldName, this.name); }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, true, true);
        return this.name;
    }
    getVertex() {
        const displayAsEdge = this.shouldBeDisplayedAsEdge();
        // U.pw(displayAsEdge, 'getvertex called on a class that should not have a vertex.', this);
        if (!displayAsEdge && this.vertex === null && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            this.generateVertex();
        }
        return this.vertex;
    }
    refreshGUI_Alone(debug) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            return;
        }
        this.getVertex().refreshGUI();
    }
    getEcoreTypeName() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].classTypePrefix + this.name;
        return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].classTypePrefix + this.parent.name;
    }
}


/***/ }),

/***/ "./src/mClass/MClass.ts":
/*!******************************!*\
  !*** ./src/mClass/MClass.ts ***!
  \******************************/
/*! exports provided: MClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MClass", function() { return MClass; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class MClass extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] {
    // external pointers to this class.
    // id: number;
    // instances: ModelPiece[];
    // metaParent: M2Class;
    // parent: MPackage;
    // childrens: ModelPiece[];
    /*attributes: MAttribute[];
    references: MReference[];
    referencesIN: MReference[];
  */
    static getArrayIndex_ByMetaParentName(name, array) {
        let i = -1;
        while (++i < array.length) {
            if (name === array[i].metaParent.name) {
                return i;
            }
        }
        return -1;
    }
    constructor(pkg, json, metaVersion) {
        super(pkg, metaVersion);
        if (!pkg && !json && !metaVersion) {
            return;
        } // empty constructor for .duplicate();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!metaVersion, 'null metaparent?');
        this.parse(json, true);
    }
    endingName(valueMaxLength = 10) {
        if (this.attributes.length > 0) {
            return this.attributes[0].endingName(valueMaxLength);
        }
        if (this.references.length > 0) {
            return this.references[0].endingName(valueMaxLength);
        }
        return '';
    }
    getModelRoot() { return super.getModelRoot(); }
    isRoot() { return this === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.classRoot; }
    setRoot(value) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!value, 'should only be used to set root. to delete a root choose another one and call setRoot on it.');
        this.getModelRoot().classRoot = this;
    }
    conformability(meta, outObj) {
        throw new Error('M.conformability%() todo');
    }
    duplicate(nameAppend = null, newParent = null) {
        const c = new MClass(null, null, null);
        c.copy(this);
        c.refreshGUI_Alone();
        return c;
    }
    // linkToMetaParent(meta: M2Class): void { return super.linkToMetaParent(meta); }
    generateModel(root = false) {
        /*
           { "-name": "tizio", "attrib2": value2, ...}
        OR:
           {
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },
              { "-name": "asd" }
            ]
          }
        */
        const inlineMarker = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker;
        const json = {};
        if (root) {
            json[inlineMarker + 'xmlns:xmi'] = 'http://www.omg.org/XMI';
            json[inlineMarker + 'xmlns:' + this.getModelRoot().namespace()] = this.getModelRoot().uri();
            json[inlineMarker + 'xmi:version'] = '2.0';
        }
        let outi;
        let i;
        const set = (k, v) => { json[k] = v; };
        const arr = [this.attributes, this.references];
        for (outi = 0; outi < arr.length; outi++) {
            for (i = 0; i < arr[outi].length; i++) {
                const child = arr[outi][i];
                const value = (child).generateModel();
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(value instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"], 'value returned is modelpiece.', child);
                // some error here, il value = ELIteral viene assegnato alla key .nome
                if (value === '' || value === null || value === undefined || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isEmptyObject(value)) {
                    continue;
                }
                const key = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isPrimitive(value) ? inlineMarker : '') + child.metaParent.name;
                json[key] = value;
            }
        }
        return json;
    }
    parse(json, destructive = true) {
        const attributes = (this.metaParent).attributes;
        const references = (this.metaParent).references;
        // const childrens: M2Feature[] = (this.metaParent).childrens;
        let i = -1;
        if (destructive) {
            this.attributes = [];
            this.references = [];
            this.childrens = [];
            this.referencesIN = [];
            while (++i < attributes.length) {
                const attr = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"](this, null, attributes[i]);
                /*U.ArrayAdd(this.childrens, attr);*/
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.attributes, attr);
                console.trace();
                console.log('add[' + i + '/' + this.metaParent.attributes.length + ']:', attr, this.attributes, this.attributes.length, this);
            }
            i = -1;
            while (++i < references.length) {
                const ref = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"](this, null, references[i]);
                /*U.ArrayAdd(this.childrens, ref);*/
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.references, ref);
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.attributes.length > 4, this, this.attributes.length);
        /*{                                                           <--- classRoot
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },          <-- class[0]
              { "-name": "asd" }             <-- class[1]
            ]
          }*/
        const inlineMarker = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker;
        for (let key in json) {
            if (!json.hasOwnProperty(key)) {
                continue;
            }
            const value = json[key];
            switch (key) {
                case inlineMarker + 'xmlns:xmi':
                // case inlineMarker + 'xmlns:' + this.getModelRoot().namespace():
                case inlineMarker + 'xmi:version':
                    this.setRoot(true);
                    break;
                default:
                    // todo: usa il ns del modello per caricare il metamodello con quel namespace se quello attuale non è conforme?
                    if (key.indexOf(inlineMarker) === 0) {
                        key = key.substr(inlineMarker.length);
                    }
                    if (key.indexOf('xmlns:') === 0) {
                        key = key.substr('xmlns:'.length);
                        this.getModelRoot().namespace(key);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(false, 'setns?', key, this, this.metaParent);
                        continue;
                    }
                    const metaAttr = this.metaParent.getAttribute(key);
                    const metaRef = this.metaParent.getReference(key);
                    if (metaAttr) {
                        const cindex = this.getChildrenIndex_ByMetaParent(metaAttr);
                        const aindex = this.getAttributeIndex_ByMetaParent(metaAttr);
                        /*const newA: MAttribute = new MAttribute(this, value, metaAttr);
                        this.childrens[cindex] = this.attributes[aindex] = newA;*/
                        this.attributes[aindex].parse(value, true);
                    }
                    else if (metaRef) {
                        const cindex = this.getChildrenIndex_ByMetaParent(metaRef);
                        const rindex = this.getReferenceIndex_ByMetaParent(metaRef);
                        // const newR: MReference = new MReference(this, value, metaRef);
                        // this.childrens[cindex] = this.references[rindex] = newR;
                        let j;
                        let edges = this.references[rindex].getEdges();
                        for (j = 0; j < edges.length; j++) { }
                        this.references[rindex].parse(value, true);
                    }
                    else {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'model attribute-or-reference type not found. class:', this, ', json:', json, 'key/name:', key, ', Iclass:', this.metaParent);
                    }
                    break;
            }
        }
        console.log('here2', this, this.attributes.length);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.attributes.length > 4, this, this.attributes.length);
    }
    modify_Old(json, destructive = true) {
        /*{                                                                                           <-- :classroot
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },          <-- class[0]
              { "-name": "asd" }             <-- class[1]
            ]
          }*/
        if (destructive) {
            this.childrens = [];
            this.references = [];
            this.attributes = [];
            this.referencesIN = [];
        }
        const inlineMarker = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker;
        for (let key in json) {
            if (!json.hasOwnProperty(key)) {
                continue;
            }
            const value = json[key];
            switch (key) {
                case inlineMarker + 'xmlns:xmi':
                // case inlineMarker + 'xmlns:' + this.getModelRoot().namespace():
                case inlineMarker + 'xmi:version':
                    this.setRoot(true);
                    break;
                default:
                    // todo: usa il ns del modello per caricare il metamodello con quel namespace se quello attuale non è conforme?
                    if (key.indexOf(inlineMarker) === 0) {
                        key = key.substr(inlineMarker.length);
                    }
                    if (key.indexOf('xmlns:') === 0) {
                        key = key.substr('xmlns:'.length);
                        this.getModelRoot().namespace(key);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(false, 'setns?', key, this, this.metaParent);
                        continue;
                    }
                    const metaAttr = this.metaParent.getAttribute(key);
                    const metaRef = this.metaParent.getReference(key);
                    let newA;
                    let newR;
                    if (metaAttr) {
                        newA = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"](this, value, metaAttr);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newA);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.attributes, newA);
                    }
                    else if (metaRef) {
                        newR = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"](this, value, metaRef);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newR);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.references, newR);
                    }
                    else {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'model attribute-or-reference type not found. class:', this, ', json:', json, 'key/name:', key, ', Iclass:', this.metaParent);
                    }
                    break;
            }
        }
    }
    getChildrenIndex_ByMetaParent(meta) { return MClass.getArrayIndex_ByMetaParentName(meta.name, this.childrens); }
    getAttributeIndex_ByMetaParent(meta) { return MClass.getArrayIndex_ByMetaParentName(meta.name, this.attributes); }
    getReferenceIndex_ByMetaParent(meta) { return MClass.getArrayIndex_ByMetaParentName(meta.name, this.references); }
}


/***/ }),

/***/ "./src/mClass/classChild/ELiteral.ts":
/*!*******************************************!*\
  !*** ./src/mClass/classChild/ELiteral.ts ***!
  \*******************************************/
/*! exports provided: ELiteral */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ELiteral", function() { return ELiteral; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class ELiteral extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    constructor(parent, json) {
        super(parent, null);
        this.parse(json);
    }
    duplicate(nameAppend, newParent) {
        return undefined; //todo
    }
    generateModel() {
        const model = {};
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].value] = this.ordinal;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].literal] = this.literal;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].namee] = this.name;
        return model;
    }
    getClass() { return this.parent; }
    setLiteral(value, refreshGUI = false, warnDuplicateFix = true) {
        if (value === '' || !value) {
            this.literal = '';
            return;
        }
        return this.setName0(value, refreshGUI, warnDuplicateFix, 'literal', true);
    }
    parse(json, destructive = true) {
        this.ordinal = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].value, Number.NEGATIVE_INFINITY);
        this.setLiteral(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].literal, ''), false);
        let name = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].namee, this.ordinal === Number.NEGATIVE_INFINITY ? null : this.parent.name + '_' + this.ordinal);
        if (name)
            this.setName(name, false);
        else
            this.name = null;
    }
    delete(refreshgui = true) {
        super.delete(false);
        // todo: che fare con gli attributes che hanno questo literal come valore?
        let i;
        for (i = 0; i < _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all.length; i++) {
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].enumType !== this.parent)
                continue;
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"])
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].owner.valuesAutofix();
        }
        if (refreshgui)
            this.refreshGUI();
    }
    fieldChanged(e) {
        const html = e.currentTarget;
        switch (html.tagName.toLowerCase()) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                break;
            case 'textarea':
            case 'input':
                const input = html;
                if (input.classList.contains('name')) {
                    this.setName(input.value);
                }
                else if (input.classList.contains('literal')) {
                    this.setLiteral(input.value);
                }
                else if (input.classList.contains('value')) {
                    this.ordinal = isNaN(+input.value) ? this.ordinal : +input.value;
                }
                else
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'ELiteral input fields must contain one of the following classes: name, literal, value');
                break;
            case 'select':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Unexpected non-disabled select field in a Vertex.ELiteral.');
                break;
        }
        super.fieldChanged(e, true);
    }
    generateModelM1() { return this.name; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/Attributes/MAttribute.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/Attributes/MAttribute.ts ***!
  \*****************************************************************/
/*! exports provided: MAttribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAttribute", function() { return MAttribute; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class MAttribute extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"] {
    static typeChange(arr, newType) {
        let i = -1;
        while (++i < arr.length) {
            if (Array.isArray(arr[i])) {
                MAttribute.typeChange(arr[i], newType);
                continue;
            }
            let newVal;
            switch (newType.short) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected type: ' + newType.short);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate:
                    newVal = null;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble:
                    newVal = parseFloat('' + arr[i]);
                    if (newVal === null || newVal === undefined) {
                        newVal = newType.defaultValue;
                    }
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean:
                    newVal = !!arr[i];
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar:
                    newVal = (arr[i] + '')[0];
                    if (newVal === undefined || newVal === null) {
                        newVal = newType.defaultValue;
                    }
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString:
                    newVal = (arr[i] === null || arr[i] === undefined ? null : '' + arr[i]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong:
                    let tentativo = parseInt('' + arr[i], 10);
                    tentativo = !isNaN(+tentativo) ? (+tentativo) : newType.defaultValue;
                    tentativo = Math.min(newType.maxValue, Math.max(newType.minValue, tentativo));
                    newVal = tentativo;
                    break;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(newVal === null || newVal === undefined, 'failed to fix value:', arr, newType);
            arr[i] = newVal;
        }
    }
    constructor(parent, json, meta) {
        super(parent, meta);
        this.parse(json, true);
    }
    test() {
        // var topp={x:'$##@WallTopX.values.0$',y:0};var bot={x:'$##@WallBotX.values.0$',y:'$##@WallHeight.values.0$'};if(bot.y<=topp.y){return}e.B9=90+DEGREE(Math.atan((topp.x-bot.x)/(topp.y-bot.y)));
    }
    getModelRoot() { return super.getModelRoot(); }
    parse(json, destructive) {
        // if (!json) { json = }
        this.setValues(json);
        if (!this.validate()) {
            this.setValues(null);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'marked attribute (' + this.metaParent.name + ') with type ', this.getType(), 'values:', this.values, 'this:', this);
            this.mark(true, 'errorValue');
        }
        else {
            this.mark(false, 'errorValue');
        }
        this.refreshGUI();
        /*
            this.views = [];
            let i: number;
            for(i = 0; i < this.parent.views.length; i++) {
              const pv: ClassView = this.parent.views[i];
              const v = new AttributeView(pv);
              this.views.push(v);
              pv.attributeViews.push(v); }*/
    }
    endingName(valueMaxLength = 10) {
        if (this.values && this.values.length > 0) {
            return (this.values[0] + '').substr(0, valueMaxLength);
        }
        return '';
    }
    getType() { return (this.metaParent ? this.metaParent.getType() : null); }
    getInfo(toLower = false) {
        const info = super.getInfo();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'values', this.values);
        return info;
    }
    /*
      conformability(meta: IAttribute, debug: boolean = true): number {
        let conformability = 0;
        // todo: questo check è totalmente sbagliato, this.getType non può riuscire senza un metaParent assegnato
        conformability += 0.5 * StringSimilarity.compareTwoStrings(this.getType().short, meta.getType().primitiveType.short);
        conformability += 0.5 * StringSimilarity.compareTwoStrings(this.name, meta.name);
        U.pif(debug, 'ATTRIBUTE.comform(', this.name, {0: this}, ', ', meta.name, {0: meta}, ') = ', conformability);
        return conformability; }*/
    duplicate(nameAppend = null, newParent = null) {
        const ret = new MAttribute(newParent, null, this.metaParent);
        ret.copy(this, nameAppend, newParent);
        return ret;
    }
    copy(other, nameAppend = '_Copy', newParent = null) {
        super.copy(other, nameAppend, newParent);
        this.setValueStr(other.getValueStr());
    }
    generateModel() {
        if (this.values.length === 0) {
            return null;
        }
        let values = this.values;
        if (this.values[0] instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            values = [];
            let i;
            for (i = 0; i < this.values.length; i++) {
                const v = this.values[i];
                if (v instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
                    values.push(v.generateModelM1());
                }
            }
        }
        if (values.length === 1) {
            return values[0];
        }
        return values;
    }
    validate() {
        let i;
        const primitive = this.getType().primitiveType;
        const enumtype = this.getType().enumType;
        if (enumtype) {
            const admittedValues = enumtype.getAllowedValuesStr();
            for (i = 0; i < this.values.length; i++) {
                if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(admittedValues, this.values[i])) {
                    return false;
                }
            }
            return true;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!primitive, 'found type in Mattribute that is neither primitive nor enumerative', this);
        // console.log('U.isIntegerArray(values:', this.values, ', minvalue:', primitive.minValue, ' maxval:', primitive.maxValue);
        switch (primitive.long) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected mattrib type:', this.getType());
                return false;
            // case AttribETypes.void: ...
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDate:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'eDAte: todo');
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EBoolean: return true;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EChar: return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isString(this.values) || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isCharArray(this.values);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString: return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isStringArray(this.values);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EFloat:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDouble:
                for (i = 0; i < this.values.length; i++) {
                    this.values[i] = +this.values[i];
                }
                return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumberArray(this.values, primitive.minValue, primitive.maxValue);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EByte:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EShort:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EInt:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].ELong:
                for (i = 0; i < this.values.length; i++) {
                    this.values[i] = +this.values[i];
                }
                return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isIntegerArray(this.values, primitive.minValue, primitive.maxValue);
        }
    }
    fieldChanged(e) {
        const html = e.currentTarget;
        switch (html.tagName.toLowerCase()) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                break;
            case 'textarea':
            case 'input':
                this.setValueStr(html.value);
                html.value = this.getValueStr();
                break;
            case 'select':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Unexpected non-disabled select field in a Vertex.MAttribute.');
                break;
        }
        super.fieldChanged(e, true);
    }
    setValueStr(valStr) {
        if (this.metaParent.upperbound === 1) {
            // this.setValues(JSON.parse( '"' + U.replaceAll(valStr, '"', '\\"') + '"'));
            this.setValues([valStr]);
            return;
        }
        try {
            this.setValues(JSON.parse(valStr));
        }
        catch (e) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'This attribute have upperbound > 1 and the input is not a valid JSON string: ' + valStr);
            return;
        }
        finally { }
    }
    // setValues: applicabile alle M1-Feature, se index < 1  index = upperbound - index, se index = null values deve essere array.
    setValues(values = null, index = null, autofix = true, debug = false) {
        if (index < 0)
            index = (this.getUpperbound() - index) % this.getUpperbound();
        if (index !== null && index !== undefined) {
            this.values[index] = values;
        }
        const values0 = values;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isEmptyObject(values, true, true)
            || (Array.isArray(values) && (values.length === 0 || (values.length === 1 && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isEmptyObject(values[0]))))) {
            values = this.getType().defaultValue();
        } // redundancy, i'm double fixing it. should check if autofix fixes nulls.
        if (!Array.isArray(values)) {
            values = [values];
        }
        // U.pe(values0 === null && values.length === 1 && values[0] === [0], 'wtf?', values0, values, this);
        if (debug)
            console.trace();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.metaParent.fullname() + '.setvalue: |', values0, '| --> ', values, 'defaultv:', this.getType().defaultValue(), 'type:', this.getType());
        this.values = values;
        if (this.getUpperbound() >= 0) {
            this.values.length = this.getUpperbound();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe('' + values === '' + undefined || '' + values === '' + null, 'undef:', values, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'end value:', values);
        if (autofix) {
            this.valuesAutofix(debug);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'end value post autofix:', this.values);
    }
    valuesAutofix(debug = false) {
        const type = this.getType();
        const conversionType = type.enumType || type.primitiveType;
        let i;
        if (type.enumType) {
            // conversionType = null; // EType.get(ShortAttribETypes.EString);
            const defaultValue = type.enumType.getDefaultValueStr();
            if (!defaultValue) {
                this.values = [];
                if (this.getUpperbound() >= 0) {
                    this.values.length = this.getUpperbound();
                }
                return;
            }
            const admittedValues = type.enumType.getAllowedValuesStr();
            let j;
            for (j = 0; j < this.values.length; j++) {
                this.values[j] += '';
                if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(admittedValues, this.values[j])) {
                    continue;
                }
                this.values[j] = admittedValues[0];
            }
        }
        if (type.primitiveType) {
            MAttribute.typeChange(this.values, type.primitiveType);
        }
    }
    getValueStr(debug = false) {
        let ret;
        ret = this.values;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'getvaluestr: stage1', ret);
        if (ret === undefined)
            ret = null;
        let retStr = null;
        if (ret !== null) {
            if (!(Array.isArray(ret))) {
                ret = [ret];
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'stage 1.1:', ret, retStr);
            if (this.metaParent.upperbound === 1) {
                ret = ret.length ? ret[0] : null;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'stage 1.2:', ret, retStr);
            retStr = Array.isArray(ret) ? JSON.stringify(ret) : (ret === null || ret === undefined ? null : '' + ret);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'stage2', ret, retStr);
        if (retStr === null) {
            this.setValues(null);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.values.length || this.values[0] === null, 'failed to set default val.', this.getType().defaultValue(), this.values);
            retStr = (this.values.length ? '' + this.values[0] : null);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'this.values:', this.values, ', val[0]:', this.values[0], 'retStr:', retStr);
        this.valuesStr = retStr;
        return retStr;
    }
    replaceVarsSetup(debug = false) {
        super.replaceVarsSetup();
        const old = this.valuesStr;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.values);
        const val = this.getValueStr();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'val:', val, ', this.values:', this.values, ', this:', this);
        this.valuesStr = val ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(val, '\n', '', debug) : '';
        if (this.valuesStr && this.valuesStr[0] === '[') {
            this.valuesStr = this.valuesStr.substr(1, this.valuesStr.length - 2);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'valuesSTR: |' + old + '| --> |' + this.valuesStr + '|');
    }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/Attributes/iAttribute.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/Attributes/iAttribute.ts ***!
  \*****************************************************************/
/*! exports provided: IAttribute, M3Attribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IAttribute", function() { return IAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Attribute", function() { return M3Attribute; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class IAttribute extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"] {
    constructor(parent, metaParent) {
        super(parent, metaParent);
        if (parent)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(parent.attributes, this);
    }
    /*static GetDefaultStyle(modelRoot: IModel, type: EType = null): HTMLElement | SVGElement {
      return ModelPiece.GetDefaultStyle(modelRoot, 'Attribute', type); }
  
    static SetDefaultStyle(type: ShortAttribETypes, modelRoot: IModel, newTemplate: HTMLElement): void {
      const selector = '.' + (modelRoot.isM() ? 'M' : 'MM') + 'DefaultStyles>.Attribute.Template.' + type;
      let $oldTemplate: JQuery<HTMLElement> = $(selector + '.Customized');
      if ($oldTemplate.length === 0) { $oldTemplate = $(selector); }
      U.pe($oldTemplate.length !== 1, 'template not found? (' + $oldTemplate.length + '); selector: "' + selector + '"');
      const old = $oldTemplate[0];
      newTemplate.classList.add('template');
      newTemplate.classList.add('Customized');
      old.parentNode.appendChild(newTemplate);
      if (old.classList.contains('Customized')) { old.parentNode.removeChild(old); }
      return; }
  
    setDefaultStyle(value: string): void {
      U.pw(true, 'Attribute.setDefaultStyle(): todo.');
    }
  */
    /*
      getStyle(): HTMLElement | SVGElement {
        const htmlRaw: HTMLElement | SVGElement = super.getStyle();
        const $html = $(htmlRaw);
        const $selector = $html.find('select.TypeSelector') as JQuery<HTMLSelectElement>;
        let i: number;
        for (i = 0; i < $selector.length; i++) { PropertyBarr.makePrimitiveTypeSelector($selector[0], this.getType()); }
        // EType.updateTypeSelector($selector[0] as HTMLSelectElement, this.getType());
        return htmlRaw; }*/
    copy(other, nameAppend = '_Copy', newParent = null) {
        super.copy(other, nameAppend, newParent);
        if (newParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(newParent.attributes, this);
        }
        this.refreshGUI();
    }
}
class M3Attribute extends IAttribute {
    constructor(parent, meta) {
        super(parent, meta);
        this.parse(null, true);
    }
    duplicate(nameAppend = '_', newParent = null) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Attr.duplicate()'); return this; }
    generateModel() {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'm3Attr.generateModel()');
        return {};
    }
    // getType(): Type { U.pe(true, 'm3Attr.getType()'); return null; }
    parse(json, destructive = true) {
        this.name = 'Attribute';
    }
    conformability(metaparent, outObj, debug) { return 1; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/Attributes/mmAttribute.ts":
/*!******************************************************************!*\
  !*** ./src/mClass/classChild/Features/Attributes/mmAttribute.ts ***!
  \******************************************************************/
/*! exports provided: M2Attribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Attribute", function() { return M2Attribute; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class M2Attribute extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"] {
    constructor(classe, json) {
        super(classe, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getAttribute());
        if (!classe && !json) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true);
    }
    getModelRoot() { return super.getModelRoot(); }
    parse(json, destructive) {
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].namee, 'Attribute_1'));
        this.type.changeType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].eType, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString));
        /*
        this.views = [];
        let i: number;
        for(i = 0; i < this.parent.views.length; i++) {
          const pv: ClassView = this.parent.views[i];
          const v = new AttributeView(pv);
          this.views.push(v);
          pv.attributeViews.push(v); }*/
    }
    generateModel() {
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].xsitype, 'ecore:EAttribute');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].eType, this.type.toEcoreString());
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].namee, this.name);
        return model;
    }
    duplicate(nameAppend = '_Copy', newParent = null) {
        const a = new M2Attribute(null, null);
        a.copy(this, nameAppend, newParent);
        return a;
    }
    replaceVarsSetup() { super.replaceVarsSetup(); }
    conformability(metaparent, outObj, debug) { return 1; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/References/M2Reference.ts":
/*!******************************************************************!*\
  !*** ./src/mClass/classChild/Features/References/M2Reference.ts ***!
  \******************************************************************/
/*! exports provided: M2Reference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Reference", function() { return M2Reference; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class M2Reference extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] {
    constructor(classe, json) {
        super(classe, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getReference());
        this.containment =  false && false;
        if (!classe && !json) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true);
    }
    getModelRoot() { return super.getModelRoot(); }
    parse(json, destructive) {
        /// own attributes.
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].namee, 'Ref_1'));
        this.type.changeType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].eType, this.parent.getEcoreTypeName()));
        //const eType = Json.read<string>(json, ECoreReference.eType, '#//' + this.parent.name );
        // this.type = AttribETypes.reference;
        // this.parsePrintableTypeName(eType);
        // this.linkClass();
        this.containment = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].containment, false);
        this.setLowerbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].lowerbound, 0));
        this.setUpperbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].upperbound, 1));
        let i; /*
        this.views = [];
        for(i = 0; i < this.parent.views.length; i++) {
          const pv: ClassView = this.parent.views[i];
          const v = new ReferenceView(pv);
          this.views.push(v);
          pv.referenceViews.push(v); }*/
    }
    generateModel() {
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].xsitype] = 'ecore:EReference';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].eType] = this.type.toEcoreString();
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].namee] = this.name;
        if (this.lowerbound != null && !isNaN(+this.lowerbound)) {
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].lowerbound] = +this.lowerbound;
        }
        if (this.upperbound != null && !isNaN(+this.lowerbound)) {
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].upperbound] = +this.upperbound;
        }
        if (this.containment != null) {
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].containment] = this.containment;
        }
        return model;
    }
    generateEdges() {
        if (!this.edges)
            this.edges = [null]; // size must be 1
        const e = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"](this, 0, this.parent.getVertex(), this.type.classType.getVertex());
        return [e];
    }
    useless() { }
    /*
      fieldChanged(e: JQuery.ChangeEvent) {
        const html: HTMLElement = e.currentTarget;
        switch (html.tagName.toLowerCase()) {
          default: U.pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e); break;
          case 'textarea':
          case 'input': this.setName((html as HTMLInputElement).value); break;
          case 'select':
            const select: HTMLSelectElement = html as HTMLSelectElement;
            const m: M2Class = ModelPiece.getByID(+select.value) as any;
            this.linkClass(m); break;
        }
      }*/
    setContainment(b) { this.containment = b; }
    setUpperbound(n) {
        super.setUpperbound(n);
        let i = -1;
        while (++i < this.instances.length) {
            const mref = this.instances[i];
            if (n !== -1) {
                mref.mtarget.length = mref.edges.length = n;
            }
            mref.delete(true, n, Number.POSITIVE_INFINITY);
        }
    }
    delete(refreshgui = true, linkStart = null, linkEnd = null) {
        super.delete(false, linkStart, linkEnd);
        // total deletion
        if (linkStart === null && linkEnd === null) {
            if (this.type.classType)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.type.classType.referencesIN, this);
        }
        if (refreshgui)
            this.refreshGUI();
    }
    /*
      getStyle(debug: boolean = true): HTMLElement | SVGElement {
        const raw: HTMLElement | SVGElement = super.getStyle(debug);
        const $raw = $(raw);
        const $selector = $raw.find('select.ClassSelector');
        M2Class.updateMMClassSelector($selector[0] as HTMLSelectElement, this.classType);
        return raw; }*/
    duplicate(nameAppend = '_Copy', newParent = null) {
        const r = new M2Reference(null, null);
        return r.copy(this, nameAppend, newParent);
    }
    copy(r, nameAppend = '_Copy', newParent = null) {
        super.copy(r, nameAppend, newParent);
        this.setLowerbound(r.lowerbound);
        this.setUpperbound(r.upperbound);
        this.containment = r.containment;
        this.type.changeType(r.type.toEcoreString());
        this.refreshGUI();
        return this;
    }
    // linkClass(classe: M2Class = null): void { return this.type.changeType(null, null, classe); }
    // conformability(meta: M3Reference, debug: boolean = true): number { U.pw(true, 'it\'s ok but should not be called'); return 1; }
    getInfo(toLower = true) {
        const info = super.getInfo();
        // set('typeOriginal', this.type);
        // info['' + 'tsClass'] = (this.getModelRoot().getPrefix()) + 'Reference';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'type', 'target');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'typeDetail', 'targetDetail');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'containment', this.containment);
        const targetinfo = this.type.classType ? this.type.classType.getInfo(toLower) : {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'target', targetinfo);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].merge(info, targetinfo);
        return info;
    }
    canBeLinkedTo(hoveringTarget) {
        return (hoveringTarget instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"]);
        //  return (this.type.classType === hoveringTarget || this.type.classType.isExtending(hoveringTarget));
    } // && !(hoveringTarget instanceof EEnum); }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/References/MReference.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/References/MReference.ts ***!
  \*****************************************************************/
/*! exports provided: MReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MReference", function() { return MReference; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class MReference extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] {
    /*childrens: ModelPiece[];
    instances: ModelPiece[];
    metaParent: IReference;
    // parent: MClass;
    */
    // mtarget: MClass[];
    // targetStr: string;
    // constructor() {}
    constructor(classe, json, metaParent) {
        super(classe, metaParent);
        if (!classe && !json && !metaParent) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true);
    }
    /*
      getStyle(): HTMLElement | SVGElement {
        const htmlRaw: HTMLElement | SVGElement = super.getStyle();
        const $html = $(htmlRaw);
        const $selector = $html.find('select.ClassSelector');
        M2Class.updateMMClassSelector($selector[0] as HTMLSelectElement, this.getm2Target());
        return htmlRaw; }*/
    getm2Target() { return this.metaParent.type.classType; }
    getfirstEmptyTarget() {
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            if (!this.mtarget[i])
                return i;
        }
        return this.metaParent.upperbound === -1 ? this.mtarget.length : -1;
    }
    getfirstFilledTarget() {
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            if (this.mtarget[i])
                return i;
        }
        return -1;
    }
    endingName(valueMaxLength = 10) {
        const index = this.getfirstEmptyTarget();
        if (index !== -1) {
            const t = this.mtarget[index];
            if (t instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"] && t.attributes.length > 0) {
                const a = t.attributes[0];
                return a.endingName(valueMaxLength);
            }
        }
        return '';
    }
    /*
      conformability(meta: M2Reference, debug: boolean = true): number {
        let comformability = 0;
        comformability += 0.1 * StringSimilarity.compareTwoStrings(this.getm2Target().name, meta.classType.name);
        // todo: devi calcolare la 90% conformability in base al tipo dedotto della classe del m1-target.
        // comformability += 0.2 * StringSimilarity.compareTwoStrings(this.name, meta.name);
        // comformability += 0.2 * (this.metaParent.containment === meta.containment ? 1 : 0);
        U.pif(debug, 'REFERENCE.comform(', this.name, {0: this}, ', ', meta.name, {0: meta}, ') = ', comformability);
        return comformability; }*/
    duplicate(nameAppend = '_Copy', newParent = null) {
        const r = new MReference(null, null, null);
        return r.copy(this, nameAppend, newParent);
    }
    getInfo(toLower) {
        const info = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'target', this.mtarget);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'upperbound');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'lowerbound');
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            const t = this.mtarget[i];
            if (!t)
                continue;
            // todo problem: le mClassi non hanno un nome
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, '' + i, t);
        }
        return info;
    }
    delete(refreshgui = true, linkStart = null, linkEnd = null) {
        super.delete(false, linkStart, linkEnd);
        // total deletion
        let i;
        // if (linkStart === null && linkEnd === null) { completely delete? or it is already done by super()? }
        // just cut some edges
        linkEnd = Math.min(this.mtarget.length, linkEnd);
        linkStart = Math.max(0, linkStart);
        for (i = linkStart; i < linkEnd; i++) {
            this.setTarget(i, null);
        }
        if (refreshgui)
            this.refreshGUI();
    }
    getType() { return (this.metaParent ? this.metaParent.getType() : null); }
    canBeLinkedTo(hoveringTarget) {
        const c1 = this.getType().classType;
        const c2 = hoveringTarget.metaParent;
        return c1 === c2 || c1.isExtending(c2);
    }
    // link(targetStr?: string, debug?: boolean): void { throw new Error('mreference.linkByStr() should never be called'); }
    // LinkToMetaParent(ref: MReference): void { super.LinkToMetaParent(ref); }
    generateModel() { MReference.loopDetection = {}; return this.generateModelLoop(); }
    generateModelLoop() {
        const ret = [];
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            if (!this.mtarget[i])
                continue;
            const mclass = this.mtarget[i];
            if (MReference.loopDetection[mclass.id]) {
                // todo: in caso di loop cosa ci devo mettere nel modello?
                ret.push('LoopingReference');
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'looping reference in model');
            }
            else {
                MReference.loopDetection[mclass.id] = mclass;
                ret.push(mclass.generateModel());
            }
        }
        return ret;
    }
    generateEdges() {
        // const arr: IEdge[] = [];
        let i;
        // while (this.edges && this.edges.length > 0) { this.edges[0].remove(); U.arrayRemoveAll(this.edges, this.edges[0]); }
        for (i = 0; i < this.mtarget.length; i++) {
            if (this.edges[i] || !this.mtarget[i])
                continue;
            this.edges[i] = (new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"](this, i, this.parent.getVertex(), this.mtarget[i].getVertex()));
        }
        return this.edges;
    }
    parse(json0, destructive = true) {
        /*
            "ReferenceName": [
              { "-name": "tizio" },  <-- reference.target[0]
              { "-name": "asd" }     <-- reference.target[1]
            ]*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!destructive, 'non-destructive parse of MReference to do.');
        if (!json0) {
            json0 = [];
        }
        const json = Array.isArray(json0) ? json0 : [json0];
        const targetMM = this.getm2Target();
        let i;
        if (!this.mtarget) {
            this.mtarget = [];
        }
        if (!this.edges) {
            this.edges = [];
        }
        const upperbound = this.getUpperbound();
        if (upperbound >= 0) {
            this.mtarget.length = upperbound;
            this.edges.length = upperbound;
        }
        if (destructive) {
            this.clearTargets();
        }
        const pkg = this.getClass().parent;
        for (i = 0; i < json.length; i++) {
            // console.log('mref.parse: ', json0, json, 'i:', json[i]);
            if ($.isEmptyObject(json[i])) {
                continue;
            }
            const t = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"](pkg, json[i], targetMM);
            this.mtarget[i] = t;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.metaParent.upperbound !== -1 && this.mtarget.length !== +this.metaParent.upperbound, 'wrong mtarget length', this.mtarget, this.mtarget.length, this.metaParent.upperbound);
    }
    validate() { return true; }
    copy(r, nameAppend = '_Copy', newParent = null) {
        this.clearTargets();
        super.copy(r, nameAppend, newParent);
        this.mtarget = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(r.mtarget, false);
        this.generateEdges();
        this.refreshGUI();
        return r;
    }
    linkClass(classe, index, refreshGUI = true, debug = false) { this.setTarget(index, classe); }
    setValues(values = null, index = null, autofix = true, debug = false) {
        if (index < 0)
            index = (this.getUpperbound() - index) % this.getUpperbound();
        if (index === null || index === undefined) {
            values.length = this.getUpperbound();
            let i;
            for (i = 0; i < values.length; i++) {
                if (values[i] instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"])
                    this.setTarget(i, values[i]);
            }
            return;
        }
        if (Array.isArray(values)) {
            if (values.length === 1)
                values = values[0];
            else
                return;
        }
        if (values instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"])
            this.setTarget(index, values);
    }
    setTarget(index, val) {
        let edge = this.edges[index];
        if (val === null) {
            if (!this.edges[index])
                return;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.mtarget[index].referencesIN, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.mtarget[index].vertex.edgesEnd, edge);
            this.edges[index].remove();
            this.mtarget[index] = null;
            if (this.metaParent.upperbound === -1 && index === this.mtarget.length - 1) {
                delete this.edges[index];
                delete this.mtarget[index];
            }
            return;
        }
        if (this.metaParent.unique && this.mtarget.indexOf(val) >= 0) {
            // basta evitare elementi identici o anche istanze diverse con stessi valori? o con altri concetti di "uguglianza" ?
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(true, 'This reference type is labeled as "unique" and is already linked to that element.');
            return;
        }
        // if (this.mtarget[index]) { this.setTarget(index, null); }
        this.mtarget[index] = val;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.mtarget[index].referencesIN, this);
        this.generateEdges();
        edge = this.edges[index];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.mtarget[index].vertex.edgesEnd, edge);
    }
    clearTargets() {
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            this.setTarget(i, null);
        }
        let upperbound = this.getUpperbound();
        if (upperbound >= 0) {
            this.mtarget.length = upperbound;
            this.edges.length = upperbound;
        }
    }
}
MReference.loopDetection = {};


/***/ }),

/***/ "./src/mClass/classChild/Features/References/iReference.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/References/iReference.ts ***!
  \*****************************************************************/
/*! exports provided: IReference, M3Reference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IReference", function() { return IReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Reference", function() { return M3Reference; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../guiElements/mGraph/Edge/edgeStyle */ "./src/guiElements/mGraph/Edge/edgeStyle.ts");



class IReference extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"] {
    constructor(parent, meta) {
        super(parent, meta);
        this.edges = [];
        if (parent)
            parent.references.push(this);
        this.edgeStyleCommon = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].straight, 2, '#7f7f7f', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#000000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__["EdgeHeadStyle"](20, 20, '#7f7f7f', '#7f7f7f'));
        this.edgeStyleHighlight = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].straight, 2, '#ffffff', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#0077ff'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__["EdgeHeadStyle"](20, 20, '#ffffff', '#ffffff'));
        this.edgeStyleSelected = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].straight, 4, '#ffffff', // #ffbb22
        new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#ff0000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__["EdgeHeadStyle"](25, 25, '#ffffff', '#ffffff'));
    }
    delete(refreshgui = true, linkStart = null, linkEnd = null) {
        if (linkStart === null && linkEnd === null) {
            super.delete(false);
            linkStart = 0;
            linkEnd = this.edges.length;
        }
        const edges = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.getEdges(), false);
        let i;
        linkEnd = Math.min(edges.length, linkEnd);
        linkStart = Math.max(0, linkStart);
        for (i = linkStart; i < linkEnd; i++) {
            edges[i].remove();
        }
        if (refreshgui)
            this.refreshGUI();
    }
    // abstract linkClass(classe?: IClass): void;
    getEdges() { return this.edges; }
    refreshGUI_Alone(debug = true) {
        super.refreshGUI_Alone(debug);
        let i = -1;
        const edges = this.getEdges();
        while (++i < edges.length) {
            if (edges[i]) {
                edges[i].refreshGui();
            }
        }
    }
    copy(r, nameAppend = '_Copy', newParent = null) {
        while (this.edges.length) {
            if (this.edges[0])
                this.edges[0].remove();
        }
        super.copy(r, nameAppend, newParent);
        this.clearTargets();
        super.copy(r, nameAppend, newParent);
        this.generateEdges();
        this.edgeStyleCommon = r.edgeStyleCommon.clone();
        this.edgeStyleHighlight = r.edgeStyleHighlight.clone();
        this.edgeStyleSelected = r.edgeStyleSelected.clone();
        // this.typeClassFullnameStr = r.typeClassFullnameStr;
        if (newParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(newParent.references, this);
        }
        this.refreshGUI();
        return this;
    }
    /*
      getStartPoint(nextPt: GraphPoint = null, fixOnSides: boolean = true): GraphPoint {
        let html: HTMLElement | SVGElement = this.getField().getHtml();
        // todo: introduzione field con campo html.
        if ( this.html && this.html.style.display !== 'none') {
          html = this.getStartPointHtml();
        } else { html = this.parent.getStartPointHtml(); }
        const vertexSize: GraphSize = this.graph().toGraphCoordS(U.sizeof(this.parent.html.firstChild as HTMLElement | SVGElement ));
        let htmlSize: Size = U.sizeof(html);
        let size: GraphSize = this.getModelRoot().graph.toGraphCoordS(htmlSize);
        if ( size.w === 0 || size.h === 0) {
          html = this.parent.getEndPointHtml();
          htmlSize = U.sizeof(html);
          size = this.getModelRoot().graph.toGraphCoordS(htmlSize); }
    
        let ep: GraphPoint = new GraphPoint(size.x + size.w / 2, size.y + size.h / 2);
        // console.log('sizeH:', htmlSize, 'sizeg:', size, ' center: ', ep);
        // this.getModelRoot().graph.markS(htmlSize, false, 'green');
        // this.getModelRoot().graph.markS(htmlSize, false, 'green');
        // ora è corretto, ma va fissato sul bordo vertex più vicino
        let fixOnHorizontalSides = false;
        const oldEpDebug = new GraphPoint(ep.x, ep.y);
        let vicinanzaL;
        let vicinanzaR;
        let vicinanzaT;
        let vicinanzaB;
        if (!nextPt) {
          vicinanzaL = Math.abs(ep.x - (vertexSize.x));
          vicinanzaR = Math.abs(ep.x - (vertexSize.x + vertexSize.w));
          vicinanzaT = Math.abs(ep.y - (vertexSize.y)) + (fixOnHorizontalSides ? Number.POSITIVE_INFINITY : 0);
          vicinanzaB = Math.abs(ep.y - (vertexSize.y + vertexSize.h)) + (fixOnHorizontalSides ? Number.POSITIVE_INFINITY : 0);
          const nearest = Math.min(vicinanzaL, vicinanzaT, vicinanzaR, vicinanzaB);
          // console.log('vicinanze (LRTB)', vicinanzaL, vicinanzaR, vicinanzaT, vicinanzaB, 'vSize: ', vertexSize);
          if ( nearest === vicinanzaT || (false && nextPt.x >= vertexSize.x && nextPt.x <= vertexSize.x + vertexSize.w && nextPt.y < ep.y)) {
            ep.y = vertexSize.y; } else
          if ( nearest === vicinanzaB || (false && nextPt.x >= vertexSize.x && nextPt.x <= vertexSize.x + vertexSize.w && nextPt.y > ep.y)) {
            ep.y = vertexSize.y + vertexSize.h; } else
          if ( nearest === vicinanzaR || (false && nextPt.x >= ep.x)) { ep.x = vertexSize.x + vertexSize.w; } else
          if ( nearest === vicinanzaL) { ep.x = vertexSize.x; }
          console.log('html:', html);
        } else {
          const grid = this.getModelRoot().graph.grid;
          ep = GraphSize.closestIntersection(vertexSize, nextPt, ep, grid); }
        // console.log('StartPoint fissato sul bordo:', oldEpDebug, '-->', ep);
        // return this.parent.vertex.owner.fitToGrid(ep);
        // if (fixOnSides && nextPt) { if (nextPt.x > ep.x) { ep.x += size.w / 2; } else { ep.x -= size.w / 2; }  }
        return ep; // meglio se svincolato dalla grid: il vertica può essere di width ~ height non conforme alla grid e il punto risultare fuori
      }
    */
    setDefaultStyle(value) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'IReference.setDefaultStyle(): todo.');
    }
    isContainment() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return this.containment;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return this.metaParent.containment;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class.');
    }
    /*getM2Target(): M2Class {
      if (this instanceof M2Reference) { return this.classType; }
      if (this instanceof MReference) { return this.metaParent.classType; }
      U.pe(true, 'unrecognized class.'); }*/
    getUpperbound() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return this.upperbound;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return this.metaParent.upperbound;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class.');
    }
    getLowerbound() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return this.lowerbound;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return this.metaParent.lowerbound;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class.');
    }
    clearTargets() {
        // azioni solo su m1, non spostato direttamente su m1 per comodità d'uso nella IReference.clone();
    }
}
class M3Reference extends IReference {
    constructor(parent, meta = null) {
        super(parent, meta);
        this.parse(null);
    }
    // clearTargets(): void { }
    canBeLinkedTo(hoveringTarget) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.canBeLinkedTo()'); return true; }
    //conformability(meta: IReference, debug?: boolean): number { U.pe(true, 'Invalid operation: m3Reference.comformability()'); return 0; }
    duplicate(nameAppend, newParent) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.duplicate()'); return this; }
    generateEdges() { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.generateEdges()'); return []; }
    generateModel() { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.generateModel()'); return {}; }
    parse(json, destructive) { this.name = 'Reference'; }
    linkClass(classe = null) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: M3Reference.linkClass();'); }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/iFeature.ts":
/*!****************************************************!*\
  !*** ./src/mClass/classChild/Features/iFeature.ts ***!
  \****************************************************/
/*! exports provided: IFeature */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IFeature", function() { return IFeature; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class IFeature extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    // linkToMetaParent<T extends IFeature>(feature: T) { this.metaParent = feature; }
    getClass() { return this.parent; }
    // must be overriden for m1-elements
    setValues(values = null, index = null, autofix = true, debug = false) { }
}
/*
export abstract class M3Feature extends IFeature {
  parent: M3Class;
  metaParent: M3Feature;
  instances: M3Feature[] | M2Feature[];
}
export abstract class M2Feature extends IFeature {
  parent: M2Class;
  metaParent: M3Feature;
  instances: MFeature[];
}
export abstract class MFeature extends IFeature {
  parent: MClass;
  metaParent: M2Feature;
  instances: ModelNone;
}*/


/***/ }),

/***/ "./src/mClass/classChild/Operations/eOperation.ts":
/*!********************************************************!*\
  !*** ./src/mClass/classChild/Operations/eOperation.ts ***!
  \********************************************************/
/*! exports provided: OperationVisibility, EOperation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperationVisibility", function() { return OperationVisibility; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EOperation", function() { return EOperation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


// export abstract class EOperation extends Typedd {}
/*
export class OperationVisibility {
  static public = 'public';
  static private = 'private';
  static protected = 'protected';
  static internal = 'internal';
  static protectedinternal = 'protected internal';
  static protectedprivate = 'protected private'; }*/
var OperationVisibility;
(function (OperationVisibility) {
    OperationVisibility["public"] = "public";
    OperationVisibility["private"] = "private";
    OperationVisibility["protected"] = "protected";
    OperationVisibility["internal"] = "internal";
    OperationVisibility["package"] = "package";
    OperationVisibility["protectedinternal"] = "protected internal";
    OperationVisibility["protectedprivate"] = "protected private";
})(OperationVisibility || (OperationVisibility = {}));
class EOperation extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    // exceptions: IClass[];
    // todo: ha davvero senso processarli e creare anche IClass.Object etc? mi conviene tenerli a stringa.
    constructor(parent, json) {
        super(parent, null);
        this.visibility = OperationVisibility.private;
        this.detailIsOpened =  false && false;
        if (parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"])
            parent.operations.push(this);
        this.parse(json);
    }
    getVisibilityChar() {
        switch (this.visibility) {
            case OperationVisibility.public: return '+';
            case OperationVisibility.private: return '-';
            case OperationVisibility.protected: return '#';
            case OperationVisibility.internal:
            case OperationVisibility.package: return '~';
            case OperationVisibility.protectedinternal: return '#~';
            case OperationVisibility.protectedprivate: return '#-';
            default: return '?';
        }
    }
    getClass() { return this.parent; }
    conformability(metaparent, outObj, debug) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'operation.conformability()'); return 0; }
    duplicate(nameAppend = '_Copy', newParent = null) {
        const c = new EOperation(this.parent, null);
        c.copy(this);
        return c;
    }
    copy(c, nameAppend = '_Copy', newParent = null) {
        super.copy(c, nameAppend, newParent);
        this.exceptionsStr = c.exceptionsStr;
        //// set childrens
        // this.arguments = []; for (i = 0; i < this.childrens.length; i++) { U.ArrayAdd(this.arguments, this.childrens[i]); }
        this.refreshGUI();
    }
    generateModel() {
        const parameters = [];
        const json = {};
        json[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eParameters] = parameters;
        /*
                            "_name": "EExceptionNameCustom",
                            "_ordered": "false",
                            "_unique": "false",
                            "_lowerBound": "5",
                            "_upperBound": "7",
                            "_eType": "#//Casa",
                            "_eExceptions": "#//Casa #//League ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt",
                            "eParameters": [ ]*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].namee, this.name);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eType, this.getType().toEcoreString());
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, '' + this.lowerbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, '' + this.upperbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eexceptions, this.exceptionsStr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, '' + this.ordered);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, '' + this.unique);
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            parameters.push(this.childrens[i].generateModel());
        }
        return json;
    }
    getInfo(toLower = false) {
        const info = super.getInfo(toLower);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'instances');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'type', 'returnType');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'typeDetail', 'returnTypeDetail');
        return info;
    }
    parse(json, destructive) {
        this.setName((this.parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"]) ? 'Operation' : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].namee, 'Func_1'));
        this.setType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eType, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].void));
        this.setLowerbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, 'NAN_Trigger'));
        this.setUpperbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, 'NAN_Trigger'));
        this.exceptionsStr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eexceptions, '');
        this.ordered = 'true' === '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, 'false');
        this.unique = 'true ' === '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, 'false');
        this.visibility = OperationVisibility.package;
        const parameters = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json, false);
        let i;
        for (i = 0; i < parameters.length; i++) {
            const param = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"](this, parameters[i]);
            // U.ArrayAdd(this.arguments, param);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, param);
        } /*
      this.views = [];
      for(i = 0; i < this.parent.views.length; i++) {
        const pv: ClassView = this.parent.views[i];
        const v = new OperationView(pv);
        this.views.push(v);
        pv.operationViews.push(v); }*/
        /*  https://codebeautify.org/xmltojson
                    "Operations": [ {
                            "_name": "EExceptionNameCustom",
                            "_ordered": "false",
                            "_unique": "false",
                            "_lowerBound": "5",
                            "_upperBound": "7",
                            "_eType": "#//Casa",
                            "_eExceptions": "#//Casa #//League ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" },
                        {
                            "eParameters": [
                                {
                                    "_eType": "#//Casa"
                                },
                                {
                                    "eAnnotations": {
                                        "_source": "annotationtext",
                                        "_references": "#//Umano/anni #//Umano/Attribute_1"
                                    },
                                    "_name": "dbl",
                                    "_ordered": "false",
                                    "_unique": "false",
                                    "_lowerBound": "1",
                                    "_upperBound": "2",
                                    "_eType": "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"
                                }
                            ],
                            "_name": "operationDam"
                        }
                    ],*/
    }
    getSignature(maxarguments = Number.POSITIVE_INFINITY) {
        let parameterStr = '';
        maxarguments = Math.min(maxarguments, this.childrens.length);
        let i;
        const debug = true;
        const separator = ', ';
        for (i = 0; i < maxarguments; i++) {
            if (i !== 0) {
                parameterStr += separator;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'parameter[' + i + '] = ', this.childrens[i]);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'parameterStr: |' + parameterStr + '| --> |' + parameterStr + this.childrens[i].getType().toShortString() + '|');
            parameterStr += this.childrens[i].getType().toShortString();
        }
        return parameterStr;
    }
    setSignatureHtml(html, separator, maxargumentchars = null, maxarguments = null) {
        const debug =  false && false;
        maxargumentchars = isNaN(+maxargumentchars) ? 10 : +maxargumentchars;
        maxarguments = isNaN(+maxarguments) ? 2 : +maxarguments;
        const fixName = (s) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fixname: |' + s + '| --> |' + s.substring(0, maxargumentchars - 1) + '…|');
            if (s.length > maxargumentchars) {
                return s.substring(0, maxargumentchars - 1) + '…';
            }
            return s;
        };
        let i;
        let parameterStr = this.getSignature(maxarguments);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'finalSignature: ', this.getVisibilityChar(), fixName(this.name), parameterStr, fixName(this.type.toShortString()), this);
        // todo: innerText is not standard, switch to textContent
        html.innerHTML = '&nbsp'; // == ' '
        html.textContent += this.getVisibilityChar() + '' + fixName(this.name) + '(' + parameterStr + ') → ' // → ⇒
            + this.type.toShortString();
        html.dataset.visibility = this.visibility;
        html.dataset.exceptions = this.exceptionsStr;
    }
    // getReturnType(): EParameter { return this.getFakeReturnTypeParameter(); }
    /*
      getFakeReturnTypeParameter(): EParameter {
        const fake: EParameter = new EParameter(null, null);
        U.arrayRemoveAll(this.childrens, fake);
        fake.parent = this; // can travel fake -> original, can't original -> fake.
        fake.id = this.id;
        fake.ordered = this.ordered;
        fake.unique = this.unique;
        fake.setLowerbound(this.getLowerbound());
        fake.setUpperbound(this.getUpperbound());
        fake.setType(this.getType().toEcoreString());
        fake.name = '';
        return fake; }*/
    addParameter() {
        const p = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"](this, null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, p);
        return p;
    }
}
EOperation.counter = 0;


/***/ }),

/***/ "./src/mClass/classChild/Operations/eParameter.ts":
/*!********************************************************!*\
  !*** ./src/mClass/classChild/Operations/eParameter.ts ***!
  \********************************************************/
/*! exports provided: EParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EParameter", function() { return EParameter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


// export abstract class EParameter extends Typedd {}
class EParameter extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    constructor(parent, json) {
        super(parent, null);
        if (!parent) {
            return;
        } // fake constructor will allow to travel fake -> original. can't original -> fake.
        this.parse(json);
    }
    fullname() { return super.fullname() + ':' + this.name; }
    getField() { return this.parent ? this.parent.getField() : null; }
    getClass() { return this.parent ? this.parent.parent : null; }
    conformability(metaparent, outObj, debug) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'eop.conformability'); return 0; }
    duplicate(nameAppend = '_Copy', newParent = null) {
        const c = new EParameter(null, null);
        c.copy(this, nameAppend, newParent);
        return c;
    }
    copy(c, nameAppend = '_Copy', newParent = null) {
        super.copy(c, nameAppend, newParent);
        //// set childrens
        // let i; for (i = 0; i < this.childrens.length; i++) { U.ArrayAdd(this.parent.arguments, this.childrens[i]); }
        this.refreshGUI();
    }
    getInfo(toLower = false) {
        const info = super.getInfo(toLower);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'instances');
        return info;
    }
    generateModel() {
        const json = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, '' + this.lowerbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, '' + this.upperbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, '' + this.ordered);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, '' + this.unique);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eType, '' + this.getType().toEcoreString());
        return json;
    }
    parse(json, destructive) {
        /* {"eAnnotations": {
                        "_source": "annotationtext",
                        "_references": "#//Umano/anni #//Umano/Attribute_1" },
                    "_name": "dbl",
                    "_ordered": "false",
                    "_unique": "false",
                    "_lowerBound": "1",
                    "_upperBound": "2",
                    "_eType": "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" }*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.parent || !this.parent.parent, 'json:', json, 'this: ', this, 'this.parent:', this.parent, 'this.p.p:', this.parent ? this.parent.parent : undefined);
        this.setName(this.parent.parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"] ? 'Parameter' : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreParameter"].namee, 'Param_1'));
        this.setLowerbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, 'NAN_Trigger'));
        this.setUpperbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, 'NAN_Trigger'));
        this.ordered = 'true' === '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, 'false');
        this.unique = 'true ' === '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, 'false');
        this.setType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreParameter"].eType, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString));
        let i; /*
        this.views = [];
        for(i = 0; i < this.parent.views.length; i++) {
          const pv: OperationView = this.parent.views[i];
          const v = new ParameterView(pv);
          this.views.push(v);
          pv.parameterView.push(v); }*/
    }
}


/***/ }),

/***/ "./src/mClass/classChild/Type.ts":
/*!***************************************!*\
  !*** ./src/mClass/classChild/Type.ts ***!
  \***************************************/
/*! exports provided: Type, EType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EType", function() { return EType; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class Type {
    constructor(owner, typestr = null) {
        this.primitiveType = null;
        this.classType = null;
        this.enumType = null;
        this.owner = null; // todo: cambia to Typedd
        this.owner = owner;
        this.typestr = typestr;
        this.id = Type.idMax++;
        Type.allByID[this.id] = this;
        Type.all.push(this);
    }
    static updateTypeSelectors($searchRoot, primitives = true, enums = true, classes = true) {
        if (!$searchRoot) {
            $searchRoot = $(document.body);
        }
        let key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getStartSeparatorKey();
        const query = (primitives ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + 'select[data-primitive="true"]' : '') +
            (enums ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + 'select[data-enum="true"]' : '') +
            (classes ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + 'select[data-class="true"]' : '');
        key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getStartSeparatorKey();
        const notquery = (primitives ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + '.template select[data-primitive="true"]' : '') +
            (enums ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + '.template select[data-enum="true"]' : '') +
            (classes ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + '.template select[data-class="true"]' : '');
        //    console.log(query);
        const $selects = $searchRoot.find(query).not(notquery);
        for (let i = 0; i < $selects.length; i++) {
            Type.updateTypeSelector($selects[i]);
        }
        if (classes && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.sidebar) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.sidebar.updateAll();
        }
    }
    static updateTypeSelector(selectHtml) {
        const addPrimitive = selectHtml.dataset.primitive === "true";
        const addEnum = selectHtml.dataset.enum === "true";
        const addClass = selectHtml.dataset.class === "true";
        const addVoid = selectHtml.dataset.void === "true";
        const type = Type.get(+selectHtml.dataset.typeid);
        Type.makeTypeSelector(selectHtml, type, addPrimitive, addEnum, addClass, addVoid);
    }
    static makeTypeSelector(selectHtml, selectedType, addPrimitive, addEnum, addClass, addVoid) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!selectHtml, 'select is null');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(selectHtml);
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(selectHtml);
        if (mp && mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"]) {
            selectedType = mp.getType();
            $(selectHtml).off('change.type').on('change.type', (e) => { mp.fieldChanged(e); });
        }
        else
            return; //U.pw(true, 'type selector inserted on non-typed element:', selectHtml, mp);
        selectHtml.dataset.typeid = '' + selectedType.id;
        selectHtml.dataset.primitive = '' + (addPrimitive ? "true" : "false");
        selectHtml.dataset.enum = '' + (addEnum ? "true" : "false");
        selectHtml.dataset.class = '' + (addClass ? "true" : "false");
        selectHtml.dataset.void = '' + (addVoid ? "true" : "false");
        const grpReturn = document.createElement('optgroup');
        const grpPrimitive = document.createElement('optgroup');
        const grpEnum = document.createElement('optgroup');
        const grpClass = document.createElement('optgroup');
        grpReturn.label = 'Return Types';
        grpPrimitive.label = 'Primitive Types';
        grpEnum.label = 'Enumerative Types';
        grpClass.label = 'ClassReference Types';
        let optionFound = false;
        let key;
        let i;
        const foundit = (opt) => { optionFound = true; opt.setAttribute('selected', ''); opt.selected = true; };
        // primitive:
        if (addPrimitive) {
            for (key in EType.shorts) {
                if (!EType.shorts[key]) {
                    continue;
                }
                const etype = EType.shorts[key];
                if (etype.short === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void && !addVoid) {
                    continue;
                }
                const opt = document.createElement('option');
                grpPrimitive.appendChild(opt);
                opt.value = etype.long;
                opt.innerHTML = etype.name;
                if (selectedType && etype === selectedType.primitiveType) {
                    foundit(opt);
                }
            }
        }
        // primitive end
        // Enum Start:
        if (addEnum) {
            const enumarr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllEnums();
            for (i = 0; i < enumarr.length; i++) {
                const e = enumarr[i];
                const opt = document.createElement('option');
                grpEnum.appendChild(opt);
                opt.value = e.getEcoreTypeName();
                opt.innerHTML = e.name;
                if (e === selectedType.enumType) {
                    foundit(opt);
                }
            }
        }
        // Enum End:
        // class Start:
        if (addClass) {
            const classarr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllClasses();
            for (i = 0; i < classarr.length; i++) {
                const e = classarr[i];
                const opt = document.createElement('option');
                grpClass.appendChild(opt);
                opt.value = e.getEcoreTypeName();
                opt.innerHTML = e.name;
                if (e === selectedType.classType) {
                    foundit(opt);
                }
            }
        }
        // class End:
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.all, selectHtml);
        if (addPrimitive) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.primitives, selectHtml);
        }
        if (addEnum) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.enums, selectHtml);
        }
        if (addClass) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.classes, selectHtml);
        }
        if (grpReturn.children.length)
            selectHtml.appendChild(grpReturn);
        if (grpPrimitive.children.length)
            selectHtml.appendChild(grpPrimitive);
        if (grpEnum.children.length)
            selectHtml.appendChild(grpEnum);
        if (grpClass.children.length)
            selectHtml.appendChild(grpClass);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(selectedType && !optionFound, 'selected type option not found; select:', selectHtml, ' EType.shorts:', EType, EType.shorts, ', searchedVal:', selectedType);
    }
    static linkAll() { for (let i = 0; i < Type.all.length; i++) {
        Type.all[i].applyTypeStr();
    } }
    static get(id) { return Type.allByID[id]; }
    changeType(typestr = null, primitiveType = null, classType = null, enumType = null) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe((typestr ? 1 : 0) + (primitiveType ? 1 : 0) + (classType ? 1 : 0) !== 1, 'changeType(): exactly one argument is required. str:', typestr, 'primitive:', primitiveType, 'classType:', classType);
        if (!(typestr || primitiveType || classType || enumType))
            return;
        if (typestr) {
            this.typestr = typestr;
        }
        if (primitiveType) {
            this.typestr = primitiveType.long;
        }
        if (classType) {
            this.typestr = classType.getEcoreTypeName();
        }
        if (enumType) {
            this.typestr = enumType.getEcoreTypeName();
        }
        this.applyTypeStr();
    }
    defaultValue() {
        if (this.primitiveType)
            return this.primitiveType.defaultValue;
        if (this.enumType)
            return this.enumType.childrens[0].name;
        return null;
    }
    applyTypeStr() {
        if (!this.typestr || !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm)
            return;
        this.applyTypeStr0();
        if (this.primitiveType)
            this.printablename = this.primitiveType.name;
        if (this.enumType)
            this.printablename = this.enumType.name;
        if (this.classType)
            this.printablename = this.classType.name ? this.classType.name : this.classType.metaParent.name;
        if (this.typestr === '???void')
            this.printablename = 'void';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.printablename, this);
    }
    applyTypeStr0() {
        const debug = false;
        let i;
        let oldClass = this.classType;
        let oldEnum = this.enumType;
        let oldPrimitive = this.primitiveType;
        this.enumType = this.classType = this.primitiveType = null;
        let typestr = this.typestr;
        // this.typestr = null;
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'changeType()', this, this.typestr);
        this.primitiveType = EType.getFromLongString(typestr, false);
        if (!this.primitiveType) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(typestr.indexOf(Type.classTypePrefix) !== 0, 'allyTypeStr(): found typestr neither primitive nor classifier.', this.typestr, this);
            const s = typestr.substr(Type.classTypePrefix.length);
            const packages = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.childrens;
            for (i = 0; i < packages.length; i++) {
                const pkg = packages[i];
                const c = pkg.getClass(s);
                if (c) {
                    this.classType = c;
                    break;
                }
                const e = pkg.getEnum(s);
                if (e) {
                    this.enumType = e;
                    break;
                }
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.primitiveType && !this.enumType && !this.classType, 'failed to find target: |' + typestr + '|', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm);
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            if (oldClass === this.classType)
                return;
            if (oldClass) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldClass.referencesIN, this.owner);
            }
            this.classType.referencesIN.push(this.owner);
            if (this.owner.edges && this.owner.edges.length) {
                this.owner.edges[0].setTarget(this.classType.vertex);
                this.owner.edges[0].refreshGui();
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'ref target changed; type:' + this + 'inside:', this.owner);
            this.owner.refreshGUI();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'exit2: m2reference');
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'typechanged:', this.owner, this);
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            for (i = 0; i < this.owner.instances.length; i++) {
                this.owner.instances[i].valuesAutofix();
            }
            this.owner.refreshGUI();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'exit3: attrib.');
            return;
        }
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            this.owner.refreshGUI();
            return;
        }
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            this.owner.refreshGUI();
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected owner instance in changeType():', this);
    }
    toEcoreString() {
        if (this.classType)
            return Type.classTypePrefix + this.classType.name;
        if (this.enumType)
            return Type.classTypePrefix + this.enumType.name;
        if (this.primitiveType)
            return this.primitiveType.long;
        return null;
    }
    toShortString() {
        if (this.classType)
            return '' + this.classType.name;
        if (this.enumType)
            return '' + this.enumType.name;
        if (this.primitiveType)
            return '' + this.primitiveType.name;
        return null;
    }
}
Type.all = [];
Type.idMax = 0;
Type.allByID = {};
Type.classTypePrefix = '#//';
Type.selectors = { all: [], primitives: [], classes: [], enums: [] };
class EType {
    constructor(long, short, defaultVal, minValue = null, maxValue = null) {
        this.name = null;
        this.long = null;
        this.short = null;
        this.defaultValue = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(EType.shorts[short], 'etype created twice:', EType.shorts[short]);
        EType.shorts[short] = this;
        this.long = long;
        this.short = short;
        this.defaultValue = defaultVal;
        this.minValue = minValue;
        this.maxValue = maxValue;
        const alias = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[short];
        this.name = alias ? alias : short;
    }
    static staticInit() {
        EType.shorts = {};
        let noWarning;
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].void, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void, undefined);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDate, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate, ' ');
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EChar, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar, ' ');
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString, '');
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EBoolean, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean, true);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EByte, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte, 0, -128, 127);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EShort, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort, 0, -32768, 32767);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EInt, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt, 0, -2147483648, 2147483647);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].ELong, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong, 0, -9223372036854775808, 9223372036854775808);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EFloat, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat, 0, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDouble, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble, 0, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);
        return EType.shorts;
    }
    static getFromLongString(ecorelongstring, throww = true) {
        switch (ecorelongstring) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throww, 'Etype.Get() unrecognized type: ', ecorelongstring, '; string: ', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString);
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].void: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EChar: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EBoolean: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EByte: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EShort: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EInt: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].ELong: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EFloat: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDouble: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDate: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate);
        }
        return null;
    }
    static get(a) { return EType.shorts[a]; }
    static getAlias(a) {
        const str = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[a];
        return !str ? '' + a : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[a];
    }
    changeAlias(value) {
        this.name = value;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[this.short] = this.name;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.aliasTypeDictionary[this.name] = this.short;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.refreshGUI();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.refreshGUI();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph.propertyBar.refreshGUI();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.refreshGUI();
    }
}
EType.shorts = {};


/***/ }),

/***/ "./src/mClass/classChild/Typedd.ts":
/*!*****************************************!*\
  !*** ./src/mClass/classChild/Typedd.ts ***!
  \*****************************************/
/*! exports provided: Typedd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Typedd", function() { return Typedd; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class Typedd extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(parent, metaVersion) {
        super(parent, metaVersion);
        // upperbound and lowerbound are defining how much values can be given to a single typed element. (nullable, single value, array)
        this.upperbound = 1 || false; // to avoid stupid compiler warning on primitive types
        this.lowerbound =  false || 0;
        // tells if the values are ordered. useless if upperbound is <= 1
        this.ordered =  false && false;
        // tells if the values are a set. useless if upperbound is <= 1
        this.unique =  false && false;
        this.type = this.getModelRoot().isM2() || this.getModelRoot().isM3() ? new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"](this) : null;
    }
    // typeClassFullnameStr: string = null;
    /*
      parsePrintableTypeName(eTypeLongStr: string): void {
        this.classType = null;
        this.typeClassFullnameStr = null;
        const pkg: IPackage = this.getPackage();
        const searchStr: string = '#//' || '';
        const pos = eTypeLongStr.lastIndexOf(searchStr);
        if (pos === 0 && pkg) {
          this.typeClassFullnameStr = pkg.name + '.' + eTypeLongStr.substring(pos + searchStr.length);
          return; }
        this.updateTypeAndValue(EType.getFromLongString(eTypeLongStr), false);
        U.pe(!this.getType(), 'found json ecore type that is not a classname or a primitive type.', eTypeLongStr);
        return; }*/
    fieldChanged(e, ignoreSwitch = false) {
        const html = e.currentTarget;
        const graph = this.getModelRoot().graph;
        const fromGraph = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(graph.container, html);
        const fromSidebar = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(graph.propertyBar.container, html);
        if (!ignoreSwitch)
            switch (html.tagName.toLowerCase()) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                    break;
                case 'textarea':
                case 'input':
                    this.setName(html.value);
                    break;
                case 'select':
                    this.setType(html.value, true, false);
                    break;
            }
        if (!fromGraph) {
            this.refreshGUI();
        }
        if (!fromSidebar) {
            graph.propertyBar.refreshGUI();
        }
    }
    setType(classOrPrimitiveString, throwError = true, refreshGui = true) {
        const type = this.getType();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(type !== this.type, 'attempting to change parent type!', this, type);
        type.changeType(classOrPrimitiveString);
        if (refreshGui)
            this.refreshGUI();
        return true;
    }
    // updateTypeAndValue(primitiveType: EType = null, refreshGui: boolean = true): void {}
    /*
      setClassType(classType: M2Class = null, refreshGui: boolean = true): void {
        if (!classType || this.classType === classType) { return; }
        this.classType = classType;
        if (!refreshGui) { return; }
        this.refreshGUI();
        this.refreshInstancesGUI(); }*/
    getType() { return this.type || this.metaParent.type; }
    getInfo(toLower = false) {
        const info = super.getInfo(toLower);
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"])) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'childrens');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'lowerBound', this.lowerbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'upperBound', this.upperbound);
        const type = this.getType();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'type', type.toEcoreString());
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'typeDetail', type);
        return info;
    }
    // copy(other: IAttribute, nameAppend: string = '_Copy', newParent: IClass = null): void {
    copy(c, nameAppend = '_Copy', newParent = null) {
        super.copy(c, nameAppend, newParent);
        this.setLowerbound(c.lowerbound);
        this.setUpperbound(c.upperbound);
        this.unique = c.unique;
        this.ordered = c.ordered;
        this.setType(c.getType().toEcoreString(), null, false);
        this.refreshGUI();
    }
    getPackage() { return this.parent ? this.getClass().parent : null; }
    graph() { return this.getVertex().owner; }
    getVertex() { return this.parent ? this.getClass().getVertex() : null; }
    /*linkToMetaParent<T extends Typedd>(classChild: T) {
      U.pe(true, 'linkToMetaPrent: todo();');
      this.metaParent = classChild;
      if (!this.metaParent) { return; }
      U.ArrayAdd(this.metaParent.instances, this); }*/
    fullname() { return this.getClass().fullname() + '.' + this.name; }
    generateField() { return this.field = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IField"](this); }
    getField() { return this.field ? this.field : this.generateField(); }
    refreshGUI_Alone(debug = true) { this.getField().refreshGUI(true); }
    delete(refreshgui = true) {
        const oldparent = this.parent;
        super.delete(false);
        if (oldparent) {
            if (oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.attributes, this);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.references, this);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.getOperations(), this);
            }
            else if (oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
                // U.arrayRemoveAll(oldparent.childrens, this as any); done in modelpiece.delete()
            }
            else if (oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) { }
            else {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized parent class of typed modelpiece:' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(oldparent) + ':', this);
            }
        }
        if (refreshgui)
            oldparent.refreshGUI();
    }
    // getClassType(): M2Class { return this.type.classType; }
    getUpperbound() { return this.upperbound; }
    getLowerbound() { return this.lowerbound; }
    setUpperbound(val) { this.upperbound = isNaN(+val) ? -1 : +val; }
    setLowerbound(val) { this.lowerbound = isNaN(+val) || +val < 0 ? 0 : +val; }
}


/***/ }),

/***/ "./src/mClass/iClass.ts":
/*!******************************!*\
  !*** ./src/mClass/iClass.ts ***!
  \******************************/
/*! exports provided: IClass, M3Class */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IClass", function() { return IClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Class", function() { return M3Class; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _IClassifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IClassifier */ "./src/mClass/IClassifier.ts");
/* harmony import */ var _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/edgeStyle */ "./src/guiElements/mGraph/Edge/edgeStyle.ts");




class IClass extends _IClassifier__WEBPACK_IMPORTED_MODULE_2__["IClassifier"] {
    constructor(parent, meta) {
        super(parent, meta);
        this.referencesIN = []; // external pointers to this class.
        this.shouldBeDisplayedAsEdgeVar =  false && false;
        this.edges = [];
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.classes, this);
        }
        this.edgeStyleCommon = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].straight, 2, '#7f7f7f', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#000000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__["EdgeHeadStyle"](20, 20, '#7f7f7f', '#7f7f7f'));
        this.edgeStyleHighlight = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].straight, 2, '#ffffff', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#0077ff'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__["EdgeHeadStyle"](20, 20, '#ffffff', '#ffffff'));
        this.edgeStyleSelected = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].straight, 4, '#ffffff', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#ff0000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__["EdgeHeadStyle"](25, 25, '#ffffff', '#ffffff'));
    }
    fullname() { return this.parent.name + '.' + this.name; }
    generateEdge() { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'IClass.generateEdge() todo.'); return null; }
    canBeLinkedTo(target) {
        if (!this.shouldBeDisplayedAsEdge()) {
            return false;
        }
        return false;
    }
    getEdges() { return this.edges; }
    delete(refreshgui = true) {
        const oldparent = this.parent;
        super.delete(false);
        if (oldparent)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.classes, this);
        // todo: che fare con le reference a quella classe? per ora cancello i campi.
        const pointers = this.getReferencePointingHere();
        let i;
        for (i = 0; i < pointers.length; i++) {
            pointers[i].delete();
        }
        if (this.shouldBeDisplayedAsEdge()) {
            const edges = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.getEdges(), false);
            for (i = 0; i < edges.length; i++) {
                edges[i].remove();
            }
        }
        else {
            this.getVertex().remove();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
        if (refreshgui)
            this.refreshGUI();
    }
    refreshGUI_Alone(debug) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            return;
        }
        if (this.shouldBeDisplayedAsEdge()) {
            if (this.vertex) {
                this.vertex.remove();
                this.vertex = null;
            }
            const edges = this.getEdges();
            let i;
            for (i = 0; i < edges.length; i++) {
                edges[i].refreshGui(debug);
            }
            return;
        }
        this.getVertex().refreshGUI();
    }
    getReferencePointingHere() { return this.referencesIN; }
    /*getStyle_oldhtml(): SVGForeignObjectElement {
      const html: Element = super.getStyle().html; // U.removeemptynodes(super.getStyle(), true);
      const container: SVGForeignObjectElement = html as SVGForeignObjectElement; //U.newSvg<SVGForeignObjectElement>('foreignObject');
      const size: Size = new Size(0, 0, 0, 0);
      // todo: devi specificarlo che x, y, width, height sono attributi speciali assegnabili agli HTMLElement non-svg e vengono trasmessi.
      // todo: pondera l'uso di U.cloneAllAttributes(html, container); per trasferire gli attributi dell' userStyle-root nell'SvgForeignElem.
  
      const firstChild: HTMLElement = container.firstChild as HTMLElement;
      if (!firstChild.style.height || firstChild.style.height === '') { firstChild.style.height = 'auto'; }
      if (firstChild.style.height === 'auto') { container.dataset.autosize = 'true'; }
      else if (container.dataset.autosize === 'true') { firstChild.style.height = 'auto'; }
      // (html.firstChild as HTMLElement).style.height = 'auto'; // allows autosize.
  
  
      container.classList.add('Class');
      container.setAttributeNS(null, 'dinamico', 'true');
      /*
      size.x = +html.getAttribute('x');
      size.y = +html.getAttribute('y');
      size.w = +html.getAttribute('width');
      size.h = +html.getAttribute('height');
      container.setAttributeNS(null, 'x', isNaN(size.x) ? '0' : '' + size.x);
      container.setAttributeNS(null, 'y', isNaN(size.y) ? '0' : '' + size.y);
      container.setAttributeNS(null, 'width', isNaN(size.w) ? '200' : '' + size.w);
      container.setAttributeNS(null, 'height', isNaN(size.h) ? '100' : '' + size.h);
      container.appendChild(html);* /
      return container; }
  */
    getAttribute(name, caseSensitive = false) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        for (i = 0; i < this.attributes.length; i++) {
            const s = this.attributes[i].name;
            if ((caseSensitive ? s : s.toLowerCase()) === name) {
                return this.attributes[i];
            }
        }
        return null;
    }
    getReference(name, caseSensitive = false) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        for (i = 0; i < this.references.length; i++) {
            const s1 = this.references[i].name;
            console.log('find IReference[' + s1 + '] =?= ' + name + ' ? ' + (caseSensitive ? s1 : s1.toLowerCase()) === name);
            if ((caseSensitive ? s1 : s1.toLowerCase()) === name) {
                return this.references[i];
            }
        }
        return null;
    }
    /*generateEdge(): IEdge[] {
      const e: IEdge = null;
      U.pw(true, 'Class.generateEdge(): todo');
      // todo check questa funzione e pure il shouldbedisplayedasedge
      this.edges = [e];
      return this.edges; }*/
    copy(other, nameAppend = '_Copy', newParent = null) {
        super.copy(other, nameAppend, newParent);
        this.attributes = [];
        this.references = [];
        this.edges = [];
        this.edgeStyleCommon = other.edgeStyleCommon.clone();
        this.edgeStyleHighlight = other.edgeStyleHighlight.clone();
        this.edgeStyleSelected = other.edgeStyleSelected.clone();
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            const child = this.childrens[i];
            if (child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
                this.references.push(child);
                continue;
            }
            if (child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
                this.attributes.push(child);
                continue;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'found class.children not reference neither attribute: ', child);
        }
    }
    /*getEdge(): IEdge[] {
      U.pe(!this.shouldBeDisplayedAsEdge(), 'err');
      if (!this.edges) { this.generateEdge(); }
      return this.edges; }*/
    /*linkToMetaParent(meta: IClass): void {
      U.pe(true, 'linkToMetaParent: todo.');
      const outObj: any = {};
      const comformability: number = this.conformability(meta, outObj);
      if (comformability !== 1) {
        U.pw(true, 'm2Class: ' + this.name + ' not fully conform to ' + meta.name + '. Conformability: = ' + comformability * 100 + '%' );
        return; }
      this.metaParent = meta;
      let i: number;
      const refPermutation: number[] = outObj.refPermutation;
      const attrPermutation: number[] = outObj.attrPermutation;
      i = -1;
      while (++i < attrPermutation.length) { this.attributes[i].linkToMetaParent(meta.attributes[attrPermutation[i]]); }
      i = -1;
      while (++i < refPermutation.length) { this.references[i].linkToMetaParent(meta.references[refPermutation[i]]); }
    }*/
    /*conformability(meta: IClass, outObj: any = null/*.refPermutation, .attrPermutation* /, debug: boolean = true): number {
      if (this.attributes > meta.attributes) { return 0; }
      if (this.references > meta.references) { return 0; }
      const refLenArray: number[] = [];
      let i;
      let j;
      // find best references permutation compabilityF
      i = -1;
      while (++i < meta.references.length) { refLenArray.push(i); }
      const refPermut: number[][] = U.permute(refLenArray);
      // console.log('possible class.references permutations[' + meta.references.length + '!]:', refLenArray, ' => ', refPermut);
      const allRefPermutationConformability: number[] = [];
      i = -1;
      let bestRefPermutation: number[] = null;
      let bestRefPermutationValue = -1;
      while (++i < refPermut.length) {
        j = -1;
        const permutation = refPermut[i];
        let permutationComformability = 0;
        while (++j < permutation.length) {
          const Mref: IReference = this.references[j];
          const MMref: IReference = meta.references[permutation[j]];
          const refComf = !Mref ? 0 : Mref.conformability(MMref, debug);
          console.log('ref: permutationComformability:', permutationComformability, ' + ' + refComf + ' / ' + permutation.length,
            '-->', permutationComformability + refComf / permutation.length);
          permutationComformability += refComf / permutation.length; }
  
        allRefPermutationConformability.push(permutationComformability);
        if (permutationComformability > bestRefPermutationValue) {
          bestRefPermutation = permutation;
          bestRefPermutationValue = permutationComformability; }
        if (permutationComformability === 1) { break; }
      }
  
      // find best attributes permutation compability
      const attLenArray: number[] = [];
      i = -1;
      while (++i < meta.attributes.length) { attLenArray.push(i); }
      const attPermut: number[][] = U.permute(attLenArray, debug);
      // console.log('possible class.attributes permutations[' + meta.attributes.length + '!]:', attLenArray, ' => ', attPermut);
      const allAttPermutationConformability: number[] = [];
      i = -1;
      let bestAttPermutation: number[] = null;
      let bestAttPermutationValue = -1;
      while (++i < attPermut.length) {
        j = -1;
        const permutation = attPermut[i];
        let permutationComformability = 0;
        while (++j < permutation.length) {
          const M2att: IAttribute = this.attributes[j];
          const M3att: IAttribute = meta.attributes[permutation[j]];
          const attComf = !M2att ? 0 : M2att.conformability(M3att, debug);
          console.log('attr: permutationComformability:', permutationComformability, ' + ' + attComf + ' / ' + permutation.length,
            '-->', permutationComformability + attComf / permutation.length);
          permutationComformability += attComf / permutation.length; }
  
        allAttPermutationConformability.push(permutationComformability);
        if (permutationComformability > bestRefPermutationValue) {
          bestAttPermutation = permutation;
          bestAttPermutationValue = permutationComformability; }
        if (permutationComformability === 1) { break; }
      }
  
      const total = meta.childrens.length + 1; // + name
      const nameComformability = StringSimilarity.compareTwoStrings(this.name, meta.name) / total;
      bestAttPermutationValue = Math.max(0, bestAttPermutationValue * (meta.attributes.length / total));
      bestRefPermutationValue = Math.max(0, bestRefPermutationValue * (meta.references.length / total));
      if (outObj) {
        outObj.refPermutation = bestRefPermutation;
        outObj.attrPermutation = bestAttPermutation; }
  
      const ret = nameComformability + bestAttPermutationValue + bestRefPermutationValue;
      U.pif(debug, 'M2CLASS.comform(', this.name, {0: this}, ', ', meta.name, {0: meta}, ') = ', ret,
        ' = ', nameComformability + ' + ' + bestAttPermutationValue + ' + ', bestRefPermutationValue);
      return ret; }*/
    getOperations() {
        if (this instanceof M3Class) {
            let i;
            for (i = 0; i < this.childrens.length; i++) {
                const c = this.childrens[i];
                if (c instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
                    return [c];
                }
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to find m3Operation');
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"]) {
            return this.operations;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"]) {
            return this.metaParent.operations;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected class:' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this) + ': ', this);
    }
}
class M3Class extends IClass {
    constructor(parent, json = null) {
        super(parent, null);
        this.parse(json, true);
    }
    duplicate(nameAppend, newParent) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Class.duplicate()'); return this; }
    generateModel() { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Class.generateModel()'); return this; }
    parse(json, destructive) {
        this.name = 'Class';
        this.childrens = [];
        this.attributes = [];
        this.references = [];
        this.instances = [];
        const a = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Attribute"](this, null);
        const r = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Reference"](this, null);
        const o = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"](this, null);
        const p = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"](o, null);
    }
    refreshGUI_Alone(debug = true) { }
}


/***/ }),

/***/ "./src/mClass/m2Class.ts":
/*!*******************************!*\
  !*** ./src/mClass/m2Class.ts ***!
  \*******************************/
/*! exports provided: M2Class */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Class", function() { return M2Class; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class M2Class extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] {
    /*
      static updateAllMMClassSelectors(root0: Element = null, updateModel: boolean = false, updateSidebar: boolean = true): void {
        let root: Element = root0;
        if (!Status.status.loadedGUI) { return; }
        if (!root) { root = Status.status.mm.graph.container; }
        // console.log('updateAllMMClassSelectors()', 'selects:', $selectors, root);
        const $selectors = $(root).find('select.ClassSelector');
        let i = -1;
        while (++i < $selectors.length) { M2Class.updateMMClassSelector($selectors[i] as HTMLSelectElement); }
        if (updateSidebar && Status.status.m && Status.status.m.sidebar) { Status.status.m.sidebar.loadDefaultHtmls(); }
        if (!updateModel) { return; }
        // if (Status.status.mm && Status.status.mm.sidebar) { Status.status.mm.sidebar.updateAll(); }
        if (Status.status.m) { Status.statm.refreshGUI(); }
      }
    /*
      static updateMMClassSelector(htmlSelect: HTMLSelectElement, selected: M2Class = null, debug = false,
                                   mustSelect: boolean = true): HTMLSelectElement {
        if (!htmlSelect || !Status.status.loadedGUI) { return; }
        const optGrp: HTMLOptGroupElement = document.createElement('optgroup');
        let toSelect: string;
        if (debug) { console.clear(); }
        if (mustSelect && !selected) {
          const mp: ModelPiece = ModelPiece.getLogic(htmlSelect);
          U.pif(debug, 'ownermp:', mp, 'select:', htmlSelect);
          // if (ownermp instanceof IAttribute || ownermp instanceof MAttribute) { selected = ownermp.parent as M2Class; }
          if (mp instanceof Typedd) { selected = (mp as Typedd).type; }
          U.pw(!selected, 'ClassSelectors must be held inside a m2-reference:', htmlSelect, 'ownermp:', mp) ;
          if (!selected) { return; }
        }
        toSelect = '' + (selected ? selected.id : '');
        U.pif(debug, 'selected:', selected);
        U.clear(htmlSelect);
        htmlSelect.appendChild(optGrp);
        optGrp.setAttribute('label', 'Class list');
        const mmClasses: M2Class[] = Status.status.mm.getAllClasses();
        let i: number;
        let found: boolean = !mustSelect;
        for (i = 0; i < mmClasses.length; i++) {
          const classe: M2Class = mmClasses[i];
          if (classe.shouldBeDisplayedAsEdge()) { continue; }
          const opt: HTMLOptionElement = document.createElement('option');
          opt.value = '' + classe.id;
          if (toSelect && opt.value === toSelect) { opt.setAttribute('selected', ''); opt.selected = found = true; }
          // console.log('mustselect?' + mustSelect + ': ' + toSelect + '&&' + opt.value + ' ? ' + found);
          opt.innerHTML = classe.name;
          optGrp.appendChild(opt); }
        U.pw(debug && !found, 'class not found.', mmClasses, 'searchedClass:', selected,
          'shouldBeEdge?', selected && selected.shouldBeDisplayedAsEdge());
        return htmlSelect; }
    */
    // isRoot(): boolean { U.pe(true, 'm2 class cannot be roots.'); return false; }
    // setRoot(value: boolean): void { U.pe(true, 'only usable in model version'); }
    constructor(pkg, json) {
        super(pkg, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getAllClasses()[0]);
        // features: M2Feature[]; // M2Feature[];
        this.operations = [];
        this.extends = [];
        this.instances = [];
        if (!pkg && !json) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true);
    }
    getModelRoot() { return super.getModelRoot(); }
    getNamespaced() {
        const str = this.getModelRoot().namespace();
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return str;
        }
        return str + ':' + this.name;
    }
    parse(json, destructive) {
        //     console.log('M2Class.parse(); json:', json, '; metaVersion: ', this.metaParent, 'this:', this);
        /// own attributes.
        this.extendEdges = [];
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].namee, 'Class_1'), false);
        let key;
        for (key in json) {
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'unexpected field in M2Class.parse() |' + key + '|', json);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].instanceTypeName:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eSuperTypes:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eOperations:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eStructuralFeatures:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].abstract:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].interface:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].namee: break;
            }
        }
        this.instanceTypeName = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].instanceTypeName, '');
        this.isInterface = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].interface, 'false') === 'true';
        this.isAbstract = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].abstract, 'false') === 'true';
        let tmps = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eSuperTypes, null);
        this.extendsStr = tmps ? tmps.split(' ') : [];
        // U.pe(true, 'extendsStr:', this.extendsStr, 'tmps', tmps, 'typeof tmps:' + typeof(tmps), 'json:', json);
        /*this.name = Json.read<string>(this.json, ECoreClass.name);
        this.fullname = this.midname = this.parent.fullname + '.' + this.name;*/
        /// childrens
        const features = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        const functions = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json, false, true);
        let i;
        let newFeature;
        const oldChildrens = this.childrens;
        // let metaParent: M3Feature;
        if (destructive) {
            this.childrens = [];
            this.attributes = [];
            this.references = [];
            this.operations = [];
        }
        for (i = 0; i < features.length; i++) {
            // console.log('reading class children[' + i + '/' + childs.length + '] of: ', childs, 'of', json);
            const child = features[i];
            const xsiType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(child, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].xsitype);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!destructive, 'Non-destructive class parse: to do');
            switch (xsiType) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected xsi:type: ', xsiType, ' in feature:', child);
                    break;
                case 'ecore:EAttribute':
                    // metaParent = oldChildrens[i] && oldChildrens[i].metaParent ? oldChildrens[i].metaParent : U.findMetaParentA(this, child);
                    newFeature = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"](this, child);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.attributes, newFeature);
                    break;
                case 'ecore:EReference':
                    const metaRef = null;
                    // metaParent = oldChildrens[i] && oldChildrens[i].metaParent ? oldChildrens[i].metaParent : U.findMetaParentA(this, child);
                    newFeature = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"](this, child);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.references, newFeature);
                    break;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newFeature);
        }
        for (i = 0; i < functions.length; i++) {
            const newFunction = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"](this, functions[i]);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.operations, newFunction);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newFunction);
        }
    }
    generateModel() {
        const featurearr = [];
        const operationsarr = [];
        const model = {};
        let supertypesstr = '';
        const key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getStartSeparatorKey();
        let i;
        for (i = 0; i < this.extends.length; i++) {
            supertypesstr += _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key, ' ') + this.extends[i].getEcoreTypeName();
        }
        for (i = 0; i < this.attributes.length; i++) {
            featurearr.push(this.attributes[i].generateModel());
        }
        for (i = 0; i < this.references.length; i++) {
            featurearr.push(this.references[i].generateModel());
        }
        for (i = 0; i < this.operations.length; i++) {
            operationsarr.push(this.operations[i].generateModel());
        }
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype] = 'ecore:EClass';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].namee] = this.name;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].interface] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toBoolString(this.isInterface);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].abstract] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toBoolString(this.isAbstract);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].instanceTypeName] = this.instanceTypeName;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eSuperTypes] = supertypesstr;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eStructuralFeatures] = featurearr;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eOperations] = operationsarr;
        return model;
    }
    addOperation() {
        const op = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"](this, null);
        let i;
        for (i = 0; i < this.instances.length; i++) {
            const inst = this.instances[0];
        }
        this.refreshInstancesGUI();
        this.refreshGUI();
        return op;
    }
    addReference() {
        const ref = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"](this, null);
        ref.type.changeType(null, null, this);
        ref.generateEdges();
        let i;
        for (i = 0; i < this.instances.length; i++) {
            const inst = this.instances[i];
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"](inst, null, ref);
        }
        this.refreshInstancesGUI();
        this.refreshGUI();
        // M2Class.updateAllMMClassSelectors(ref.getHtml());
        return ref;
    }
    addAttribute() {
        console.log('addAttribute: pre', this);
        const attr = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"](this, null);
        let i;
        for (i = 0; i < this.instances.length; i++) {
            const inst = this.instances[i];
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"](inst, null, attr);
        }
        this.refreshInstancesGUI();
        this.refreshGUI();
        return attr;
    }
    fieldChanged(e) {
        const html = e.currentTarget;
        if (html.classList.contains('AddFieldSelect'))
            return;
        switch (html.tagName.toLowerCase()) {
            case 'select':
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                break;
            case 'textarea':
            case 'input':
                const input = html;
                input.value = this.setName(input.value);
                break;
        }
    }
    /*
      setName(name: string, refreshGUI: boolean = true): void {
        super.setName(name, refreshGUI);
        return;
        this.midname = this.parent.name + '.' + this.name;
        this.fullname = this.midname;
        let i;
        for (i = 0; i < this.childrens.length; i++) {
          this.childrens[i].setName(this.childrens[i].name, false && refreshGUI); // per aggiornare il fullname.
        }
        if (refreshGUI) { this.refreshGUI(); M2Class.updateAllMMClassSelectors(); }
    }*/
    duplicate(nameAppend = '_Copy', newParent = null) {
        const c = new M2Class(null, null);
        c.copy(this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
        c.refreshGUI();
        return c;
    }
    getExtendedClassArray(levelDeep = Number.POSITIVE_INFINITY, out = []) {
        let i;
        for (i = 0; i < this.extends.length; i++) {
            const curr = this.extends[i];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(out, curr);
            if (levelDeep > 0) {
                curr.getExtendedClassArray(levelDeep--, out);
            }
        }
        return out;
    }
    // linkToMetaParent(meta: M3Class): void { return super.linkToMetaParent(meta); }
    getReferencePointingHere() { return super.getReferencePointingHere(); }
    getAttribute(name, caseSensitive = false) { return super.getAttribute(name, caseSensitive); }
    getReference(name, caseSensitive = false) { return super.getReference(name, caseSensitive); }
    isExtending(subclass) {
        if (!subclass)
            return false;
        const extendedTargetClasses = subclass.getExtendedClassArray();
        let i;
        for (i = 0; i < extendedTargetClasses.length; i++) {
            if (this === extendedTargetClasses[i]) {
                return true;
            }
        }
        return false;
    }
    static updateSuperClasses() {
        const dictionary = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getEcoreStr_Class_Dictionary();
        const classes = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllClasses();
        let j;
        let i;
        for (i = 0; i < classes.length; i++) {
            const classe = classes[i];
            for (j = 0; j < classe.extendsStr.length; j++) {
                const target = dictionary[classe.extendsStr[j]];
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!target, 'e1, failed to find extended class.extendsStr[' + j + ']:', classe.extendsStr[j], 'in classList:', classes, 'classe to extend:', classe, 'dictionary:', dictionary);
                classe.extendClass(null, target);
            }
            classe.extendsStr = [];
        }
    }
    extendClass(targetstr, target) {
        if (!target)
            target = this.getModelRoot().getClassFromEcoreStr(targetstr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!target, 'e2, failed to find extended class:', targetstr, 'in classList:', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllClasses(), 'this:', this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.extends, target);
    }
    unextendClass(targetstr, target) {
        if (!target)
            target = this.getModelRoot().getClassFromEcoreStr(targetstr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!target, 'e3, failed to find extended class:', targetstr, 'in classList:', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllClasses(), 'this:', this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.extends, target);
    }
    makeExtendEdge(target) {
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"](this, this.getVertex(), target.getVertex());
        this.extendEdges.push(ret);
        return ret;
    }
}


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");





if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\Programming\web\jjodel\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es2015.js.map