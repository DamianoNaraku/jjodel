(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/color-scheme/color-scheme.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/color-scheme/color-scheme.component.html ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"colorSchemeEditorRoot\" class=\"screenWideShadow\" [ngStyle]=\"{display: 'none', visibility: (this.temporaryInvisible ? 'hidden' : 'visible')}\">\n  <div class=\"popupContent\" style=\"min-width: 75vw;\">\n    <button class=\"btn btn-danger m-auto mr-2 p-0\" style=\"width: 40px; height: 40px; position: absolute; right: 30px; top: 30px;\" (click)=\"hide()\">X</button>\n    <div style=\"position: absolute; height: 100vw; right: 30px; top: 70px; background: inherit; border-left: 5px solid; border-color: var(--color-bg-1);\">\n      <div class=\"eye mt-2 p-0\" style=\"height: 0; position: sticky; top:0; visibility: visible;\" (mouseenter)=\"invisible()\" (mouseleave)=\"visible()\" (click)=\"hide()\">\n        <svg style=\"height: 40px; width: 40px; cursor: hand;\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" class=\"svg-inline--fa fa-eye fa-w-18 fa-lg\"><path fill=\"currentColor\" d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" class=\"\"></path></svg>\n      </div>\n    </div>\n    <div class=\"d-flex w-100\">\n      <h1 class=\"d-inline-flex m-auto\">Color scheme editor</h1>\n    </div>\n    <table class=\"table\">\n      <thead>\n      <tr>\n        <th style=\"width: min-content\">Delete</th>\n        <th style=\"width: min-content\">Active</th>\n        <th style=\"min-width: 150px;\">Name</th>\n        <th style=\"min-width: 220px;\" title=\"to limit the activation scope of a color scheme\">CSS scope selector</th>\n        <th style=\"min-width: 150px;\" title='To manually access this color scheme colors as css variables.\\nUse \"var(--\" + prefix + colorIndex + \")\" in css'>Color prefix</th>\n        <th>Colors</th>\n        <th>Add Colors</th>\n        <th title=\"if many color schemes are conflicting due to same scope and access mode, the one with highest priority is applied\">\n          <div class=\"rowContainer\"><div class=\"rowChildren\">Priority</div><div class=\"rowChildren\">(ascending)</div></div>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let cs of this.colorSchemes; index as csindex\">\n        <td class=\"\">\n          <button class=\"ruledelete btn btn-danger\" (click)=\"this.remove(cs)\">X</button>\n        </td>\n        <td class=\"\">\n          <input class=\"w-100\" type=\"checkbox\" (change)=\"this.toggleArchived(cs)\" [checked]=\"cs.isActive\">\n        </td>\n        <td class=\"\"><input class=\"form-control input-group-text w-100\" [value]=\"cs.name\" (change)=\"this.changeName($event, cs)\"/></td>\n        <td class=\"\"><input class=\"form-control input-group-text w-100\" [value]=\"cs.selector\" [placeholder]=\"cs.autoselector\" (change)=\"this.changeSelector($event, cs)\"/></td>\n        <td class=\"\"><input class=\"form-control input-group-text w-100\" [value]=\"cs.colorPrefix\" (change)=\"this.changeColorPrefix($event, cs)\"/></td>\n        <td class=\"p-0 rowcontainer\">\n          <div class=\"d-flex flex-wrap\" style=\"margin:4px; justify-content: start;\">\n              <span *ngFor=\"let color of cs.foreColors; index as i\">\n                <input style=\"width: 30px; height: 30px; margin: 2.5px;\" type=\"color\" [value]=\"color\" [attr.valuetest]=\"color\" (change)=\"this.changeColor($event, cs, cs.foreColors, i)\">\n              </span>\n          </div>\n        </td>\n        <td style=\"white-space: nowrap;\">\n          <button class=\"btn btn-outline-success p-0 mr-1\" style=\"width: 30px; height: 30px\" (click)=\"this.addColor($event, cs, cs.foreColors)\">+</button>\n          <button class=\"btn btn-outline-danger p-0\" style=\"width: 30px; height: 30px\" (click)=\"this.removeColor($event, cs, cs.foreColors)\">-</button>\n        </td>\n        <td class=\"\">\n          <button class=\"d-block m-auto move btn btn-outline-secondary w-30 h-30 pt-0 pb-0\" (click)=\"this.move($event, cs, csindex, -1)\">↑</button>\n          <button style=\"margin: auto\" class=\"d-block move btn btn-outline-secondary w-30 h-30 pt-0 pb-0 mt-1\" (click)=\"this.move($event, cs, csindex, +1)\">⇣</button>\n        </td>\n      </tr>\n      </tbody>\n      <tfoot>\n      <tr>\n        <td colspan=\"8\"><button class=\"btn btn-success btn-lg w-100\" (click)=\"addCS()\">+</button></td>\n      </tr>\n      </tfoot>\n    </table>\n\n    <p style=\"white-space: pre;\">{{this.styleStr}}</p>\n    <style>{{this.styleStr}}</style>\n  </div>\n</div>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/measurabletemplate/measurabletemplate.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/measurabletemplate/measurabletemplate.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id=\"measurableTemplateGeneratorShell\" class=\"template colChild mt-4\">\r\n  <label class=\"labelmeasurable\">\r\n    <input class=\"ismeasurable\" type=\"checkbox\"><span>is measurable</span>\r\n  </label>\r\n  <div class=\"meas_acc0\">\r\n    <h7 class=\"ruletitle btn btn-link collapsed maintitle\" type=\"button\" data-parent=\".meas_acc0\" data-toggle=\"collapse\" data-target=\".meas_acc0 > .measurableSettingRoot\">\r\n      <span class=\"innertitle\">Measurable Settings</span>\r\n    </h7>\r\n    <div class=\"measurableSettingRoot collapse\">\r\n      <div class=\"boxesroot\">\r\n        <div class=\"resizable boxroot\">\r\n          <h6 class=\"boxtitle\">Resizable handles</h6>\r\n          <div class=\"rectangledrawing outer\">\r\n            <div class=\"top row\">\r\n              <input type=\"checkbox\" class=\"arrow corner top left\" direction=\"nw\">\r\n              <input type=\"checkbox\" class=\"arrow side top\" direction=\"n\">\r\n              <input type=\"checkbox\" class=\"arrow corner top right\" direction=\"ne\">\r\n            </div>\r\n            <div class=\"mid row\">\r\n              <input type=\"checkbox\" class=\"arrow side left\" direction=\"w\">\r\n              <div class=\"middle\">\r\n                <div class=\"rectangledrawing inner\">\r\n                  <div class=\"top row\">\r\n                    <div class=\"corner top left\" direction=\"nw\"></div>\r\n                    <div class=\"side top\" direction=\"n\"></div>\r\n                    <div class=\"corner top right\" direction=\"ne\"></div>\r\n                  </div>\r\n                  <div class=\"mid row\">\r\n                    <div class=\"side left\" direction=\"w\"></div>\r\n                    <div class=\"middle\">\r\n                    </div>\r\n                    <div class=\"side right\" direction=\"e\"></div>\r\n                  </div>\r\n                  <div class=\"bot row\">\r\n                    <div class=\"corner bot left\" direction=\"sw\"></div>\r\n                    <div class=\"side bot\" direction=\"s\"></div>\r\n                    <div class=\"corner bot right\" direction=\"se\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <input type=\"checkbox\" class=\"arrow side right\" direction=\"e\">\r\n            </div>\r\n            <div class=\"bot row\">\r\n              <input type=\"checkbox\" class=\"arrow corner bot left\" direction=\"sw\">\r\n              <input type=\"checkbox\" class=\"arrow side bot\" direction=\"s\">\r\n              <input type=\"checkbox\" class=\"arrow corner bot right\" direction=\"se\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"draggable boxroot\">\r\n          <h6 class=\"boxtitle\">Draggable directions</h6>\r\n          <div class=\"rectangledrawing directions\">\r\n            <input type=\"checkbox\" class=\"arrow arrowh drag\" direction=\"x\">\r\n            <input type=\"checkbox\" class=\"arrow arrowv drag\" direction=\"y\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"meas_acc\">\r\n        <input class=\"form-control rulesearch\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\r\n        <!-- dynamically generated accordions will be placed below -->\r\n      </div>\r\n\r\n      <div class=\"rule template\">\r\n        <h7 class=\"ruletitle btn btn-link collapsed\" type=\"button\" data-parent=\".meas_acc\" data-toggle=\"collapse\" data-target=\"DYNAMICALLYFILLED\">###</h7>\r\n        <div class=\"rulecontainer columncontainer collapse template\">\r\n\r\n          <div class=\"leftx column\"><button class=\"ruledelete btn btn-danger\">X</button>\r\n          </div>\r\n          <div class=\"rightx column rowcontainer fill break mb-3\">\r\n            <div class=\"row break\">\r\n              <label class=\"compoundInputprefix nobreak input-group-prepend form-control\">\r\n                <span class=\"prefix form-control\">_</span>\r\n                <input type=\"text\" class=\"form-control attrname\" placeholder=\"DYNAMICALLYFILLED\" pattern=\"^[\\S]*$\">\r\n                <select class=\"operator trigger\">\r\n                  <optgroup label=\"When\">\r\n                    <option>Start</option>\r\n                    <option>ing</option>\r\n                    <option selected>End</option>\r\n                  </optgroup>\r\n                </select>\r\n              </label>\r\n              <span class=\"botmarg\"><span class=\"postName\">holds rule:</span></span>\r\n            </div>\r\n            <div class=\"row break\">\r\n              <span class=\"botmarg\"><span class=\"preleft prefix form-control\">####</span></span>\r\n              <input type=\"text\" class=\"form-control leftside\" placeholder=\"DYNAMICALLYFILLED\">\r\n              <span class=\"eventsplitpoint operatorcontainer\">\r\n                <span class=\"operator\">=</span>\r\n                <select class=\"operator relational\">\r\n                  <optgroup label=\"Operator\">\r\n                    <option>&lt;=</option>\r\n                    <option selected>=</option>\r\n                    <option>&gt;=</option>\r\n                  </optgroup>\r\n                </select></span>\r\n              <input type=\"text\" class=\"form-control rightside\" placeholder=\"#######\">\r\n            </div><input type=\"text\" class=\"form-control target\" placeholder=\"Rel. target selector\">\r\n            <div class=\"measurabledebug rowcontainer\">\r\n              <button class=\"btn btn-primary executedebug\">Test it!</button>\r\n              <span class=\"debugrows\" tabindex=\"-1\">\r\n                <span class=\"measurableoktext\"><span>Debug output: </span></span>\r\n                <span class=\"measurablewarningtext\" tabindex=\"-1\"><span>Left: </span><span class=\"measurableoutputtext debugleft\"></span></span>\r\n                <span class=\"measurablewarningtext\" tabindex=\"-1\"><span>Operator: </span><span class=\"measurableoutputtext debugoperator\"></span></span>\r\n                <span class=\"measurablewarningtext\" tabindex=\"-1\"><span>Right: </span><span class=\"measurableoutputtext debugright\"></span></span>\r\n                <span class=\"measurablewarningtext\" tabindex=\"-1\"><span>Target: </span><span class=\"measurableoutputtext debugtarget\"></span></span>\r\n                <span class=\"measurablewarningtext\" tabindex=\"-1\"><span>Triggered: </span><span class=\"measurableoutputtext debugtriggers\"></span></span>\r\n                <!--\r\n                <span class=\"measurablewarningtext\" tabindex=\"-1\"><span>Warnings: </span><span class=\"text\"></span></span>\r\n                <span class=\"measurableerrortext\" tabindex=\"-1\"><span>Errors: </span><span class=\"text\"></span></span>\r\n                -->\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!--\r\n\r\n\r\n  NB: non è possibile inserire N relativeTarget direttamente, ma è possibile usarne uno in ogni _Variable, memorizzare i dati d'interesse sul bersaglio nella variabile ed accedervi in altri attributi.\r\n  esempio: come inserire un nodo equidistante tra due nodi bersaglio.\r\n  _target1=\"positionX\"\r\n  relativetargetof_target1=\"#leftside\"\r\n  _target2=\"positionX\"\r\n  relativetargetof_target2=\"#rightside\"\r\n  _import=\"positionX = (a.target1 + a.target2) / 2\"\r\n\r\n  angle:false,\r\n  class Rotatableoptions {\r\n  degrees: string = 'false | number';\r\n  radians: string = 'false | number';\r\nhandle: string = 'url', //  internamente richiede come parametro un $('imageselector')... crea un elemento con quell'immagine. e appendilo al vertice con display: none per evitare di ricrearne uno ogni volta che crei un vertice, almeno così viene anche cancellato assieme al vertice. prova se l'url netto va bene lo stesso in overloading\r\n  handleOffsetX: string = 'width / 2';\r\n  handleOffsetY: string = '-20'; // internamente è: handleOffset: { top: 0, left: 0 }\r\n  rotationCenterOffsetX: string = 'width / 2';\r\n  rotationCenterOffsetY: string = 'height / 2';\r\n  // internamente è: rotationCenterOffset: { top: 0, left: 0 } from the center of the element\r\n  step: string = 'degree', // internamente ha \"snap = boolean\" e step = number, setta anche snap = true se trovi step come attributo measur-rotatable.\r\n  transforms: string = 'null | {scaleY: 2}'; // non chiaro neanche negli esempi demo. googla.\r\n  wheelRotate: string = 'false' // NB: non previene lo scroll della pagina come azione default.\r\n  onRotating: string = 'rotate: function(event, ui) { ... }'; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.\r\n  onRotationStart: string = same as above // in realtà è \"start\"\r\n  onRotationEnd: string = same as above // in realtà è \"stop\"\r\n  }\r\n\r\n--->\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/console/console.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/console/console.component.html ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"mmconsole resizableBorder resizableContent\" data-resizabletop=\"true\" original=\"true\" data-resizableleft=\"true\" data-resizableright=\"true\" data-resizablebottom=\"true\">\r\n  <div class=\"consoleRoot\">\r\n    <div class=\"consoleContent\"></div>\r\n    <div class=\"inputLine\" tabindex=\"-1\">\r\n      <span class=\"input\" contenteditable=\"true\"></span>\r\n      <label class=\"suggestion\"></label>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/dam-context-menu/dam-context-menu.component.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/dam-context-menu/dam-context-menu.component.html ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"hidden-static-contextmenu-container\">\r\n<div id=\"damContextMenuTemplateContainer\" class=\"contextMenuRoot overflowFix\" tabindex=\"-1\">\r\n    <div class=\"overflowFixContent\">\r\n      <ul class=\"vertex contextMenu\" tabindex=\"-1\">\r\n        <li class=\"Vertex changeType popupRightParent\" uif=\"class\" tabindex=\"-1\">\r\n          <span tabindex=\"-1\" uif=\"m2\"><icon magic></icon>Change instances type</span>\r\n          <span tabindex=\"-1\" uif=\"m1\"><icon edit></icon>Change type</span>\r\n          <ul class=\"typelist popupRight\">\r\n            <li class=\"typeli fallback unclickable\" style=\"cursor: no-drop; color: red;\">##ERROR MSG TO FILL##</li>\r\n            <li class=\"typeli description unclickable\"><span>Best match:</span></li>\r\n            <li class=\"typeli separator\" tabindex=\"-1\"></li>\r\n            <li class=\"typeli description unclickable\"><span>Other options</span></li>\r\n            <li class=\"typeli terminal template\" data-index=\"-1\">\r\n              <span class=\"typeli change text\"></span>\r\n          </ul>\r\n        </li>\r\n        <li class=\"terminal Vertex todo duplicate\" uif=\"classifier\"><icon duplicate></icon>Duplicate classifier</li>\r\n        <li class=\"terminal Vertex extend\" uif=\"m2 && class && ongraph\"><icon extend></icon>Extend class</li>\r\n        <li class=\"Vertex popupRightParent\" uif=\"m2 && class && ongraph\" tabindex=\"-1\">\r\n          <span tabindex=\"-1\"><icon add></icon>Insert feature</span>\r\n          <ul class=\"reflist popupRight\">\r\n            <li class=\"terminal insert attribute\">Attribute</li>\r\n            <li class=\"terminal insert reference\">Reference</li>\r\n            <li class=\"terminal insert operation\">Operation</li>\r\n            <li class=\"terminal insert annotation todo\">Annotation</li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"Operation popupRightParent\" uif=\"m2 && !class && ongraph\" tabindex=\"-1\">\r\n          <span tabindex=\"-1\"><icon add></icon>Insert children</span>\r\n          <ul class=\"reflist popupRight\">\r\n            <li class=\"terminal insert literal\" uif=\"enum\">Literal</li>\r\n            <li class=\"terminal insert parameter\" uif=\"operation\">Parameter</li>\r\n            <li class=\"terminal insert annotation todo\">Annotation</li>\r\n          </ul>\r\n        </li>\r\n\r\n\r\n\r\n        <li class=\"terminal Vertex delete\" uif=\"classifier\"><icon trash></icon>Delete classifier</li>\r\n        <li class=\"terminal Vertex delete\" uif=\"m2 && feature\"><icon trash></icon>Delete feature</li>\r\n        <li class=\"terminal Vertex delete\" uif=\"m2 && operation\"><icon trash></icon>Delete operation</li>\r\n        <li class=\"terminal Vertex delete\" uif=\"m2 && literal\"><icon trash></icon>Delete literal</li>\r\n        <li class=\"terminal Vertex delete\" uif=\"m2 && parameter\"><icon trash></icon>Delete parameter</li>\r\n        <li class=\"terminal Vertex delete\" uif=\"m2 && annotation\"><icon trash></icon>Delete annotation</li>\r\n        <li class=\"terminal Vertex todo duplicate\" uif=\"m2 && feature\"><icon duplicate></icon>Duplicate feature</li>\r\n        <li class=\"terminal Vertex todo duplicate\" uif=\"m2 && operation\"><icon duplicate></icon>Duplicate operation</li>\r\n        <li class=\"Reference popupRightParent\" uif=\"m1 && reference && ongraph\" tabindex=\"-1\">\r\n          <span tabindex=\"-1\"><icon right></icon>References</span>\r\n          <ul class=\"reflist popupRight\">\r\n            <li class=\"terminal refli template\" data-index=\"-1\"><span class=\"index\"></span><span class=\"text\"></span><button class=\"refli delete btn btn-sm btn-danger\">X</button></li>\r\n            <li class=\"refli\"><button class=\"firstempty btn btn-sm btn-primary\">Select first empty</button></li>\r\n            <li class=\"refli\"><label><input class=\"byindex\" type=\"number\" digit=\"2\" value=\"0\" min=\"0\" step=\"1\"><button class=\"byindex btn btn-sm btn-outline-primary\">Select by index</button></label></li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"terminal Feature todo autofixinstances\" uif=\"m2 && feature\"><icon magic></icon>Autofix instances</li>\r\n        <li class=\"terminal Feature todo autofix\" uif=\"m1 && feature\"><icon magic></icon>Autofix conformity</li>\r\n        <li class=\"separator\" uif=\"classifier || m2 && feature || m2 && operation || m2 && annotation\" tabindex=\"-1\"></li>\r\n        <li class=\"terminal Vertex up\" uif=\"classifier && ongraph\"><icon up></icon>Push vertex Up (Z-order)</li>\r\n        <li class=\"terminal Vertex down\" uif=\"classifier && ongraph\"><icon down></icon>Push vertex Down (Z-order)</li>\r\n        <li class=\"terminal Feature up\" uif=\"m2 && feature && ongraph\"><icon up></icon>Move feature Up</li>\r\n        <li class=\"terminal Feature down\" uif=\"m2 && feature && ongraph\"><icon down></icon>Move feature Down</li>\r\n        <li class=\"terminal Feature up\" uif=\"m2 && operation && ongraph\"><icon up></icon>Move operation Up</li>\r\n        <li class=\"terminal Feature down\" uif=\"m2 && operation && ongraph\"><icon down></icon>Move operation Down</li>\r\n        <li class=\"terminal Feature up\" uif=\"m2 && annotation && ongraph\"><icon up></icon>Move annotation Up</li>\r\n        <li class=\"terminal Feature down\" uif=\"m2 && annotation && ongraph\"><icon down></icon>Move annotation Down</li>\r\n      </ul>\r\n      <ul class=\"extedge contextMenu\" uif=\"extedge\">\r\n        <li class=\"terminal edge delete\"><icon trash></icon>Delete generalization</li>\r\n        <li class=\"terminal edge change\" style=\"display: none;\"><icon edit></icon>Edit generalization</li>\r\n      </ul>\r\n      <ul class=\"edge contextMenu\" uif=\"edge\">\r\n        <li class=\"terminal edge delete\"><icon trash></icon>Delete reference</li>\r\n        <li class=\"terminal edge change\" style=\"display: none;\"><icon down></icon>Edit reference</li>\r\n      </ul>\r\n    </div>\r\n</div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/graph-tab-html/graph-tab-html.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/graph-tab-html/graph-tab-html.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"UtabContainer main\" data-selectedTab=\"1\">\r\n  <ul class=\"UtabHeaderContainer main\">\r\n    <li class=\"UtabHeader main\" data-target=\"1\">MetaModel</li>\r\n    <li class=\"UtabHeader main\" data-target=\"2\">Model</li>\r\n  </ul>\r\n  <div class=\"UtabContentContainer\">\r\n    <div class=\"UtabContent main\" data-target=\"1\"><app-mm-graph-html></app-mm-graph-html></div>\r\n    <div class=\"UtabContent main\" data-target=\"2\"><app-m-graph-html></app-m-graph-html></div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/isidebar/isidebar.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/isidebar/isidebar.component.html ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>\r\n  isidebar works!\r\n</p>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/m-graph-html/m-graph-html.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/m-graph-html/m-graph-html.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"verticalFillingContainer\">\r\n  <div class=\"verticalFiller horizontalFillingContainer\">\r\n    <div class=\"sidebarShell resizableBorder\" data-resizableRight=\"true\">\r\n      <div id='model_sidebar'></div>\r\n    </div>\r\n    <div class=\"editorShell horizontalFiller\">\r\n      <ul class =\"viewpointShell\">\r\n        <h6>Viewpoints</h6>\r\n        <li class=\"viewpointrow default\">\r\n          <label class=\"name\">\r\n            <input type=\"radio\" checked>\r\n            <input class=\"name form-control-sm\" type=\"text\" value=\"Default\" readonly><button class=\"duplicate\"></button>\r\n          </label>\r\n        </li>\r\n        <li class=\"viewpointrow template\">\r\n          <label class=\"checkbox\"><input type=\"checkbox\"></label>\r\n          <label class=\"name\"><input class=\"name form-control-sm\" type=\"text\">\r\n            <span class=\"buttons\">\r\n            <button class=\"duplicate\"></button><button class=\"edit\"></button><button class=\"remove\"></button>\r\n          </span>\r\n          </label>\r\n        </li>\r\n      </ul>\r\n      <svg class=\"graph\" id='model_editor'>\r\n        <g class=\"gridContainer\">\r\n          <defs></defs>\r\n          <rect class=\"grid\"></rect>\r\n        </g>\r\n      </svg>\r\n      <div id='model_navigatorOutlineContainer'></div>\r\n    </div>\r\n    <!-- style of propertybar must be inline for resizableBorder js -->\r\n    <div class=\"UtabContainer propertyBarContainer resizableBorder\" data-resizableLeft=\"true\" data-selectedTab=\"2\" style=\"width: 283px;\">\r\n      <ul class=\"UtabHeaderContainer\">\r\n        <li class=\"UtabHeader\" data-target=\"1\">Style</li>\r\n        <li class=\"UtabHeader\" data-target=\"2\">Structured</li>\r\n        <li class=\"UtabHeader\" data-target=\"3\">Raw</li>\r\n      </ul>\r\n      <div class=\"UtabContentContainer\">\r\n        <div class=\"UtabContent\" data-target=\"1\"><app-style-editor [isM2]=\"false\"></app-style-editor></div>\r\n        <div class=\"UtabContent\" data-target=\"2\"><app-property-barr [isM2]=\"false\"></app-property-barr></div>\r\n        <div class=\"UtabContent\" data-target=\"3\">\r\n          <div class=\"rawContainer\">\r\n            <h2 class=\"rawTitle\">Raw eCore fragment</h2>\r\n            <textarea class=\"rawecore\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"MDefaultStyles customized\"></div>\r\n  <div class=\"MDefaultStyles immutable\">\r\n\r\n    <foreignobject aircraft_example class=\"template Vertex Classnope\" hover-base=\"v1\"\r\n                   style=\"cursor: pointer; position: relative; color:var(--color-2);\"\r\n                   tabindex=\"-1\" width=\"300\" x=\"50\" y=\"50\">\r\n      <div _ngcontent-fmh-c7=\"\" class=\"Class\" data-autosizey=\"1\" data-autosizex=\"1\"\r\n           style=\"height:auto; width:100%; display: inline-flex; flex-flow: column;\">\r\n        <div _ngcontent-fmh-c7=\"\" class=\"VertexHeader\"\r\n             style=\"text-align:center; display:flex; padding: 8px 0; width:100%; font-size:1rem; border-bottom: 0.5px solid #77777777;\">\r\n          <input _ngcontent-fmh-c7=\"\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\" placeholder=\"Object name\"\r\n                 style=\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\"\r\n                 value=\"$##name$\">\r\n          <div _ngcontent-fmh-c7=\"\" class=\"no-ov\"\r\n               style=\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\">$##attributes.3.values.0$:&nbsp;\r\n          </div>\r\n          <div _ngcontent-fmh-c7=\"\" class=\"no-ov\"\r\n               style=\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\">$##metaParent.name$\r\n          </div>\r\n          <div _ngcontent-fmh-c7=\"\" class=\"hover-unfade open-options\" hover-display=\"v1\"\r\n               style=\"top: 7px; right: 0; border-radius: 999px;\" tabindex=\"-1\">\r\n            <span _ngcontent-fmh-c7=\"\">...</span></div>\r\n        </div>\r\n        <img src=\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\"\r\n             style=\"pointer-events: none; background:var(--color-1); display: flex; height:70px; width:250px; flex-basis:0; box-shadow: 0 0 3pt 0.5pt var(--color-3);\r\n    border-radius: 7px;\">\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <foreignobject class=\"template Vertex Class\" tabindex=\"-1\" hover-base=\"v1\" x=\"50\" y=\"50\" width=\"300\" style=\"cursor: pointer; position: relative; border-radius:7px; background:var(--color-1); color:var(--color-2);\">\r\n      <div class=\"Class\" style=\"background:var(--color-1); box-shadow: 0 0 3pt 0.5pt var(--color-3); height:auto; width:100%; border-radius:7px; display: inline-flex; flex-flow: column;\" data-autosizey=\"1\">\r\n        <div class=\"VertexHeader\" style=\"text-align:center; display:flex; padding: 8px 0; width:100%; font-size:1rem; border-bottom: 0.5px solid #77777777;\">\r\n          <input value=\"$##name$\" placeholder=\"Object name\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\"\r\n                 style=\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\">\r\n          <div class=\"no-ov\" style=\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\">$##metaParent.name$</div>\r\n          <div hover-display=\"v1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n               style=\"top: -25px; right: 7px; border-top-right-radius: 999px; border-top-left-radius: 999px;\">\r\n            <span>...</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"specialjs hideempty childcontainer AttributeContainer hover-exclude\"></div>\r\n        <div class=\"specialjs hideempty childcontainer ReferenceContainer hover-exclude\"></div>\r\n        <div class=\"specialjs hideempty childcontainer OperationContainer hover-exclude\"></div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <foreignobject class=\"old_templateVertexClass\" x=\"0\" y=\"0\" width=\"200\" height=\"40\" hover-base=\"v1\" tabindex=\"-1\" style=\"cursor: pointer; outline: 1px solid var(--color-3) !important; background:var(--color-1); color:var(--color-2);\">\r\n      <div class=\"Class\" style=\"background:var(--color-1); height:auto; width:100%;\" data-autosizey=\"1\">\r\n        <div class=\"VertexHeader\" style=\"height:20px; width:100%; text-align:center; display:flex; justify-content: space-evenly\">\r\n          <div class=\"no-ov\" style=\"text-align:center; flex-grow:2; flex-shrink:1; color:var(--color-4);\">$##metaParent.name$</div>\r\n          <div class=\"no-ov\" style=\"text-align:center; flex-grow:1; color:var(--color-4);\">#$##id$</div>\r\n          <div hover-display=\"v1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n               style=\"top: -25px; border-top-right-radius: 999px; border-top-left-radius: 999px;\">\r\n            <span>...</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"specialjs AttributeContainer hover-exclude\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs ReferenceContainer hover-exclude\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs OperationContainer hover-exclude\" style=\"display: flex; flex-direction: column;\"></div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <div class=\"template Feature Reference\" tabindex=\"-1\" hover-base=\"f1\" style=\"position: relative; width:100%; height:22px; padding-left:5px; display:flex; margin:auto;\">\r\n      <span class=\"no-ov\" style=\"display:flex; order:0; margin:auto; margin-right:0.75rem; flex-shrink:2; color:var(--color-f-1);\">*$##metaParent.type.printablename$</span>\r\n      <span class=\"no-ov\" style=\"display:flex; order:1; flex-basis:10px; flex-grow:2; flex-shrink:2; min-width:3px; margin:auto;\">$##metaParent.name$</span>\r\n      <button class=\"LinkVertexOld\" style=\"order:3; width:22px; height:22px; padding:0; margin:auto; display: none\">-></button>\r\n      <icon class=\"LinkVertex\" right style=\"order:3; width:22px; height: 22px; border: 1px solid gray; border-radius:7.5px; margin:0; background-color: var(--color-1);\"></icon>\r\n      <div hover-display=\"f1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <datalist id=\"boolean-datalist\">\r\n        <option value=\"true\">true</option>\r\n        <option value=\"false\">false</option>\r\n    </datalist>\r\n\r\n    <div class=\"template Feature Attribute\" data-type=\"$##metaParent.type.primitiveType.short$\" enum-type=\"$##metaParent.type.enumType.className$\" tabindex=\"-1\" hover-base=\"f1\" style=\"position: relative; width:100%; height:22px; padding-left:5px; display:flex;\">\r\n      <span class=\"no-ov\" style=\"order:0; flex-basis:10px; flex-grow:2; flex-shrink:2; min-width:3px; margin:auto; color:var(--color-f-1);\">$##metaParent.type.printablename$</span>\r\n      <span class=\"no-ov\" style=\"order:1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px; margin:auto;\">$##metaParent.name$&nbsp;=&nbsp;</span>\r\n      <input type=\"text\" placeholder=\"empty string\" value=\"$##valuesStr$\" style=\"background:transparent; border:none; order:2; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n      <input type=\"number\" placeholder=\"0\" value=\"$##valuesStr$\" style=\"background:transparent; border:none; order:2; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n      <input type=\"datetime-local\" placeholder=\"now\" value=\"$##valuesStr$\" style=\"background:transparent; border:none; order:2; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n      <select bool value=\"$##valuesStr$\" style=\"background:transparent; border:none; order:2; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n        <option value=\"true\">true</option>\r\n        <option value=\"false\">false</option>\r\n      </select>\r\n      <select enum value=\"$##valuesStr$\" style=\"background:transparent; border:none; order:2; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\"></select>\r\n      <div hover-display=\"f1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Feature Operation\" tabindex=\"-1\" hover-base=\"f1\" style=\"position: relative; width:100%; height: 22px; padding-left: 5px; display:flex;\">\r\n      <div class=\"specialjs signature\" data-maxargumentchars=\"10\" data-maxarguments=\"2\" style=\"min-width:100%\"></div>\r\n      <div class=\"specialjs operationDetail\" style=\"margin:2px; margin-top:0; padding:2px; order:2; border: 3px solid var(--color-f-2); border-top-color:transparent;\">\r\n        <div style=\"display: flex; width: 100%;\">\r\n          <select disabled data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" data-void=\"true\" style=\"background:transparent; border:none; display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n          <input disabled type=\"text\" placeholder=\"Operation Name\" value=\"$##name$\" style=\"background:transparent; border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n        </div>\r\n        <div class=\"parameterList\" style=\"display: flex; width: 100%;\"></div>\r\n      </div>\r\n      <div hover-display=\"f1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Feature Parameter\" tabindex=\"-1\" hover-base=\"p1\" style=\"position: relative; width:100%; height:22px; padding-left: 5px; display:flex;\">\r\n      <select disabled data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" style=\"background:transparent; border:none;display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n      <input disabled type=\"text\" placeholder=\"Parameter Name\" value=\"$##name$\" style=\"background:transparent; border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n      <div hover-display=\"p1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"visContainer\" style=\"position:absolute; top:0px; display: none;\">\r\n  <div id=\"m_visGraph\" style=\"position:absolute; left: 100px; width: 30vw; height: 100vh; background: wheat;\"></div>\r\n  <div id=\"m_visOptions\" style=\"position:absolute; width: 100px; height: 100vh; background: white\"></div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mm-graph-html/mm-graph-html.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mm-graph-html/mm-graph-html.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"verticalFillingContainer\">\r\n  <div class=\"verticalFiller horizontalFillingContainer\">\r\n    <div class=\"sidebarShell resizableBorder\" data-resizableRight=\"true\">\r\n      <div id='metamodel_sidebar'></div>\r\n    </div>\r\n    <div class=\"editorShell horizontalFiller\">\r\n      <ul class =\"viewpointShell\">\r\n        <h6>Viewpoints</h6>\r\n        <li class=\"viewpointrow default\">\r\n          <label class=\"name\">\r\n            <input type=\"radio\" checked>\r\n            <input class=\"name form-control-sm\" type=\"text\" value=\"Default\" readonly><button class=\"duplicate\"></button>\r\n          </label>\r\n        </li>\r\n        <li class=\"viewpointrow template\">\r\n          <label class=\"checkbox\"><input type=\"checkbox\"></label>\r\n          <label class=\"name\"><input class=\"name form-control-sm\" type=\"text\">\r\n            <span class=\"buttons\">\r\n            <button class=\"duplicate\"></button><button class=\"edit\"></button><button class=\"remove\"></button>\r\n          </span>\r\n          </label>\r\n        </li>\r\n      </ul>\r\n      <svg class=\"graph\" id='metamodel_editor'>\r\n        <g class=\"gridContainer\">\r\n          <defs></defs>\r\n          <rect class=\"grid\"></rect>\r\n        </g>\r\n      </svg>\r\n      <div id='metamodel_navigatorOutlineContainer'></div>\r\n    </div>\r\n    <!-- style of propertybar must be inline for resizableBorder js -->\r\n    <div class=\"UtabContainer propertyBarContainer resizableBorder\" data-resizableLeft=\"true\" data-selectedTab=\"2\" style=\"width: 283px;\">\r\n      <ul class=\"UtabHeaderContainer\">\r\n        <li class=\"UtabHeader\" data-target=\"1\">Style</li>\r\n        <li class=\"UtabHeader\" data-target=\"2\">Structured</li>\r\n        <li class=\"UtabHeader\" data-target=\"3\">Raw</li>\r\n      </ul>\r\n      <div class=\"UtabContentContainer\">\r\n        <div class=\"UtabContent\" data-target=\"1\"><app-style-editor [isM2]=\"true\"></app-style-editor></div>\r\n        <div class=\"UtabContent\" data-target=\"2\"><app-property-barr [isM2]=\"true\"></app-property-barr></div>\r\n        <div class=\"UtabContent\" data-target=\"3\">\r\n          <div class=\"rawContainer\">\r\n            <h2 class=\"rawTitle\">Raw eCore fragment</h2>\r\n            <textarea class=\"rawecore\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"MMDefaultStyles customized\"></div>\r\n  <div class=\"MMDefaultStyles immutable\">\r\n    <foreignobject class=\"template Vertex invisibleNode\" overflow=\"hidden\" x=\"0\" y=\"0\" width=\"200\" height=\"40\" style=\"display:none\" keep-edges=\"false\"\r\n                   show-in-rel-edges=\"false\" show-in-ext-edges=\"false\" show-in-oth-edges=\"false\"\r\n                   show-out-rel-edges=\"false\" show-out-ext-edges=\"false\" show-out-oth-edges=\"false\">\r\n      <div style=\"height:auto;\"></div>\r\n    </foreignobject>\r\n    <foreignobject class=\"old_template_Vertex_Class\" tabindex=\"-1\" hover-base=\"v1\" x=\"0\" y=\"0\" width=\"200\" height=\"40\" style=\"cursor: pointer; outline: 1px solid var(--color-3) !important; background:var(--color-1); color:var(--color-2);\">\r\n      <div class=\"Class\" style=\"background:var(--color-1); height:auto; width:100%;\" data-autosizey=\"1\">\r\n        <div class=\"VertexHeader\" style=\"height:20px; width:100%; text-align:center; display:flex;\">\r\n          <input value=\"$##name$\" placeholder=\"Object name\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\"\r\n                 style=\"background:transparent; border:none; text-align:right; order:1; flex-grow:1; flex-shrink:1; flex-basis:10px; min-width:10px; padding-right:4px;\">\r\n          <div class=\"no-ov\" style=\"text-align:left; order:2; flex-grow:1; flex-shrink:1; flex-basis:10px; color:var(--color-4); margin:auto; padding-left:4px;\">($##className$)</div>\r\n          <div hover-display=\"v1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n               style=\"top: -25px; border-top-right-radius: 999px; border-top-left-radius: 999px;\">\r\n            <span>...</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"specialjs AttributeContainer hover-exclude\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs ReferenceContainer hover-exclude\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"specialjs OperationContainer hover-exclude\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"addFieldButtonContainer\" style=\"width: 100%; text-align: center;\">\r\n          <span style=\"display:flex; margin:auto;\">Add</span>\r\n          <style id=\"old-default-class-css\">\r\n            ::ng-deep .addFieldButtonContainer{ display: flex; max-height: 20px; min-height: 20px; overflow: hidden; width: 100%; text-align: center; opacity: 0; padding-top: 20px; }\r\n            ::ng-deep .Vertex:hover ::ng-deep .addFieldButtonContainer{ opacity: 1; padding-top: 0; }\r\n            ::ng-deep .addFieldButton{\r\n              background:rgba(127, 127, 127, 0.2);\r\n              border-bottom: none;\r\n              border-right: none;\r\n              padding: 0 0.5rem; }\r\n            ::ng-deep .open-options.active{\r\n              border-bottom-right-radius: 0 !important;\r\n              opacity: 1;\r\n              visibility: visible; }\r\n            ::ng-deep .open-options{\r\n              position: absolute;\r\n              right: 0;\r\n              border: 2px solid var(--color-2);\r\n              background: var(--color-1);\r\n              width: 25px;\r\n              height: 25px;\r\n              display: flex;\r\n              justify-content: center;\r\n              align-items: center;\r\n              opacity: 0.5; }\r\n          </style>\r\n          <select class=\"AddFieldSelect\" style=\"background:transparent; display:flex; margin:auto;\">\r\n            <optgroup label=\"FeatureType\">\r\n              <option value=\"Attribute\" selected=\"\">Attribute</option>\r\n              <option value=\"Reference\">Reference</option>\r\n              <option value=\"Operation\">Operation</option>\r\n            </optgroup>\r\n          </select>\r\n          <span style=\"display:flex; margin:auto;\">field</span>\r\n          <button class=\"addFieldButton\" style=\"background:rgba(127, 127, 127, 0.2);\">Go</button>\r\n        </div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <foreignobject class=\"template Vertex Class\" tabindex=\"-1\" hover-base=\"v1\" x=\"50\" y=\"50\" width=\"300\" style=\"cursor: pointer; position: relative; border-radius:7px; background:var(--color-1); color:var(--color-2);\">\r\n      <div class=\"Class\" style=\"background:var(--color-1); box-shadow: 0 0 3pt 0.5pt var(--color-3); height:auto; min-height: 75px; width:100%; border-radius:7px; display: inline-flex; flex-flow: column;\" data-autosizey=\"1\">\r\n        <div class=\"VertexHeader\" style=\"text-align:center; display:flex; padding: 8px 0; width:100%; font-size:1rem; border-bottom: 0.5px solid #77777777;\">\r\n          <input value=\"$##name$\" placeholder=\"Object name\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\"\r\n                 style=\"background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\">\r\n          <div class=\"no-ov\" style=\"text-align:left; order:2; flex-grow:1; color:var(--color-4); margin:auto;\">: Concept</div>\r\n          <div hover-display=\"v1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n               style=\"top: -25px; right: 7px; border-top-right-radius: 999px; border-top-left-radius: 999px;\">\r\n            <span>...</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"specialjs hideempty childcontainer AttributeContainer hover-exclude\"></div>\r\n        <div class=\"specialjs hideempty childcontainer ReferenceContainer hover-exclude\"></div>\r\n        <div class=\"specialjs hideempty childcontainer OperationContainer hover-exclude\"></div>\r\n        <div class=\"addFieldButtonContainer\">\r\n          <span style=\"display:flex; margin:auto;\">Add</span>\r\n          <style id=\"default-class-css\">\r\n            ::ng-deep .addFieldButtonContainer{ margin-top: auto; width: 100%; text-align: center; display: flex; max-height: 20px; min-height: 20px; overflow: hidden; opacity: 0; }\r\n            ::ng-deep .Vertex ::ng-deep .childcontainer{ display: flex; flex-direction: column; border-bottom: 0.5px solid #77777777; background: #00000013;\r\n            }\r\n            ::ng-deep .Vertex:hover ::ng-deep .addFieldButtonContainer{\r\n              background: var(--color-1);\r\n              border-radius: 7px 0 7px 7px;\r\n              opacity: 1; }\r\n            ::ng-deep .addFieldButton{\r\n              background:rgba(127, 127, 127, 0.2);\r\n              border-bottom: none;\r\n              border-right: none;\r\n              padding: 0 0.5rem; }\r\n            ::ng-deep .open-options.active{\r\n              border-bottom-right-radius: 0 !important;\r\n              opacity: 1;\r\n              visibility: visible; }\r\n            ::ng-deep .Feature{\r\n              margin: 2px 0;\r\n            }\r\n            ::ng-deep .open-options{\r\n              position: absolute;\r\n              right: 0;\r\n              border: 2px solid var(--color-2);\r\n              background: var(--color-1);\r\n              width: 25px;\r\n              height: 25px;\r\n              display: flex;\r\n              justify-content: center;\r\n              align-items: center;\r\n              opacity: 0.5; }\r\n            /* for M1 */\r\n            /*\r\n  EChar  = 'EChar',\r\n  EString  = 'EString',\r\n  EDate  = 'EDate',\r\n  EFloat  = 'EFloat',\r\n  EDouble  = 'EDouble',\r\n  EBoolean = 'EBoolean',\r\n  EByte  = 'EByte',\r\n  EShort  = 'EShort',\r\n  EInt  = 'EInt',\r\n  ELong  = 'ELong',*/\r\n            ::ng-deep .Vertex [data-type=\"EDouble\"] input:not([type=\"number\"]):not([type='range']),\r\n            ::ng-deep .Vertex [data-type=\"EFloat\"] input:not([type=\"number\"]):not([type='range']),\r\n            ::ng-deep .Vertex [data-type=\"ELong\"] input:not([type=\"number\"]):not([type='range']),\r\n            ::ng-deep .Vertex [data-type=\"EInt\"] input:not([type=\"number\"]):not([type='range']),\r\n            ::ng-deep .Vertex [data-type=\"EShort\"] input:not([type=\"number\"]):not([type='range']),\r\n            ::ng-deep .Vertex [data-type=\"EByte\"] input:not([type=\"number\"]):not([type='range']),\r\n            ::ng-deep .Vertex [data-type=\"EDouble\"] textarea,\r\n            ::ng-deep .Vertex [data-type=\"EFloat\"] textarea,\r\n            ::ng-deep .Vertex [data-type=\"ELong\"] textarea,\r\n            ::ng-deep .Vertex [data-type=\"EInt\"] textarea,\r\n            ::ng-deep .Vertex [data-type=\"EShort\"] textarea,\r\n            ::ng-deep .Vertex [data-type=\"EByte\"] textarea,\r\n            ::ng-deep .Vertex [data-type=\"EDouble\"] select:not([number]),\r\n            ::ng-deep .Vertex [data-type=\"EFloat\"] select:not([number]),\r\n            ::ng-deep .Vertex [data-type=\"ELong\"] select:not([number]),\r\n            ::ng-deep .Vertex [data-type=\"EInt\"] select:not([number]),\r\n            ::ng-deep .Vertex [data-type=\"EShort\"] select:not([number]),\r\n            ::ng-deep .Vertex [data-type=\"EByte\"] select:not([number]) { display: none; }\r\n\r\n            ::ng-deep .Vertex [data-type=\"EBoolean\"] input:not([type=\"radio\"]):not([type='checkbox']),\r\n            ::ng-deep .Vertex [data-type=\"EBoolean\"] select:not([bool]),\r\n            ::ng-deep .Vertex [data-type=\"EBoolean\"] textarea:not([bool]){ display: none; }\r\n            ::ng-deep .Vertex [data-type=\"EDate\"] input:not([type='date']):not([type='time']):not([type='datetime-local']):not([type='month']):not([type='week']),\r\n            ::ng-deep .Vertex [data-type=\"EDate\"] select:not([date]),\r\n            ::ng-deep .Vertex [data-type=\"EDate\"] textarea:not([date]){ display: none; }\r\n\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"number\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"range\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"radio\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"checkbox\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"date\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"time\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"datetime-local\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"month\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] input[type=\"week\"],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] select[enum],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] select[date],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] select[bool],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] select[number],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] textarea[enum],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] textarea[date],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] textarea[bool],\r\n            ::ng-deep .Vertex [data-type=\"EString\"] textarea[number],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"number\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"range\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"radio\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"checkbox\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"date\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"time\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"datetime-local\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"month\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] input[type=\"week\"],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] select[enum],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] select[date],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] select[bool],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] select[number],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] textarea[enum],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] textarea[date],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] textarea[bool],\r\n            ::ng-deep .Vertex [data-type=\"EChar\"] textarea[number] { display: none; }\r\n\r\n            ::ng-deep .Vertex [enum-type=\"EEnum\"]/*in m1 style i set only 2 possible values, this or template error*/ select:not([enum]),\r\n            ::ng-deep .Vertex [enum-type=\"EEnum\"] input:not([enum]),\r\n            ::ng-deep .Vertex [enum-type=\"EEnum\"] textarea:not([enum]){ display: none; }\r\n\r\n\r\n          </style>\r\n          <select class=\"AddFieldSelect\" style=\"background:transparent; display:flex; margin:auto;\">\r\n            <optgroup label=\"FeatureType\">\r\n              <option value=\"Attribute\" selected=\"\">Attribute</option>\r\n              <option value=\"Reference\">Reference</option>\r\n              <option value=\"Operation\">Operation</option>\r\n            </optgroup>\r\n          </select>\r\n          <span style=\"display:flex; margin:auto;\">field</span>\r\n          <button class=\"addFieldButton\" style=\"background:rgba(127, 127, 127, 0.2);\">Go</button>\r\n        </div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <foreignobject class=\"template Vertex EEnum\" tabindex=\"-1\" hover-base=\"v1\" x=\"50\" y=\"50\" width=\"300\" style=\"cursor: pointer; position: relative; border-radius:7px; background:var(--color-1); color:var(--color-2);\">\r\n      <div class=\"Class\" style=\"background:var(--color-1); box-shadow: 0 0 3pt 0.5pt var(--color-3); height:auto; min-height: 75px; width:100%; border-radius:7px; display: inline-flex; flex-flow: column;\" data-autosizey=\"1\">\r\n        <datalist id=\"enum-$##name$\"></datalist>\r\n        <div class=\"VertexHeader\" style=\"text-align:center; display:flex; padding: 8px 0; width:100%; font-size:1rem; border-bottom: 0.5px solid #77777777;\">\r\n          <input value=\"$##name$\" placeholder=\"Object name\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\"\r\n                 style=\"background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\">\r\n          <div class=\"no-ov\" style=\"text-align:left; order:2; flex-grow:1; color:var(--color-4); margin:auto;\">: $##className$</div>\r\n          <div hover-display=\"v1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n               style=\"top: -25px; right: 7px; border-top-right-radius: 999px; border-top-left-radius: 999px;\">\r\n            <span>...</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"specialjs hideempty childcontainer LiteralContainer hover-exclude\"></div>\r\n        <div class=\"addFieldButtonContainer\">\r\n          <span style=\"display:flex; margin:auto;\">Add</span>\r\n          <style id=\"default-enum-css\">\r\n            ::ng-deep .addFieldButtonContainer{ margin-top: auto; width: 100%; text-align: center; display: flex; max-height: 20px; min-height: 20px; overflow: hidden; opacity: 0; }\r\n            ::ng-deep .Vertex ::ng-deep .childcontainer{ display: flex; flex-direction: column; border-bottom: 0.5px solid #77777777;\r\n            }\r\n            ::ng-deep .Vertex:hover ::ng-deep .addFieldButtonContainer{\r\n              background: var(--color-1);\r\n              border-radius: 7px 0 7px 7px;\r\n              opacity: 1; }\r\n            ::ng-deep .addFieldButton{\r\n              background:rgba(127, 127, 127, 0.2);\r\n              border-bottom: none;\r\n              border-right: none;\r\n              padding: 0 0.5rem; }\r\n            ::ng-deep .open-options.active{\r\n              border-bottom-right-radius: 0 !important;\r\n              opacity: 1;\r\n              visibility: visible; }\r\n            ::ng-deep .open-options{\r\n              position: absolute;\r\n              right: 0;\r\n              border: 2px solid var(--color-2);\r\n              background: var(--color-1);\r\n              width: 25px;\r\n              height: 25px;\r\n              display: flex;\r\n              justify-content: center;\r\n              align-items: center;\r\n              opacity: 0.5; }\r\n          </style>\r\n          <select class=\"AddFieldSelect\" style=\"background:transparent; display:flex; margin:auto;\">\r\n            <optgroup label=\"FeatureType\">\r\n              <option value=\"Literal\" selected=\"\">Literal</option>\r\n            </optgroup>\r\n          </select>\r\n          <span style=\"display:flex; margin:auto;\">field</span>\r\n          <button class=\"addFieldButton\" style=\"background:rgba(127, 127, 127, 0.2);\">Go</button>\r\n        </div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <foreignobject class=\"oldTemplateVertexEEnum\" x=\"0\" y=\"0\" width=\"200\" height=\"40\" hover-base=\"v1\" tabindex=\"-1\" style=\"cursor: pointer; outline: 1px solid var(--color-3) !important;; background:var(--color-1); color:var(--color-2);\">\r\n      <div class=\"EEnum\" style=\"background:var(--color-1); height:auto; width:100%;\" data-autosizey=\"1\">\r\n        <div class=\"VertexHeader\" style=\"height:20px; width:100%; text-align:center; display:flex;\">\r\n          <input value=\"$##name$\" placeholder=\"Object name\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\"\r\n                 style=\"background:transparent; border:none; text-align:right; order:1; flex-grow:1; flex-shrink:1; flex-basis:10px; min-width:10px; padding-right:4px;\">\r\n          <div class=\"no-ov\" style=\"text-align:left; order:2; flex-grow:1; flex-shrink:1; flex-basis:10px; color:var(--color-5); margin:auto; padding-left:4px;\">(Enum)</div>\r\n          <div hover-display=\"v1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n               style=\"top: -25px; border-top-right-radius: 999px; border-top-left-radius: 999px;\">\r\n            <span>...</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"specialjs LiteralContainer hover-exclude\" style=\"display: flex; flex-direction: column;\"></div>\r\n        <div class=\"addFieldButtonContainer\">\r\n          <style id=\"old-default-enum-css\">\r\n            ::ng-deep .addFieldButtonContainer{ display: flex; max-height: 20px; min-height: 20px; overflow: hidden; width: 100%; text-align: center; opacity: 0; padding-top: 20px; }\r\n            ::ng-deep .Vertex:hover ::ng-deep .addFieldButtonContainer{ opacity: 1; padding-top: 0; }\r\n            ::ng-deep .addFieldButton{\r\n              background:rgba(127, 127, 127, 0.2);\r\n              border-bottom: none;\r\n              border-right: none;\r\n              padding: 0 0.5rem; }\r\n            ::ng-deep .open-options.active{\r\n              border-bottom-right-radius: 0 !important;\r\n              opacity: 1;\r\n              visibility: visible; }\r\n            ::ng-deep .open-options{\r\n              position: absolute;\r\n              right: 0;\r\n              border: 2px solid var(--color-2);\r\n              background: var(--color-1);\r\n              width: 25px;\r\n              height: 25px;\r\n              display: flex;\r\n              justify-content: center;\r\n              align-items: center;\r\n              opacity: 0.5; }\r\n          </style>\r\n          <span style=\"display:flex; margin:auto;\">Add</span>\r\n          <select class=\"AddFieldSelect\" disabled style=\"background:transparent; display:flex; margin:auto;\">\r\n            <optgroup label=\"FeatureType\">\r\n              <option value=\"Literal\" selected=\"\">Literal</option>\r\n            </optgroup>\r\n          </select>\r\n          <span style=\"display:flex; margin:auto;\">field</span>\r\n          <button class=\"addFieldButton\">Go</button>\r\n        </div>\r\n      </div>\r\n    </foreignobject>\r\n\r\n    <div class=\"template Feature Reference ov\" tabindex=\"-1\" hover-base=\"f1\" style=\"width:100%; height: 22px; padding-left:5px; display:flex; position: relative;\">\r\n      <select data-class=\"true\" style=\"background:transparent; border:none; display:flex; order:3; flex-grow:2; flex-shrink:2; flex-basis:0; min-width:0;\"></select>\r\n      <input type=\"text\" placeholder=\"Reference Name\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\" value=\"$##name$\" style=\"background:transparent; border:none; order: 1; flex-basis:10px; flex-grow:2; flex-shrink:2; min-width:3px;\">\r\n      <div hover-display=\"f1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Feature Attribute EString EInteger\" tabindex=\"-1\" hover-base=\"f1\" style=\"position: relative; width:100%; height:22px; padding-left:5px; display:flex;\">\r\n      <select data-primitive=\"true\" data-enum=\"true\" style=\"background:transparent; border:none; display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n      <input type=\"text\" placeholder=\"Attribute Name\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\" value=\"$##name$\" style=\"background:transparent; border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n      <div hover-display=\"f1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Feature ELiteral\" tabindex=\"-1\"  hover-base=\"l1\" style=\"position: relative; width:100%; height:22px; display:flex; padding-left:5px; padding-right:10px;\">\r\n      <input class=\"value\" type=\"number\" placeholder=\"auto\" value=\"$##ordinal$\" style=\"background:transparent; border:none; display: flex; width: 30px;\">\r\n      <input class=\"name\" type=\"text\" placeholder=\"name\" value=\"$##name$\" pattern=\"[a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\" style=\"background:transparent; border:none; display:flex; flex-grow:1; flex-shrink:1; flex-basis:3px; min-width:3px;\">\r\n      <input class=\"literal\" type=\"text\" placeholder=\"literal\" value=\"$$#literal$\" style=\"background:transparent; border:none; display:flex; flex-grow:1; text-align: right; flex-basis:3px; min-width:3px;\">\r\n      <div hover-display=\"l1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Feature Operation\" tabindex=\"-1\"  hover-base=\"f1\" style=\"position: relative; width:100%; display:flex; flex-flow:column;\">\r\n      <div class=\"specialjs signature\" data-maxargumentchars=\"10\" data-maxarguments=\"2\" style=\"height:22px; min-width:100%\"></div>\r\n      <div class=\"specialjs operationDetail\" style=\"margin:2px; padding:2px; order:2; border: 3px solid var(--color-f-2); border-top-color: transparent; margin-top:0;\">\r\n        <div style=\"display: flex; width: 100%;\">\r\n          <select data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" data-void=\"true\" style=\"background:transparent; border:none; display:flex; order:2; flex-grow:2; flex-shrink:2; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n          <input disabled type=\"text\" placeholder=\"Return Type\" value=\"Return type\" style=\"background:transparent; border:none; display: flex; order: 1; flex-basis:10px; flex-grow:3; flex-shrink:3; min-width:3px;\">\r\n        </div>\r\n        <div class=\"parameterList parameterContainer\" style=\"display: flex; width: 100%; flex-flow:column;\">\r\n          <button class=\"addParameterButton btn btn-sm\" style=\"width: 100%; height: 22px; padding:0; text-align: center; background-color: var(--color-f-2); color:var(--color-1);\">+</button>\r\n        </div>\r\n      </div>\r\n      <div hover-display=\"f1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template Parameter\" tabindex=\"-1\" hover-base=\"p1\" style=\"position: relative; width: 100%; height: 22px; border-bottom:1px solid var(--color-f-3); display:flex;\">\r\n      <select data-primitive=\"true\" data-enum=\"true\" data-class=\"true\" style=\"background:transparent; border:none; display:flex; order:2; flex-grow:1; flex-shrink:1; flex-basis:3px; min-width:3px; text-align: right;\"></select>\r\n      <input type=\"text\" placeholder=\"Parameter Name\" pattern=\"[a-zA-Z_\\u0024]*[a-zA-Z\\d_\\u0024]+\" value=\"$##name$\" style=\"background:transparent; border:none; display: flex; order: 1; flex-basis:10px; flex-grow:1; flex-shrink:1; min-width:3px;\">\r\n      <!--button class=\"delete\" style=\"order: 3; padding:0 5px;\">X</button-->\r\n      <div hover-display=\"p1\" class=\"hover-unfade open-options\" tabindex=\"-1\"\r\n           style=\"right: -25px; border-top-right-radius: 999px; border-bottom-right-radius: 999px;\">\r\n        <span>...</span>\r\n      </div>\r\n      <!-- correct validator pattern for variable names:  == ^[a-zA-Z_$][a-zA-Z\\d_$]+$   ==    [a-zA-Z_\\u0024][a-zA-Z\\d_\\u0024]*\r\n       PS: luckily pattern always implies ^ and $ for start and end delimiters. because \\u0024 might not work for end of line $ substitute -->\r\n  </div>\r\n</div>\r\n\r\n<div class=\"visContainer\" style=\"position:absolute; top:40px; display: none;\">\r\n  <div id=\"mm_visGraph\" style=\"position:absolute; left: 100px; width: 30vw; height: 100vh; background: wheat;\"></div>\r\n  <div id=\"mm_visOptions\" style=\"position:absolute; width: 100px; height: 100vh; background: white\"></div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mminput/mminput.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mminput/mminput.component.html ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!-- <input id=\"MM_INPUT\" value = \"<?xml version='1.0' encoding='UTF-8'?>\r\n<ecore:EPackage xmi:version='2.0' xmlns:xmi='http://www.omg.org/XMI' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\r\n    xmlns:ecore='http://www.eclipse.org/emf/2002/Ecore' name='bowling' nsURI='http://org/eclipse/example/bowling' nsPrefix='org.eclipse.example.bowling'>\r\n  <eClassifiers xsi:type='ecore:EClass' name='Player'>\r\n    <eStructuralFeatures xsi:type='ecore:EAttribute' name='name' eType='ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString'/>\r\n  </eClassifiers>\r\n  <eClassifiers xsi:type='ecore:EClass' name='League'>\r\n    <eStructuralFeatures xsi:type='ecore:EAttribute' name='name' eType='ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString'/>\r\n    <eStructuralFeatures xsi:type='ecore:EReference' name='players' upperBound='-1'\r\n        eType='#//Player' containment='true'/>\r\n  </eClassifiers>\r\n</ecore:EPackage>\"> -->\r\n\r\n<input id=\"MM_INPUT\" value = '{\r\n  \"ecore:EPackage\": {\r\n    \"@xmlns:xmi\": \"http://www.omg.org/XMI\",\r\n    \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\r\n    \"@xmlns:ecore\": \"http://www.eclipse.org/emf/2002/Ecore\",\r\n    \"@xmi:version\": \"2.0\",\r\n    \"@name\": \"bowling\",\r\n    \"@nsURI\": \"http://org/eclipse/example/bowling\",\r\n    \"@nsPrefix\": \"org.eclipse.example.bowling\",\r\n    \"eClassifiers\": [\r\n      {\r\n        \"@xsi:type\": \"ecore:EClass\",\r\n        \"@name\": \"Player\",\r\n        \"eStructuralFeatures\": {\r\n          \"@xsi:type\": \"ecore:EAttribute\",\r\n          \"@name\": \"name\",\r\n          \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString\"\r\n        }\r\n      },\r\n      {\r\n        \"@xsi:type\": \"ecore:EClass\",\r\n        \"@name\": \"League\",\r\n        \"eStructuralFeatures\": [\r\n          {\r\n            \"@xsi:type\": \"ecore:EAttribute\",\r\n            \"@name\": \"name\",\r\n            \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString\"\r\n          },\r\n          {\r\n            \"@xsi:type\": \"ecore:EReference\",\r\n            \"@name\": \"players\",\r\n            \"@upperBound\": \"@1\",\r\n            \"@eType\": \"#//Player\",\r\n            \"@containment\": \"true\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'>\r\n\r\n\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mmsidebar/mmsidebar.component.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mmsidebar/mmsidebar.component.html ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>\r\n  mmsidebar works!\r\n</p>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/msidebar/msidebar.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/msidebar/msidebar.component.html ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<p>\r\n  msidebar works!\r\n</p>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/property-barr/property-barr.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/property-barr/property-barr.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"property_sidebar\">\r\n  <div class=\"propertySidebarCurrentContent\"></div>\r\n  <div class=\"propertySidebarTemplates template\">\r\n    <div class=\"minimizer single\"></div>\r\n    <div class=\"content\">\r\n      <label class=\"model todo\">URI:<input class = \"uri m1disable\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"model todo\">Namespace:<input class = \"namespace m1disable\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"class m2hide\"><span>Is Root</span><input type=\"checkbox\" class=\"isRoot\"></label>\r\n\r\n      <label class=\"class m1hide\">is interface <input class=\"isinterface\" type=\"checkbox\"></label>\r\n      <label class=\"class m1hide\">is abstract <input class=\"isabstract\" type=\"checkbox\"></label>\r\n      <label class=\"class\">Access <select class=\"m1disable accessModifier\"></select></label>\r\n\r\n      <label class=\"operation todo\">Access modifier:<select class=\"specialjs visibilitySelector m1disable\"></select></label>\r\n      <label class=\"literal\">Ordinal:<input class=\"value\" type=\"number\"></label>\r\n      <label>Name:<input class=\"name m1disable\" placeholder=\"nameless\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"literal\">Literal:<input class=\"literal\" placeholder=\"will inherit from name\" pattern=\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\"></label>\r\n      <label class=\"parameter\">Type:<select class=\"m1disable\" data-primitive=\"true\" data-enum=\"true\" data-class=\"true\"></select></label>\r\n      <label class=\"attribute\">Type:<select class=\"m1disable\" data-primitive=\"true\" data-enum=\"true\"></select></label>\r\n      <label class=\"reference\">Target Type:<select class=\"m1disable\" data-class=\"true\"></select></label>\r\n      <label class=\"attribute m2hide\">Value:<input type=\"text\" class=\"attributeValue\" placeholder=\"[ empty ]\"></label>\r\n      <label class=\"reference\">Is containment:<input type=\"checkbox\" class=\"referenceContainment m1disable\"></label>\r\n      <label class=\"parameter todo\">Is ordered:<input type=\"checkbox\" class=\"ordered m1disable\"></label>\r\n      <label class=\"parameter todo\">Values are unique:<input type=\"checkbox\" class=\"unique m1disable\"></label>\r\n      <label class=\"attribute reference parameter\">LowerBound:<input type=\"number\" step=\"1\" min=\"-1\" class=\"lowerbound m1disable\" placeholder=\"-1\"></label>\r\n      <label class=\"attribute reference parameter\">UpperBound:<input type=\"number\" step=\"1\" min=\"-1\" class=\"upperbound m1disable\" placeholder=\"-1\"></label>\r\n      <label class=\"operation todo\">Exceptions:<input class=\"exceptions\" placeholder=\"throwable exceptions, comma-separated.\"></label>\r\n      <div class=\"replaceVarOn model\"><label>Packages: ($##childrens.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content list packageList\"></div></div></div>\r\n      <div class=\"replaceVarOn package\"><label>Classes / Interfaces: ($##classes.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content classList\"></div></div></div>\r\n      <div class=\"replaceVarOn package\"><label>Enumerations: ($##enums.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content enumList\"></div></div></div>\r\n      <div class=\"class\"><label>Attributes: <span class=\"attributeCount\"></span></label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content attributeList\"></div></div></div>\r\n      <div class=\"class\"><label>References: <span class=\"referenceCount\"></span></label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content referenceList\"></div></div></div>\r\n      <div class=\"class\"><label>Operations: <span class=\"operationCount\"></span></label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content operationList\"></div></div></div>\r\n      <div class=\"replaceVarOn operation\"><label>Parameters: ($##childrens.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content parameterList\"></div></div></div>\r\n      <div class=\"replaceVarOn enum\"><label>Literals: ($##childrens.length$)</label>\r\n        <div class=\"wastemplate list\"><div class=\"minimizer\"></div><div class=\"content literalList\"></div></div></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/style-editor/style-editor.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/style-editor/style-editor.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"styleContainer\">\r\n  <div class=\"StyleEditorDisplay\">\r\n\r\n  </div>\r\n  <div class=\"styleTemplates styleEditor\">\r\n    <div class=\"template model\">\r\n      <!--\r\n      <label>\r\n        <input type=\"number\" class=\"gridX\" min=\"0\" step=\"1\" placeholder=\"off\">\r\n        <span>Grid X</span>\r\n      </label>\r\n      <label>\r\n        <input type=\"number\" class=\"gridY\" min=\"0\" step=\"1\" placeholder=\"off\">\r\n        <span>Grid Y</span>\r\n      </label>\r\n      <label>\r\n        <input type=\"number\" class=\"zoomX\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\">\r\n        <span>Zoom</span>\r\n      </label>\r\n      <label display = \"none\">\r\n        <input type=\"number\" class=\"zoomY\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\">\r\n        <span>Zoom Y</span>\r\n      </label>\r\n      <label><input type=\"checkbox\" class=\"showGrid\"><span>Show grid</span></label>\r\n      <label><input type=\"color\" class=\"graphColor\"><span>Background color</span></label>\r\n      -->\r\n      <table><tbody>\r\n      <tr>\r\n        <td>Grid X</td>\r\n        <td><input type=\"number\" class=\"gridX\" min=\"0\" step=\"1\" placeholder=\"off\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Grid Y</td>\r\n        <td><input type=\"number\" class=\"gridY\" min=\"0\" step=\"1\"  placeholder=\"off\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Zoom</td>\r\n        <td><input type=\"number\" class=\"zoomX\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\"></td>\r\n        <td style=\"display: none\">X: <input type=\"number\" class=\"zoomXOLD\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\"> Y: <input type=\"number\" class=\"zoomY\" min=\"0.0001\" step=\"0.1\" placeholder=\"1\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\"><label><input type=\"checkbox\" class=\"showGrid\">Show grid</label></td></tr>\r\n      <tr><td colspan=\"2\"><label><input type=\"checkbox\" class=\"useGrid\">Use grid</label></td></tr>\r\n      <tr><td colspan=\"2\"><label><input type=\"color\" class=\"gridColor1\">Grid color 1</label></td></tr>\r\n      <tr><td colspan=\"2\"><label><input type=\"color\" class=\"gridColor2\">Grid color 2</label></td></tr>\r\n      </tbody></table>\r\n\r\n      <label class=\"onlyVerticalContainer\">\r\n        <button class=\"btn btn-primary colorschemeopener\">Manage color scheme</button>\r\n      </label>\r\n\r\n      <label class=\"onlyVerticalContainer\" uif=\"!running\">\r\n        <button class=\"btn btn-primary layout start dynamic_uif\">Start auto-layouting</button>\r\n      </label>\r\n\r\n\r\n      <div class=\"layoutingRoot\" uif=\"running\">\r\n        <h5>Auto-layout options</h5>\r\n        <label class=\"onlyVerticalContainer\">\r\n          <button class=\"btn btn-primary layout stabilize\">Stabilize</button>\r\n          <span style=\"margin:auto 0.5rem\">in</span>\r\n          <input type=\"number\" class=\"stabilizeSteps lopt\" min=\"0\" step=\"1\" placeholder=\"off\" value=\"10\" data-key=\"custom.stabilizeSteps\">\r\n          <span style=\"margin-left: 0.5rem\">steps</span>\r\n        </label>\r\n        <label class=\"onlyVerticalContainer\"><button class=\"btn btn-primary layout stop\">Stop</button></label>\r\n\r\n        <label>How to manage edge points?\r\n          <select class=\"edgePointTreatment form-group\"><optgroup label=\"How to manage edge points?\">\r\n            <option value=\"delete\">Remove them</option>\r\n            <option value=\"vertex\" selected>Treat them as vertexes</option>\r\n            <option value=\"ignore\">Keep absolute position (ignore)<option>\r\n            <option value=\"relative\">Keep relative position between source & target</option>\r\n            <!--\r\n              1) treat them as vertex (default)\r\n              2) keep absolute position (ignore) (might cause a mess because they stand still)\r\n              3) keep relative position. Rimane a (x%, y%) distanza tra source e target, memorizzo un vettore direzione\r\n                 con modulo in percentuale sulla distanza tra i 2 vertici,\r\n                 così rispetto ai vertici rimane statico, anche se in realtà si è mosso assieme a loro.\r\n            -->\r\n          </optgroup></select>\r\n        </label>\r\n        <div>\r\n          <label>\r\n            <input type=\"checkbox\" class=\"lopt dynamic_uif\" data-key=\"layout.hierarchical.enabled\">Hierarchical\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" class=\"lopt dynamic_uif\" data-key=\"physics.enabled\">\r\n            Physics\r\n          </label>\r\n          <div uif=\"physics\">\r\n            <label>Simulation mode\r\n              <select class=\"dynamic_uif lopt\" data-key=\"physics.solver\">\r\n                <optgroup label=\"Simulation\">\r\n                  <option value=\"barnesHut\">BarnesHut</option>\r\n                  <option value=\"forceAtlas2Based\">Force Atlas 2</option>\r\n                  <option value=\"repulsion\">Repulsion</option>\r\n                  <option value=\"hierarchicalRepulsion\">hierarchicalRepulsion</option>\r\n                </optgroup>\r\n              </select>\r\n            </label>\r\n\r\n            <div uif=\"hr\">\r\n              <label>\r\n                <input type=\"checkbox\" class=\"lopt\" data-key=\"layout.hierarchical.blockShifting\">\r\n                Block shifting\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" class=\"lopt\" data-key=\"layout.hierarchical.edgeMinimization\">\r\n                Edge minimization\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" class=\"lopt\" data-key=\"layout.hierarchical.parentCentralization\">\r\n                Parent centralization\r\n              </label>\r\n              <label>\r\n                <input type=\"number\" class=\"lopt\" data-key=\"layout.hierarchical.levelSeparation\" min=\"0\" step=\"1\">\r\n                Level separation\r\n              </label>\r\n              <label>\r\n                <input type=\"number\" class=\"lopt\" data-key=\"layout.hierarchical.nodeSpacing\" min=\"0\" step=\"1\">\r\n                Node spacing\r\n              </label>\r\n              <label>\r\n                <input type=\"number\" class=\"lopt\" data-key=\"layout.hierarchical.treeSpacing\" min=\"0\" step=\"1\">\r\n                Tree spacing\r\n              </label>\r\n              <label>Direction\r\n                <select class=\"lopt\" data-key=\"layout.hierarchical.direction\">\r\n                  <optgroup label=\"Direction\">\r\n                    <option value=\"UD\">Up - Down</option>\r\n                    <option value=\"DU\">Down - Up</option>\r\n                    <option value=\"LR\">Left - Right</option>\r\n                    <option value=\"RL\">Right - Left</option>\r\n                  </optgroup>\r\n                </select>\r\n              </label>\r\n              <label>Sort method\r\n                <select class=\"lopt\" data-key=\"layout.hierarchical.sortMethod\">\r\n                  <optgroup label=\"Sort method\">\r\n                    <option value=\"hubsize\">hubsize</option>\r\n                    <option value=\"directed\">directed</option>\r\n                  </optgroup>\r\n                </select>\r\n              </label>\r\n              <label>Shake towards\r\n                <select class=\"lopt\" data-key=\"layout.hierarchical.shakeTowards\">\r\n                  <optgroup label=\"Shake towards\">\r\n                    <option value=\"leaves\">leaves</option>\r\n                    <option value=\"roots\">roots</option>\r\n                  </optgroup>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <label uif=\"atl || bar\">\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.theta\"> Theta\r\n            </label>\r\n            <label uif=\"atl || bar\">\r\n              <input type=\"number\" min=\"any\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.gravitationalConstant\"> Gravitational constant\r\n            </label>\r\n            <label uif=\"atl || bar || rep || hr\">\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.centralGravity\"> Central gravity\r\n            </label>\r\n            <label uif=\"atl || bar || rep || hr\">\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.springLength\"> Spring length\r\n            </label>\r\n            <label uif=\"atl || bar || rep || hr\">\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.springConstant\"> Spring constant\r\n            </label>\r\n            <label uif=\"atl || bar || rep || hr\">\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.damping\"> Damping\r\n            </label>\r\n            <label uif=\"atl || bar || hr\">\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.avoidOverlap\"> Avoid overlap\r\n            </label>\r\n            <label uif=\"rep || hr\">\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.bh.nodeDistance\"> Node distance\r\n            </label>\r\n            <label>\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.minVelocity\"> Min velocity\r\n            </label>\r\n            <label>\r\n              <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.maxVelocity\"> Max velocity\r\n            </label>\r\n\r\n            <label>\r\n              <input type=\"checkbox\" step=\"any\" class=\"dynamic_uif lopt\" data-key=\"physics.stabilization.enabled\"> Stabilization\r\n            </label>\r\n            <div uif=\"stabilization\">\r\n              <label>\r\n                <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.stabilization.iterations\"> Iterations\r\n              </label>\r\n              <label>\r\n                <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"physics.stabilization.updateInterval\"> Update interval (ms)\r\n              </label>\r\n              <label>\r\n                <input type=\"number\" step=\"any\" class=\"lopt\" data-key=\"custom.scale_factor\"> Scale factor\r\n              </label>\r\n              <label class=\"whatisthis\">\r\n                <input type=\"checkbox\" class=\"lopt\" data-key=\"physics.stabilization.onlyDynamicEdges\"> onlyDynamicEdges???\r\n              </label>\r\n              <label class=\"whatisthis\">\r\n                <input type=\"checkbox\" class=\"lopt\" data-key=\"physics.stabilization.fit\"> Fit??\r\n              </label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"template htmlstyle\">\r\n      <!-- start of level header -->\r\n      <app-csseditor></app-csseditor>\r\n      <div class=\"top\">\r\n        <label class=\"colChild\">\r\n          <div class=\"roww\">\r\n            <h6 class=\"vertexStyle separator htmllevel\"></h6>\r\n          </div>\r\n          <!--\r\n          <div class=\"colChild\">\r\n            <span class=\"stylelabel\">Applied view:</span>\r\n            <select class=\"stylename\"></select>\r\n          </div>\r\n          -->\r\n        </label>\r\n        <button class=\"btn btn-danger styledelete\" matTooltip=\"Remove style customization\">X</button>\r\n        <button class=\"helpButton btn btn-info\" matTooltip=\"todo: explain .EndPoint, .TypeSelector, .ClassSelector...\">?</button>\r\n      </div>\r\n      <!-- end of level header -->\r\n      <div class=\"cssdetailleveltoggler2\">\r\n        <ul class=\"UtabHeaderContainer\" style=\"background-color: inherit;\">\r\n          <li class=\"UtabHeader\" selected=\"true\" data-toggle=\"collapse\" data-target=\".cssdetailleveltoggler2 .collapse.c1\">\r\n            <span>\r\n              Simplified editor\r\n            </span>\r\n          </li>\r\n          <li class=\"UtabHeader\" selected=\"true\" data-toggle=\"collapse\" data-target=\".cssdetailleveltoggler2 .collapse.c2\">\r\n            <span>\r\n              Full editor\r\n            </span>\r\n          </li>\r\n        </ul>\r\n\r\n        <div class=\"collapse c1\" data-parent=\".cssdetailleveltoggler2\">\r\n          <!-- start of css editor -->\r\n          <div class=\"csseditorroot\">\r\n            <h4>Color scheme selector</h4>\r\n            <div class=\"cschemeroot\">\r\n\r\n              <!--div class=\"ui dropdown fluid multiple search selection\">\r\n                <input type=\"hidden\" name=\"color-schemes\" class=\"color-schemes\">\r\n                <i class=\"dropdown icon\"></i>\r\n                <div class=\"default text\">Select Color scheme (currently inherithing #####)</div>\r\n                <div class=\"menu\">\r\n                  <div class=\"item dropdown-item template\" data-value=\"cs-selectors\">\r\n                    <i class=\"af flag\"></i>Afghanistan\r\n                    <div class=\"text-center\">cs name</div>\r\n                    <div class=\"colorblock\"></div>\r\n                  </div>\r\n                </div>\r\n              </div-->\r\n\r\n              <div class=\"cstemplates template\">\r\n                <li class=\"cslistreadonly dropdownitem\">\r\n                  <div class=\"inheritedFromText cslistreadonly dropdownitem\"><span>from&nbsp;</span><span class=\"cs tag\"></span><span>&nbsp;(</span><span class=\"cs level\"></span><span>&nbsp;levels up)</span></div>\r\n                  <ul class=\"cs list p-0\"></ul>\r\n                </li>\r\n                <li class=\"csoption dropdownitem\">\r\n                  <div class=\"name text-center\"></div>\r\n                  <div class=\"colors d-flex\">\r\n                    <!-- contiene colorblocks creati a runtime -->\r\n                  </div>\r\n                </li>\r\n\r\n              </div>\r\n\r\n              <div class=\"dropdown hover-display readonly btn d-flex inheriting-color-scheme-list\">\r\n                <div class=\"title btn\">Inherited color schemes</div>\r\n                <i class=\"icon\"></i>\r\n                <ul class=\"dropdownmenu w-100\">\r\n                  <li><h5 style=\"color:red\">READ ONLY</h5></li>\r\n                  <!-- contiene .template.cslistreadonly -->\r\n                </ul>\r\n              </div>\r\n\r\n              <div class=\"dropdown btn d-flex own-color-scheme-list\" tabindex=\"-1\">\r\n                <div class=\"title btn\">Own color schemes</div>\r\n                <i class=\"icon\"></i>\r\n                <ul class=\"dropdownmenu w-100\">\r\n                  <!-- contiene .template.cslistreadonly -->\r\n                </ul>\r\n                <!--span class=\"dropdown cscheme w-auto d-none roba vecchia inutilizzata\">\r\n                  <input type=\"hidden\" name=\"color-schemes\" class=\"color-schemes\">\r\n                  <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" fillwithvalue1>NOT INIT</button>\r\n                  <div class=\"dropdown-menu w-100\">\r\n                    <li class=\"dropdown-item\" data-csname=\"custom\">\r\n                        <div class=\"text-center\" value1>Custom</div>\r\n                        <div class=\"cscheme default\" value2>\r\n                          <div class=\"colorblock empty\"></div>\r\n                          <div class=\"colorblock empty\"></div>\r\n                          <div class=\"colorblock empty\"></div>\r\n                          <div class=\"colorblock empty\"></div>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"dropdown-item template\" data-csname=\"tofill\">\r\n                      <div class=\"text-center\" value1></div>\r\n                      <div class=\"cscheme\" value2></div>\r\n                    </li>\r\n                  </div>\r\n                </span-->\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"css_editor\" uif=\"isCustomized\">\r\n              <h4 class=\"d-none\">Css / color customizer</h4>\r\n              <div class=\"d-none roww addclass\">\r\n                <input list=\"currentNodeClassList\">\r\n                <button class=\"btn btn-success addselector\">Add element</button>\r\n              </div>\r\n              <div>\r\n                <div class=\"roww cssBlocksContainer\">\r\n                  <div class=\"cssprop template roww\">\r\n                    <div class=\"g g0\">\r\n                      <button class=\"btn btn-danger delcssprop\">X</button>\r\n                    </div>\r\n                    <input class=\"form-group g1 cssprop\" list=\"cssrules\" value=\"border\">\r\n                    <div class=\"g g0\">\r\n                      <span>:</span>\r\n                    </div>\r\n                    <input class=\"form-group cssval g1 cssval\" placeholder=\"ph autocomplete todo\">\r\n                  </div>\r\n                  <div class=\"cssblock template\">\r\n                    <div class=\"colorPicker roww\">\r\n                      <div class=\"g g0\">\r\n                        <button class=\"btn btn-danger delcssprop\">X</button>\r\n                      </div>\r\n                      <div class=\"g g3\"><span class=\"title selector\">SELECTOR_TOFILL</span></div>\r\n                      <div class=\"g g1 mr-1 fontstyle\" style=\"flex-grow: 0;\"><label class=\"c fc\" style=\"margin-bottom: 15px;\">\r\n                        <div class=\"horizontalContainer verticalContainer\"><span class=\"HorizontalChild\">Font</span></div>\r\n                        <input type=\"color\" value=\"#000000\" class=\"m-0\" style=\"background: transparent;\">\r\n                        <input type=\"range\" class=\"form-control-range opacity\" min=\"0\" max=\"1\" step=\"any\">\r\n                      </label></div>\r\n                      <div class=\"g g1 mr-1 backstyle\" style=\"flex-grow: 0;\"><label class=\"c bc\" style=\"margin-bottom: 15px;\">\r\n                        <div class=\"horizontalContainer verticalContainer\"><span class=\"HorizontalChild\">Font</span></div>\r\n                        <input type=\"color\" value=\"#ffffff\" class=\"m-0\" style=\"background: transparent;\">\r\n                        <input type=\"range\" class=\"form-control-range opacity\" min=\"0\" max=\"1\" step=\"any\">\r\n                      </label></div>\r\n                      <div class=\"g g2\"><button class=\"btn btn-primary rc\" data-toggle=\"collapse\" data-target=\"#ac1\"><span class=\"rulecount\">X</span> css</button></div>\r\n                    </div>\r\n                    <div id=\"ac1\" class=\"csscontainer collapse\">\r\n                    <div class=\"d-flex csspropcontainer\">\r\n                      <button class=\"btn btn-success m-auto addcssprop\">Add css rule</button>\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <!-- end of css editor -->\r\n        </div>\r\n        <div class=\"collapse c2 show\" data-parent=\".cssdetailleveltoggler2\">\r\n          <!-- start of html editor -->\r\n          <label class=\"allowEdit\"><span>This style is being inherited and cannot be modified here.<br>You need a local copy to allow Edit.</span><button class=\"allowEdit btn btn-secondary\">Make it</button></label>\r\n          <div contenteditable=\"true\" class=\"html\" placeholder=\"Html for $##name$ (m2 class).\"></div>\r\n          <!-- end of html editor -->\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <!--\r\n      <div class=\"roww nowrap detailButtonContainer\">\r\n        <button target=\"div.detail.measurable\" class=\"detail measurable btn btn-primary\">\r\n            <span class=\"closed\">\r\n              <label class=\"measurable\">\r\n                <input type=\"checkbox\">\r\n                <span>Measurable</span>\r\n              </label>\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮟</span><span class=\"HorizontalChild\">⮟</span><span class=\"HorizontalChild\">⮟</span></div>\r\n            </span>\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n        <button target=\"div.detail.save\" class=\"detail save btn btn-primary\">\r\n          <span class=\"closed\">Save detail</span>\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n      </div>\r\n      <div class=\"detail measurable\" style=\"display: none\">\r\n        < !--\r\n                          left\t  right\t  eval\r\n\r\n          r_\t\t      str\t    any\t    /     <-- add dataset to name input.\r\n          d_\t\t      str\t    any\t    /\r\n          _\t\t        /\t      js\t    any\r\n          _rule\t\t    $##a$  \tjs\t    any\r\n          _export\t\t  jq\t    js\t    any\r\n          _chainFinal\texport\r\n          _chain\t\t  export\r\n          _constraint\tsize\t  js\t    bool\tinequality\r\n          _dstyle\t\t  /\t      js->css\tstr\r\n          _import\t\t  size\t  js\t    any\r\n        -- >\r\n        <div class=\"template measurable _root roww columnContainer\">\r\n          <button class=\"deleteRule columnChild btn btn-danger\">X</button>\r\n          <div class=\"columnChild\">\r\n            <div class=\"roww hideOn r_ d_\">\r\n              <label>\r\n                <span>Name</span>\r\n                <span class=\"nameprefix\">_</span>\r\n                <input class=\"fill name\" type=\"text\" placeholder=\"attribute name\" pattern=\"[.]+\">\r\n              </label>\r\n            </div>\r\n            <label class=\"expressionRoot\">\r\n              <input class=\"leftside hideOn _ _dstyle _chain _chainFinal\" type=\"text\" placeholder=\"Left side\">\r\n              <span class=\"operatortext hideOn _constraint _ _dstyle operator\">=</span>\r\n              <select class=\"hideOn _ _dstyle operator\"><optgroup label=\"operator\">\r\n                <option value=\"<=\">&lt;=</option>\r\n                <option value=\"=\">=</option>\r\n                <option value=\">=\">&gt;=</option>\r\n              </optgroup></select>\r\n              <input class=\"rightside hideon_chain _chainFinal \" type=\"text\" placeholder=\"Right side\">\r\n            </label>\r\n            <div class=\"roww hideOn r_ d_\">\r\n              <label>\r\n                <span>Relative target</span>\r\n                <input class=\"fill relativetarget\" type=\"text\" placeholder=\"jQuery selector\">\r\n              </label>\r\n            </div>\r\n            <div class=\"roww hideOn r_ d_\">\r\n              <label>\r\n                <span>Evaluation (debug)</span>\r\n                <input readonly class=\"fill evaluation\" type=\"text\" placeholder=\"empty string\">\r\n              </label>\r\n            </div>\r\n            <a class=\"roww outputerror left\"></a>\r\n            <a class=\"roww outputerror right\"></a>\r\n          </div>\r\n        </div>\r\n        < !-- TEMPLATES END -- >\r\n        <h6 class=\"addHeader\">\r\n          <button class=\"btn btn-secondary addmeasurable\">Add</button>\r\n          <select class=\"attributetypeadd\"><optgroup label=\"Attribute type\">\r\n            <option value=\"d_\">jQueryUI drag option</option>\r\n            <option value=\"r_\">jQueryUI resize option</option>\r\n            <option value=\"_rule\">_rule</option>\r\n            <option value=\"_dstyle\">_dstyle</option>\r\n            <option value=\"_export\">_export</option>\r\n            <option value=\"_constraint\">_constraint</option>\r\n            <option value=\"_import\">_import</option>\r\n            <option value=\"_chain\">_chain</option>\r\n            <option value=\"_chainFinal\">_chainFinal</option>\r\n            <option value=\"_\">_ (Pseudo-variable)</option>\r\n          </optgroup></select>\r\n        </h6>\r\n\r\n        <h6>_D</h6>\r\n        <div class=\"d_Container\"></div>\r\n        <h6>_R</h6>\r\n        <div class=\"r_Container\"></div>\r\n        <h6>_ (Pseudo-variables)</h6>\r\n        <div class=\"_Container\"></div>\r\n        <h6>_Rule</h6>\r\n        <div class=\"_ruleContainer\"></div>\r\n        <h6>_Export</h6>\r\n        <div class=\"_exportContainer\"></div>\r\n        <h6>_Constraint</h6>\r\n        <div class=\"_constraintContainer\"></div>\r\n        <h6>_Dstyle</h6>\r\n        <div class=\"_dstyleContainer\"></div>\r\n        <h6>_Import</h6>\r\n        <div class=\"_importContainer\"></div>\r\n        <h6>_Chain</h6>\r\n        <div class=\"_chainContainer\"></div>\r\n        <h6>_ChainFinal</h6>\r\n        <div class=\"_chainFinalContainer\"></div>\r\n      </div>\r\n      <div class=\"detail save\" style=\"display: none\">\r\n        <div class=\"saveasrow\">\r\n          <button class=\"delete btn btn-secondary\">Delete</button>\r\n          <button class=\"saveas btn btn-secondary\">Save as</button>\r\n          <input class=\"saveas form-control\" placeholder=\"new style name\">\r\n        </div>\r\n        <h6>Style is compatible with:</h6>\r\n        <div class=\"compatibleRow\">\r\n          <label><span>M2 Elements</span><input class=\"metamodel\" type=\"checkbox\"></label>\r\n          <label><span>M1 Elements</span><input class=\"model\" type=\"checkbox\"></label>\r\n        </div>\r\n        <h6>And appliable to:</h6>\r\n        <div class=\"compatibleRow\">\r\n          <label><span>Class</span><input class=\"class\" type=\"checkbox\"></label>\r\n          <label><span>Attributes</span><input class=\"attribute\" type=\"checkbox\"></label>\r\n          <label><span>References</span><input class=\"reference\" type=\"checkbox\"></label>\r\n          <label><span>Operations</span><input class=\"operation\" type=\"checkbox\"></label>\r\n          <label><span>Parameters</span><input class=\"parameter\" type=\"checkbox\"></label>\r\n        </div>\r\n      </div>\r\n\r\n      < !-- <div class=\"separatorShell\">\r\n        <h6 class=\"vertexStyle separator\">\r\n          <label><span>Preview&nbsp;of&nbsp;</span>\r\n            <select class=\"previewselector\"></select>\r\n          </label></h6>\r\n        <button class=\"helpButton vertex btn btn-info\" matTooltip=\"todo: explain .EndPoint, .TypeSelector, .ClassSelector...\">?</button>\r\n      </div> -->\r\n\r\n      <!-- start of new measurable -->\r\n      <div class=\"columnContainer\"><div class=\"measurablePlaceholder\"></div></div>\r\n      <!-- end of new measurable -->\r\n\r\n    </div>\r\n\r\n    <div class=\"template modelpiece\">\r\n      <!-- https://www.key-shortcut.com/en/writing-systems/35-symbols/arrows -->\r\n      <div class=\"arrowContainer\">\r\n        <button class=\"arrow up btn btn-primary\" title=\"Go up a level in the html DOM\">⇪</button>\r\n        <h6 class=\"tsclass\">TS_Class</h6>\r\n        <button class=\"arrow upp btn btn-primary\" title=\"Go to the root level\">🢁</button>\r\n        <button class=\"arrow down btn btn-primary\" style=\"display:none\" title=\"Go to the previous level\">⇩</button>\r\n      </div>\r\n      <label class=\"iclass show\">\r\n        <input type=\"checkbox\" class=\"showAsEdge\">\r\n        <span class=\"showAsEdgeText\">#####</span>\r\n      </label>\r\n      <div class=\"style own colContainer\"></div>\r\n      <div class=\"sizeContainer\" style=\"display: flex;\">\r\n        <div class=\"sizeContainerHalf\">\r\n          <label class=\"sizelabel\">\r\n            <input class=\"sizex\" digit=\"5\" type=\"number\">\r\n            <span>X</span>\r\n          </label>\r\n          <label class=\"sizelabel\">\r\n            <input class=\"sizey\" digit=\"5\" type=\"number\">\r\n            <span>Y</span>\r\n          </label>\r\n        </div>\r\n        <div class=\"sizeContainerHalf\">\r\n          <label class=\"sizelabel\">\r\n            <input class=\"sizew\" digit=\"5\" type=\"number\">\r\n            <span>Width</span>\r\n          </label>\r\n          <label class=\"sizelabel\">\r\n            <input class=\"sizeh\" digit=\"5\" type=\"number\">\r\n            <span>Height</span>\r\n          </label>\r\n        </div>\r\n        <label class=\"autosizecontainer\"><input type=\"checkbox\" class=\"autoheight\"><span>Adapt height to content</span></label>\r\n        <label class=\"autosizecontainer\"><input type=\"checkbox\" class=\"autowidth\"><span>Adapt width to content</span></label>\r\n        <label class=\"autosizecontainer\"><input type=\"checkbox\" class=\"autolayout\"><span>Include in Auto-layout</span></label>\r\n        <label class=\"autosizecontainer\"><input type=\"checkbox\" class=\"edgeVisibility\"><span>Display edges</span></label>\r\n        <table class=\"edgePriority\">\r\n          <thead>\r\n          <tr>\r\n            <th colspan=\"3\">Edges visibility</th>\r\n          </tr>\r\n          <tr>\r\n            <th colspan=\"1\" rowspan=\"2\">Kind</th>\r\n            <th colspan=\"2\" rowspan=\"1\">Direction</th>\r\n          </tr>\r\n          <tr>\r\n            <td colspan=\"1\">In</td>\r\n            <td colspan=\"1\">Out</td>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n            <th>Relationship</th>\r\n            <td><input kind=\"in-rel\" type=\"number\"></td>\r\n            <td><input kind=\"out-rel\" type=\"number\"></td>\r\n          </tr>\r\n          <tr>\r\n            <th>Inheritance</th>\r\n            <td><input kind=\"in-ext\" type=\"number\"></td>\r\n            <td><input kind=\"out-ext\" type=\"number\"></td>\r\n          </tr>\r\n          <tr>\r\n            <th>Other</th>\r\n            <td><input kind=\"in-oth\" type=\"number\"></td>\r\n            <td><input kind=\"out-oth\" type=\"number\"></td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"separatorShell\"></div>\r\n      <label class=\"\">\r\n        <input type=\"checkbox\" class=\"asDefault\">\r\n        <span>Use as default style</span>\r\n      </label>\r\n      <div class=\"roww nowrap detailButtonContainer\">\r\n        <button target=\"div.detail.style.inherited\" class=\"detail inherited btn btn-primary\">\r\n          <span class=\"closed\">Inherited Style</span>\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n        <button target=\"div.detail.style.inheritable\" class=\"detail inheritable btn btn-primary\">\r\n          <span class=\"closed\">Inheritable Style</span>\r\n          <span class=\"opened\">\r\n              <div class=\"HorizontalContainer\"><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span><span class=\"HorizontalChild\">⮝</span></div>\r\n            </span>\r\n        </button>\r\n      </div>\r\n      <!-- detail style instances colContainer ... -->\r\n\r\n      <div class=\"detail style inheritable colContainer\"></div>\r\n      <div class=\"detail style inherited colContainer\"></div>\r\n    </div>\r\n    <div class=\"template edge\">\r\n      <h1>Edge style</h1>\r\n      <table><tbody>\r\n      <tr>\r\n        <td>Style</td>\r\n        <td><select class=\"edgeStyle\"><optgroup label=\"Edge style\">\r\n          <option value=\"straight\" title=\"./img/icons/edge/straight.jpg\">Straight</option>\r\n          <option value=\"angular23Auto\" title=\"./img/icons/edge/angular23.jpg\">Angulated (auto)</option>\r\n          <option value=\"angular2\" title=\"./img/icons/edge/angular2.jpg\">Angulated (2)</option>\r\n          <option value=\"angular3\" title=\"./img/icons/edge/angular3.jpg\">Angulated (3)</option>\r\n        </optgroup></select></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On normal status</td></tr>\r\n      <tr>\r\n        <td>Color</td>\r\n        <td><input type=\"color\" class=\"edgeColor common\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Width</td>\r\n        <td><input type=\"number\" class=\"edgeWidth common\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On highlight preview</td></tr>\r\n      <tr>\r\n        <td>Color</td>\r\n        <td><input type=\"color\" class=\"edgeColor highlight\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Width</td>\r\n        <td><input type=\"number\" class=\"edgeWidth highlight\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On selection</td></tr>\r\n      <tr>\r\n        <td>Color</td>\r\n        <td><input type=\"color\" class=\"edgeColor selected\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Width</td>\r\n        <td><input type=\"number\" class=\"edgeWidth selected\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      </tbody></table>\r\n      <h1>EdgePoint style</h1>\r\n      <table><tbody>\r\n      <tr><td colspan=\"2\" class=\"title\">On normal status</td></tr>\r\n      <tr>\r\n        <td>Radius</td>\r\n        <td><input type=\"number\" class=\"edgePoint radius\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Width</td>\r\n        <td><input type=\"number\" class=\"edgePoint strokeW\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Color</td>\r\n        <td><input type=\"color\" class=\"edgePoint stroke\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Fill Color</td>\r\n        <td><input type=\"color\" class=\"edgePoint fill\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">On bounding preview</td></tr>\r\n      <tr>\r\n        <td>Radius</td>\r\n        <td><input type=\"number\" class=\"edgePointPreview radius\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Width</td>\r\n        <td><input type=\"number\" class=\"edgePointPreview strokeW\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Color</td>\r\n        <td><input type=\"color\" class=\"edgePointPreview stroke\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Fill Color</td>\r\n        <td><input type=\"color\" class=\"edgePointPreview fill\"></td>\r\n      </tr>\r\n      <tr><td colspan=\"2\" class=\"title\">While moving</td></tr>\r\n      <tr>\r\n        <td>Radius</td>\r\n        <td><input type=\"number\" class=\"edgePointSelected radius\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Width</td>\r\n        <td><input type=\"number\" class=\"edgePointSelected strokeW\" min=\"0\" step=\"0.1\" placeholder=\"0\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Border Color</td>\r\n        <td><input type=\"color\" class=\"edgePointSelected stroke\"></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Fill Color</td>\r\n        <td><input type=\"color\" class=\"edgePointSelected fill\"></td>\r\n      </tr>\r\n      </tbody></table>\r\n      <div contenteditable=\"true\" class=\"edgeStyle label html\" placeholder=\"Label of link. Not filled means without label.\"></div>\r\n      <div class=\"separatorShell\">\r\n        <h6 class=\"edgeStyle separator\">Preview:</h6>\r\n        <button class=\"helpButton edgeLabel\" matTooltip=\"todo: explain .EndPoint, .TypeSelector, .ClassSelector...\">?</button>\r\n      </div>\r\n      <div class=\"edgeStyle preview\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/m2tcreator/m2tcreator.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/m2tcreator/m2tcreator.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("DROPPED: dovrei trovare una implementazione dello standard MTL in js (model to text standard)\ndovrei salvare la regola usando m2t, con l'aggiunta di variabili pre-esistenti definite qui.\nal momento della chiamata della trasformazione m2t prima dell'esecuzione si apre un popup su come assegnare eventuali parametri.\nes per mysql: [checkbox] Ignore duplicates, [checkbox]remove old value... [textarea (array of json strings)] GenerateRedundantKeysFor... (classlist)\nse chiamo mysql in m2 mi genero bd, tabella e vincoli, se chiamo in s1 genero \"insert into\"...\n\n\n\n\n\n\n\n\n\n\n<p>m2tcreator works!</p>\n<h3>M2T creation</h3>\n<span>M2T Options as json</span>\n<textarea class=\"m2t-options\"></textarea>\n\n\n\n\n\n\n<label>M2T help text<textarea [(ngModel)]=\"helptext\"></textarea></label>\n\n<label>name <input></label>\n<label>min values count<input type=\"number\" min=\"0\" value=\"1\"></label>\n<label>max values count<input type=\"number\" min=\"1\" value=\"1\"></label>\n<h3>Paramater list</h3>\n<label>Parameter type\n  <select>\n  <option>enum</option>\n  <option>string</option>\n  <option>number</option>\n  <option>boolean</option>\n</select></label>\n<div uif=\"type-enum\">\n  <label>Enumeration allowed values (as json array)<textarea>[\"example1\", \"example2\"]</textarea></label>\n  <label>Default value<input type=\"text\">example1</label>\n</div>\n\n<label uif=\"type-number\">numeric min value<input step=\"any\" value=\"0\"></label>\n<label uif=\"type-number\">numeric max value<input step=\"any\" value=\"100\"></label>\n<label uif=\"type-number\">user help text<input step=\"any\" value=\"100\"></label>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/top-bar.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/top-bar.component.html ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div id='topbarShell'>\r\n  <div id='topbar'>\r\n    <div class=\"dropdownContainer root user\">\r\n      <button class=\"todo dropdownTitle\">User</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding\">Logout</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding\">Preferences</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding\">Account</div></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer root metametamodel\">\r\n      <button class=\"dropdownTitle\">Meta-Metamodel</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"dropdownpadding TypeMapping\">Type mapping</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding VertexStyle\">Vertex Style</div></li>\r\n        <li class=\"dropdownContent\"><div class=\"todo dropdownpadding EdgeStyle\">Edge Style</div></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer root metamodel\">\r\n      <button class=\"dropdownTitle\">Metamodel</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"dropdownpadding save\">Save</div></li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Recent</div>\r\n            <ul class=\"dropdownContent right recentSaveContainer\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 1</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 2</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 3</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 4</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Export</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Model</div>\r\n                  <ul class=\"dropdownContent right model\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding download_JSON_String\">To eCore/JSON string</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding download_JSON\">Download eCore/JSON file</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding download_XMI\">Download eCore/XMI file</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Vertices layout</div>\r\n                  <ul class=\"dropdownContent right vertex\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadFile\">Download file (.jv)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadTxt\">To text</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Viewpoints</div>\r\n                  <ul class=\"dropdownContent right viewpoints\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadFile\">Download file (.jvp)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadTxt\">To text</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Import</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Model</div>\r\n                  <ul class=\"dropdownContent right model\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">New empty metamodel</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (eCore/XMI)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text (eCore/JSON)</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Vertices layout</div>\r\n                  <ul class=\"dropdownContent right vertex\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">Reset vertex position</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (.jv)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text (.jv)</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Viewpoints</div>\r\n                  <ul class=\"dropdownContent right viewpoints\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">Reset viewpoints</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (.jvp)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Model To Text</div>\r\n            <ul class=\"dropdownContent right m2t-m2-list\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding todo\" (click)=\"createM2T_Rule('m2')\">Create M2T rule</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding todo\">Import M2T rule</div></li>\r\n              <li class=\"dropdownContent right separator\"></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding\" (click)=\"displayResult('byText', m2t_byText_m2())\">By text</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding\" (click)=\"displayResult('MySQL', m2t_mysql_m2())\">MySQL</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer root model\">\r\n      <button class=\"dropdownTitle\">Model</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\"><div class=\"dropdownpadding save\">Save</div></li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Recent</div>\r\n            <ul class=\"dropdownContent right recentSaveContainer\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 1</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 2</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 3</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding recentsave\">example 4</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Export</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Model</div>\r\n                  <ul class=\"dropdownContent right model\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding download_JSON_String\">To eCore/JSON string</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding download_JSON\">Download eCore/JSON file</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding download_XMI\">Download eCore/XMI file</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Vertices layout</div>\r\n                  <ul class=\"dropdownContent right vertex\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadFile\">Download file (.jv)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadTxt\">To text</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Viewpoints</div>\r\n                  <ul class=\"dropdownContent right viewpoints\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadFile\">Download file (.jvp)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding downloadTxt\">To text</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Import</div>\r\n            <ul class=\"dropdownContent right\">\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Model</div>\r\n                  <ul class=\"dropdownContent right model\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">New empty metamodel</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (XMI)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text (JSON)</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Vertices layout</div>\r\n                  <ul class=\"dropdownContent right vertex\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">Reset vertex position</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (.jv)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text (.jv)</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n              <li class=\"dropdownContent right\">\r\n                <div class=\"dropdownContainer right\">\r\n                  <div class=\"dropdownTitle right\">Viewpoints</div>\r\n                  <ul class=\"dropdownContent right viewpoints\">\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadEmpty\">Reset viewpoints</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadFile\">From file (.jvp)</div></li>\r\n                    <li class=\"dropdownContent right\"><div class=\"dropdownpadding loadTxt\">From text</div></li>\r\n                  </ul>\r\n                </div>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </li>\r\n\r\n        <li class=\"dropdownContent\">\r\n          <div class=\"dropdownContainer right\">\r\n            <div class=\"dropdownTitle right\">Model To Text</div>\r\n            <ul class=\"dropdownContent right m2t-m2-list\">\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding todo\" (click)=\"createM2T_Rule('m1')\">Create M2T rule</div></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding todo\">Import M2T rule</div></li>\r\n              <li class=\"dropdownContent right separator\"></li>\r\n              <li class=\"dropdownContent right\"><div class=\"dropdownpadding\" (click)=\"displayResult('MySQL', m2t_mysql_m1())\">MySQL</div></li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer root themes\">\r\n      <button class=\"dropdownTitle\">Themes</button>\r\n      <ul class=\"dropdownContent\">\r\n        <li class=\"dropdownContent\" style=\"display: none;\"><div class=\"dropdownpadding\">\r\n          <label>\r\n            <input class=\"themename\" type=\"radio\" name=\"themename\" value=\"Dark\">\r\n            <span>Dark</span>\r\n          </label>\r\n        </div></li>\r\n        <li class=\"dropdownContent\" style=\"display: none;\"><div class=\"dropdownpadding\">\r\n          <label>\r\n            <input class=\"themename\" type=\"radio\" name=\"themename\" value=\"Light\" checked>\r\n            <span>Light</span>\r\n          </label>\r\n        </div></li>\r\n        <li class=\"dropdownContent colorschemeopener\"><div class=\"dropdownpadding\">\r\n        <label>\r\n          <span>Color schemes</span>\r\n        </label>\r\n      </div></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dropdownContainer root Changelog\">\r\n      <button class=\"dropdownTitle changelogbutton\">Changelog</button>\r\n    </div>\r\n  <div id=\"TypeMapper\" class=\"screenWideShadow\" data-closebuttontarget=\"1\" style=\"display: none;\">\r\n    <div id=\"TypeMapperContent\" class=\"popupContent\">\r\n      <h1>Type mapping</h1>\r\n      <button class=\"closeButton\" data-closebuttontarget=\"1\">X</button>\r\n      <br>\r\n      <div class=\"typemaprow columnContainer\">\r\n        <select class=\"typemapselector btn-sm\" (change)=\"topbar.changeTypeMap()\" style=\"margin: auto; margin-left:0;\">\r\n          <optgroup label=\"Predefined type mappings\">\r\n            <option value=\"predefined.java\">Java (default)</option>\r\n            <option value=\"predefined.c89\">C 89</option>\r\n            <option value=\"predefined.MySQL\">MySQL</option>\r\n          </optgroup>\r\n          <optgroup label=\"Customized type mappings\">\r\n            <option *ngFor=\"let typemap of topbar?.typemapArr\" value=\"{{typemap}}\">{{typemap.substring(typemap.indexOf('.') + 1)}}</option>\r\n          </optgroup>\r\n        </select>\r\n        <button style=\"margin:auto; margin-right: 0;\" class=\"btn btn-primary addcustomtypmap\"\r\n                (click)=\"topbar.createTypeMap($event)\">Add custom mapping</button>\r\n      </div>\r\n      <div class=\"TypeList\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  <div class=\"changelogRoot\" style=\"display: none\">\r\n\r\n  </div>\r\n</div>\r\n\r\n<datalist id=\"currentNodeClassList\"><option>.VertexHeader</option><option>input</option></datalist>\r\n<datalist id=\"cssrules\"><option>.VertexHeader</option><option>input</option></datalist>\r\n");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "./src/Database/LocalStorage.ts":
/*!**************************************!*\
  !*** ./src/Database/LocalStorage.ts ***!
  \**************************************/
/*! exports provided: SaveListEntry, LocalStorage, LocalStorageM, LocalStorageM3, LocalStorageM2, LocalStorageM1, LocalStorageStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveListEntry", function() { return SaveListEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorage", function() { return LocalStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM", function() { return LocalStorageM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM3", function() { return LocalStorageM3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM2", function() { return LocalStorageM2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageM1", function() { return LocalStorageM1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageStyles", function() { return LocalStorageStyles; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class SaveListEntry {
    constructor(lastopened, prefix, listname) {
        this.lastopened = lastopened;
        this.prefix = prefix;
        this.listname = listname;
    }
}
SaveListEntry.vertexPos = new SaveListEntry('_LastOpenedVertexPos', 'VertexPos', '_SaveListVertexPos');
SaveListEntry.view = new SaveListEntry('_LastOpenedView', 'ViewRule', '_SaveListView');
SaveListEntry.model = new SaveListEntry('_LastOpened', '', '_SaveList');
class LocalStorage {
    constructor(model) {
        this.prefix = '' + '';
        this.print = true;
        this.popupTmp = null;
        this.model = null;
        this.model = model;
        this.prefix = model.getPrefixNum() + '_';
    }
    static getLastOpened(modelNumber) {
        const ret = { model: null, vertexpos: null, view: null };
        ret.model = localStorage.getItem(LocalStorage.reservedprefix + 'm' + modelNumber + '_' + SaveListEntry.model.lastopened);
        ret.view = localStorage.getItem(LocalStorage.reservedprefix + 'm' + modelNumber + '_' + SaveListEntry.view.lastopened);
        ret.vertexpos = localStorage.getItem(LocalStorage.reservedprefix + 'm' + modelNumber + '_' + SaveListEntry.vertexPos.lastopened);
        return ret;
    }
    static deleteLastOpened(modelNumber) { this.setLastOpened(modelNumber, null, null, null); }
    static setLastOpened(modelNumber, model = null, view = null, vertex = null) {
        const prefix = LocalStorage.reservedprefix + 'm' + modelNumber + '_';
        if (model)
            localStorage.setItem(prefix + SaveListEntry.model.lastopened, model);
        else
            localStorage.removeItem(prefix + SaveListEntry.model.lastopened);
        if (view)
            localStorage.setItem(prefix + SaveListEntry.view.lastopened, view);
        else
            localStorage.removeItem(prefix + SaveListEntry.view.lastopened);
        if (vertex)
            localStorage.setItem(prefix + SaveListEntry.vertexPos.lastopened, vertex);
        else
            localStorage.removeItem(prefix + SaveListEntry.vertexPos.lastopened);
    }
    getViewPoints() {
        const m = this.model;
        const ret = { view: null, vertexPos: null };
        if (!m.name)
            return ret;
        ret.view = this.get(m.name, SaveListEntry.view);
        ret.vertexPos = this.get(m.name, SaveListEntry.vertexPos);
        return ret;
    }
    addToList(key, listname) {
        const saveKeyList = this.getKeyList(listname, null);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(saveKeyList, key))
            return;
        saveKeyList.push(key);
        this.overwriteList(listname, saveKeyList);
    }
    removeFromList(key, listname) {
        const saveKeyList = this.getKeyList(listname, null);
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(saveKeyList, key))
            return;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(saveKeyList, key);
        this.overwriteList(listname, saveKeyList);
    }
    overwriteList(listname, value) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!Array.isArray(value), 'recent savelist must be an array.');
        localStorage.setItem(LocalStorage.reservedprefix + this.prefix + listname, JSON.stringify(value));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TopBar"].topbar.updateRecents();
    }
    getKeyList(listname, limit = null) {
        const ret = JSON.parse(localStorage.getItem(LocalStorage.reservedprefix + this.prefix + listname));
        if (!ret) {
            return [];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!Array.isArray(ret), 'savelist got is not an array:', ret);
        return isNaN(limit) ? ret : ret.splice(limit);
    }
    add(key = null, val, saveList) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(val !== '' + val, 'parameter should be string:', val);
        if (val !== '' + val) {
            val = JSON.stringify(val);
        }
        key = key ? this.prefix + saveList.prefix + key : null;
        if (val !== 'null' && val !== 'undefined')
            localStorage.setItem(LocalStorage.reservedprefix + this.prefix + saveList.lastopened, val);
        else
            localStorage.removeItem(LocalStorage.reservedprefix + this.prefix + saveList.lastopened);
        if (!key) {
            return;
        }
        this.addToList(key, saveList.listname);
        localStorage.setItem(key, val);
    }
    remove(oldKey, saveList) {
        if (!oldKey)
            return;
        oldKey = this.prefix + saveList.prefix + oldKey;
        this.removeFromList(oldKey, saveList.listname);
        localStorage.removeItem(oldKey);
    }
    get(key, saveList) {
        key = this.prefix + saveList.prefix + key;
        return localStorage.getItem(key);
    }
    rename(oldKey, newKey, saveList) {
        const oldVal = this.get(oldKey, saveList);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isUnset(oldVal))
            return;
        this.remove(oldKey, saveList);
        this.add(newKey, oldVal, saveList);
    }
    p(arg1, ...restArgs) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(this.print, arg1, ...restArgs); }
    finishSave(saveVal) {
        const m = this.model;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!m.name, 'model name should be filled with a validated user input.');
        // must be recalculated, model.name might have been changed by user input (saveas or un-named model being given a name)
        let viewpointSave = JSON.stringify(m.generateViewPointSaveArr());
        this.add(m.name, saveVal, SaveListEntry.model);
        this.add(m.name, viewpointSave, SaveListEntry.view);
        this.add(m.name, this.vertexSaveStr, SaveListEntry.vertexPos);
        this.p(m.name + ' VertexPositions saved:', saveVal);
        this.p(m.name + ' ViewPoints saved:', viewpointSave);
        this.p(m.name + ' Model saved:', this.vertexSaveStr);
    }
    save_BlurEvent(e, saveVal) {
        const input = e.currentTarget;
        if (!+input.getAttribute('valid'))
            return;
        this.finishSave(saveVal);
    }
    save_OnKeyDown(e, saveVal) {
        // this.save_OnChange(e, popup, model);
        if (e.key !== 'return') {
            return;
        }
        this.save_BlurEvent(e, saveVal);
    }
    save_OnChange(e, model) {
        this.p('onchange');
        const input = e.currentTarget;
        let error = false;
        try {
            model.setName(input.value);
        }
        catch (e) {
            error = true;
        }
        finally { }
        if (error || input.value !== model.name) {
            this.popupTmp.setErrText('invalid or already registered name, a fix');
            input.setAttribute('valid', '0');
            if (model.name) {
                input.value = model.name;
            }
            return;
        }
        input.setAttribute('valid', '1');
    }
    saveModel(isAutosave, saveAs = false) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!this.popupTmp, 'should not be allowed to have 2 popup for the same Storage. this would lead to a conflict mixing data.');
        this.isAutosavetmp = isAutosave;
        this.saveAstmp = saveAs;
        const model = this.model;
        const ecoreJSONStr = model.generateModelString();
        this.vertexSaveStr = JSON.stringify(model.generateVertexPositionSaveArr());
        const name = model.name;
        const viepointJSONStr = JSON.stringify(model.generateViewPointSaveArr());
        this.p('save ' + this.prefix + 'Model[' + name + '] = ', ecoreJSONStr, 'viewpoints:', viepointJSONStr);
        this.add(null, ecoreJSONStr, SaveListEntry.model);
        this.add(null, viepointJSONStr, SaveListEntry.view);
        this.add(null, this.vertexSaveStr, SaveListEntry.vertexPos);
        const onblur = (e) => { this.save_BlurEvent(e, ecoreJSONStr); };
        const onkeydown = (e) => { this.save_OnKeyDown(e, ecoreJSONStr); };
        const onchange = (e) => { this.save_OnChange(e, model); };
        this.p('isAutosave:', isAutosave, 'saveAs:', saveAs, 'model.name:', model.name);
        // save with a name.
        if (name && name !== '') {
            this.finishSave(ecoreJSONStr);
            return;
        }
        // autosave without a name.
        if (isAutosave) {
            return;
        }
        // saveas without a name.
        if (saveAs) {
            const onSuccess = (e, value, input, btn) => { model.setName(value); this.popupTmp = this.popupTmp.destroy(); };
            const onAbort = (e, value, input, btn) => { this.popupTmp = this.popupTmp.destroy(); };
            const validator = (value, input) => {
                const oldVal = model.name;
                const ret = model.setName(value) === value;
                if (oldVal)
                    model.setName(oldVal);
                return ret;
            };
            this.popupTmp = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["InputPopup"]();
            this.popupTmp.setText('Choose a name for the ' + model.friendlyClassName(), '', '');
            this.popupTmp.setInputNode('input', 'text', '^[a-zA-Z_$][a-zA-Z_$0-9]*$', true);
            this.popupTmp.setInput('', 'Enter ' + model.friendlyClassName() + ' name');
            this.popupTmp.addOkButton(null, [onSuccess]);
            this.popupTmp.onCloseButton([onAbort]);
            this.popupTmp.setValidation(validator, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(model) + ' name is already used or contains invalid pattern.');
            this.popupTmp.show();
            return;
        }
        // user clicked save without a name
    }
    pushToServer() { }
    autosave(turn, permanendNotImplemented = false) {
        localStorage.setItem('autosave', '' + turn);
    }
}
LocalStorage.reservedprefix = '_';
class LocalStorageM {
}
class LocalStorageM3 extends LocalStorageM {
}
class LocalStorageM2 extends LocalStorageM {
}
class LocalStorageM1 extends LocalStorageM {
}
class LocalStorageStyles extends LocalStorage {
}


/***/ }),

/***/ "./src/GuiStyles/global.ts":
/*!*********************************!*\
  !*** ./src/GuiStyles/global.ts ***!
  \*********************************/
/*! exports provided: WebsiteTheme */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WebsiteTheme", function() { return WebsiteTheme; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class WebsiteTheme {
    static setTheme(checkbox = null) {
        let s = checkbox && checkbox.value;
        let oldTheme = localStorage.getItem(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ReservedStorageKey"].userTheme);
        if (!s) {
            s = oldTheme;
        }
        if (!s) {
            let radio = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TopBar"].topbar.$topbar.find('input.themename:checked')[0];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!radio, 'a theme must be selected');
            s = radio.value;
        }
        if (!checkbox) {
            checkbox = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TopBar"].$checkboxesTheme.filter('[value="' + s + '"]')[0];
        }
        localStorage.setItem(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ReservedStorageKey"].userTheme, '' + s);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TopBar"].$checkboxesTheme.removeAttr('checked');
        checkbox.checked = true;
        const change = (property) => { document.documentElement.style.setProperty('--' + property, 'var(--' + s + property + ')'); };
        change('mainFontColor');
        change('mainBackgroundColor');
        change('mainBorderColor');
        change('secondaryBorderColor');
        change('popupBackgroundColor');
        change('altBackgroundColor');
        change('altFontColor');
        document.body.classList.remove(oldTheme);
        document.body.classList.add(s);
    }
    static get() { return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TopBar"].topbar.$topbar.find('input.themename:checked')[0].value; }
}
WebsiteTheme.Dark = 'Dark';
WebsiteTheme.Light = 'Light';


/***/ }),

/***/ "./src/GuiStyles/viewpoint.ts":
/*!************************************!*\
  !*** ./src/GuiStyles/viewpoint.ts ***!
  \************************************/
/*! exports provided: StyleVisibility, ViewHtmlSettings, ViewRule, DefaultStyleMap, ViewPoint, EdgeViewRule, EdgePointView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleVisibility", function() { return StyleVisibility; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewHtmlSettings", function() { return ViewHtmlSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewRule", function() { return ViewRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultStyleMap", function() { return DefaultStyleMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewPoint", function() { return ViewPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeViewRule", function() { return EdgeViewRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePointView", function() { return EdgePointView; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class StyleVisibility {
}
StyleVisibility._public = 'public';
StyleVisibility._private = 'private';
// approccio estendibile ai gruppi senza neanche creare nuove tabelle.
StyleVisibility._publicExceptUserList = 'crea una relationship table key=tutto= (owner+stylename+utenteCheNONPuòVedere)';
StyleVisibility._privateExceptUserList = 'crea una relationship table key=tutto= (owner+stylename+utenteChePuòVedere)'; // lo vede nessuno tranne...
class ViewHtmlSettings {
    constructor() {
        this.featuredependency = []; // dot separated. "Class" as typeof (m1class | m2class) instead of the name
        this.html = null;
    }
    toJSON(nameOrIndex) {
        this.updateHtmlMetaData();
        const copy0 = {};
        for (let key in this) {
            copy0[key] = this[key];
        }
        const copy = copy0;
        copy.htmlstr = this.html.outerHTML;
        delete copy.html;
        return copy;
    }
    toString() { return JSON.stringify(this); }
    updateHtml() {
        this.html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml(this.htmlstr);
        // todo: inserisci tutti gli attributi metadata nell html.
    }
    updateHtmlMetaData() {
        this.htmlstr = this.html.outerHTML;
        const $meta = $(this.html).find('meta');
        const setValue = (jq) => { return jq.length === 0 ? '' : jq[0].innerHTML; };
        const isTrue = (jq) => { return jq.length > 0 && jq[0].innerHTML === '1' || jq[0].innerHTML === 'true'; };
        $meta.find('owner').text(this.userOwner);
        $meta.find('name').text(this.name);
        $meta.find('isM1').text(this.AllowedOnM1);
        $meta.find('isM2').text(this.AllowedOnM2);
        $meta.find('isClass').text(this.allowedOnClass);
        $meta.find('isAttribute').text(this.allowedOnAttribute);
        $meta.find('isReference').text(this.allowedOnReference);
        $meta.find('isOperation').text(this.allowedOnOperation);
        $meta.find('isParameter').text(this.allowedOnParameter);
        $meta.find('preview').html(this.imgPreviewBase64);
        let featuredependencystr = '';
        let i;
        for (i = 0; i < this.featuredependency.length; i++) {
            const f = this.featuredependency[i];
            featuredependencystr += '<dependency><template>' + f.template + '</template><names>' + f.namesArray + '</names><types>' + f.typesArray + '</types></template>';
        }
        $meta.find('featuredependencyList').html(featuredependencystr);
    }
    setHtml(html) { return this.setHtml0(html, null); }
    setHtmlStr(html) { return this.setHtml0(null, html); }
    setHtml0(html, htmlstr) {
        // U.pe(!html && !htmlstr, 'both html and htmlstr are null.');
        // U.pe(true, this, html, htmlstr, !html, !htmlstr, !html && !htmlstr);
        if (!html) {
            html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml(htmlstr);
        }
        if (!htmlstr) {
            htmlstr = html ? html.outerHTML : null;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!html || !htmlstr, this, 'html is null:', html, 'htmlstr:', htmlstr, 'html?', !html, 'htmlstr?', !htmlstr, 'html && htmlstr?', !html && !htmlstr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!html.parentElement || !!html.parentNode, 'parentElement shuld be null here:', html, this);
        this.html = html;
        const $meta = $(html).find('meta');
        const getValue = (jq) => { return jq.length === 0 ? '' : jq[0].innerHTML; };
        const isTrue = (jq) => { return jq.length > 0 && (jq[0].innerHTML === '1' || jq[0].innerHTML === 'true'); };
        this.userOwner = getValue($meta.find('owner'));
        this.name = getValue($meta.find('name'));
        this.AllowedOnM1 = isTrue($meta.find('isM1'));
        this.AllowedOnM2 = isTrue($meta.find('isM2'));
        this.allowedOnClass = isTrue($meta.find('isClass'));
        this.allowedOnAttribute = isTrue($meta.find('isAttribute'));
        this.allowedOnReference = isTrue($meta.find('isReference'));
        this.allowedOnOperation = isTrue($meta.find('isOperation'));
        this.allowedOnParameter = isTrue($meta.find('isParameter'));
        const $tmp = $meta.find('preview');
        this.imgPreviewBase64 = $tmp.length > 0 ? $tmp[0].innerText : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toBase64Image(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml('<div>Select a instance to initializeFromModel' +
            ' the preview.</div>'));
    }
    getHtml() { return this.html; }
    getHtmlstr() { return this.html.outerHTML; }
    clone(json) {
        this.allowedOnClass = json.allowedOnClass;
        this.allowedOnAttribute = json.allowedOnAttribute;
        this.allowedOnReference = json.allowedOnReference;
        this.allowedOnOperation = json.allowedOnOperation;
        this.allowedOnParameter = json.allowedOnParameter;
        this.AllowedOnM1 = json.AllowedOnM1;
        this.AllowedOnM2 = json.AllowedOnM2;
        this.elementStylingCount = json.elementStylingCount;
        this.featuredependency = json.featuredependency;
        this.forkCounter = json.forkCounter;
        this.ForkedFromStr_name = json.ForkedFromStr_name;
        this.ForkedFromStr_user = json.ForkedFromStr_user;
        // se è serializzato ha .htmlstr, se non lo è ha .html
        const otherHtmlstr = json.getHtmlstr ? json.getHtmlstr() : json.htmlstr;
        this.html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml(otherHtmlstr);
        // console.log('hhtmlo, json.htmlstr:', json, otherHtmlstr, this.html);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(this.html instanceof Element), 'invalid htmlstr, otherHTMLstring:', otherHtmlstr, ' sourcejson:', json, 'result html', this.html);
    }
    setDependencyArray(featuredependency) {
        // todo: insert metadata into html, copy from ModelPieceStyleEntry
    }
    saveToDB() {
    }
}
class ViewRule {
    constructor(owner = null, target = null) {
        this.target = null;
        this.targetStr = null;
        this.htmlo = null;
        this.htmli = null;
        /// for classes
        this.displayAsEdge = false;
        this.vertexSize = null;
        /// for classes or references
        this.edgeViews = [];
        this.isDefault = false;
        ViewRule[this.id = ViewRule.maxID++] = this;
        if (owner)
            owner.views.push(this);
        this.viewpoint = owner;
        this.target = target;
        this.setTargetStr();
    }
    static sortCriteria(vr1, vr2) {
        if (!vr1.viewpoint)
            return -1;
        if (!vr2.viewpoint)
            return 1;
        return ViewPoint.sortCriteria(vr1.viewpoint, vr2.viewpoint);
    }
    ;
    static getbyID(id) { return ViewRule.allByID[id]; }
    static getbyHtml(html0) {
        let html = html0;
        while (html && html.dataset && !html.dataset.styleid)
            html = html.parentElement;
        return ViewRule.getbyID(html && html.dataset ? +html.dataset.styleid : null);
    }
    // will be called by JSON.serialize() before starting, replacing the original parameter.
    toJSON(nameOrIndex) {
        const copy0 = {};
        this.setViewpointStr();
        this.setTargetStr();
        for (let key in this) {
            copy0[key] = this[key];
        }
        const copy = copy0;
        if (this.target instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"])
            this.vertexSize = this.target.getVertex().getSize();
        delete copy.id;
        delete copy.target;
        delete copy.viewpoint;
        return copy;
    }
    // redundant explicit call toJSON just to make the IDE realize i'm using it.
    toJsonString() { return JSON.stringify(this.toJSON(null)); }
    setViewpointStr() { this.viewpointstr = this.viewpoint ? this.viewpoint.name : null; }
    setTargetStr() {
        this.targetStr = this.target ? this.target.getKeyStr() : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.targetStr && !!this.target, 'failed to get targetstr from:', this.target);
    }
    updateViewpoint(vp = null) {
        this.viewpoint = vp || ViewPoint.getByName(this.viewpointstr) || this.viewpoint;
        const arr = this.edgeViews ? this.edgeViews : [];
        let i;
        for (i = 0; i < arr.length; i++) {
            arr[i].updateViewpoint(vp);
        }
    }
    updateTarget() {
        // const root: IModel = this.viewpoint.target;
        const path = JSON.parse(this.targetStr);
        const realindexfollowed = { indexFollowed: [], debugArr: [] };
        this.target = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKey(path, realindexfollowed);
        if (realindexfollowed.indexFollowed.length !== path.length) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'unable to find target of view:', this, ' search output:', realindexfollowed);
            this.target = null;
        }
        this.apply();
    }
    clone(json) {
        if (json.setViewpointStr) {
            json.setViewpointStr();
        }
        for (let key in json) {
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected key "', key, '"', json);
                    break;
                case 'viewpoint': break; // si attacca tramite viewpoint dopo il clone, altrimenti non si aggiornano le liste-dizionari di viewpoint.
                case 'id':
                case 'target':
                case 'isDefault': break;
                case 'targetStr':
                    this.targetStr = json[key];
                    break;
                case 'htmlo':
                    if (!json.htmlo) {
                        this.htmlo = null;
                        break;
                    }
                    if (!this.htmlo) {
                        this.htmlo = new ViewHtmlSettings();
                    }
                    console.log('other htmlo:', json.htmlo, json);
                    this.htmlo.clone(json.htmlo);
                    break;
                case 'htmli':
                    if (!json.htmli) {
                        this.htmli = null;
                        break;
                    }
                    if (!this.htmli) {
                        this.htmli = new ViewHtmlSettings();
                    }
                    this.htmli.clone(json.htmli);
                    break;
                case 'displayAsEdge':
                    this.displayAsEdge = json.displayAsEdge;
                    break;
                case 'vertexSize':
                    this.vertexSize = json.vertexSize ? new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"]().clone(json.vertexSize) : null;
                    break;
                case 'edgeViews':
                    this.edgeViews = [];
                    const arr = json.edgeViews ? json.edgeViews : [];
                    let i;
                    for (i = 0; i < arr.length; i++) {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.edgeViews, EdgeViewRule.duplicate(arr[i]));
                    }
                    break;
                case 'viewpointstr':
                    this.viewpointstr = json.viewpointstr;
                    break;
            }
        }
        this.updateViewpoint();
        this.updateTarget();
        this.setDefault(json.isDefault);
    }
    duplicate() {
        const duplicate = new ViewRule(null);
        duplicate.clone(this);
        return duplicate;
    }
    isEmpty() { return this.equals(new ViewRule(this.viewpoint)); }
    equals(other) { return this.toString() === other.toString(); }
    // should only be called from ViewPoint
    apply(target = null) {
        this.target = target || this.target || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKeyStr(this.targetStr);
        if (!target)
            this.detach();
        console.log(this);
        if (!this.viewpoint)
            return;
        this.viewpoint.viewsDictionary[this.target.id] = this;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.target.views, this);
    }
    // should only be called from ViewPoint
    detach() {
        return;
        // if (!this.target) return; target must never be deleted in Viewww.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.views, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.target.detachedViews, this);
        delete this.viewpoint.viewsDictionary[this.target.id];
        this.setTargetStr();
        // this.target = null; target must never be deleted in ViewRule
    }
    getViewPoint() { return this.viewpoint; }
    delete() {
        this.setDefault(false);
        this.detach();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.viewpoint.views, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.detachedViews, this);
    }
    unsetDefault() {
        this.isDefault = false;
        const vp = this.getViewPoint();
        let defaultvr = vp.getDefault(this.target, false);
        if (defaultvr !== this)
            return defaultvr;
        const m = this.target;
        const asEdge = this instanceof EdgeViewRule;
        return vp.setDefault(false, this);
    }
    setDefault(isDefault = false) {
        console.log('setDefault() 99x', isDefault, this.target, this);
        if (this.isDefault === isDefault)
            return this;
        if (!isDefault)
            return this.unsetDefault();
        this.isDefault = true;
        const vp = this.getViewPoint();
        let defaultvr = vp.getDefault(this.target, false);
        if (defaultvr === this)
            return this;
        return vp.setDefault(true, this);
    }
    static duplicate(json, appendToViewpoint) {
        if (!json)
            return json;
        const ret = new ViewRule(appendToViewpoint);
        console.log('99x', ret.viewpoint, ret);
        ret.clone(json);
        return ret;
    }
    toStyleComplexEntry(mp, htmlx, isOwnHtml, isInstanceHtml, isCustomGlobalhtml, isGlobalhtml) {
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["StyleComplexEntry"]();
        ret.htmlobj = htmlx;
        ret.html = ret.htmlobj.getHtml();
        ret.view = this;
        ret.ownermp = this.target; // was mp
        ret.isownhtml = isOwnHtml;
        ret.isinstanceshtml = isInstanceHtml;
        ret.isCustomGlobalhtml = isCustomGlobalhtml;
        ret.isGlobalhtml = isGlobalhtml;
        return ret;
    }
}
ViewRule.allByID = {};
ViewRule.maxID = 0;
class DefaultStyleMap {
    constructor(vp) {
        this.viewpoint = vp;
    }
    static duplicate(json, vp) {
        if (!json)
            return json;
        const ret = new DefaultStyleMap(vp);
        ret.clone(json);
        return ret;
    }
    duplicate() { return DefaultStyleMap.duplicate(this, this.viewpoint); }
    clone(defaultStyleMap) {
        this.class = ViewRule.duplicate(defaultStyleMap.class, this.viewpoint);
        this.enum = ViewRule.duplicate(defaultStyleMap.enum, this.viewpoint);
        this.literal = ViewRule.duplicate(defaultStyleMap.literal, this.viewpoint);
        this.attribute = ViewRule.duplicate(defaultStyleMap.attribute, this.viewpoint);
        this.reference = ViewRule.duplicate(defaultStyleMap.reference, this.viewpoint);
        this.operation = ViewRule.duplicate(defaultStyleMap.operation, this.viewpoint);
        this.parameter = ViewRule.duplicate(defaultStyleMap.parameter, this.viewpoint);
        this.edge = EdgeViewRule.duplicate(defaultStyleMap.edge);
        this.extEdge = EdgeViewRule.duplicate(defaultStyleMap.extEdge);
    }
    toJSON(nameOrIndex) {
        const copy0 = {};
        for (let key in this) {
            copy0[key] = this[key];
        }
        const copy = copy0;
        delete copy.viewpoint;
        return copy;
    }
}
class ViewPoint extends ViewRule {
    // abstract _isApplied(): boolean;
    constructor(target, name = null) {
        super(null);
        this.isApplied = false;
        ViewPoint.allByID[this.id] = this;
        this.runtimeorder = ViewPoint.LAST_ORDER++;
        this.scroll = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](0, 0);
        this.zoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](1, 1);
        this.grid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](20, 20);
        this.viewsDictionary = {};
        this.views = [];
        this.defaultStyleMap = new DefaultStyleMap(this);
        this.setname(name);
        this.updateTarget(target);
    }
    static sortCriteria(vp1, vp2) { return vp2.runtimeorder - vp1.runtimeorder; }
    ;
    /*
      static getAppliedViews_TOMOVE(m: ModelPiece): ViewRule[] {
        let i: number;
        const arr: ViewRule[] = [];
        for (let name in ViewPoint.allnames) {
          const vp: ViewPoint = ViewPoint.allnames[name];
          const v: ViewRule = vp.getMpStyle(m);
          if (v) arr.push(v);
        }
        return arr; }*/
    static getByName(value) {
        return ViewPoint.allnames[value];
    }
    static getByID(id) {
        return ViewPoint.allByID[id];
    }
    updateTarget(m = null) { this.apply(m, true); }
    getMpStyle(m) { return this.viewsDictionary[m.id]; }
    setDefault(set, vr = null) {
        const asEdge = vr instanceof EdgeViewRule;
        const m = vr.target;
        const val = set ? vr : null;
        const end = () => {
            this.target.refreshGUI_Alone();
            this.target.refreshInstancesGUI();
            return vr;
        };
        if (asEdge) {
            if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
                if (m.shouldBeDisplayedAsEdge()) {
                    this.defaultStyleMap.edge = val;
                }
                else {
                    this.defaultStyleMap.extEdge = val;
                }
                return end();
            }
            if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
                this.defaultStyleMap.edge = val;
                return end();
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'ViewPoint.getDefaultMpStyle() unexpected edge style: ', m, asEdge);
        }
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"])
            this.defaultStyleMap.literal = val;
        else if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"])
            this.defaultStyleMap.parameter = val;
        else if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"])
            this.defaultStyleMap.operation = val;
        else if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"])
            this.defaultStyleMap.reference = val;
        else if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"])
            this.defaultStyleMap.attribute = val;
        else if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"])
            this.defaultStyleMap.class = val;
        else if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"])
            this.defaultStyleMap.enum = val;
        else
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'ViewPoint.getDefaultMpStyle() unexpected MP style: ', m, asEdge, vr);
        return end();
    }
    getDefault(m, asEdge = false) {
        if (asEdge) {
            if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"])
                return m.shouldBeDisplayedAsEdge() ? this.defaultStyleMap.edge : this.defaultStyleMap.extEdge;
            if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"])
                return this.defaultStyleMap.edge;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'ViewPoint.getDefaultMpStyle() unexpected edge style: ', m, asEdge);
        }
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"])
            return this.defaultStyleMap.literal;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"])
            return this.defaultStyleMap.parameter;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"])
            return this.defaultStyleMap.operation;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"])
            return this.defaultStyleMap.reference;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"])
            return this.defaultStyleMap.attribute;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"])
            return this.defaultStyleMap.class;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"])
            return this.defaultStyleMap.enum;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'ViewPoint.getDefaultMpStyle() unexpected MP style: ', m, asEdge);
    }
    setname(s) {
        if (!s)
            s = 'ViewPoint 1';
        if (s === this.name)
            return;
        if (ViewPoint.allnames[this.name] === this) {
            delete ViewPoint.allnames[this.name];
        }
        while (s in ViewPoint.allnames) {
            s = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].increaseEndingNumber(s);
        }
        ViewPoint.allnames[this.name = s] = this;
    }
    toJSON(nameOrIndex) {
        const copy0 = {};
        this.setTargetStr();
        for (let key in this) {
            copy0[key] = this[key];
        }
        const copy = copy0;
        delete copy.viewpoint;
        delete copy.viewpointstr;
        delete copy.viewsDictionary;
        delete copy.target;
        return copy;
    }
    // toString(): string { return JSON.stringify(this); }
    // should only be called from ViewPointShell
    apply(m = null, onlyAttach = false, debug = false) {
        if (m !== this.target)
            this.detach();
        this.target = m = (m || this.target);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.target, 'called ViewPoint.apply() without a target.', this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'add() PRE:', this.target.viewpoints.map((vp) => vp.name), this.target.viewpoints);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.viewpoints, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'add() MID:', this.target.viewpoints.map((vp) => vp.name), this.target.viewpoints, this.target.viewpoints.indexOf(this));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.target.viewpoints);
        // U.pw(true, 'stopped');
        // todo: il browser chrome è impazzito e mi fa il sort per nome ogni volta che faccio push.
        this.target.viewpoints.push(this); // NON usare U.ArrayAdd(), la rimozione è necessaria per garantire che venga sempre aggiunto in fondo.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.target.viewpoints);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'add() POST:', this.target.viewpoints.map((vp) => vp.name), this.target.viewpoints);
        if (onlyAttach)
            return;
        let i;
        for (i = 0; i < this.views.length; i++) {
            let v = this.views[i];
            v.apply();
        }
        this.isApplied = true;
        // U.pe(true, 'stopped here still works');
    }
    // should only be called from ViewPointShell
    detach() {
        if (!this.isApplied)
            return;
        // NB: don't remove from model.viewPoints, just de-apply it.
        for (let istr in this.viewsDictionary) {
            let i = +istr;
            let v = this.viewsDictionary[i];
            v.detach();
        }
        this.isApplied = false;
    }
    // should only be called from ViewPointShell
    delete() {
        this.detach();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.target.viewpoints, this);
        this.target = null;
    }
    // anche quando il viewpoint contenente il default style non è attivo, quello parte lo stesso sopra il default nativo
    // quando cancello lo stile che è diventato il default, tutti continuano ad avere lo stile default
    clone(json) {
        if (json.target && json.setTargetStr)
            json.setTargetStr();
        let i;
        this.viewsDictionary = {};
        for (let key in json) {
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected key:', key, json);
                    break;
                case 'id':
                case 'target':
                case 'viewpoint':
                case 'isDefault': break;
                case 'defaultStyleMap':
                    this.defaultStyleMap = DefaultStyleMap.duplicate(json.defaultStyleMap, this);
                    break;
                case 'runtimeorder':
                    this.runtimeorder = json.runtimeorder;
                    break; // preservo persino l'ordine di applicazione
                case 'htmlo':
                    if (!json.htmlo) {
                        this.htmlo = null;
                        continue;
                    }
                    if (!this.htmlo)
                        this.htmlo = new ViewHtmlSettings();
                    this.htmlo.clone(json.htmlo);
                    break;
                case 'htmli':
                    if (!json.htmli) {
                        this.htmli = null;
                        continue;
                    }
                    if (!this.htmli)
                        this.htmli = new ViewHtmlSettings();
                    this.htmli.clone(json.htmli);
                    break;
                case 'isApplied':
                    this.isApplied = json.isApplied;
                    break;
                case 'name':
                    this.setname(json.name);
                    break;
                case 'targetStr':
                    if (!json.targetStr)
                        break;
                    this.targetStr = json.targetStr;
                    const m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKeyStr(this.targetStr);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!m, 'failed to find VP.target:', this, this.targetStr, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status);
                    this.updateTarget(m);
                    break;
                case 'edgeViews':
                    this.edgeViews = [];
                    if (!json.edgeViews)
                        continue;
                    for (i = 0; i < json.edgeViews.length; i++) {
                        const v = new EdgeViewRule(this);
                        v.clone(json.edgeViews[i]);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.edgeViews, v);
                    }
                    break;
                case 'views':
                    this.views = [];
                    if (!json.views)
                        continue;
                    for (i = 0; i < json.views.length; i++) {
                        ViewRule.duplicate(json.views[i], this);
                    }
                    break;
                case 'viewsDictionary': break;
                case 'grid':
                    this.grid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](json.grid.x, json.grid.y);
                    break;
                case 'gridShow':
                    this.gridShow = json.gridShow;
                    break;
                case 'scroll':
                    this.scroll = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](json.scroll.x, json.scroll.y);
                    break;
                case 'zoom':
                    this.zoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](json.zoom.x, json.zoom.y);
                    break;
                case 'vertexSize':
                    this.vertexSize = json.vertexSize ? new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](json.vertexSize.x, json.vertexSize.y) : null;
                    break;
                case 'displayAsEdge':
                    this.displayAsEdge = json.displayAsEdge;
                    break;
            }
        }
    }
    duplicate() {
        const duplicate = new ViewPoint(null);
        duplicate.clone(this);
        return duplicate;
    }
    isEmpty() {
        const SingleLinkedTempVp = new ViewPoint(null);
        SingleLinkedTempVp.target = this.target;
        // NB: il target deve essere settato così "raw" non tramite costruttore e funzioni perchè non deve inserirlo nei viewpoints[] del target.
        return this.equals(SingleLinkedTempVp, true);
    }
    equals(other, ignoreName = true) {
        const tmp = this.name;
        if (ignoreName)
            this.name = other.name;
        const ret = this.toString() === other.toString();
        this.name = tmp;
        return ret;
    }
}
ViewPoint.allnames = {};
ViewPoint.LAST_ORDER = 1;
class EdgeViewRule extends ViewRule {
    static duplicate(json) {
        if (!json)
            return json;
        const ret = new EdgeViewRule();
        ret.clone(json);
        return ret;
    }
    duplicate() { return EdgeViewRule.duplicate(this); }
    clone(json) {
        this.common = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"].duplicate(json.common);
        this.highlight = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"].duplicate(json.highlight);
        this.selected = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"].duplicate(json.selected);
        this.midPoints = [];
        this.edgeIndex = json.edgeIndex;
        for (let mp of json.midPoints) {
            this.midPoints.push(EdgePointView.duplicate(mp, this.viewpoint));
        }
    }
}
class EdgePointView extends ViewRule {
    static duplicate(json, vp) {
        if (!json)
            return json;
        const ret = new EdgePointView();
        ret.clone(json);
        return ret;
    }
}


/***/ }),

/***/ "./src/Model/EAnnotation.ts":
/*!**********************************!*\
  !*** ./src/Model/EAnnotation.ts ***!
  \**********************************/
/*! exports provided: EAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAnnotation", function() { return EAnnotation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class EAnnotation extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(parent, json) {
        super(parent, null);
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.parent.childrens, this);
            this.parent.annotations.push(this);
        }
        this.parse(json);
    }
    duplicate(nameAppend, newParent) {
        return undefined; // todo
    }
    fullname() { return this.parent.fullname() + '//' + this.name; }
    setReferencesStr() {
        // todo?? se è il main package diventa "#//"
    }
    prepareSerialize() { this.setReferencesStr(); }
    generateModel(loopDetectionObj = null) {
        const json = {};
        this.prepareSerialize();
        let i;
        const childarr = [];
        for (i = 0; i < this.childrens.length; i++) {
            childarr.push(this.childrens[i].generateModel(loopDetectionObj));
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].source, this.name);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].references, this.referencesStr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].details, childarr);
        return json;
    }
    getVertex(canMakeIt = true) { return this.parent.getVertex(canMakeIt); }
    parse(json, destructive) {
        let key;
        this.childrens = [];
        if (!json) {
            json = {};
        }
        for (key in json) {
            const value = json[key];
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected field in EAnnotation:  ' + key + ' => |' + value + '|');
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].details: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].references: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].source: break;
            }
        }
        this.referencesStr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].source, '#/');
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].name, 'EAnnotation_1'));
        const details = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getDetails(json);
        for (let i = 0; i < details.length; i++) {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EAnnotationDetail"](this, details[i]);
        }
    }
}


/***/ }),

/***/ "./src/Model/EAnnotationDetail.ts":
/*!****************************************!*\
  !*** ./src/Model/EAnnotationDetail.ts ***!
  \****************************************/
/*! exports provided: EAnnotationDetail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAnnotationDetail", function() { return EAnnotationDetail; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _iModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iModel */ "./src/Model/iModel.ts");



class EAnnotationDetail extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(parent, json) {
        super(parent, null);
        this.parse(json);
    }
    duplicate(nameAppend, newParent) {
        return undefined; // todo
    }
    fullname() { return this.parent.fullname() + '.' + this.name; }
    generateModel(loopDetectionObj = null) {
        const json = {};
        if (this.name !== null)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].key, this.name);
        if (this.value !== null)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].value, this.value);
        return json;
    }
    getVertex(canMakeIt = true) { return this.parent.getVertex(canMakeIt); }
    parse(json, destructive) {
        let key;
        this.childrens = [];
        if (!json) {
            json = {};
        }
        for (key in json) {
            const value = json[key];
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected field in EDetail:  ' + key + ' => |' + value + '|');
                    break;
                case _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].key: break;
                case _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].value: break;
            }
        }
        this.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].value, '');
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _iModel__WEBPACK_IMPORTED_MODULE_2__["ECoreDetail"].key, 'DetailKey1'));
    }
}


/***/ }),

/***/ "./src/Model/MetaMetaModel.ts":
/*!************************************!*\
  !*** ./src/Model/MetaMetaModel.ts ***!
  \************************************/
/*! exports provided: MetaMetaModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MetaMetaModel", function() { return MetaMetaModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class MetaMetaModel extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] {
    constructor(json) { super(null); this.parse(json, true); }
    conformability(metaparent, outObj = null, debug = false) { return 1; }
    getAllClasses() { return super.getAllClasses(); }
    getAllReferences() { return super.getAllReferences(); }
    generateModel(loopDetectionObj = null) { return undefined; }
    getPrefix() { return 'mmm'; }
    getPrefixNum() { return 'm3'; }
    isM1() { return false; }
    isM2() { return false; }
    isM3() { return true; }
    parse(json, destructive) {
        this.name = 'Meta-Metamodel';
        const useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Package"](this, null);
    }
    getDefaultPackage() {
        if (this.childrens.length !== 0) {
            return this.childrens[0];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Package"](this, null));
        return this.childrens[0];
    }
    getPackage() { return this.getDefaultPackage(); }
    getClass(fullname = null, caseSensitive = false, throwErr = true, debug = true) {
        return this.getDefaultPackage().classes[0];
    }
    getAttribute() { return this.getClass().attributes[0]; }
    getReference() { return this.getClass().references[0]; }
    getOperation() { return this.getClass().getBasicOperations()[0]; }
    getParameter() { return this.getOperation().childrens[0]; }
    duplicate(nameAppend = '_Copy') { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'invalid operation: m3.duplicate();'); return this; }
    refreshGUI(debug = false) { }
    refreshGUI_Alone(debug = true) { }
}
MetaMetaModel.emptyMetaMetaModel = '' + 'empty Meta-MetaModel: todo'; // todo


/***/ }),

/***/ "./src/Model/MetaModel.ts":
/*!********************************!*\
  !*** ./src/Model/MetaModel.ts ***!
  \********************************/
/*! exports provided: MetaModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MetaModel", function() { return MetaModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _EAnnotation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EAnnotation */ "./src/Model/EAnnotation.ts");



class MetaModel extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] {
    constructor(json, metaParent) {
        super(metaParent);
        MetaModel.genericObjectJson = {}; /*{
          [ECoreClass.xsitype]: "ecore:EClass",
          [ECoreClass.namee]: "G_Object",
          [ECoreClass.interface]: "false",
          [ECoreClass.abstract]: "false",
          [ECoreClass.instanceTypeName]: "",
          [ECoreClass.eSuperTypes]: "",
          [ECoreClass.eStructuralFeatures]: [],
          [ECoreClass.eOperations]: [] };*/
        MetaModel.genericAttributeJson = "";
        MetaModel.genericReferenceJson = [];
        // MetaModel.genericObject.childrens = MetaModel.genericObject.attributes = MetaModel.genericObject.references = MetaModel.genericObject.operations = [];
        this.parse(json, true);
    }
    getAllClasses() { return super.getAllClasses(); }
    getAllReferences() { return super.getAllReferences(); }
    getClass(fullname, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(fullname, caseSensitive, throwErr, debug);
    }
    getClassFromEcoreStr(targetstr) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!targetstr || targetstr.indexOf(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].classTypePrefix) !== 0, 'getClassFromString(): not a ecore class name:', targetstr);
        const classes = this.getAllClasses();
        let i;
        for (i = 0; i < classes.length; i++) {
            if (classes[i].getEcoreTypeName() === targetstr)
                return classes[i];
        }
        return null;
    }
    getEcoreStr_Class_Dictionary() {
        const classes = this.getAllClasses();
        let i;
        const dic = {};
        for (i = 0; i < classes.length; i++) {
            dic[classes[i].getEcoreTypeName()] = classes[i];
        }
        return dic;
    }
    getClassByNameSpace(fullnamespace, caseSensitive = false, canThrow = false) {
        const classes = this.getAllClasses();
        let i;
        if (caseSensitive) {
            fullnamespace = fullnamespace.toLowerCase();
        }
        let justNameMatchFallback = null;
        let namestr = fullnamespace.substr(fullnamespace.lastIndexOf(':') + 1);
        if (!caseSensitive) {
            namestr = namestr.toLowerCase();
        }
        for (i = 0; i < classes.length; i++) {
            const mmclass = classes[i];
            if ((caseSensitive ? mmclass.name : mmclass.name.toLowerCase()) === namestr) {
                justNameMatchFallback = mmclass;
            }
            let mmclassNS = mmclass.getNamespaced();
            if (!mmclassNS) {
                continue;
            }
            if (caseSensitive) {
                mmclassNS = mmclassNS.toLowerCase();
            }
            if (mmclassNS === fullnamespace) {
                return mmclass;
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!justNameMatchFallback, 'class |' + fullnamespace + '| not found. classArr:', classes);
        return justNameMatchFallback;
    }
    /*
      fixReferences(): void {
        const arr: M2Reference[] = this.getAllReferences();
        let i = -1;
        while (++i < arr.length) {
          arr[i].linkClass();
          U.pe(!arr[i].classType, arr[i], Status.status.loadedLogic);
        } }*/
    parse(json, destructive = true) {
        if (destructive) {
            this.childrens = [];
            // MetaModel.genericObject = new M2Class(this.getDefaultPackage(), MetaModel.genericObjectJson, false);
            // MetaModel.genericAttribute = new M2Attribute(MetaModel.genericObject, MetaModel.genericAttributeJson);
            // MetaModel.genericReference = new M2Reference(MetaModel.genericObject, MetaModel.genericReferenceJson);
        }
        const childrens = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        const annotations = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getAnnotations(json);
        let i;
        for (i = 0; i < annotations.length; i++) {
            const child = annotations[i];
            // metaParent = U.findMetaParentP(this, child);
            if (destructive) {
                new _EAnnotation__WEBPACK_IMPORTED_MODULE_2__["EAnnotation"](this, child);
                continue;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Non-destructive m2-model parse: to do');
        }
        for (i = 0; i < childrens.length; i++) {
            const child = childrens[i];
            const metaParent = null;
            // metaParent = U.findMetaParentP(this, child);
            if (destructive) {
                new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Package"](this, child);
                continue;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Non-destructive m2-model parse: to do');
        }
    }
    generateModel(loopDetectionObj = null) {
        const packageArr = [];
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            const pkg = this.childrens[i];
            packageArr.push(pkg.generateModel(loopDetectionObj));
        }
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreRoot"].ecoreEPackage] = packageArr;
        return model;
    }
    getDefaultPackage() {
        if (this.childrens.length !== 0) {
            return this.childrens[0];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Package"](this, null));
        return this.childrens[0];
    }
    conformability(metaparent, outObj, debug) { return 1; }
    getPrefix() { return 'mm'; }
    getPrefixNum() { return 'm2'; }
    isM1() { return false; }
    isM2() { return true; }
    isM3() { return false; }
    duplicate(nameAppend = '_Copy') {
        const m = new MetaModel(null, null);
        m.copy(this);
        m.refreshGUI();
        return m;
    }
    calculateViolations() {
        let classes = this.getAllClasses();
        for (let i = 0; i < classes.length; i++) {
            classes[i].calculateInheritanceViolations(true);
        }
    }
}
MetaModel.emptyModel = '{}';
MetaModel.emptyModelOld = '{ "ecore:EPackage": {\n' +
    '    "@xmlns:xmi": "http://www.omg.org/XMI",\n' +
    '    "@xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",\n' +
    '    "@xmlns:ecore": "http://www.eclipse.org/emf/2002/Ecore",\n' +
    '    "@xmi:version": "2.0",\n' +
    '    "eClassifiers": []' +
    '  }' +
    '}';


/***/ }),

/***/ "./src/Model/Model.ts":
/*!****************************!*\
  !*** ./src/Model/Model.ts ***!
  \****************************/
/*! exports provided: Model */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Model", function() { return Model; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/util */ "./src/common/util.ts");



class Model extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] {
    constructor(json, metaModel) {
        super(metaModel);
        this.classRoot = null;
        this.parse(json, true);
    }
    // fixReferences(): void {/*useless here? or useful in loops?*/}
    getClassRoot() {
        if (this.classRoot) {
            return this.classRoot;
        }
        const classes = this.getAllClasses();
        if (classes.length)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'Failed to get m1 class root.<br>You need to select a root class in M1\'s structured editor', this);
        if (classes.length && classes[0]) {
            classes[0].setRoot(true);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(true, 'Class root automatically selected.');
        }
        return null;
    }
    parse(json, destructive, metamodel = null) {
        if (!metamodel) {
            metamodel = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!metamodel, 'parsing a model requires a metamodel linked');
        if (json === '{}')
            json = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(json === '' + json, 'ModelPiece.parse() parameter must be a parsed ECORE/json. autofixed.', json);
        if (json === '' + json)
            json = JSON.parse(json + '');
        if (destructive) {
            this.childrens = [];
        }
        let key;
        for (key in json) {
            if (!json.hasOwnProperty(key)) {
                continue;
            }
            const namespacedclass = key;
            const mmclass = this.metaParent.getClassByNameSpace(namespacedclass, false, true);
            const value = json[key];
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"](this.getDefaultPackage(), value, mmclass, true);
        }
        /*
        {
          "org.eclipse.example.bowling:League": { <-- :classroot
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },
              { "-name": "asd" }
            ]
          }
        }
        */
    }
    // parse(deep: boolean) { super.parse(deep); }
    getAllClasses() { return super.getAllClasses(); }
    getAllReferences() { return super.getAllReferences(); }
    getClass(fullname, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(fullname, caseSensitive, throwErr, debug);
    }
    generateModel(loopDetectionObj = null) {
        const json = {};
        const classRoot = this.getClassRoot();
        if (!classRoot)
            return Model.emptyModel;
        // U.pe(!U.isObject(loopDetectionObj), "loopdetection not object param:", loopDetectionObj, loopDetectionObj || {});
        json[classRoot.metaParent.getNamespaced()] = classRoot.generateModel(loopDetectionObj, true);
        return json;
    }
    // namespace(set: string = null): string { return this.metaParent.namespace(set); }
    getDefaultPackage() {
        if (this.childrens.length !== 0) {
            return this.childrens[0];
        }
        new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MPackage"](this, null, this.metaParent.getDefaultPackage());
        return this.childrens[0];
    }
    conformability(metaparent, outObj, debug) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'm1.conformability(): to do.');
        return 1;
    }
    getPrefix() { return 'm'; }
    getPrefixNum() { return 'm1'; }
    isM1() { return true; }
    isM2() { return false; }
    isM3() { return false; }
    duplicate(nameAppend = '_Copy') {
        const m = new Model(null, null);
        m.copy(this);
        m.refreshGUI();
        return m;
    }
    fixReferences() {
        let refs = this.getAllReferences();
        for (let ref of refs) {
            ref.fixReferences(this.classRoot);
        }
    }
    findContainmentLoop() {
        const allContainmentRefs = this.getAllReferences().filter(r => r.isContainment());
        // dag con nodi e archi oggetti grezzi general purpose, prendo nodi = classi e archi = (class1, class2) salvo tutto con un id eseguo il dag e rispondo riprendendo le logiche tramite id dopo aver beccato il loop
        const nodesLogic = [...new Set([...allContainmentRefs.flatMap(r => r.mtarget), ...allContainmentRefs.map(r => r.parent)])];
        const vertexIDMap = {};
        const rawVertex = nodesLogic.map(c => { return vertexIDMap['' + c.id] = new _common_util__WEBPACK_IMPORTED_MODULE_2__["RawVertex"]('' + c.id, c); });
        let i = 0;
        const rawEdges = allContainmentRefs.flatMap((r) => {
            const sourcev = vertexIDMap['' + r.parent.id];
            return r.mtarget.map((target) => {
                const targetv = vertexIDMap['' + target.id];
                return new _common_util__WEBPACK_IMPORTED_MODULE_2__["RawEdge"]('e' + i++, sourcev, targetv, r);
            });
        });
        const out = { elementsInLoop: [] };
        new _common_util__WEBPACK_IMPORTED_MODULE_2__["RawGraph"](rawVertex, rawEdges).getDagOrder(true, out);
        return out.elementsInLoop.map(e => _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByID(+e.id));
    }
}
Model.emptyModel = '{}';


/***/ }),

/***/ "./src/Model/iModel.ts":
/*!*****************************!*\
  !*** ./src/Model/iModel.ts ***!
  \*****************************/
/*! exports provided: IModel, ECoreRoot, ECoreAnnotation, ECoreDetail, ECorePackage, ECoreClass, ECoreEnum, EcoreLiteral, ECoreReference, ECoreAttribute, ECoreOperation, ECoreParameter, XMIModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IModel", function() { return IModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreRoot", function() { return ECoreRoot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreAnnotation", function() { return ECoreAnnotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreDetail", function() { return ECoreDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECorePackage", function() { return ECorePackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreClass", function() { return ECoreClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreEnum", function() { return ECoreEnum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EcoreLiteral", function() { return EcoreLiteral; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreReference", function() { return ECoreReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreAttribute", function() { return ECoreAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreOperation", function() { return ECoreOperation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECoreParameter", function() { return ECoreParameter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XMIModel", function() { return XMIModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class IModel extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(metaVersion) {
        super(null, metaVersion);
        this.graph = null;
        this.sidebar = null;
        this.storage = null;
        this.namespaceVar = null;
        this.uriVar = null;
        this.viewpoints = [];
        this.storage = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["LocalStorage"](this);
    }
    // viewpoint: ViewPoint;
    /*
    constructor(json: Json, metaParent: MetaModel, skipParse: boolean = false) {
      super(null, metaParent);
      // todo: mi sa che chiama parse a ripetizione: Modelpiece.parse, IFeature.parse, IAttribute.parse, M2Attribute.parse...
      if (!skipParse) { this.parse(json, true); }
    }*/
    static isValidURI(str) { return str.indexOf(' ') !== -1 && true; }
    static removeInvalidNameChars(name) { return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].multiReplaceAll(name, [' '], ['']); }
    uri(str = null) {
        if (str) {
            if (IModel.isValidURI(str)) {
                return this.uriVar = str;
            }
            else {
                return null;
            }
        }
        if (this.uriVar) {
            return this.uriVar;
        }
        return this.uriVar = 'http://default/uri/to/change';
    }
    namespace(value = null) {
        let pos;
        if (value) {
            this.namespaceVar = value;
            pos = this.namespaceVar.lastIndexOf(':');
            this.namespaceVar = pos === -1 ? this.namespaceVar : this.namespaceVar.substring(0, pos);
        }
        const ns = this.namespaceVar;
        if (!ns) {
            return this.namespace('default.namespace.to.change');
        }
        pos = ns.lastIndexOf(':');
        return pos === -1 ? ns : ns.substring(0, pos);
    }
    getAllClasses() {
        const arr = [];
        const packages = this.childrens;
        let i;
        for (i = 0; i < packages.length; i++) {
            packages[i].classes.forEach((elem) => { arr.push(elem); });
        }
        return arr;
    }
    getAllEnums() {
        const arr = [];
        const packages = this.childrens;
        let i;
        for (i = 0; i < packages.length; i++) {
            packages[i].enums.forEach((elem) => { arr.push(elem); });
        }
        return arr;
    }
    fullname() { return this.name; }
    getVertex(canMakeIt = null) { return null; }
    getAllReferences() {
        const arr = [];
        const classes = this.getAllClasses();
        let i;
        for (i = 0; i < classes.length; i++) {
            classes[i].references.forEach((elem) => { arr.push(elem); });
        }
        // console.log(arr, new Set(arr));
        return [...new Set(arr)];
    }
    getPackage(fullname, caseSensitive = false, throwErr = true, debug = true) {
        if (fullname.indexOf('.') !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throwErr, 'not a package name:', fullname);
            return null;
        }
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            if (this.childrens[i].name === fullname) {
                return this.childrens[i];
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throwErr, 'Package does not exist:', fullname);
        return null;
    }
    getClass(fullname, caseSensitive = false, throwErr = true, debug = true) {
        let tks = fullname.split('.');
        if (tks.length !== 2) {
            tks[1] = tks[0];
            tks[0] = null;
            // U.pe(throwErr, 'not a full class name:', fullname); return null;
        }
        const name = tks[1];
        const pkg = tks[0] ? this.getPackage(tks[0], caseSensitive, throwErr, debug) : this.getDefaultPackage();
        return pkg.getClass(name, caseSensitive, throwErr, debug);
    }
    getEmptyModel() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"].emptyMetaMetaModel;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].emptyModel;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"].emptyModel;
        return null;
    }
    gotDeleted() { return false; } // todo
    delete(refreshGUI = false, fromParent = false) {
        this.storage.remove(this.name, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["SaveListEntry"].model);
        // set empty (meta)model as most recent anonymous savefile and next to be opened.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["LocalStorage"].deleteLastOpened(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"] ? 2 : 1);
        /*this.storage.add(null, null, SaveListEntry.model);
        this.storage.add(null, null, SaveListEntry.view);
        this.storage.add(null, null, SaveListEntry.vertexPos);*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].refreshPage();
    }
    refreshGUI_Alone(debug = true) {
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            this.childrens[i].refreshGUI_Alone(debug);
        }
    }
    isNameTaken(name) { return !!this.storage.get(name, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["SaveListEntry"].model); }
    setName(value, refreshGUI = false) {
        const oldname = this.name;
        if (this.isNameTaken(value)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'tried to saveToDB a model with a name already in use');
            return oldname;
        }
        super.setName(value);
        this.storage.rename(oldname, this.name, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["SaveListEntry"].model);
        if (this.graph.propertyBar.selectedModelPiece === this)
            this.graph.propertyBar.refreshGUI();
        return this.name;
    }
    save(isAutosave, saveAs = false) {
        this.storage.saveModel(isAutosave, saveAs);
    }
    isMMM() { return this.isM3(); }
    isMM() { return this.isM2(); }
    isM() { return this.isM1(); }
    addClass(parent = null, meta = null) {
        if (!parent) {
            parent = this.getDefaultPackage();
        }
        return parent.addEmptyClass(meta);
    }
    friendlyClassName(toLower = true) {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"]) {
            return 'Meta-metamodel'.toLowerCase();
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"]) {
            return 'Metamodel'.toLowerCase();
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return 'Model'.toLowerCase();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected');
        return 'error';
    }
    getForemostView(allowDisabled = false) {
        let i;
        let vp = this.viewpoints.sort(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ViewPoint"].sortCriteria);
        for (i = 0; i < vp.length; i++) {
            const vp = this.viewpoints[i];
            if (allowDisabled || vp.isApplied)
                return vp;
        }
        return null;
    }
    static getByName(name) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.fullname() === name)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.fullname() === name)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.fullname() === name)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m;
        return null;
    }
    readVertexPositionSaveArr(dic) {
        for (let key in dic) {
            const value = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"]().clone(dic[key]);
            const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByKeyStr(key);
            if (!mp) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid vertex save, failed to get targetmodelpiece: ', key, dic, this);
                continue;
            }
            mp.getVertex().setSize(value);
        }
    }
    generateVertexPositionSaveArr() {
        let i;
        let j;
        let ret = {};
        let arr = [this.getAllEnums(), this.getAllClasses()];
        for (j = 0; j < arr.length; j++)
            for (i = 0; i < arr[j].length; i++) {
                ret[arr[j][i].getKeyStr()] = arr[j][i].getVertex().getSize();
            }
        return ret;
    }
    generateViewPointSaveArr() {
        /*let i: number;
        let tmp: any = [];
        for (i = 0; i < this.viewpoints.length; i++) { tmp.push(this.viewpoints[i].toJSON()); }
        return tmp;*/
        return this.viewpoints;
    }
}
class ECoreRoot {
    static initializeAllECoreEnums() {
        ECoreRoot.ecoreEPackage = 'ecore:EPackage';
        ECorePackage.eAnnotations = ECoreClass.eAnnotations = ECoreEnum.eAnnotations = EcoreLiteral.eAnnotations =
            ECoreReference.eAnnotations = ECoreAttribute.eAnnotations = ECoreOperation.eAnnotations = ECoreParameter.eAnnotations = 'eAnnotations';
        ECoreAnnotation.source = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'source';
        ECoreAnnotation.references = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'references'; // "#/" for target = package.
        ECoreAnnotation.details = 'details'; // arr
        ECoreDetail.key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'key'; // can have spaces
        ECoreDetail.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'value';
        ECorePackage.eClassifiers = 'eClassifiers';
        ECorePackage.xmlnsxmi = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmlns:xmi'; // typical value: http://www.omg.org/XMI
        ECorePackage.xmlnsxsi = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmlns:xsi'; // typical value: http://www.w3.org/2001/XMLSchema-instance
        ECorePackage.xmiversion = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmi:version'; // typical value: "2.0"
        ECorePackage.xmlnsecore = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xmlns:ecore';
        ECorePackage.nsURI = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'nsURI'; // typical value: "http://org/eclipse/example/bowling"
        ECorePackage.nsPrefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'nsPrefix'; // typical value: org.eclipse.example.bowling
        ECorePackage.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreClass.eStructuralFeatures = 'eStructuralFeatures';
        ECoreClass.eOperations = 'eOperations';
        ECoreClass.xsitype = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xsi:type'; // "ecore:EClass"
        ECoreClass.namee = ECorePackage.namee;
        ECoreClass.eSuperTypes = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eSuperTypes'; // space separated: "#name1 #name2"...
        ECoreClass.instanceTypeName = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'instanceTypeName'; // raw str
        ECoreClass.instanceTypeName = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'instanceTypeName';
        ECoreClass.abstract = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'abstract'; // bool
        ECoreClass.interface = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'interface'; // bool
        ECoreEnum.instanceTypeName = ECoreClass.instanceTypeName;
        ECoreEnum.serializable = 'serializable'; // "false", "true"
        ECoreEnum.xsitype = ECoreClass.xsitype; // "ecore:EEnum"
        ECoreEnum.eLiterals = 'eLiterals';
        ECoreEnum.namee = ECorePackage.namee;
        EcoreLiteral.literal = 'literal';
        EcoreLiteral.namee = ECorePackage.namee;
        EcoreLiteral.value = 'value'; // any integer (-inf, +inf), not null. limiti = a type int 32 bit?
        ECoreReference.xsitype = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xsi:type'; // "ecore:EReference"
        ECoreReference.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "#//Player"
        ECoreReference.containment = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'containment'; // "true"
        ECoreReference.upperbound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'upperBound'; // "@1"
        ECoreReference.lowerbound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'lowerBound'; // does even exists?
        ECoreReference.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreAttribute.xsitype = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'xsi:type'; // "ecore:EAttribute",
        ECoreAttribute.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        ECoreAttribute.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreAttribute.lowerbound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'lowerBound';
        ECoreAttribute.upperbound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'upperBound';
        ECoreOperation.eParameters = 'eParameters';
        ECoreOperation.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name'; // "EExceptionNameCustom",
        ECoreOperation.ordered = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'ordered'; // "false",
        ECoreOperation.unique = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'unique'; // "false",
        ECoreOperation.lowerBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'lowerBound'; // "5", ma che senso ha su una funzione?? è il return?
        ECoreOperation.upperBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'upperBound';
        ECoreOperation.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "#//Classname",
        ECoreOperation.eexceptions = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eExceptions';
        // "#//ClassnameException1 #//ClassNameException2 (also custom classes) ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt
        ECoreParameter.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
        ECoreParameter.ordered = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'ordered'; // "false";
        ECoreParameter.unique = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'unique'; // "false"
        ECoreParameter.lowerBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'lowerBound'; // "1"
        ECoreParameter.upperBound = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'upperBound'; // "2"
        ECoreParameter.eType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'eType'; // "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubl
        XMIModel.type = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'type';
        XMIModel.namee = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker + 'name';
    }
}
class ECoreAnnotation {
}
class ECoreDetail {
}
class ECorePackage {
}
class ECoreClass {
}
class ECoreEnum {
}
class EcoreLiteral {
}
class ECoreReference {
}
class ECoreAttribute {
}
class ECoreOperation {
}
class ECoreParameter {
}
class XMIModel {
}


/***/ }),

/***/ "./src/Model/mPackage/MMPackage.ts":
/*!*****************************************!*\
  !*** ./src/Model/mPackage/MMPackage.ts ***!
  \*****************************************/
/*! exports provided: M2Package */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Package", function() { return M2Package; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class M2Package extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"] {
    constructor(mm, json) {
        super(mm, json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getPackage());
        this.parse(json, true);
    }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(name, caseSensitive, throwErr, debug);
    }
    addEmptyClass() {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"](this, null, false);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            c.generateVertex();
        }
        console.log('addEmptyClass(); package:', this, 'classe:', c);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
        return c;
    }
    parse(json, destructive = true) {
        // if (!json) { return; }
        /*
        json[ECorePackage.xmiversion] // '2.0';
        json[ECorePackage.xmlnsxmi] // 'http://www.omg.org/XMI';
        json[ECorePackage.xmlnsxsi] // 'http://www.w3.org/2001/XMLSchema-instance';
        json[ECorePackage.xmlnsecore] // 'http://www.eclipse.org/emf/2002/Ecore';
        json[ECorePackage.name];
        json[ECorePackage.eClassifiers]; */
        /// own attributes.
        const name = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].namee, 'defaultPackage');
        if (name)
            this.setName(name);
        const uri = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsURI, null);
        const nsPrefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsPrefix, null);
        this.parent.uri(uri);
        this.parent.namespace(nsPrefix);
        /// childrens
        const childs = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        if (destructive) {
            this.childrens = [];
        }
        let i;
        for (i = 0; i < childs.length; i++) {
            const child = childs[i];
            if (!child) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid m2Package in ecore input. found a null classifier, it will be ignored.');
                continue;
            }
            // metaParent = U.findMetaParentC(this, child);
            switch (child[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype]) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected xsitype:', child[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype], ' found in jsonfragment:', child, ', in json:', json, ' package:', this);
                    break;
                case 'ecore:EClass':
                    new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"](this, child);
                    break;
                case 'ecore:EEnum':
                    new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"](this, child);
                    break;
            }
        }
    }
    // fatto tutta la validazione credo, ora basta vedere se quando aggiungo un extend che viola gli override e polimorfismi mi avvisa dell'operazione invalida'
    /*parse(deep) {
      let i;
      if (deep) {
        if (this.childrens) { while (this.childrens.length !== 0) { this.childrens[0].delete(); } }
        this.childrens = [];
      }
      let field1;
      for (field1 in this.json) {
        if (!this.json.hasOwnProperty(field1)) { continue; } // il compilatore mi rompe per metterlo, non toglierlo se non da problemi.
        let val1 = Json.read<any>(this.json, field1);
        switch (field1) {
          default:
            U.pe(true, 'unexpected tag at jsonInput package: ' , field1 , ' = ', val1);
            break;
          case 'logical':
          case ECorePackage.xmlnsxsi:
          case ECorePackage.xmlnsxmi:
          case ECorePackage.xmlnsecore:
          case ECorePackage.nsPrefix:
          case ECorePackage.nsURI:
          case ECorePackage.xmiversion: break;
          case ECorePackage.name: break;
          case ECorePackage.eClassifiers:
            val1 = Json.getChildrens(this.json);
            for (i = 0; i < val1.length; i++) {
              if (deep) {
                U.pe ( !val1[i], 'val1[' + i + '] = ', val1[i], 'field:', field1, 'json:', this.json);
                const classe = new M2Class(this, val1[i]);
                this.childrens.push(classe as ModelPiece);
              }
            }
            break;
        }
      }
    }
  
    generateVertex(location: GraphPoint): IVertex {
      const v: IVertex = new IVertex();
      v.constructorPkg(this);
      v.draw();
      v.moveTo(location);
      return v; }
      */
    generateModel(loopDetectionObj = null) {
        const classarr = [];
        const enumarr = [];
        let i;
        for (i = 0; i < this.classes.length; i++) {
            if (this.classes[i] === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject)
                continue;
            classarr.push(this.classes[i].generateModel(loopDetectionObj));
        }
        for (i = 0; i < this.enums.length; i++) {
            enumarr.push(this.enums[i].generateModel(loopDetectionObj));
        }
        const classifiers = Array.prototype.concat.call(classarr, enumarr);
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmiversion] = '2.0';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmlnsxmi] = 'http://www.omg.org/XMI';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmlnsxsi] = 'http://www.w3.org/2001/XMLSchema-instance';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].xmlnsecore] = 'http://www.eclipse.org/emf/2002/Ecore';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].namee] = this.name;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsURI] = this.parent.uri();
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].nsPrefix] = this.getModelRoot().namespace();
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].eClassifiers] = classifiers;
        /*
       "_xmi:version": "2.0",
       "_xmlns:xmi": "http://www.omg.org/XMI",
       "_xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
       "_xmlns:ecore": "http://www.eclipse.org/emf/2002/Ecore",
       "_name": "bowling",
       "_nsURI": "http://org/eclipse/example/bowling",
       "_nsPrefix": "org.eclipse.example.bowling"*/
        return model;
    }
}


/***/ }),

/***/ "./src/Model/mPackage/MPackage.component.ts":
/*!**************************************************!*\
  !*** ./src/Model/mPackage/MPackage.component.ts ***!
  \**************************************************/
/*! exports provided: MPackage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MPackage", function() { return MPackage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class MPackage extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"] {
    constructor(model, json, metaparent) {
        super(model, json, metaparent);
        // todo: nel parse il json viene ignorato, cerca come vengono costruite le classi.
        // return;
        // this.setName(name);
        // this.setJson(json);
        this.parse(json, true);
    }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(name, caseSensitive, throwErr, debug);
    }
    addEmptyClass(metaVersion) {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"](this, null, metaVersion, false);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic)
            c.generateVertex();
        if (!this.parent.classRoot)
            c.setRoot(true);
        console.log('addEmptyClass(); package:', this, '; metaVersion: ', metaVersion, 'classe:', c);
        return c;
    }
    generateModel(loopDetectionObj = null) { return this.parent.generateModel(loopDetectionObj); }
    /*
    generateModel(rootClass: MClass): Json {
      const key: string = U.toDottedURI(this.uri) + ':' + rootClass.name;
      const xmlnsuri = '@xmlns:org.eclipse.example.' + this.name;
      const value: Json = {
        '@xmlns:xmi': 'http://www.omg.org/XMI',
        xmlnsuri : U.toHttpsURI(this.uri), // "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
        '-xmi:version': '2.0',
      };
      let i: number;
      for (i = 0, i < this.childrens.length; i++) {
        const cl: MClass = this.childrens[i];
        value[cl.name] = wrongggg!!! non è nemmeno un package, è una cosa del tipo:
      }
      return undefined;
    }
  
    getInfo(toLower?: boolean): any {
    }
  
    LinkToMetaParent(meta: IPackage): void {
    }
  */
    parse(json, destructive = true, uri = null, name = null) {
        /* e se c'è un riferimento circolare?
          <league (rootclass)>
            <players (attribute)>
              <player>...</player>
            </players>
          </league>
    
        "org.eclipse.example.bowling:League": {
          "-xmlns:xmi": "http://www.omg.org/XMI",
          "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
          "-xmi:version": "2.0",
          "Players": [
              { "-name": "tizio" },
              { "-name": "asd" } ]
      }*/
        let i; /*
        this.views = [];
        for(i = 0; i < this.parent.viewpoints.length; i++) {
          const vp: ViewPoint = this.parent.viewpoints[i];
          const v = new PackageView(vp.modelView);
          this.views.push(v);
          vp.modelView.packageViews.push(v); }*/
    }
}


/***/ }),

/***/ "./src/Model/mPackage/iPackage.ts":
/*!****************************************!*\
  !*** ./src/Model/mPackage/iPackage.ts ***!
  \****************************************/
/*! exports provided: IPackage, M3Package */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IPackage", function() { return IPackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Package", function() { return M3Package; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class IPackage extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(mm, json, metaParent) {
        super(mm, metaParent);
        this.classes = [];
        this.enums = [];
    }
    getChildrenClass(index) { return this.classes[index]; }
    getChildrenEnum(index) { return this.enums[index]; }
    getChildrenClassSelector(index) { return this.getChildrenClass(index).getSelector(); }
    getChildrenEnumSelector(index) { return this.getChildrenEnum(index).getSelector(); }
    addEmptyEnum() {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"](this, null);
        if (this instanceof M3Package || !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic)
            return;
        c.generateVertex();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, true, false);
        return c;
    }
    // conformability(metaparent: IPackage, outObj?: any, debug?: boolean): number { return 1; }
    fullname() { return this.name; }
    getVertex(canMakeIt = null) { return undefined; }
    getEnum(name, caseSensitive = false, throwErr = true, debug = true) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        for (i = 0; i < this.enums.length; i++) {
            let classname = this.enums[i].name;
            if (!caseSensitive) {
                classname = classname.toLowerCase();
            }
            if (name === classname) {
                return this.enums[i];
            }
        }
        return null;
    }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        for (i = 0; i < this.classes.length; i++) {
            let classname = this.classes[i].name;
            if (!caseSensitive) {
                classname = classname.toLowerCase();
            }
            if (name === classname) {
                return this.classes[i];
            }
        }
        return null;
    }
    duplicate(nameAppend = '_Copy', newParent = null) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Package duplicate to do.');
        return undefined;
    }
    // todo:
    refreshGUI_Alone(debug) {
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            this.childrens[i].refreshGUI_Alone(debug);
        }
    }
}
class M3Package extends IPackage {
    constructor(model, json) { super(model, json, null); this.parse(json, true); }
    getClass(name, caseSensitive = false, throwErr = true, debug = true) {
        return super.getClass(name, caseSensitive, throwErr, debug);
    }
    addEmptyClass(metaVersion) {
        const c = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"](this, null);
        return c;
    }
    generateModel(loopDetectionObj = null) {
        return undefined;
    }
    parse(json, destructive = true) {
        this.name = 'Package';
        this.addEmptyClass(null);
        this.addEmptyEnum();
        this.enums[0].setName('Enumeration');
    }
}


/***/ }),

/***/ "./src/Model/modelPiece.ts":
/*!*********************************!*\
  !*** ./src/Model/modelPiece.ts ***!
  \*********************************/
/*! exports provided: StyleComplexEntry, Info, ModelPiece, ModelNone, PendingFunctionCall, ServerUpdateRequest, ServerRequestAction, PendingMeasurableChanges, ProtectedModelPiece */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleComplexEntry", function() { return StyleComplexEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return Info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelPiece", function() { return ModelPiece; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelNone", function() { return ModelNone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PendingFunctionCall", function() { return PendingFunctionCall; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerUpdateRequest", function() { return ServerUpdateRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerRequestAction", function() { return ServerRequestAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PendingMeasurableChanges", function() { return PendingMeasurableChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProtectedModelPiece", function() { return ProtectedModelPiece; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../GuiStyles/viewpoint */ "./src/GuiStyles/viewpoint.ts");
/* harmony import */ var _guiElements_mGraph_Vertex_Mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../guiElements/mGraph/Vertex/Mark */ "./src/guiElements/mGraph/Vertex/Mark.ts");




class StyleComplexEntry {
    constructor() {
        this.isownhtml = false;
        this.isinstanceshtml = false;
        this.isCustomGlobalhtml = false;
        this.isGlobalhtml = false;
    }
}
class Info {
    static forConsole(obj) { }
    static setraw(baseJson, k, v, toLower = true) { return Info.set(baseJson, k, v, '', toLower); }
    static setc(baseJson, k, v, toLower = true) { return Info.set(baseJson, k, v, '@', toLower); }
    static seti(baseJson, k, v, toLower = true) { return Info.set(baseJson, k, v, '#', toLower); }
    static set(baseJson, k, v, prefixc = '_', toLower = true) {
        k = toLower ? k.toLowerCase() : k;
        let prefix = prefixc;
        // U.pw(baseJson[prefix + k], 'setinfo() name altready set: ', k, baseJson);
        while (baseJson[prefix + k]) {
            prefix += prefixc === '' ? '*' : prefixc;
        }
        baseJson[prefix + k] = v;
        // if (prefix === '') { baseJson[prefixc + k] = v; }
        return prefix + k;
    }
    static unsetraw(baseJson, k, toLower = true) { return Info.unset(baseJson, k, '', toLower); }
    static unsetc(baseJson, k, toLower = true) { return Info.unset(baseJson, k, '@', toLower); }
    static unseti(baseJson, k, toLower = true) { return Info.unset(baseJson, k, '#', toLower); }
    static unset(baseJson, k, prefixc = '_', toLower = true) {
        k = prefixc + (toLower ? k.toLowerCase() : k);
        delete baseJson[k];
    }
    static renameraw(o, k1, k2, toLower = true) { return Info.rename(o, k1, k2, '', toLower); }
    static renamec(o, k1, k2, toLower = true) { return Info.rename(o, k1, k2, '@', toLower); }
    static renamei(o, k1, k2, toLower = true) { return Info.rename(o, k1, k2, '#', toLower); }
    static rename(baseJson, k1, k2, prefixc = '_', toLower = true) {
        k1 = prefixc + (toLower ? k1.toLowerCase() : k2);
        k2 = prefixc + (toLower ? k1.toLowerCase() : k2);
        const old = baseJson[k1];
        delete baseJson[k1];
        baseJson[k2] = old;
    }
    static merge(info, targetinfo, prefixc = '->') {
        let key;
        if (!targetinfo) {
            return;
        }
        for (key in targetinfo) {
            if (!targetinfo.hasOwnProperty(key)) {
                continue;
            }
            if (!prefixc) {
                switch (key[0]) {
                    default:
                        prefixc = '';
                        break;
                    case '#':
                    case '_':
                    case '@':
                        prefixc = key[0];
                        break;
                }
            }
            // console.log('Info.set(' + info + ', ' + key + ', ' + targetinfo[key] + ', ' + prefixc);
            Info.set(info, key, targetinfo[key], prefixc);
        }
    }
}
class ModelPiece {
    constructor(parent, metaVersion) {
        this.id = null;
        this.parent = null;
        this.childrens = [];
        this.metaParent = null;
        this.instances = [];
        this.name = null;
        // styleOfInstances:Element = null;
        // customStyleToErase: Element = null;
        // styleobj: ModelPieceStyleEntry = null;
        this.key = null;
        this.views = null;
        this.annotations = [];
        this.detachedViews = []; // required to delete modelpiece
        this.Vmarks = {};
        this.assignID();
        this.name = null;
        this.parent = parent;
        this.metaParent = metaVersion;
        this.instances = [];
        this.childrens = [];
        this.views = [];
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.childrens, this);
        }
        if (this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.metaParent.instances, this);
        }
    }
    static GetStyle(model, tsClass, checkCustomizedFirst = true) {
        let rootSelector;
        if (model.isM()) {
            rootSelector = '.MDefaultStyles';
        }
        else if (model.isMM()) {
            rootSelector = '.MMDefaultStyles';
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'm3 objects should not call getStyle()');
        }
        let $html;
        const $root = $((checkCustomizedFirst ? '.customized' : '.immutable') + rootSelector);
        if (tsClass.indexOf('m1') === 0 || tsClass.indexOf('m2') === 0) {
            tsClass = tsClass.substr(2);
        }
        switch (tsClass) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized TS Class: ' + tsClass);
                return null;
            case 'EEnum':
                $html = $root.find('.template.EEnum');
                break;
            case 'ELiteral':
                $html = $root.find('.template.ELiteral');
                break;
            case 'Class':
                $html = $root.find('.template.Class');
                break;
            case 'Attribute':
                $html = $root.find('.template.Attribute');
                break;
            case 'Reference':
                $html = $root.find('.template.Reference');
                break;
            case 'EOperation':
                $html = $root.find('.template.Operation');
                break;
            case 'EParameter':
                $html = $root.find('.template.Parameter');
                break;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(checkCustomizedFirst && $html.length > 1, 'found more than one match for custom global style, should there be only 0 or 1.', $html, $root, this, tsClass);
        if (checkCustomizedFirst && $html.length === 0) {
            return ModelPiece.GetStyle(model, tsClass, false);
        }
        /*console.log('class?' + (this instanceof IClass), $root.find('.Template'), $root.find('.Class'),
          $root.find('.Template.Class'));
        console.log('condition:', !customizeds, ' && ', $html.length !== -1);*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!checkCustomizedFirst && $html.length !== 1, 'expected exactly 1 match for the un-customized global style, found instead ' + $html.length + ':', $html, $root, this);
        const ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneHtml($html[0], true);
        ret.classList.remove('template');
        ret.classList.remove('Customized');
        return ret;
    }
    static getByKey(path, realindexfollowed = null) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!Array.isArray(path), 'ModelPiece.getByKey() should only be called with an array as key:', path);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(path.length < 1, 'ModelPiece.getByKey() path array must have >= 1 elements:', path);
        const tmpRoot = { 'childrens': [_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm] };
        let ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].followIndexesPath(tmpRoot, path, 'childrens', realindexfollowed, true);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(ret instanceof ModelPiece), 'ModelPiece.getByKey failed: ', ret, realindexfollowed);
        return ret;
    }
    static getByKeyStr(key, realindexfollowed = null) {
        return ModelPiece.getByKey(JSON.parse(key), realindexfollowed);
    }
    static get(e) {
        return ModelPiece.getLogic(e.target);
    }
    static getLogicalRootOfHtml(html0) {
        let html = html0;
        if (!html) {
            return null;
        }
        while (html && (!html.dataset || !html.dataset.modelpieceid)) {
            html = html.parentElement;
        }
        return html;
    }
    static getLogic(html0) {
        let html = this.getLogicalRootOfHtml(html0);
        const ret = html ? ModelPiece.getByID(+html.dataset.modelpieceid) : null;
        // U.pe(!(ret instanceof T), 'got logic with unexpected class type:', this);
        return ret;
    }
    static getByID(id) { return ModelPiece.idToLogic[id]; }
    assignID() {
        this.id = ModelPiece.idMax++;
        ModelPiece.idToLogic[this.id] = this;
        return this.id;
    }
    getID() { return this.id; }
    getSelector() { return '#ID' + this.id; }
    getChildren(index) { return this.childrens[index]; }
    getChildrenSelector(index) { return this.getChildren(index).getSelector(); }
    //todo: devo stare attento ogni volta che aggiungo-elimino un elemento a chiamare updateKey()
    // le views si salvano perchè usano la chiave all avvio e poi la rigenerano ad ogni salvataggio e non la usano ulteriormente se non per generare
    // la savestring.
    getKey() { return this.key ? this.key : this.updateKey(); }
    getKeyStr() { return JSON.stringify(this.getKey()); }
    updateKey() {
        const m = this.getModelRoot();
        const mnum = m.isM3() ? 2 : (m.isM2() ? 1 : 0);
        const pathIndex = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getIndexesPath(this, 'parent', 'childrens');
        return this.key = [mnum, ...pathIndex];
    }
    replaceVarsSetup() { return; }
    linkToLogic(html0, asVertex = true) {
        let html = html0;
        if (this.id === null || this.id === undefined) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'undefined id:', this);
            return;
        }
        if (asVertex)
            html.classList.add(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ReservedClasses"].vertexRootG);
        // html.classList.add('VertexShell');
        html.dataset.modelpieceid = '' + this.id;
    }
    getm2() {
        const root = this.getModelRoot();
        if (root instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return root.metaParent;
        }
        if (root instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"]) {
            return root;
        }
        if (root instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"]) {
            return root.instances[0];
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to get root.');
    }
    getModelRoot(acceptNull = false) {
        let p = this;
        let i = 0;
        while (p.parent && p !== p.parent && i++ < 6 * 10) {
            p = p.parent;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!acceptNull && (!p || !(p instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"])), 'failed to get model root:', this, 'lastParent:', p, i);
        return p instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] ? p : null;
    }
    gotDeleted() { return !!this.getModelRoot(true); }
    isChildNameTaken(s, caseSensitive = false) {
        let i;
        s = s && s.toLowerCase();
        for (i = 0; i < this.childrens.length; i++) {
            let f = this.childrens[i];
            if (s === (caseSensitive ? f.name : f.name && f.name.toLowerCase())) {
                return true;
            }
        }
        return false;
    }
    shouldBeDisplayedAsEdge(set = null) {
        if (set !== null) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]), 'shouldBeDisplayedAsEdge(' + set + ') should only be set on M2Class instances');
            this.shouldBeDisplayedAsEdgeVar = set;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
            return set;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
            return this.shouldBeDisplayedAsEdgeVar;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
            return true;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            return false;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            return false;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class:', this);
    }
    refreshGUI_Alone(debug) {
        if (true)
            return this.refreshGUI();
        // if (true) { ModelPiece.thingsToRefresh.push(this); }
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            return;
        }
        let v = this.getVertex();
        v.refreshGUI();
        // console.log('pbar selected:', v.owner.propertyBar.selectedModelPiece.name, 'me:', this.name);
        if (this.isChildrenOf(v.owner.propertyBar.selectedModelPiece, true, true))
            v.owner.propertyBar.refreshGUI();
    }
    refreshGUI(debug = false) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            return;
        }
        let model = this.getModelRoot();
        console['l'] && console['l']('refreshgui 1', this, [...ModelPiece.thingsToRefresh]);
        const thingsToRefresh = ModelPiece.thingsToRefresh;
        thingsToRefresh.push(this);
        let i;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshModeAll) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m);
        }
        /*if (Status.status.refreshModelAndInstances && model) {
          U.ArrayAdd(thingsToRefresh, model);
          for (i = 0; model.instances && i < model.instances.length; i++) { U.ArrayAdd(thingsToRefresh, model.instances[i]); }
          return; }
        if (Status.status.refreshModelAndParent && model && model.metaParent) {
          model = model.metaParent;
          U.ArrayAdd(thingsToRefresh, model);
          for (i = 0; model.instances && i < model.instances.length; i++) { U.ArrayAdd(thingsToRefresh, model.instances[i]); }
          return; }*/
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshInstancesToo) {
            for (i = 0; this.instances && i < this.instances.length; i++) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, this.instances[i]);
            }
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshModel && model) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, model);
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshMetaParentToo && this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, this.metaParent);
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.refreshParentToo && this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(thingsToRefresh, this.parent);
        }
        /*
        for (i = 0; i < thingsToRefresh.length; i++) {
          const mp: ModelPiece = thingsToRefresh[i];
          if (mp) { mp.refreshGUI_Alone(debug); }
        }*/
        console['l'] && console['l']('refreshgui 2', this, [...ModelPiece.thingsToRefresh]);
        setTimeout(() => ModelPiece.doTheRefresh(debug), 2);
    }
    static doTheRefresh(debug = false) {
        const thingsToRefresh = ModelPiece.thingsToRefresh;
        if (!thingsToRefresh.length)
            return;
        const subClassifiers = []; // if a model or package is refreshed, it does not have any vertex, so it will be replaced with child list.
        function addClassifiers(p) { }
        for (let mp of ModelPiece.thingsToRefresh) {
            if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"])
                subClassifiers.push(...mp.childrens['flatMap']((p) => p.childrens));
            if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"])
                subClassifiers.push(...mp.childrens);
        }
        ModelPiece.thingsToRefresh.push(...subClassifiers);
        const toRefreshv = new Set(ModelPiece.thingsToRefresh.map(mp => mp.getVertex(false)));
        const toRefreshe = new Set([...toRefreshv]['flatMap']((v) => v ? [...v.edgesEnd, ...v.edgesStart] : []));
        toRefreshv.forEach(v => v && v.refreshGUI(false));
        toRefreshe.forEach(e => e && e.refreshGui());
        for (let pbar of [_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph.propertyBar, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar]) {
            if (thingsToRefresh.indexOf(pbar.selectedModelPiece) >= 0)
                pbar.refreshGUI();
        }
        ModelPiece.thingsToRefresh = [];
    }
    refreshInstancesGUI(thisToo = false) {
        let i = 0;
        if (true) {
            this.refreshGUI();
            return;
        }
        if (thisToo)
            this.refreshGUI_Alone();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.instances, '', this);
        while (i < this.instances.length) {
            try {
                this.instances[i++].refreshGUI_Alone(false);
            }
            catch (e) { }
            finally { }
        }
    }
    unmarkAll(condition = null) {
        // console.log('unmarkAll()', this.Vmarks, condition);
        for (let key in this.Vmarks) {
            // console.log('unmarkAll() key:' + key + ', conditionCheck: ', condition && condition(key), this.Vmarks[key]);
            if (condition && !condition(key))
                continue;
            const mark = this.Vmarks[key];
            mark.mark(false);
        }
    }
    mark(markb, paired, key, color = null, radiusX = 10, radiusY = 10, width = 5, backColor = null, extraOffset = null) {
        if (markb)
            new _guiElements_mGraph_Vertex_Mark__WEBPACK_IMPORTED_MODULE_3__["Mark"](this, paired, key, color, radiusX, radiusY, width, backColor, extraOffset).mark(true);
        else
            this.Vmarks[key] && this.Vmarks[key].mark(false);
        return;
    }
    generateModelString() {
        const json = this.generateModel({});
        // console.log('genmodelstring:', json, 'this:',  this);
        return JSON.stringify(json, null, 4);
    }
    isChildrenOf(parent, includeEqual = false, includeGrandChildren = false) {
        if (includeEqual && parent == this)
            return true;
        if (parent.childrens.indexOf(this) >= 0)
            return true;
        if (!includeGrandChildren)
            return false;
        let child = this;
        while ((child = child.parent)) {
            if (parent.childrens.indexOf(this) >= 0)
                return true;
        }
        return false;
    }
    endingName(valueMaxLength = 10) { return ''; }
    printableName(valueMaxLength = 5, full = false) {
        if (this.name !== null) {
            return full ? this.fullname() : this.name;
        }
        const ending = this.endingName(valueMaxLength);
        return (full ? this.metaParent.fullname() : this.metaParent.name) + ':' + this.id + (ending && ending !== '' ? ':' + ending : '');
    }
    printableNameshort(valueMaxLength = 5) {
        if (this.name !== null) {
            return this.name;
        }
        const ending = this.endingName(valueMaxLength);
        return this.metaParent.name + ':' + this.id + (ending && ending !== '' ? ':' + ending : '');
    }
    toJSON(loopDetectionObj) {
        let ret = {};
        ret.id = this.id;
        ret.name = this.name;
        ret.parent = this.parent.id;
        ret.metaParent = this.metaParent.id;
        ret.annotations = this.annotations.map((e) => e.id);
        ret.childrens = this.childrens.map((e) => e.id);
        ret.detachedViews = this.detachedViews.map((e) => e.id);
        ret.views = this.views.map((e) => e.id);
        // ret.instances = this.instances.map( (e) => e.id); not a permanent stored data, le istanze sono solo quelle disegnate al momento, non TUTTE,
        // se un M2 è collegato a più M1 crea problemi serializzare anche questo.
        // M1 può avere reference a M2 che viene caricato, M2 non può avere reference persistenti a M1, altrimenti caricherebbe tutti i suoi M1.
        return ret;
    }
    // abstract conformability(metaparent: ModelPiece, outObj?: any/*.refPermutation, .attrPermutation*/, debug?: boolean): number;
    setName0(value, refreshGUI = false, warnDuplicateFix = false, key, allowEmpty) {
        if (value === this['' + key])
            return this['' + key];
        const valueOld = this['' + key];
        const valueInputError = value;
        value = value !== null && value !== undefined ? '' + value.trim() : null;
        const regexp = new RegExp((allowEmpty ? '^$|' : '') + '^[a-zA-Z_$][a-zA-Z_$0-9]*$');
        //    console.log('set' + key + '.valid ? ' + regexp.test(value) + ' |' + value + '|');
        if (!regexp.test(value)) {
            value = value.replace(/([^a-zA-Z_$0-9])/g, '');
            let i = 0;
            while (value[i] && value[i] >= '0' && value[i] <= '9')
                i++;
            value = value.substr(i);
            let remainder = value;
            let firstChar = '';
            while (remainder.length > 0 && firstChar === '') {
                firstChar = remainder[0].replace('[^a-zA-Z_$]', '');
                remainder = remainder.substring(1);
            }
            value = firstChar + remainder;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'a valid ' + key + ' must be match this regular expression: ' + regexp.compile().toString()
                + '; trying autofix: |' + valueInputError + '| --> + |' + value + '|');
            return this['set' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].firstToUpper(key)](value,  true || false);
        }
        if (!allowEmpty && (!value || value === '')) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, key + ' cannot be empty.');
            return valueOld;
        }
        if (value === valueOld) {
            return valueOld;
        }
        let nameFixed = false;
        let i;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            const op = this;
            this['' + key] = value;
            op.parent.checkViolations(true);
        }
        else
            while (this.parent && this.parent['isChild' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].firstToUpper(key) + 'Taken'](value) && valueOld !== value) {
                nameFixed = true;
                value = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].increaseEndingNumber(value, false, false);
            }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(nameFixed && (valueInputError === value), 'increaseEningNumber failed:', value, this, this.parent ? this.parent.childrens : null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(nameFixed && warnDuplicateFix, 'that ' + key + ' is already used in this context, trying autofix: |'
            + valueInputError + '| --> + |' + value + '|');
        this['' + key] = value;
        if (refreshGUI) {
            this.refreshGUI();
        }
        return this['' + key];
    }
    // meant to be called from user js.
    getChildrenByName(name, caseSensitive = false) {
        let i;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!name || name !== '' + name, 'ModelPiece.getChildren() name must be a non-empty string, found: |' + name + '|', name);
        if (!caseSensitive)
            name = name.toLowerCase();
        const m = this.getModelRoot();
        const ism1 = m.isM1();
        for (i = 0; i < this.childrens.length; i++) {
            const mp = this.childrens[i];
            let name2 = (ism1 ? mp.metaParent.name : mp.name);
            if (!caseSensitive)
                name2 = name2 && name2.toLowerCase();
            if (name === name2)
                return mp;
        }
        return null;
    }
    preReplace() { this.className = this.getFriendlyClassName(); }
    setName(value, refreshGUI = false, warnDuplicateFix = false) { return this.setName0(value, refreshGUI, warnDuplicateFix, 'name', false); }
    /*  setNameOld(value: string, refreshGUI: boolean = false, warnDuplicateFix: boolean = true): string {
        const valueOld: string = this.name;
        const valueInputError = value;
        value = value ? '' + value.trim() : null;
        if (!value || value === '') { U.pw(true, 'name cannot be empty.'); return valueOld; }
        if (value === valueOld) { return valueOld; }
        const regexp: RegExp = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;
        // console.log('setName.valid ? ' + regexp.test(value) + ' |' + value + '|');
        if (!regexp.test(value)) { value = value.replace(/([^a-zA-Z_$0-9])/g, '');
          let i: number = 0;
          while (value[i] && value[i] >= '0' && value[i] <= '9') i++;
          value = value.substr(i);
          let remainder: string = value;
          let firstChar: string = '' || '';
          while (remainder.length > 0 && firstChar === '') {
            firstChar = remainder[0].replace('[^a-zA-Z_$]', '');
            remainder = remainder.substring(1); }
          value = firstChar + remainder;
          U.pw(true, 'a valid name must be match this regular expression: ' + regexp.compile().toString()
            + '; trying autofix: |' + valueInputError + '| --> + |' + value + '|');
          return this.setName(value, true || refreshGUI); }
    
        let nameFixed: boolean = false;
        let i: number;
        if (this instanceof EOperation) {
          const op = this as EOperation;
          let omonimi: EOperation[] = op.parent.getOperations(value, false);
          op.unmarkIncompatibility();
          for (i = 0; i < omonimi.length; i++) {
            const other: EOperation = omonimi[i];
            if (!op.isCompatible(other)) { op.markIncompatibility(other); }
          }
        }
        else {
          while (this.parent && this.parent.isChildNameTaken(value)) {
            nameFixed = true;
            value = U.increaseEndingNumber(value, false, false); }
          U.pe(nameFixed && (valueInputError === value), 'increaseEndingNumber failed:', value, this, this.parent ? this.parent.childrens : null);
          U.pw(nameFixed && warnDuplicateFix, 'that name is already used in this context, trying autofix: |'
            + valueInputError + '| --> + |' + value + '|', this);
        }
        this.name = value;
        const model: IModel = this.parent ? this.getModelRoot() : null;
        // for (i = 0; model && i < model.instances.length; i++) { model.instances[i].sidebar.fullnameChanged(valueOld, this.name); }
        if (refreshGUI) { this.refreshGUI(); }
        Type.updateTypeSelectors(null, false, false, true);
        return this.name; }
    */
    fieldChanged(e) {
        // todo: fix for m2 too. i need to enable custom input in custom viewpoints.
        // U.pe(true, U.getTSClassName(this) + '.fieldChanged() should never be called.');
    }
    copy(other, nameAppend = '_Copy', newParent = null) {
        this.setName(other.name + nameAppend);
        let i;
        this.views = [];
        for (i = 0; i < other.views.length; i++) {
            const v = other.views[i];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.views, v.duplicate());
        }
        this.parent = newParent ? newParent : other.parent;
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.childrens, this);
        }
        this.childrens = [];
        for (i = 0; i < other.childrens.length; i++) {
            this.childrens.push(other.childrens[i].duplicate('', this));
        }
        this.metaParent = other.metaParent;
        if (this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.metaParent.instances, this);
        }
        this.instances = [];
        this.refreshGUI();
    }
    clog() { return [this.toString(), this]; }
    // nb: le sottoclassi lo devono sempre chiamare con refreshgui = false
    delete(refreshgui = true, fromParent = false) {
        let i;
        let arr;
        let debug = true;
        const root = this.getModelRoot(true);
        debug && console.trace("mp.delete() start", this, refreshgui);
        this.unmarkAll();
        { // handle instances start
            debug && console.log("delete remove or convert instances", this, refreshgui);
            arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.instances);
            if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"]) {
                const instances = arr;
                const scores = this.getTypeConversionScores();
                const newType = scores.length && scores[0].class;
                if (!newType) {
                    for (i = 0; instances && i < instances.length; i++) {
                        instances[i].delete(false, false);
                    }
                }
                else {
                    for (i = 0; instances && i < instances.length; i++) {
                        instances[i].convertTo(newType);
                    }
                }
                // posso promuovere le istanze ad una sottoclasse o superclasse di quella cancellata invece di eliminarle.
            }
            else {
                // not m2-class.
                for (i = 0; arr && i < arr.length; i++) {
                    arr[i].delete(false);
                }
            }
        } // handle instances end
        let oldParent = null;
        if (this.parent) {
            oldParent = this.parent;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.parent.childrens, this);
            this.parent = null;
        }
        if (this.metaParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.metaParent.instances, this);
            this.metaParent = null;
        }
        debug && console.log("delete remove views", this, refreshgui);
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.views);
        for (i = 0; arr && i < arr.length; i++) {
            arr[i].delete();
        }
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.detachedViews);
        for (i = 0; arr && i < arr.length; i++) {
            arr[i].delete();
        }
        debug && console.log("delete remove childs", this, refreshgui);
        let childarr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.childrens);
        for (i = 0; childarr && i < childarr.length; i++) {
            childarr[i].delete(false, true);
        }
        if (oldParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldParent.classes, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldParent.enums, this);
        }
        else if (oldParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
            // U.arrayRemoveAll(oldParent.literals, this as any as unknown);
        }
        else if (oldParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldParent.attributes, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldParent.references, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldParent.operations, this);
        }
        else if (oldParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            // U.arrayRemoveAll(oldParent.parameters, this as any as EParameter);
        }
        debug && console.log("mp.delete() end, refresh gui", this, refreshgui);
        if (root && !fromParent) {
            const pbar = root.graph.propertyBar;
            console.log({ thiss: this, pbar, root, graph: root.graph, pbsarr: root.graph.propertyBar });
            const pbarselect = pbar.selectedModelPiece;
            if (pbarselect.gotDeleted()) {
                debug && console.log('pbar show, ', { param: oldParent || root, oldParent, root, thiss: this, thisss: this.toString() });
                pbar.show(oldParent || root);
            }
        }
        if (refreshgui) {
            this.refreshGUI();
        }
    }
    toString() {
        return (this.metaParent && this.metaParent.name || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this)) + "_" + this.id + "_" + this.name;
    }
    validate(isDeprecated = true) {
        const names = {};
        let i;
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isValidName(name)) {
            this.mark(true, null, 'Invalid name');
            return false;
        }
        for (i = 0; i < this.childrens.length; i++) {
            const child = this.childrens[i];
            const name = child.name;
            if (names.hasOwnProperty(name)) {
                child.mark(true, names[name], 'Duplicate children name');
                return false;
            }
            else
                child.mark(false, null, 'Duplicate children name');
            child.validate();
            names[name] = child;
        }
        return true;
    }
    /*
      setStyle_SelfLevel_1(html: Element): void { this.customStyleToErase = html; }
      setStyle_InstancesLevel_2(html: Element): void { this.styleOfInstances = html; }
      setStyle_GlobalLevel_3(html: Element): void {
        const oldCustomStyle: Element = this.getGlobalLevelStyle(true);
        if (oldCustomStyle) { oldCustomStyle.parentNode.removeChild(oldCustomStyle); }
        const model: IModel = this.getModelRoot();
        let rootSelector: string;
        if (model.isM()) { rootSelector = '.MDefaultStyles';
        } else if (model.isMM()) { rootSelector = '.MMDefaultStyles';
        } else { U.pe(true, 'm3 objects should not call getStyle()'); }
        let selectorClass: string = '' + '_ERROR_';
        if (false && false) {
        } else if (this instanceof IClass) { selectorClass = ('Class');
        } else if (this instanceof IReference) { selectorClass = ('Reference');
        } else if (this instanceof IAttribute) { selectorClass = ('Attribute'); }
  
        let $root: JQuery<Element>;
        $root = $('.customized' + rootSelector);
        const container: Element = $root[0];
        html.classList.add('Template', selectorClass, (this instanceof IClass ? 'Vertex' : ''));
        container.appendChild(html); }*/
    getGlobalLevelStyle(checkCustomizedFirst = true) {
        let tsClass = this.getClassName(); /*
        if (false && false ) {
        } else if (this instanceof IClass) { tsClass = 'Class';
        } else if (this instanceof IAttribute) { tsClass = 'Attribute';
        } else if (this instanceof IReference) { tsClass = 'Reference';
        } else if (this instanceof EOperation) { tsClass = 'EOperation';
        } else if (this instanceof EParameter) { tsClass = 'EParameter';
        } else { tsClass = 'ERROR: ' + U.getTSClassName(this); }*/
        return ModelPiece.GetStyle(this.getModelRoot(), tsClass, checkCustomizedFirst);
    }
    getInheritableStyle() {
        let i;
        let matches = [];
        for (i = this.views.length; --i >= 0;) {
            let v = this.views[i];
            // if (!v.viewpoint.isApplied) continue;
            if (!v.viewpoint.isApplied || !v.htmli || !v.htmli.getHtml())
                continue;
            matches.push(v);
        }
        if (!matches.length)
            return null;
        matches = matches.sort(_GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_2__["ViewRule"].sortCriteria);
        const v = matches[0];
        return v.toStyleComplexEntry(this, v.htmli, false, true, false, false);
    }
    getInheritedStyle_lv2() { return this.metaParent ? this.metaParent.getInheritableStyle() : null; }
    getOwnStyle_lv1() {
        let j;
        let matches = [];
        for (j = this.views.length; --j >= 0;) {
            const v = this.views[j];
            if (!v.viewpoint.isApplied || !v.htmlo || !v.htmlo.getHtml())
                continue;
            matches.push(v);
        }
        if (!matches.length)
            return null;
        matches = matches.sort(_GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_2__["ViewRule"].sortCriteria);
        const v = matches[0];
        return v.toStyleComplexEntry(this, v.htmlo, true, false, false, false);
    }
    getCustomGlobalStyle_lv3() {
        const model = this.getModelRoot();
        let vparr = model.viewpoints.sort(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ViewPoint"].sortCriteria);
        for (let i = 0; i < vparr.length; i++) {
            const vp = vparr[i];
            if (!vp.isApplied)
                continue;
            const v = vp.getDefault(this, false);
            if (v)
                return v.toStyleComplexEntry(this, v.htmlo, false, false, true, false);
        }
        return null;
    }
    getGlobalStyle_lv4() {
        const ret = new StyleComplexEntry();
        ret.html = this.getGlobalLevelStyle();
        ret.htmlobj = null;
        ret.view = null;
        ret.ownermp = null;
        ret.isGlobalhtml = true;
        return ret;
    }
    getStyle() {
        let ret;
        // level 1: own style
        ret = this.getOwnStyle_lv1();
        if (ret)
            return ret;
        // level 2: inherited style
        ret = this.getInheritedStyle_lv2();
        if (ret)
            return ret;
        // level 3: prendo lo stile default user-made
        ret = this.getCustomGlobalStyle_lv3();
        if (ret)
            return ret;
        // level 4: se fallisce tutto, prendo lo stile statico default
        return this.getGlobalStyle_lv4();
    }
    /*
    getStyleOld(): ViewHtmlSettings { return this.views.getHtml(this); }
    getStyleOldOld(): Element { return this.views.getHtml(this); }
    getStyleOldissimo(debug: boolean = true): Element {
      // prima precedenza: stile personale.
      let ret: Element;
      if (this.customStyleToErase) { ret = this.customStyleToErase; ret.id = '' + this.id; return ret; }
      // seconda precedenza: stile del meta-parent.
      const metap1 = this.metaParent;
      if (metap1 && metap1.styleOfInstances) { ret = metap1.styleOfInstances; ret.id = '' + this.id; return ret; }
      // terzo e quarto livello: search for customized third-override-css-like global styles; or immutable fourth global styles.
      ret = this.getGlobalLevelStyle(true);
      ret.id = '' + this.id;
      return ret; }
      getStyleObj(): ModelPieceStyleEntry {
        if (this.styleobj) { return this.styleobj; }
        return this.styleobj = ModelPieceStyleEntry.load(this.getStyle(), null); }*/
    getInfo(toLower = false) {
        let i;
        const info = new Info();
        const instancesInfo = {};
        const childrenInfo = {};
        const model = this.getModelRoot();
        Info.set(info, 'tsClass', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this));
        Info.set(info, 'this', this);
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"])) {
            Info.set(info, 'parent', this.parent);
        }
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"])) {
            Info.set(info, 'childrens', childrenInfo);
        }
        if (model.isMM()) {
            Info.set(info, 'instance', instancesInfo);
            Info.set(info, 'name', this.name);
        }
        else {
            Info.set(info, 'metaParent', this.metaParent);
        }
        for (i = 0; this.childrens && i < this.childrens.length; i++) {
            const child = this.childrens[i];
            let name = model.isM1() && child.metaParent ? child.metaParent.name : child.name;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(!name, 'getInfo() getName error: probably some metaparent is null.', this, child);
            if (!name)
                name = '';
            Info.setc(info, name.toLowerCase(), child);
            Info.setraw(childrenInfo, name.toLowerCase(), child);
        }
        for (i = 0; this.instances && i < this.instances.length; i++) {
            Info.seti(instancesInfo, '' + i, this.instances[i]);
        }
        return info;
    }
    getHtmlOnGraph() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"])
            return null;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IGraph"])
            return null;
        let html = this.getVertex().getHtmlRawForeign();
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"])
            return html;
        html = $(html).find('*[data-modelpieceid="' + this.id + '"]')[0];
        return html ? html : null;
    }
    getLastViewWith(fieldname) {
        let i = this.views.length;
        while (--i >= 0) {
            const v = this.views[i];
            const val = v['' + fieldname];
            // U.pe(fieldname in v, 'property |' + fieldname + '| does not exist in ViewRule. Field name has changed without changing the string
            // accordingly.');
            if (val !== undefined && val !== null)
                return v;
        }
        if (!this.metaParent)
            return null;
        i = this.metaParent.views.length;
        while (--i >= 0) {
            const v = this.metaParent.views[i];
            const val = v['' + fieldname];
            // U.pe(fieldname in v, 'property |' + fieldname + '| does not exist in ViewRule. Field name has changed without changing the string
            // accordingly.(2)');
            if (val !== undefined && val !== null)
                return v;
        }
        return null;
    }
    getForemostView(allowDisabled = false) {
        const arr = this.views.sort(_GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_2__["ViewRule"].sortCriteria);
        for (let i = 0; i < arr.length; i++) {
            if (allowDisabled || arr[i].viewpoint.isApplied)
                return arr[i];
        }
        return null;
    }
    /*
      addView(v: ViewRule): void {
        // if (!v.viewpoint.viewsDictionary[this.id]) {  v.viewpoint.viewsDictionary[this.id] = []; }
        v.viewpoint.viewsDictionary[this.id] = v;
        U.ArrayAdd(this.views, v); }
      resetViews(): void { this.views = []; }
    */
    getClassName() { return this.className = this.getClassName0(); }
    getClassName0(allowInterfaceAbstract = false) {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"]) {
            return 'm3Class';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"]) {
            if (!allowInterfaceAbstract)
                return 'm2Class';
            return this.isInterface ? 'Interface' : (this.isAbstract ? 'Abstract' : 'm2Class');
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"]) {
            return 'm1Class';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
            return 'EEnum';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Attribute"]) {
            return 'm3Attribute';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            return 'm2Attribute';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"]) {
            return 'm1Attribute';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Reference"]) {
            return 'm3Reference';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return 'm2Reference';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return 'm1Reference';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Package"]) {
            return 'm3Package';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Package"]) {
            return 'm2Package';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MPackage"]) {
            return 'm1Package';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaMetaModel"]) {
            return 'm3Model';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"]) {
            return 'm2Model';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return 'm1Model';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            return 'EOperation';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            return 'EParameter';
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            return 'ELiteral';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to find class:', this);
    }
    getFriendlyClassName() {
        return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(this.getClassName(), 'm1', ''), 'm2', ''), 'm3', '');
    }
    getInstanceClassName() {
        let ret = this.getClassName();
        if (ret.indexOf('m1') !== -1)
            return null;
        return ret.replace('m2', 'm1').replace('m3', 'm2');
    }
    pushDown(untilStartOrEnd) { this.pushUp(untilStartOrEnd, +1); }
    pushUp(untilStartOrEnd, offset = -1) {
        if (!this.parent) {
            return;
        }
        let arr;
        let parent = this.parent;
        let i;
        if (untilStartOrEnd)
            offset = offset > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
        // logically fix in ecore order
        if ((arr = parent.childrens) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.enums) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.classes) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.attributes) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.references) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        if ((arr = parent.operations) && (i = arr.indexOf(this)) !== -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayInsertAt(arr, i + offset, this);
        }
        this.updateKey();
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"]))
            return;
        // GRAPHically fix
        const vertex = this.getVertex(false);
        if (!vertex)
            return;
        let currentPosition = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getChildIndex(vertex.htmlg.parentElement, vertex.htmlg);
        console.log('pushUp', { untilStartOrEnd, offset, currentPosition });
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].insertNodeAt(vertex.htmlg.parentElement, vertex.htmlg, currentPosition + offset);
    }
    addAnnotation() {
        // todo
    }
}
ModelPiece.idToLogic = {};
ModelPiece.idMax = 0;
ModelPiece.thingsToRefresh = [];
ModelPiece.allmarks = {}; /*
static updateMarkings(): void {
  // cannot achieve perfection but can call it when:
  // resizeobserver on html + callback on vertexmove + callback on graph move or zoom and set big setinterval
  per ora fallo solo con setinterval dal main e check on ModelPiece.allmarks;
}*/
class ModelNone extends ModelPiece {
}
class PendingFunctionCall {
    constructor(target, name, args = null) {
        this.target = target;
        this.name = name;
        this.arguments = args || [];
    }
    static executeProtectedMPBuffer() {
        let i;
        for (i = 0; i < PendingFunctionCall.ProtectedMPBuffer.length; i++) {
            PendingFunctionCall.ProtectedMPBuffer[i].call();
        }
    }
    static clearProtectedMPBuffer() { PendingFunctionCall.ProtectedMPBuffer = []; }
    call(target = null) {
        if (!target)
            target = this.target;
        let f = target[this.name];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!f, 'failed to find function "' + this.name + '" to execute inside:', target, this.arguments);
        f(...this.arguments);
    }
}
PendingFunctionCall.ProtectedMPBuffer = [];
class ServerUpdateRequest {
    static send(s) { }
    static receive(s) {
    }
}
ServerUpdateRequest.minResendMessageCount = 3;
ServerUpdateRequest.buffer = {};
ServerUpdateRequest.lastNumber = -1;
class ServerRequestAction {
    static process(r) {
        const mp = ModelPiece.getByKey(r.modelpiecekey);
        let i;
        // for (i = 0; i < r.cmdline.length; i++) PendingFunctionCall.processMP(mp, r.cmdline[i]);
    }
}
class PendingMeasurableChanges {
    constructor(target) { this.target = target; }
    add(s, args = null) { this.cmdline.push(new PendingFunctionCall(this.target, s, args)); }
    apply() {
        let i;
        for (i = 0; i < this.cmdline.length; i++)
            this.cmdline[i].call(this.target);
    }
}
class F {
    static alse() { return false; }
}
class ProtectedModelPiece {
    constructor(original, createdBy) {
        this.subChanges = [] /*private object*/;
        if (createdBy)
            createdBy.subChanges.push(this);
        this.unsafemp = original;
        this.pendingChanges = new PendingMeasurableChanges(original);
        const unsafeFunctionNames = {};
        const allowedFunctionNames = {};
        const alwaysToKeep = { applyChanges: '' };
        let key;
        for (key in this.unsafemp) {
            if (typeof this.unsafemp[key] === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TSON_JSTypes"].function) {
                unsafeFunctionNames[key] = true;
            }
        }
        for (key in this) {
            if (typeof this[key] === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TSON_JSTypes"].function) {
                allowedFunctionNames[key] = true;
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].join(unsafeFunctionNames, alwaysToKeep, true, false);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].objecKeysIntersect(allowedFunctionNames, unsafeFunctionNames, null, false);
        for (key in this) {
            if (typeof this[key] === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["TSON_JSTypes"].function && !(this[key] in allowedFunctionNames))
                delete this[key];
        }
    }
    applyChanges() {
        PendingFunctionCall.executeProtectedMPBuffer();
        //todo: send all messages to Client.receiveMessage(jsonCommandFormat);
    }
    //////// safe functions()
    getID() { /*number*/ return this.unsafemp.getID(); }
    getSelector() { /*string*/ return this.unsafemp.getSelector(); }
    getChildrenSelector(index /*number*/) { /*string*/ return this.unsafemp.getChildrenSelector(index); }
    getChildrenAttributeSelector(index /*number*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            throw new Error("called IClass.getChildrenAttributeSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getChildrenAttributeSelector(index);
    }
    getTarget(index = 0 /*number = 0*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]))
            throw new Error("called IReference.getTarget() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getTarget(index), this);
    }
    getTargetSelector(index = 0 /*number = 0*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]))
            throw new Error("called IReference.getTargetSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getTargetSelector(index);
    }
    getChildrenReferenceSelector(index /*number*/) {
        console.log('getChildrenReferenceSelector()', index, this);
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            throw new Error("called IClass.getChildrenReferenceSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getChildrenReferenceSelector(index);
    }
    getChildrenOperationSelector(index /*number*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            throw new Error("called IClass.getChildrenOperationSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getChildrenOperationSelector(index);
    }
    getChildrenLiteralSelector(index /*number*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]))
            throw new Error("called EEnum.getChildrenLiteralSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getChildrenLiteralSelector(index);
    }
    getChildrenParameterSelector(index /*number*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]))
            throw new Error("called EOperation.getChildrenParameterSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getChildrenParameterSelector(index);
    }
    getChildrenClassSelector(index /*number*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]))
            throw new Error("called IPackage.getChildrenClassSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getChildrenClassSelector(index);
    }
    getChildrenEnumSelector(index /*number*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]))
            throw new Error("called IPackage.getChildrenEnumSelector() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getChildrenEnumSelector(index);
    }
    //getChildren(name: string/*string*/): ProtectedModelPiece { return this.unsafemp.getch}
    getValue(index = 0 /*number = 0*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"]))
            throw new Error("called IAttribute.getValue() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        index = +index;
        let ub = this.unsafemp.getUpperbound();
        if (ub < 0)
            ub = this.unsafemp.values.length;
        if (ub === 0)
            return undefined;
        if (index < 0)
            index = (ub - index) % ub;
        if (index > ub)
            index = index % ub;
        return this.unsafemp.values[index];
    }
    getValues() {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"]))
            throw new Error("called IAttribute.getValue() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        let ret = this.unsafemp.values;
        if (this.unsafemp.getUpperbound() === 1)
            return ret[0];
        else
            return ret;
    }
    setValues(values = null /*any[] | any = null*/, index = null /*number = null*/, autofix = true /*boolean = true*/) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"]))
            throw new Error("called IAttribute.getValue() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.setValues(values, index, autofix);
    }
    getChildren(name_or_index /*string | number*/, caseSensitive /*boolean = false*/) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(name_or_index))
            return new ProtectedModelPiece(this.unsafemp.getChildren(+name_or_index), this);
        return new ProtectedModelPiece(this.unsafemp.getChildrenByName('' + name_or_index, !!caseSensitive), this);
    }
    getChildrenAttribute(index) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            throw new Error("called IClass.getChildrenAttribute() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getChildrenAttribute(index), this);
    }
    getChildrenReference(index) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            throw new Error("called IClass.getChildrenReference() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getChildrenReference(index), this);
    }
    getChildrenOperation(index) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            throw new Error("called IClass.getChildrenOperation() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getChildrenOperation(index), this);
    }
    getChildrenLiteral(index) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]))
            throw new Error("called EEnum.getChildrenLiteral() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getChildrenLiteral(index), this);
    }
    getChildrenParameter(index) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]))
            throw new Error("called EOperation.getChildrenParameter() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getChildrenParameter(index), this);
    }
    getChildrenClass(index) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]))
            throw new Error("called IPackage.getChildrenClass() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getChildrenClass(index), this);
    }
    getChildrenEnum(index) {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]))
            throw new Error("called IPackage.getChildrenEnum() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getChildrenEnum(index), this);
    }
    endingName(valueMaxLength) { return this.unsafemp.endingName(); }
    fullname() { return this.unsafemp.fullname(); }
    generateModel() { return this.unsafemp.generateModel({}); }
    generateModelString() { return this.unsafemp.generateModelString(); }
    getClassName() { return this.unsafemp.getClassName(); }
    getInfo(toLower) { return this.unsafemp.getInfo(toLower); }
    getInstanceClassName() { return this.unsafemp.getInstanceClassName(); }
    getKey() { return this.unsafemp.getKey(); }
    getKeyStr() { return this.unsafemp.getKeyStr(); }
    isChildNameTaken(s) { return this.unsafemp.isChildNameTaken(s); }
    printableName(valueMaxLength, full) { return this.unsafemp.printableName(valueMaxLength, full); }
    printableNameshort(valueMaxLength) { return this.unsafemp.printableNameshort(valueMaxLength); }
    getType() {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"]))
            throw new Error("called Typed.getDefaultValueStr() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getType();
    }
    getClass() {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"]))
            throw new Error("called Typed.getDefaultValueStr() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return new ProtectedModelPiece(this.unsafemp.getClass(), this);
    }
    getUpperbound() {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"]))
            throw new Error("called Typed.getUpperbound() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getUpperbound();
    }
    getLowerbound() {
        if (!(this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"]))
            throw new Error("called Typed.getLowerbound() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return this.unsafemp.getLowerbound();
    }
    getAllowedValuesStr() {
        let e = this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] ? this.unsafemp : null;
        if (!e)
            throw new Error("called EEnum.getAllowedValuesStr() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return e.getAllowedValuesStr();
    }
    getAllowedValuesInt() {
        let e = this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] ? this.unsafemp : null;
        if (!e)
            throw new Error("called EEnum.getAllowedValuesStr() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return e.getAllowedValuesInt();
    }
    getDefaultValueStr() {
        let e = this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] ? this.unsafemp : null;
        if (!e)
            throw new Error("called EEnum.getDefaultValueStr() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        return e.getDefaultValueStr();
    }
    ////////// safe-able functions adjusting parameters.
    shouldBeDisplayedAsEdge(set) { return this.unsafemp.shouldBeDisplayedAsEdge(null); }
    ////////// unsafe functions got buffered.
    delete() {
        if (F.alse())
            this.unsafemp.delete(); // just to trigger errors if the source is modified
        this.pendingChanges.add('delete', [true]);
    }
    duplicate(nameAppend /*:string*/, newParent /*:ModelPiece = null*/) {
        if (F.alse())
            this.unsafemp.duplicate(nameAppend, newParent); // just to trigger errors if the source is modified
        this.pendingChanges.add('delete', [true]);
        return null;
    }
    mark(markb, paired = null, key, color, radiusX, radiusY, width, backColor, extraOffset) {
        if (F.alse())
            this.unsafemp.mark(markb, null, key, color, radiusX, radiusY, width, backColor, extraOffset); // just to trigger errors if the source is modified
        this.pendingChanges.add('mark', [...arguments]);
    }
    pushDown(untilStartOrEnd) {
        if (F.alse())
            this.unsafemp.pushDown(untilStartOrEnd); // just to trigger errors if the source is modified
        this.pendingChanges.add('pushDown', ['' + untilStartOrEnd]);
    }
    pushUp(untilStartOrEnd, offset) {
        if (F.alse())
            this.unsafemp.pushUp(untilStartOrEnd, offset); // just to trigger errors if the source is modified
        this.pendingChanges.add('pushUp', ['' + untilStartOrEnd, '' + offset]);
    }
    refreshGUI() {
        if (F.alse())
            this.unsafemp.refreshGUI(); // just to trigger errors if the source is modified
        this.pendingChanges.add('refreshGUI');
    }
    refreshGUI_Alone() {
        if (F.alse())
            this.unsafemp.refreshGUI_Alone(); // just to trigger errors if the source is modified
        this.pendingChanges.add('refreshGUI_Alone');
    }
    refreshInstancesGUI() {
        if (F.alse())
            this.unsafemp.refreshInstancesGUI(); // just to trigger errors if the source is modified
        this.pendingChanges.add('refreshInstancesGUI');
    }
    validate() {
        if (F.alse())
            this.unsafemp.validate(); // just to trigger errors if the source is modified
        this.pendingChanges.add('validate');
        return undefined;
    }
    setName(value, refreshGUI, warnDuplicateFix) {
        if (F.alse())
            this.unsafemp.setName(value, refreshGUI, warnDuplicateFix); // just to trigger errors if the source is modified
        this.pendingChanges.add('setName', [...arguments]);
        return undefined;
    }
    // EEnum things.
    addLiteral(literal = null) {
        const t = this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] ? this.unsafemp : null;
        if (!t)
            throw new Error("called EEnum.addLiteral() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        if (F.alse())
            t.addLiteral(literal); // just to trigger errors if the source is modified
        this.pendingChanges.add('addLiteral', [...arguments]);
        return undefined;
    }
    setType(ecoreTypeString, throwError, refreshGui) {
        const t = this.unsafemp;
        if (!t)
            throw new Error("called Typed.setType() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        if (F.alse())
            t.setType(ecoreTypeString, true, false);
        this.pendingChanges.add('setType', [...arguments]);
        return undefined;
    }
    setUpperbound(val) {
        const t = this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] ? this.unsafemp : null;
        if (!t)
            throw new Error("called Typed.setUpperbound() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        if (F.alse())
            t.setUpperbound(val);
        this.pendingChanges.add('setUpperbound', [...arguments]);
        return undefined;
    }
    setLowerbound(val) {
        const t = this.unsafemp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] ? this.unsafemp : null;
        if (!t)
            throw new Error("called Typed.setLowerbound() on a ModelPiece with a wrong type(" + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(this.unsafemp) + ") ");
        if (F.alse())
            t.setLowerbound(val);
        this.pendingChanges.add('setLowerbound', [...arguments]);
        return undefined;
    }
}


/***/ }),

/***/ "./src/ServerCommunication/Synchronization/ModelUpdateMessage.ts":
/*!***********************************************************************!*\
  !*** ./src/ServerCommunication/Synchronization/ModelUpdateMessage.ts ***!
  \***********************************************************************/
/*! exports provided: ModelUpdateMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelUpdateMessage", function() { return ModelUpdateMessage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

class ModelUpdateMessage {
    constructor(uid, fieldName, newValue) {
        this.targetObj = uid;
        this.targetField = fieldName;
        this.newValue = newValue;
    }
}


/***/ }),

/***/ "./src/ServerCommunication/Synchronization/SendManager.ts":
/*!****************************************************************!*\
  !*** ./src/ServerCommunication/Synchronization/SendManager.ts ***!
  \****************************************************************/
/*! exports provided: SendManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SendManager", function() { return SendManager; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


// NB: se nel receiveManager ricevo un ordine di update di un ModelPieceID non esistente, devo bufferarlo.
// potrebbe essere una inversione di ordine dei messaggi nello strato di rete.
// NB: se al server arrivano 2 renameModelPiece nell'ordine inverso, devo tenere traccia del timestamp,
// e se l'ultimo rename sul mp è più recente di quello appena arrivato lo ignoro. (idempotenza, non cambia l'ordine dei messaggi)
// todo: perdi la compatibilità con eCore nel salvataggio. permetterebbe di inserire commenti, riferimenti circolari in m1 e altro.
//  poi posso sempre salvare sia in eCore che nel mio nuovo formato.
class SendManager {
    constructor(serverAdress, timeout) {
        // U.pe(!serverAdress, "fill server adress before testing");
        this.serverAdress = serverAdress;
        this.timeout = timeout;
    }
    update(uid, fieldName, newValue) {
        const todo = true;
        if (todo)
            return;
        const msg = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelUpdateMessage"](uid, fieldName, newValue);
        const callback = () => { };
        let request = $.post(this.serverAdress, msg, callback);
        request = $.ajax({
            url: this.serverAdress,
            type: "POST",
            dataType: "json",
            timeout: this.timeout,
            success: function (response) { setTimeout(() => SendManager.manager.update(uid, fieldName, newValue)); },
            error: function (xmlhttprequest, textstatus, message) {
                // 'success' | 'notmodified' | 'nocontent';
                switch (textstatus) {
                    default:
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected return code from ajax request:', textstatus, msg);
                        break;
                    case 'timeout':
                        break;
                    case 'error':
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'undefined error after synch server request send', msg);
                        break;
                    case 'abort':
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'undefined abort after synch server request send', msg);
                        break;
                    case 'parsererror':
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'undefined abort after synch server request send', msg);
                        break;
                }
                if (textstatus === "timeout") {
                    alert("got timeout");
                }
                else {
                    alert(textstatus);
                }
            }
        });
        request.state();
    }
}
SendManager.manager = new SendManager("", 5000);


/***/ }),

/***/ "./src/app/User.ts":
/*!*************************!*\
  !*** ./src/app/User.ts ***!
  \*************************/
/*! exports provided: User */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return User; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

class User {
    // todo
    constructor(key) {
        this.key = key;
    }
    getID() {
        return this.key;
    }
}


/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("::ng-deep body {/* css variables */\r\n  --topbarH: 40px;\r\n  --sidebarW: 283px;\r\n  --mainBorderWidth: 5px;\r\n  --mainBorder: var(--mainBorderColor) solid var(--mainBorderWidth);\r\n  --scrollbarW: 0px;\r\n  --tabH: 30px;\r\n  --bluebordercolor: #0084ff;\r\n/*\r\n  --mainFontColor: transparent;\r\n  --mainBackgroundColor: transparent;\r\n  --mainBorderColor: transparent;\r\n  --secondaryBorderColor: transparent;\r\n  --popupBackgroundColor: transparent;\r\n  --altBackgroundColor: var(--mainBorderColor);\r\n  --altFontColor: transparent;*/\r\n\r\n  /* todo: questi colori vengono sempre rimpiazzati dinamicamente, esistono solo in fallback se l'utente elimina tutti i color-scheme*/\r\n  --color-1: #f5f5f5;\r\n  --color-2: #3c3c44;\r\n  --color-3: #2e2f34;\r\n  --color-4: #1E90FF;\r\n  --color-bg-1: #ffffff;\r\n  --color-bg-2: #f0f0f0;\r\n  --color-bg-3: #2e2f34;\r\n  --color-bg-30: transparent;\r\n\r\n  /*\r\n  --LightsecondaryBorderColor: var(--color-1); /*#c5c5c5;* /\r\n  --LightmainFontColor: var(--color-2);\r\n  --LightaltFontColor: var(--color-3);\r\n  --LightmainBackgroundColor: var(--color-bg-1);\r\n  --LightmainBorderColor: var(--color-bg-2); /*#9ca7b8; on intelliJidea darker shade /*#e5e5e5;* /\r\n  --LightpopupBackgroundColor: var(--color-bg-3);\r\n  /* --LightaltBackgroundColor: var(--color-bg-30);* /\r\n\r\n  --DarksecondaryBorderColor: #3c3c44;/*#c5c5c5;* /--color-1\r\n  --DarkmainFontColor: #b2b2ba; --color-2\r\n  --DarkaltFontColor: #f0f0f0;/* var(--LightmainBorderColor); * /--color-3\r\n  --DarkmainBackgroundColor: #1a1a1c;/*whiteSmoke;* /--color-bg-1\r\n  --DarkmainBorderColor: #2e2f34;/*#e5e5e5;* /--color-bg-2\r\n  --DarkpopupBackgroundColor: #44444c;--color-bg-3\r\n  /*--DarkaltBackgroundColor: var(--mainBorderColor);*/\r\n\r\n  --mainFontColor: var(--color-2);\r\n  --mainBackgroundColor: var(--color-bg-1);\r\n  --mainBorderColor: var(--color-bg-2); /*#9ca7b8; on intelliJidea darker shade /*#e5e5e5;*/\r\n  --secondaryBorderColor: var(--color-1); /*#c5c5c5;*/\r\n  --popupBackgroundColor: var(--color-bg-3);\r\n  /*--altBackgroundColor: var(--color-bg-30);*/\r\n  --altFontColor: var(--color-3);\r\n}\r\n.Vertex{\r\n  --color-1: #FFFFFF;\r\n  --color-2: #000000;\r\n  --color-3: #000000;\r\n  --color-4: #1E90FF;\r\n  --color-5: #FF0000;\r\n}\r\n.Feature{\r\n   --color-f-1: #ff8c00;\r\n   --color-f-2: #28a745;\r\n   --color-f-3: #d3d3d3;\r\n }\r\n::ng-deep *{\r\n  box-sizing: border-box;\r\n  scrollbar-base-color: transparent;\r\n  scrollbar-3dlight-color: transparent;\r\n  scrollbar-highlight-color: rgba(93,95,104,0); /* unused? totally transparent*/\r\n  scrollbar-track-color: rgba(93,95,104,0);\r\n  scrollbar-arrow-color: #000;\r\n  scrollbar-shadow-color: rgba(93,95,104,0);\r\n  scrollbar-darkshadow-color: rgba(93,95,104,0);\r\n  /* -moz-appearance: none !important; */\r\n}\r\n::ng-deep .graph *{\r\n  overflow: inherit;\r\n  text-overflow: ellipsis;\r\n}\r\n/*because color will be inherited, but background not (since input and selects cannot inherit and inherit behave like transparent.\r\n this is fine on the input itself but the optgroup cannot have transparent and will be always white.\r\n now, the problem is if you set a bacgkround-color: inherit / transparent select inside a black element with white text, the optgroup will be white with white text.\r\n */\r\n::ng-deep select{\r\n  text-overflow: clip;\r\n}\r\n::ng-deep optgroup{\r\n  color: black;\r\n  background-color: white;\r\n}\r\n::ng-deep [title] {\r\n  cursor: help;\r\n}\r\n/*::-webkit-scrollbar {\r\ndisplay: none;\r\n}*/\r\n*:disabled { cursor: not-allowed !important; }\r\ninput[type=checkbox]{ -moz-appearance: checkbox !important; }\r\ninput[type=radio]{ -moz-appearance: radio !important; }\r\ninput:disabled{\r\n  opacity : .75;\r\n  filter  : alpha(opacity=75); /* IE<9 */\r\n}\r\n::ng-deep .styleEditorSelected{\r\n  outline: 3px dashed red !important;\r\n}\r\n/*olds*/\r\n/****************** attributeEditor.css */\r\n.attributeEditor, .styleEditor{\r\n  /*display:inline-box;*/\r\n  position: absolute;\r\n  width: -moz-fit-content;\r\n  padding:8px;\r\n  background-color: var(--mainBackgroundColor);\r\n  border: var(--mainBorder);\r\n  max-width: 100vw;\r\n  max-height:100vh;\r\n  overflow: auto;\r\n}\r\n.styleEditor{\r\n  left: var(--sidebarW);\r\n  top: calc(var(--topbarH) + var(--tabH));\r\n  /*voglio che sia diversa perchè di solito parte con altezza pari a topbar.h e voglio che sia scrollabile senza spostarla*/\r\n  max-height: calc(100vh - calc(var(--topbarH) + var(--tabH)));\r\n}\r\nbutton.attributeEditorConfirm, button.styleEditorConfirm{\r\n  margin-left: calc(50% - 50px);\r\n  /* width:100px;\r\n   height:30px;*/\r\n}\r\ntable.attributeTable .attributeEditorFieldName, table.styleTable .styleEditorFieldName{\r\n  max-width:150px;\r\n  max-height:150px;\r\n  overflow:auto;\r\n}\r\n.styleTable{\r\n  margin-top:10px;\r\n  text-align: center;\r\n}\r\n.styleTable td{\r\n  max-width: 300px;\r\n}\r\n.attributeEditorTitle, .styleEditorTitle{\r\n  text-align: center;\r\n}\r\n.edgeRow{\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n.edgeRow>*{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: 0px;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  text-align: center;\r\n  padding: 4px;\r\n  flex-basis: 0px;\r\n  -webkit-box-flex: 0;\r\n          flex-grow: 0;\r\n  white-space: nowrap;\r\n}\r\n.isCompoundEdge{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto;\r\n}\r\n.styleCompoundWrapper{\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n}\r\n.compoundEdgeStart, .compoundEdgeEnd{\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n.SidebarStyleHtml, .GraphStyleHtml{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-pack: center;\r\n          justify-content: center;\r\n}\r\n/*\r\ntable.attributeTable {\r\n    border:none;\r\n    border-collapse: collapse;\r\n}\r\n\r\ntable.attributeTable td {\r\n    border-left: 1px solid #000;\r\n    border-right: 1px solid #000;\r\n}\r\n\r\ntable.attributeTable td:first-child {\r\n    border-left: none;\r\n}\r\n\r\ntable.attributeTable td:last-child {\r\n    border-right: none;\r\n}*/\r\n.attributeEditorTitle input[type=\"checkbox\"], .styleEditorTitle input[type=\"radio\"]{\r\n  margin: 4px;\r\n}\r\n.ReferenceSelector{\r\n  float: right;\r\n}\r\n.rowModelDetail, .vertexModelDetail{\r\n  float: right;\r\n  border-radius: 50%;\r\n  width: 33px;\r\n  height: 33px;\r\n  padding-top: 2px;\r\n}\r\n.vertexModelDetail{\r\n  margin-left: 10px;\r\n  float:none;\r\n}\r\n/*//////////////////////////////////////////////////  css.css nothing of this should work*/\r\n/*\r\n.sidebarShell, .editorShell, .property_sidebar{\r\n  display: inline-block;/*flex;* /\r\n  /* height: calc(100vh - (var(--topbarH) + var(--tabH)));* /\r\n  overflow: hidden;\r\n  flex-wrap: wrap;}\r\n.sidebarShell{\r\n  flex-grow: 0;\r\n  flex-basis: calc(var(--sidebarW));\r\n  background-color: var(--mainBackgroundColor);\r\n}\r\n#property_sidebar{\r\n  flex-grow: 0;\r\n  flex-basis: calc(var(--sidebarW));\r\n  background-color: var(--mainBackgroundColor);\r\n}\r\n.editorShell{\r\n  flex-basis: 0px;\r\n  flex-grow: 1;\r\n  width: calc(100vw - var(--sidebarW));\r\n}\r\n*/\r\n#metamodel_tab, #model_tab{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-direction: row;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n          justify-content: space-between;\r\n  -webkit-box-align: start;\r\n          align-items: flex-start;\r\n  align-content: flex-start;\r\n  width: 100vw;}\r\n#metamodel_editor, #model_editor{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-basis: 0px;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  /*width: calc(100vw - var(--sidebarW) - var(--scrollbarW));/*NB: TO DO: quando nascondi l'hiddeninput */\r\n  height: calc(100vh - calc(var(--topbarH) + var(--tabH)));\r\n  background-color: #44444c;/*lightgoldenrodyellow;*/\r\n}\r\n#input{\r\n  display:none;\r\n  width: 100vw;\r\n  height: 300px;\r\n  overflow-y:scroll;\r\n}\r\ntable.noBorder{\r\n  border: none;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let AppComponent = class AppComponent {
    constructor() {
        this.title = 'Jodel';
    }
};
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")).default]
    })
], AppComponent);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule, Status, main0, onModelsReceive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Status", function() { return Status; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "main0", function() { return main0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onModelsReceive", function() { return onModelsReceive; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _guiElements_mminput_mminput_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../guiElements/mminput/mminput.component */ "./src/guiElements/mminput/mminput.component.ts");
/* harmony import */ var _guiElements_mmsidebar_mmsidebar_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../guiElements/mmsidebar/mmsidebar.component */ "./src/guiElements/mmsidebar/mmsidebar.component.ts");
/* harmony import */ var _guiElements_msidebar_msidebar_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../guiElements/msidebar/msidebar.component */ "./src/guiElements/msidebar/msidebar.component.ts");
/* harmony import */ var _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../guiElements/isidebar/isidebar.component */ "./src/guiElements/isidebar/isidebar.component.ts");
/* harmony import */ var _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../guiElements/top-bar/top-bar.component */ "./src/guiElements/top-bar/top-bar.component.ts");
/* harmony import */ var _guiElements_graph_tab_html_graph_tab_html_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../guiElements/graph-tab-html/graph-tab-html.component */ "./src/guiElements/graph-tab-html/graph-tab-html.component.ts");
/* harmony import */ var _guiElements_mm_graph_html_mm_graph_html_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../guiElements/mm-graph-html/mm-graph-html.component */ "./src/guiElements/mm-graph-html/mm-graph-html.component.ts");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _guiElements_property_barr_property_barr_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../guiElements/property-barr/property-barr.component */ "./src/guiElements/property-barr/property-barr.component.ts");
/* harmony import */ var _guiElements_m_graph_html_m_graph_html_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../guiElements/m-graph-html/m-graph-html.component */ "./src/guiElements/m-graph-html/m-graph-html.component.ts");
/* harmony import */ var _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../guiElements/dam-context-menu/dam-context-menu.component */ "./src/guiElements/dam-context-menu/dam-context-menu.component.ts");
/* harmony import */ var _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../guiElements/style-editor/style-editor.component */ "./src/guiElements/style-editor/style-editor.component.ts");
/* harmony import */ var _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../guiElements/console/console.component */ "./src/guiElements/console/console.component.ts");
/* harmony import */ var _measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./measurabletemplate/measurabletemplate.component */ "./src/app/measurabletemplate/measurabletemplate.component.ts");
/* harmony import */ var vis_network__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! vis-network */ "./node_modules/vis-network/peer/umd/vis-network.min.js");
/* harmony import */ var vis_network__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(vis_network__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _guiElements_mGraph_Layouting__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../guiElements/mGraph/Layouting */ "./src/guiElements/mGraph/Layouting.ts");
/* harmony import */ var _guiElements_top_bar_m2tcreator_m2tcreator_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../guiElements/top-bar/m2tcreator/m2tcreator.component */ "./src/guiElements/top-bar/m2tcreator/m2tcreator.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _User__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./User */ "./src/app/User.ts");
/* harmony import */ var _color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./color-scheme/color-scheme.component */ "./src/app/color-scheme/color-scheme.component.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_25__);


























// @ts-ignore
let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"])({
        declarations: [
            _app_component__WEBPACK_IMPORTED_MODULE_4__["AppComponent"],
            _guiElements_mminput_mminput_component__WEBPACK_IMPORTED_MODULE_5__["MminputComponent"],
            _guiElements_mmsidebar_mmsidebar_component__WEBPACK_IMPORTED_MODULE_6__["MmsidebarComponent"],
            _guiElements_msidebar_msidebar_component__WEBPACK_IMPORTED_MODULE_7__["MsidebarComponent"],
            _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_8__["IsidebarComponent"],
            _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBarComponent"],
            _guiElements_graph_tab_html_graph_tab_html_component__WEBPACK_IMPORTED_MODULE_10__["GraphTabHtmlComponent"],
            _guiElements_mm_graph_html_mm_graph_html_component__WEBPACK_IMPORTED_MODULE_11__["MmGraphHtmlComponent"],
            _guiElements_property_barr_property_barr_component__WEBPACK_IMPORTED_MODULE_13__["PropertyBarrComponent"],
            _guiElements_m_graph_html_m_graph_html_component__WEBPACK_IMPORTED_MODULE_14__["MGraphHtmlComponent"],
            _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__["DamContextMenuComponent"],
            _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_16__["StyleEditorComponent"],
            _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_17__["ConsoleComponent"],
            _guiElements_top_bar_m2tcreator_m2tcreator_component__WEBPACK_IMPORTED_MODULE_21__["M2tcreatorComponent"],
            _color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_24__["ColorSchemeComponent"],
            _measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_18__["MeasurabletemplateComponent"],
        ],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_22__["FormsModule"]
        ],
        providers: [],
        bootstrap: [
            _app_component__WEBPACK_IMPORTED_MODULE_4__["AppComponent"],
            _guiElements_mminput_mminput_component__WEBPACK_IMPORTED_MODULE_5__["MminputComponent"],
            _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__["DamContextMenuComponent"],
            _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBarComponent"],
            _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_17__["ConsoleComponent"],
            _guiElements_graph_tab_html_graph_tab_html_component__WEBPACK_IMPORTED_MODULE_10__["GraphTabHtmlComponent"],
            _color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_24__["ColorSchemeComponent"],
            _measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_18__["MeasurabletemplateComponent"]
        ],
        // aggiunto da me
        schemas: [
            _angular_core__WEBPACK_IMPORTED_MODULE_3__["NO_ERRORS_SCHEMA"]
        ]
    })
], AppModule);

class Status {
    constructor() {
        this.mm = null;
        this.m = null;
        this.typeAliasDictionary = {};
        // aliasTypeDictionary: Dictionary<string, ShortAttribETypes> = {};
        this.debug = false;
        this.loadedLogic = false;
        this.loadedGUI = false;
        this.XMLinlineMarker = '' + '@';
        // todo: consenti di customizzare il marker, (in m3options?)
        this.refreshModeAll = true;
        this.refreshModelAndInstances = false;
        this.refreshModelAndParent = false;
        this.refreshInstancesToo = false;
        this.refreshModel = false;
        this.refreshMetaParentToo = false;
        this.refreshParentToo = false;
        // modelMatTab: MatTabGroup = null;
        /*showMMGrid = true;
        showMGrid = true;
        mmGrid = new GraphPoint(20, 20);
        mGrid = new GraphPoint(20, 20);*/
        this.user = new _User__WEBPACK_IMPORTED_MODULE_23__["User"]('mock_user');
        this.isEmbed = window.parent !== window;
        this.isFirefox = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["is"].firefox();
        this.allowGenericObjects = false;
        this.isProduction = window.location.href.indexOf('http://localhost') !== 0;
    }
    save() {
        return 'TO DO: SERIALIZE';
    }
    getActiveModel() {
        // if (Status.status.modelMatTab) { if (Status.status.modelMatTab.selectedIndex === 0) { return this.mm; } else { return this.m; } }
        if ($('.UtabHeader.main[data-target="1"][selected="true"]').length === 1) {
            return Status.status.mm;
        }
        if ($('.UtabHeader.main[data-target="2"][selected="true"]').length === 1) {
            return Status.status.m;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pe(true, 'modello attivo non trovato.');
        return null;
    }
    isM() { return this.getActiveModel() === this.m; }
    isMM() { return this.getActiveModel() === this.mm; }
    enableAutosave(timer) {
        $(window).off('beforeunload.unload_autosave').on('beforeunload.unload_autosave', () => { this.autosave(); });
        localStorage.setItem('autosave', 'true');
        setInterval(() => { this.autosave(); }, timer);
    }
    autosave() {
        this.mm.save(true, null);
        this.m.save(true, null);
        console.log('autosave completed.');
    }
}
Status.status = null;
function main0(loadEvent, tentativi = 0) {
    if (_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["is"].safari() && null === localStorage.getItem('unsupported-browser-warned')) {
        localStorage.setItem('unsupported-browser-warned', 'true');
        sweetalert2__WEBPACK_IMPORTED_MODULE_25___default.a.fire({
            icon: 'error',
            title: 'Unsupported browser',
            html: 'Using safari might cause visual glitches, gui differences and possibly other issues.' +
                '<br>Best experience with: chrome, edge.' +
                '<br>Trivial issues with: Firefox.' +
                '<br>Major issues with: Safari' +
                '<br>Unknown status for others.'
        });
    }
    if (document.getElementById('MM_INPUT') === null) {
        if (tentativi++ >= 10) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pe(true, 'failed to load html');
        }
        console.log('main0 wait(100)');
        setTimeout(() => main0(null, tentativi), 100);
        return;
    }
    try {
        Status.status = new Status();
        window.global = window;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].disableConsole();
        main();
        setTimeout(() => delayedMain(), 1);
    }
    catch (e) {
        const errormsg = 'initialization failed, this is likely caused by a failure on connection while downloading libraries or by unsupported browser.';
        console.error('first error:', e);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].disableConsole();
        try {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw(true, errormsg);
        }
        catch (ee) {
            console.log('second error while printing:', ee);
            document.body.innerHTML = errormsg;
        }
    }
    // console.log('main(), $ loaded:', $ !== undefined, 'status: ', Status.status);
}
/*function mainForceTabChange(tentativi: number = 0) {
  let retry = false;
  if (!Status.status.modelMatTab) {
    Status.status.modelMatTab = GraphTabHtmlComponent.matTabModel;
    retry = true;
    if (tentativi++ >= 10) { U.pe(true, 'failed to change tab (not initialized)', Status.status); }}
  if (Status.status.modelMatTab && Status.status.modelMatTab.selectedIndex === 1) {
    Status.status.modelMatTab.selectedIndex = 0;
    if (tentativi++ >= 10) { U.pe(true, 'failed to change tab (changeindex)'); }
    retry = true; }
  if (retry) {
    setTimeout(() => mainForceTabChange(tentativi), 100);
  } else { main(); }
}*/
const M2InputXml = '<?xml version="1.0" encoding="UTF-8"?>\n' +
    '<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n' +
    '    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="pkg" nsURI="http://www.pkg.uri.com" nsPrefix="pkg.prefix">\n' +
    '  <eClassifiers xsi:type="ecore:EClass" name="player">\n' +
    '   <eStructuralFeatures xsi:type="ecore:EAttribute" name="name"' +
    '       eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EChar"/>\n' +
    '  </eClassifiers>\n' +
    '  <eClassifiers xsi:type="ecore:EClass" name="league">\n' +
    '    <eStructuralFeatures xsi:type="ecore:EReference" name="playerlist" eType="#//player"/>\n' +
    '  </eClassifiers>\n' +
    '</ecore:EPackage>\n';
function globalNativeFunctionOverride() {
    const getattr = Element.prototype.getAttribute;
    // apparently getattrib() in svg elements is case sensitive, while in html is not. but still svg cannot have uppercase letters in attributes. (chrome bug?)
    Element.prototype.getAttribute = function (qualifiedName) { return typeof qualifiedName === _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["TSON_JSTypes"].string ? getattr.call(this, qualifiedName.toLowerCase()) : null; };
}
function globalevents() {
    globalNativeFunctionOverride();
    // Prevent the backspace key from navigating back.
    const $document = $(document);
    $document.off('mousedown.print').on('mousedown.print', (e) => {
        let mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ModelPiece"].get(e);
        if (!mp)
            return;
        let name = mp.printableName(20, true);
        console.info('clicked mp:', mp.id, name, mp);
    });
    $document.off('keydown.preventBackslash').on('keydown.preventBackslash', _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].preventBackSlashHistoryNavigation);
    $document.off('keydown.abortEdgeChange').on('keydown.abortEdgeChange', (e) => {
        // console.log('documentKeyDown: ', e.key, e.keyCode);
        if (e.key === 'Escape') {
            Status.status.getActiveModel().graph.edgeChangingAbort(e);
        }
    });
    window['' + 'U'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"];
    window['' + 'IGraph'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IGraph"];
    window['' + 'IVertex'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IVertex"];
    window['' + 'IEdge'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IEdge"];
    window['' + 'ExtEdge'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ExtEdge"];
    window['' + 'EdgePoint'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EdgePoint"];
    window['' + 'ViewPoint'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"];
    window['' + 'ViewRule'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewRule"];
    window['' + 'ModelPiece'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ModelPiece"];
    window['' + 'IModel'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IModel"];
    window['' + 'Status'] = Status;
    window['' + 'M3Model'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaMetaModel"];
    window['' + 'M2Model'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"];
    window['' + 'MModel'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"];
    window['' + 'IPackage'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IPackage"];
    window['' + 'M3Package'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Package"];
    window['' + 'M2Package'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Package"];
    window['' + 'MPackage'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MPackage"];
    window['' + 'Enum'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EEnum"];
    window['' + 'ELiteral'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ELiteral"];
    window['' + 'IClassifier'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IClass"];
    window['' + 'IClass'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IClass"];
    window['' + 'M3Class'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Class"];
    window['' + 'M2Class'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Class"];
    window['' + 'MClass'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MClass"];
    window['' + 'Typedd'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Typedd"];
    window['' + 'EOperation'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EOperation"];
    window['' + 'EParameter'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EParameter"];
    window['' + 'IReference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IReference"];
    window['' + 'M3Reference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Reference"];
    window['' + 'M2Reference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Reference"];
    window['' + 'MReference'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MReference"];
    window['' + 'IAttribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IAttribute"];
    window['' + 'M3Attribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M3Attribute"];
    window['' + 'M2Attribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Attribute"];
    window['' + 'MAttribute'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MAttribute"];
    window['' + 'measurableRules'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["measurableRules"];
    window['Rotatableoptions'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Rotatableoptions"];
    window['Resizableoptions'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Resizableoptions"];
    window['Draggableoptions'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Draggableoptions"];
    window['TSON'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["TSON"];
    window['TSON_JSTypes'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["TSON_JSTypes"];
    window['TSON_UnsupportedTypes'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["TSON_UnsupportedTypes"];
    window['Network'] = vis_network__WEBPACK_IMPORTED_MODULE_19__["Network"];
    window['Layouting'] = _guiElements_mGraph_Layouting__WEBPACK_IMPORTED_MODULE_20__["Layouting"];
    window['TopBar'] = _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBar"];
    window['ColorSchemeComponent'] = _color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_24__["ColorSchemeComponent"];
    window['DamContextMenu'] = _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__["DamContextMenu"];
    window['is'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["is"];
    window['Type'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Type"];
    window['ISize'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ISize"];
    window['Size'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Size"];
    window['GraphSize'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["GraphSize"];
    window['IPoint'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IPoint"];
    window['Point'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Point"];
    window['GraphPoint'] = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["GraphPoint"];
    window['' + 'help'] = [
        'setBackup (backup <= saveToDB)',
        'backupSave (saveToDB <= backup)',
        'destroy (the backup)',
        'discardSave (stop autosave)'
    ];
    window['' + 'destroy'] = () => {
        localStorage.setItem('m1_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].model.lastopened, null);
        localStorage.setItem('m2_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].model.lastopened, null);
        localStorage.setItem('m1_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].view.lastopened, null);
        localStorage.setItem('m2_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].view.lastopened, null);
        localStorage.setItem('m1_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].vertexPos.lastopened, null);
        localStorage.setItem('m2_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["SaveListEntry"].vertexPos.lastopened, null);
        localStorage.setItem('backupMM', null);
        localStorage.setItem('backupGUI', null);
        localStorage.setItem('backupM', null);
        localStorage.setItem('autosave', 'false');
    };
    window['' + 'discardSave'] = () => {
        localStorage.setItem('autosave', 'false');
        $(window).off('beforeunload.unload_autosave');
        window.location.href += '';
    };
    window['' + 'backupSave'] = () => {
        window['' + 'discardSave']();
        window['' + 'backupSaveMM']();
        window['' + 'backupSaveM']();
        window['' + 'backupSaveGUI']();
    };
    window['' + 'backupSaveGUI'] = () => { localStorage.setItem('modelGraphSave_GUI_Damiano', localStorage.getItem('backupGUI')); };
    window['' + 'backupSaveMM'] = () => { localStorage.setItem('LastOpenedMM', localStorage.getItem('backupMM')); };
    window['' + 'backupSaveM'] = () => { localStorage.setItem('LastOpenedM', localStorage.getItem('backupM')); };
    window['' + 'setBackup'] = () => { window['' + 'setBackupM'](); window['' + 'setBackupMM'](); window['' + 'setBackupGUI'](); };
    window['' + 'setBackupGUI'] = () => { localStorage.setItem('backupGUI', localStorage.getItem('modelGraphSave_GUI_Damiano')); };
    window['' + 'setBackupMM'] = () => { localStorage.setItem('backupMM', localStorage.getItem('LastOpenedMM')); };
    window['' + 'setBackupM'] = () => { localStorage.setItem('backupM', localStorage.getItem('LastOpenedM')); };
    window['' + 's'] = Status.status;
    $('#testbtn').on('click', function testClick() {
        console.log("testbtn clicked");
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["VsCodeLayerOut"].send({ type: "jodel.test", body: { a: 'a', b: 5, c: { d: "nested test", e: 2.7 } } });
    });
}
function setBootstrapOnLowestPriority() {
    let $s = $('style');
    for (let i = 0; i < $s.length; i++) {
        if ($s[i].innerText.substring(0, 220).indexOf('https://getbootstrap.com/') === -1)
            continue;
        document.head.prepend($s[i]);
        return;
    }
}
function main() {
    let tmp;
    let useless;
    let i;
    document.body.classList.add( true ? 'production' : undefined);
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["VsCodeLayerIn"].setupReceive();
    setBootstrapOnLowestPriority();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].focusHistorySetup();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].tabSetup();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].resizableBorderSetup();
    const $resizableBorders = $('.resizableBorder.side, .resizableBorder.corner');
    for (i = 0; i < $resizableBorders.length; i++) {
        $resizableBorders[i].style.borderColor = 'var(--mainBorderColor)';
    }
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ECoreRoot"].initializeAllECoreEnums();
    globalevents();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EType"].LoadTypeMaps();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MeasurableRuleParts"].staticinit();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IVertex"].staticinit();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IEdge"].staticInit();
    new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MyConsole"]();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw((tmp = +_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["DetectZoom"].device()) !== 1, 'Current zoom level is different from 100%.', 'The graph part of this website may be graphically misplaced due to a bug with Svg\'s <foreignObject> content.', 'current zoom:' + (+tmp * 100) + '%', 'The bug happens in: Chrome.', 'The bug does NOT happen in: Firefox.', 'Behaviour is unknown for other browsers.');
    /*
    Status.status.typeAliasDictionary[ShortAttribETypes.ECharObj] = 'ECharObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EStringObj] = 'EStringObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EDateObj] = 'EDateObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EFloatObj] = 'EFloatObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EDoubleObj] = 'EDoubleObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EByteObj] = 'EByteObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EShortObj] = 'EShortObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EIntObj] = 'EIntObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.ELongObj] = 'ELongObj';
    Status.status.typeAliasDictionary[ShortAttribETypes.EELIST] = 'EELIST';*/
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["EType"].staticInit();
    _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_15__["DamContextMenu"].staticInit();
    if (!Status.status.isEmbed) {
        const savem2 = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["LocalStorage"].getLastOpened(2);
        const savem1 = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["LocalStorage"].getLastOpened(1);
        window['' + 'exportexample'] = () => {
            // window['' + 'setBackup']()
            document.body.innerText = 'savem2.model = ' + JSON.stringify(savem2.model) + ';\n' +
                'savem2.view = ' + JSON.stringify(savem2.view) + ';\n' +
                'savem2.vertexpos = ' + JSON.stringify(savem2.vertexpos) + ';\n' +
                'savem1.model = ' + JSON.stringify(savem1.model) + ';\n' +
                'savem1.view = ' + JSON.stringify(savem1.view) + ';\n' +
                'savem1.vertexpos = ' + JSON.stringify(savem1.vertexpos) + ';\n' +
                'break;';
            document.body.style.userSelect = 'all';
        };
        // console.error('pre check example');
        switch (_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].findGetParameter('example')) {
            case 'aircraft2021':
                console.log = () => { };
                console.info = () => { };
                console.warn = () => { };
                console.error('aircraft check example');
                savem2.model = "{\n \"ecore:EPackage\": [\n {\n \"@xmi:version\": \"2.0\",\n \"@xmlns:xmi\": \"http://www.omg.org/XMI\",\n \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n \"@xmlns:ecore\": \"http://www.eclipse.org/emf/2002/Ecore\",\n \"@name\": \"defaultPackage\",\n \"@nsURI\": \"http://default/uri/to/change\",\n \"@nsPrefix\": \"default.namespace.to.change\",\n \"eClassifiers\": [\n {\n \"@xsi:type\": \"ecore:EClass\",\n \"@name\": \"Aircraft\",\n \"@interface\": \"false\",\n \"@abstract\": \"true\",\n \"eStructuralFeatures\": [\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble\",\n \"@name\": \"maxAltitude\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n },\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EShort\",\n \"@name\": \"seats\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n },\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString\",\n \"@name\": \"model\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n },\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble\",\n \"@name\": \"height\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n },\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble\",\n \"@name\": \"length\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n },\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble\",\n \"@name\": \"wings\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n }\n ],\n \"eOperations\": []\n },\n {\n \"@xsi:type\": \"ecore:EClass\",\n \"@name\": \"Motorized\",\n \"@interface\": \"false\",\n \"@abstract\": \"false\",\n \"@eSuperTypes\": \"#//Aircraft\",\n \"eStructuralFeatures\": [\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble\",\n \"@name\": \"tankCapacity\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n }\n ],\n \"eOperations\": []\n },\n {\n \"@xsi:type\": \"ecore:EClass\",\n \"@name\": \"Hangar\",\n \"@interface\": \"false\",\n \"@abstract\": \"false\",\n \"eStructuralFeatures\": [\n {\n \"@xsi:type\": \"ecore:EReference\",\n \"@eType\": \"#//Aircraft\",\n \"@name\": \"aircrafts\",\n \"@lowerBound\": 0,\n \"@upperBound\": -1,\n \"@containment\": true\n }\n ],\n \"eOperations\": []\n },\n {\n \"@xsi:type\": \"ecore:EClass\",\n \"@name\": \"GraphRuler\",\n \"@interface\": \"false\",\n \"@abstract\": \"false\",\n \"eStructuralFeatures\": [],\n \"eOperations\": []\n },\n {\n \"@xsi:type\": \"ecore:EClass\",\n \"@name\": \"Glider\",\n \"@interface\": \"false\",\n \"@abstract\": \"false\",\n \"@eSuperTypes\": \"#//Aircraft\",\n \"eStructuralFeatures\": [\n {\n \"@xsi:type\": \"ecore:EAttribute\",\n \"@eType\": \"ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble\",\n \"@name\": \"emptyWeight\",\n \"@lowerBound\": \"0\",\n \"@upperBound\": \"1\"\n }\n ],\n \"eOperations\": []\n }\n ]\n }\n ]\n}";
                savem2.view = "[{\"targetStr\":\"[1]\",\"htmlo\":null,\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":null,\"edgeViews\":[],\"isDefault\":false,\"id\":0,\"isApplied\":true,\"runtimeorder\":2,\"scroll\":{\"x\":0,\"y\":0},\"zoom\":{\"x\":1,\"y\":1},\"grid\":{\"x\":20,\"y\":20},\"views\":[],\"defaultStyleMap\":{},\"name\":\"ViewPoint 1\"}]";
                savem2.vertexpos = "{\"[1,0,0]\":{\"x\":460,\"y\":280,\"w\":201,\"h\":218},\"[1,0,1]\":{\"x\":780,\"y\":280,\"w\":201,\"h\":88},\"[1,0,2]\":{\"x\":180,\"y\":340,\"w\":201,\"h\":88},\"[1,0,3]\":{\"x\":-320,\"y\":1280,\"w\":201,\"h\":75},\"[1,0,4]\":{\"x\":780,\"y\":420,\"w\":201,\"h\":88}}";
                savem1.model = "{\n \"default.namespace.to.change:Hangar\": {\n \"@xmlns:xmi\": \"http://www.omg.org/XMI\",\n \"@xmlns:default.namespace.to.change\": \"http://default/uri/to/change\",\n \"@xmi:version\": \"2.0\",\n \"aircrafts\": [\n {\n \"@wings\": 25.55,\n \"@length\": 10.16,\n \"@height\": 2.21,\n \"@model\": \"Perlan2\",\n \"@seats\": 0,\n \"@maxAltitude\": 23197.110508118236,\n \"@emptyWeight\": 390\n },\n {\n \"@wings\": 59.6,\n \"@length\": 70.6,\n \"@height\": 19.3,\n \"@model\": \"Boeing747-100\",\n \"@seats\": 366,\n \"@maxAltitude\": 13700,\n \"@tankCapacity\": 183380\n },\n {\n \"@wings\": 34.1,\n \"@length\": 37.57,\n \"@height\": 12,\n \"@model\": \"AirbusA320\",\n \"@seats\": 150,\n \"@maxAltitude\": 11900,\n \"@tankCapacity\": 27200\n }\n ]\n }\n}";
                savem1.view = "[{\"targetStr\":\"[0]\",\"htmlo\":null,\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":null,\"edgeViews\":[],\"isDefault\":false,\"id\":33,\"isApplied\":true,\"runtimeorder\":12,\"scroll\":{\"x\":0,\"y\":0},\"zoom\":{\"x\":1,\"y\":1},\"grid\":{\"x\":20,\"y\":20},\"views\":[{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.4.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"display: flex; height:100%; width:100%; border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,0]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-otv-c6=\\\"\\\" class=\\\"Vertex invisibleNode\\\" height=\\\"40\\\" keep-edges=\\\"false\\\" overflow=\\\"hidden\\\" show-in-ext-edges=\\\"false\\\" show-in-oth-edges=\\\"false\\\" show-in-rel-edges=\\\"false\\\" show-out-ext-edges=\\\"false\\\" show-out-oth-edges=\\\"false\\\" show-out-rel-edges=\\\"false\\\" style=\\\"display:none\\\" width=\\\"200\\\" x=\\\"0\\\" y=\\\"0\\\"><div _ngcontent-otv-c6=\\\"\\\" style=\\\"height:auto;\\\"></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":360,\"y\":-180,\"w\":200,\"h\":62},\"edgeViews\":[],\"isDefault\":false,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**((this.vertexSize.h-38)/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft{ display: none; flex-basis: 0; flex-grow:1; width:100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing{ display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus{ display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] .aircraft.perlan{ display: flex; } </style> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**((this.vertexSize.h-38)/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft{ display: none; flex-basis: 0; flex-grow:1; width:100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing{ display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus{ display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] .aircraft.perlan{ display: flex; } </style> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**((this.vertexSize.h-38)/30))\\\" varh=\\\"\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" constraintflight=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingmusthfly=\\\"\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" whiledraggingpassengers=\\\"\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" constraintpassengers=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').values[0]\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column; position: relative;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: none; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> <div class=\\\"aircraft oil onRefresh measurable\\\" src=\\\"https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png\\\" style=\\\"pointer-events: all; position: absolute;\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _whileresizingtank=\\\"true≔-> _vartank\\\" _dstyle1=\\\"≔&quot;left:&quot;+this.vertexSize.w+&quot;px; height:&quot; + this.model.getChildren('tankCapacity').getValue()**0.5/5+&quot;px;&quot;t\\\" _vartank=\\\"≔this.model.getChildren('tankCapacity').setValues(((this.unsafe.node.offsetWidth/5*3)**2).toFixed(2))\\\" dstyle1=\\\"\\\"> </div></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column; position: relative;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-220,\"w\":200.68970981984646,\"h\":222},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2);\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"}],\"defaultStyleMap\":{\"class\":{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2);\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Aircraft\"}},\"name\":\"Aircraft\"},{\"targetStr\":\"[0]\",\"htmlo\":null,\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":null,\"edgeViews\":[],\"isDefault\":false,\"id\":1,\"isApplied\":true,\"runtimeorder\":10,\"scroll\":{\"x\":0,\"y\":0},\"zoom\":{\"x\":1,\"y\":1},\"grid\":{\"x\":20,\"y\":20},\"views\":[{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(+this.vertexSize.x)\\\" varseats_x=\\\"\\\" _varyaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((this.vertexSize.y/50+16)^(10/3))\\\" varyaltitude_y=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"/*pointer-events: none; flex-basis:0;*/ background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.4.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem; border-bottom: 0.5px solid rgba(119, 119, 119, 0.467);\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"pointer-events: none; background:var(--color-1); display: flex; height:100%; width:100%; box-shadow: 0 0 3pt 0.5pt var(--color-3); border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**(this.vertexSize.h/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\" style=\\\"display: flex; height:100%; width:100%; border-radius: 7px;\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,0]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-otv-c6=\\\"\\\" class=\\\"Vertex invisibleNode\\\" height=\\\"40\\\" keep-edges=\\\"false\\\" overflow=\\\"hidden\\\" show-in-ext-edges=\\\"false\\\" show-in-oth-edges=\\\"false\\\" show-in-rel-edges=\\\"false\\\" show-out-ext-edges=\\\"false\\\" show-out-oth-edges=\\\"false\\\" show-out-rel-edges=\\\"false\\\" style=\\\"display:none\\\" width=\\\"200\\\" x=\\\"0\\\" y=\\\"0\\\"><div _ngcontent-otv-c6=\\\"\\\" style=\\\"height:auto;\\\"></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":360,\"y\":-180,\"w\":200,\"h\":62},\"edgeViews\":[],\"isDefault\":false,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**((this.vertexSize.h-38)/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft{ display: none; flex-basis: 0; flex-grow:1; width:100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing{ display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus{ display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] .aircraft.perlan{ display: flex; } </style> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**((this.vertexSize.h-38)/30))\\\" varh=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"pointer-events:none; height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft{ display: none; flex-basis: 0; flex-grow:1; width:100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing{ display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus{ display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan{ display: none; } [aircraft_example] .aircraft.perlan{ display: flex; } </style> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-mrc-c7=\\\"\\\" aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" width=\\\"300\\\" x=\\\"50\\\" y=\\\"50\\\" _jquidraaxis=\\\"x, y\\\" jquidraaxis=\\\"\\\" constraint1=\\\"\\\" constraint2=\\\"\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.unsafec.model.getAttribute('height').values[0])\\\" constraintheight=\\\"\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.unsafec.model.getAttribute('width').values[0])\\\" constraintwidth=\\\"\\\" onrefresh1=\\\"\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" onrefreshwidth=\\\"\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" onrefreshheight=\\\"\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.unsafec.model.getAttribute('maxAltitude').values[0], 0.3) - 16)\\\" constrainty=\\\"\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.unsafec.model.getAttribute('seats').values[0]\\\" constraintx=\\\"\\\" onrefresh2=\\\"\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" onrefreshx=\\\"\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" onrefreshy=\\\"\\\" ondragend1=\\\"\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" ondragendx=\\\"\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" ondragendy=\\\"\\\" var1=\\\"\\\" _varseats_x=\\\"≔this.unsafec.model.getAttribute('seats').setValues(this.vertexSize.x/2)\\\" varseats_x=\\\"\\\" varyaltitude_y=\\\"\\\" _varaltitude_y=\\\"≔this.unsafec.model.getAttribute('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" varaltitude_y=\\\"\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _varw=\\\"≔this.unsafec.model.getAttribute('width').setValues(2**(this.vertexSize.w/30))\\\" varw=\\\"\\\" _varh=\\\"≔this.unsafec.model.getAttribute('height').setValues(2**((this.vertexSize.h-38)/30))\\\" varh=\\\"\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" constraintflight=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingmusthfly=\\\"\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" whiledraggingpassengers=\\\"\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" constraintpassengers=\\\"\\\"><div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\" class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span _ngcontent-mrc-c7=\\\"\\\" _ngcontent-fmh-c7=\\\"\\\">...</span></div> </div> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img _ngcontent-mrc-c7=\\\"\\\" class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').values[0]\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _constraintheight=\\\"vertexSize.h≔=≔38+30*Math.log2(+this.model.getChildren('height').getValue())\\\" _constraintwidth=\\\"vertexSize.w≔=≔30*Math.log2(+this.model.getChildren('width').getValue())\\\" _onrefreshwidth=\\\"true≔-> _constraintwidth\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('width').setValues(2**(this.vertexSize.w/30))\\\" _varh=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/30))\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" constraintheight=\\\"\\\" constraintwidth=\\\"\\\" onrefreshwidth=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varh=\\\"\\\" constraintflight=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .aircraft { pointer-events:none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\">$##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"> <span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column; position: relative;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: none; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> <div class=\\\"aircraft oil onRefresh measurable\\\" src=\\\"https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png\\\" style=\\\"pointer-events: all; position: absolute;\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _whileresizingtank=\\\"true≔-> _vartank\\\" _dstyle1=\\\"≔&quot;left:&quot;+this.vertexSize.w+&quot;px; height:&quot; + this.model.getChildren('tankCapacity').getValue()**0.5/5+&quot;px;&quot;t\\\" _vartank=\\\"≔this.model.getChildren('tankCapacity').setValues(((this.unsafe.node.offsetWidth/5*3)**2).toFixed(2))\\\" dstyle1=\\\"\\\"> </div></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column; position: relative;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-220,\"w\":200.68970981984646,\"h\":222},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2);\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> </div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-220,\"w\":200.68970981984646,\"h\":222},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column; position: relative;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> <div class=\\\"aircraft oil onRefresh measurable\\\" src=\\\"https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png\\\" style=\\\"pointer-events: all; position: absolute;\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _whileresizingtank=\\\"true≔-> _vartank\\\" _dstyle1=\\\"≔&quot;left:&quot;+this.vertexSize.w+&quot;px; height:&quot; + this.model.getChildren('tankCapacity').getValue()**0.5/5+&quot;px;&quot;t\\\" _vartank=\\\"≔this.model.getChildren('tankCapacity').setValues(((this.unsafe.node.offsetWidth/5*3)**2).toFixed(2))\\\" dstyle1=\\\"\\\"> </div></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":null,\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,0]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject _ngcontent-qht-c6=\\\"\\\" class=\\\"Vertex invisibleNode\\\" height=\\\"40\\\" keep-edges=\\\"false\\\" overflow=\\\"hidden\\\" show-in-ext-edges=\\\"false\\\" show-in-oth-edges=\\\"false\\\" show-in-rel-edges=\\\"false\\\" show-out-ext-edges=\\\"false\\\" show-out-oth-edges=\\\"false\\\" show-out-rel-edges=\\\"false\\\" style=\\\"display:none\\\" width=\\\"200\\\" x=\\\"0\\\" y=\\\"0\\\"><div _ngcontent-qht-c6=\\\"\\\" style=\\\"height:auto;\\\"></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":null,\"edgeViews\":[],\"isDefault\":false,\"viewpointstr\":\"Oil_Tank\"},{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column; position: relative;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> <div class=\\\"aircraft oil onRefresh measurable\\\" src=\\\"https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png\\\" style=\\\"pointer-events: all; position: absolute;\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _whileresizingtank=\\\"true≔-> _vartank\\\" _dstyle1=\\\"≔&quot;left:&quot;+this.vertexSize.w+&quot;px; height:&quot; + this.model.getChildren('tankCapacity').getValue()**0.5/5+&quot;px;&quot;t\\\" _vartank=\\\"≔this.model.getChildren('tankCapacity').setValues(((this.unsafe.node.offsetWidth/5*3)**2).toFixed(2))\\\" dstyle1=\\\"\\\"> </div></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"}],\"defaultStyleMap\":{\"class\":{\"targetStr\":\"[0,0,1]\",\"htmlo\":{\"featuredependency\":[],\"allowedOnClass\":false,\"allowedOnAttribute\":false,\"allowedOnReference\":false,\"allowedOnOperation\":false,\"allowedOnParameter\":false,\"AllowedOnM1\":false,\"AllowedOnM2\":false,\"htmlstr\":\"<foreignobject aircraft_example=\\\"\\\" class=\\\"Vertex Class onRefresh measurable\\\" hover-base=\\\"v1\\\" style=\\\"cursor: pointer; color: var(--color-2); position: absolute;\\\" tabindex=\\\"-1\\\" _onrefreshratio=\\\"true≔-> _varheightratio\\\" _onrefreshtank=\\\"true≔-> _exporttank\\\" _onrefreshx=\\\"true≔-> _constraintx\\\" _onrefreshy=\\\"true≔-> _constrainty\\\" _ondragendx=\\\"true≔-> _varseats_x\\\" _ondragendy=\\\"true≔-> _varaltitude_y\\\" _onrefreshlength=\\\"true≔-> _constraintlength\\\" _onrefreshheight=\\\"true≔-> _constraintheight\\\" _constrainty=\\\"vertexSize.y≔=≔-50*(Math.pow(+this.model.getChildren('maxAltitude').getValue(), 0.3) - 16)\\\" _whiledragging1=\\\"true≔-> _constraintpassengers\\\" _whiledraggingpassengers=\\\"true≔-> _constraintflight\\\" _varheightratio=\\\"this.model.getChildren('height').getValue()/this.model.getChildren('length').getValue()\\\" _varseats_x=\\\"≔this.model.getChildren('seats').setValues(this.vertexSize.x/2)\\\" _varaltitude_y=\\\"≔this.model.getChildren('maxAltitude').setValues((-this.vertexSize.y/50+16)**(10/3))\\\" _varw=\\\"≔this.model.getChildren('length').setValues(2**(this.vertexSize.w/60))\\\" _varhold=\\\"≔this.model.getChildren('height').setValues(2**((this.vertexSize.h-38)/60))\\\" _varh=\\\"≔this.model.getChildren('height').setValue(this.model.getChildren('length').getValue()/this.vertexSize.w * (this.vertexSize.h - 38))\\\" _constraintheight=\\\"vertexSize.h≔=≔ 38 + this.vertexSize.w * this.a.varheightratio\\\" _constraintlength=\\\"vertexSize.w≔=≔60*Math.log2(+this.model.getChildren('length').getValue())\\\" _constraintx=\\\"vertexSize.x≔=≔2 * this.model.getChildren('seats').getValue()\\\" _constraintpassengers=\\\"vertexSize.x≔>=≔0\\\" _constraintflight=\\\"vertexSize.y≔<=≔750\\\" _exporttank=\\\"#ID$##id$ .oil -> style≔'width:'+(this.model.getChildren('tankCapacity').getValue()**0.5*3/5)+'px'\\\" _jquireshandles=\\\"se\\\" _jquidraaxis=\\\"x, y\\\" onrefreshratio=\\\"\\\" onrefreshtank=\\\"\\\" onrefreshx=\\\"\\\" onrefreshy=\\\"\\\" ondragendx=\\\"\\\" ondragendy=\\\"\\\" onrefreshlength=\\\"\\\" onrefreshheight=\\\"\\\" constrainty=\\\"\\\" whiledragging1=\\\"\\\" whiledraggingpassengers=\\\"\\\" varheightratio=\\\"\\\" varseats_x=\\\"\\\" varaltitude_y=\\\"\\\" varw=\\\"\\\" varhold=\\\"\\\" varh=\\\"\\\" constraintheight=\\\"\\\" constraintlength=\\\"\\\" constraintx=\\\"\\\" constraintpassengers=\\\"\\\" constraintflight=\\\"\\\" exporttank=\\\"\\\" jquireshandles=\\\"\\\" jquidraaxis=\\\"\\\"><div class=\\\"Class\\\" data-autosizex=\\\"false\\\" data-autosizey=\\\"false\\\" type=\\\"$##attributes.3.values.0$\\\" metaclass=\\\"$##metaParent.name$\\\" style=\\\"height: 100%; width: 100%; display: inline-flex; flex-flow: column; position: relative;\\\"> <style> [aircraft_example] .ui-wrapper, [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { pointer-events: all; top: 100% !important; min-height: 50px !important; max-height: 50px !important; } [aircraft_example] .aircraft { pointer-events: none; display: none; flex-basis: 0; flex-grow: 1; width: 100%; border-radius: 7px; } [aircraft_example] [metaclass=\\\"Motorized\\\"] .oil { display: block; position: absolute; background-image: url('https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png'); background-size: auto 100%; background-repeat: repeat-x; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.boeing { display: flex; } [aircraft_example] [type*=\\\"boeing\\\"] > .aircraft.perlan { display: none; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.airbus { display: flex; } [aircraft_example] [type*=\\\"airbus\\\"] > .aircraft.perlan { display: none; } [aircraft_example] .aircraft.perlan { display: flex; } </style> <div class=\\\"VertexHeader\\\" style=\\\"pointer-events:all; top: -35px; text-align: center; display: flex; padding: 8px 0px; width: min-content; min-width: 100%; font-size: 1rem;\\\"> <input pattern=\\\"[a-zA-Z_\\\\u0024][a-zA-Z\\\\d_\\\\u0024]*\\\" placeholder=\\\"Object name\\\" style=\\\"display:none; background:transparent; border:none; text-align:right; order:1; flex-basis: 50%; min-width:10px;\\\" value=\\\"$##name$\\\"> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-2); margin:auto;\\\"> $##attributes.3.values.0$:&nbsp; </div> <div class=\\\"no-ov\\\" style=\\\"text-align: center; order:2; flex-grow:1; color:var(--color-4); margin:auto;\\\"> $##metaParent.name$ </div> <div class=\\\"hover-unfade open-options\\\" hover-display=\\\"v1\\\" style=\\\"top: 7px; right: 0; border-radius: 999px;\\\" tabindex=\\\"-1\\\"><span>...</span></div> </div> <img class=\\\"aircraft perlan\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/glider%20small.png\\\"> <img class=\\\"aircraft airbus\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/airbus.png\\\"> <img class=\\\"aircraft boeing\\\" src=\\\"https://raw.githubusercontent.com/DamianoNaraku/jodel-wiki/main/examples/boeing.png\\\"> <div class=\\\"aircraft oil onRefresh measurable\\\" src=\\\"https://www.clipartmax.com/png/full/439-4399413_oil-industry-icon-oil-barrel-icon-png.png\\\" style=\\\"pointer-events: all; position: absolute;\\\" _jquireshandles=\\\"se\\\" jquireshandles=\\\"\\\" _whileresizingtank=\\\"true≔-> _vartank\\\" _dstyle1=\\\"≔&quot;left:&quot;+this.vertexSize.w+&quot;px; height:&quot; + this.model.getChildren('tankCapacity').getValue()**0.5/5+&quot;px;&quot;t\\\" _vartank=\\\"≔this.model.getChildren('tankCapacity').setValues(((this.unsafe.node.offsetWidth/5*3)**2).toFixed(2))\\\" dstyle1=\\\"\\\"> </div></div></foreignobject>\"},\"htmli\":null,\"displayAsEdge\":false,\"vertexSize\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"edgeViews\":[],\"isDefault\":true,\"viewpointstr\":\"Oil_Tank\"}},\"name\":\"Oil_Tank\"}]";
                savem1.vertexpos = "{\"[0,0,0]\":{\"x\":360,\"y\":-180,\"w\":200,\"h\":62},\"[0,0,1]\":{\"x\":0,\"y\":-219.99999999999994,\"w\":200.68970981984646,\"h\":81.65396247065559},\"[0,0,2]\":{\"x\":732,\"y\":-70.9358637684195,\"w\":368.4957767030291,\"h\":138.73609759728703},\"[0,0,3]\":{\"x\":300,\"y\":-34.899291970099,\"w\":313.8905526520228,\"h\":138.25782890136475}}";
                break;
            default: break;
        }
        onModelsReceive(savem2, savem1);
    }
}
function onModelsReceive(savem2, savem1) {
    let useless;
    /*let MetaMetaModelStr = MetaMetaModel.emptyMetaMetaModel;
    let MetaModelinputStr = MetaModel.emptyModel;
    let ModelinputStr = Model.emptyModel;*/
    const validate = (thing, defaultvalue) => { return thing && thing !== '' && thing !== 'null' && thing !== 'undefined' ? thing : defaultvalue; };
    savem2.model = validate(savem2.model, _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"].emptyModel);
    savem1.model = validate(savem1.model, _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"].emptyModel);
    _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_9__["TopBar"].staticInit();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["WebsiteTheme"].setTheme();
    Status.status.mmm = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaMetaModel"](null);
    console.log('loading MM:', savem2);
    console.log('loading M:', savem1);
    try {
        Status.status.mm = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"](JSON.parse(savem2.model), Status.status.mmm);
    }
    catch (e) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw(true, 'Failed to load the metamodel.', { e, model: savem2.model });
        if (!Status.status.isProduction)
            throw e;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Type"].all = []; // reset invalid old parsed types, enums... they are no longer defined in the empty metamodel
        Status.status.mm = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"](JSON.parse(_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["MetaModel"].emptyModel), Status.status.mmm);
    }
    window['' + 'mm'] = Status.status.mm;
    // console.log('m3:', Status.status.mmm, 'm2:', Status.status.mm, 'm1:', Status.status.m); return;
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Type"].linkAll();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["M2Class"].updateSuperClasses();
    let m2classes = Status.status.mm.getAllClasses();
    // m2classes.forEach((classe: M2Class) => { classe.calculateShadowings(false); });
    try {
        Status.status.m = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"](JSON.parse(savem1.model), Status.status.mm);
    }
    catch (e) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw(true, 'Failed to load the model. Does it conform to the metamodel?', e);
        if (!Status.status.isProduction)
            throw e;
        Status.status.m = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"](JSON.parse(_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Model"].emptyModel), Status.status.mm);
    }
    window['' + 'm'] = Status.status.m;
    // console.log('m3:', Status.status.mmm, 'm2:', Status.status.mm, 'm1:', Status.status.m);
    // Status.status.m.LinkToMetaParent(Status.status.mm);
    Status.status.m.fixReferences(); // for non-containment references
    Status.status.loadedLogic = true;
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ISidebar"](Status.status.mmm, document.getElementById('metamodel_sidebar'));
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ISidebar"](Status.status.mm, document.getElementById('model_sidebar'));
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IGraph"](Status.status.mm, document.getElementById('metamodel_editor'));
    useless = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IGraph"](Status.status.m, document.getElementById('model_editor'));
    m2classes.forEach((classe) => { classe.checkViolations(false); });
    Status.status.mm.graph.setGrid(20, 20, true);
    Status.status.m.graph.setGrid(20, 20, true);
    Status.status.loadedGUI = true;
    Status.status.mm.calculateViolations();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IEdge"].all.forEach((e) => { e.refreshGui(); e.refreshGui(); });
    Status.status.mm.graph.propertyBar.show(Status.status.mm, null, null);
    Status.status.m.graph.propertyBar.show(Status.status.m, null, null);
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["PropertyBarr"].staticinit();
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["Type"].updateTypeSelectors(null, true, true, true);
    if (!savem2.vertexpos || !savem2.view) {
        const tmpp = Status.status.mm.storage.getViewPoints();
        savem2.view = savem2.view || tmpp.view;
        savem2.vertexpos = savem2.vertexpos || tmpp.vertexPos;
    }
    if (!savem1.vertexpos || !savem1.view) {
        const tmpp = Status.status.m.storage.getViewPoints();
        savem1.view = savem1.view || tmpp.view;
        savem1.vertexpos = savem1.vertexpos || tmpp.vertexPos;
    }
    savem2.view = validate(savem2.view, '[]');
    savem2.vertexpos = validate(savem2.vertexpos, '{}');
    savem1.view = validate(savem1.view, '[]');
    savem1.vertexpos = validate(savem1.vertexpos, '{}');
    let marr = [Status.status.mm, Status.status.m];
    let vpmatjson = [JSON.parse(savem2.view || '[]'), JSON.parse(savem1.view || '[]')];
    const vertexposMat = [JSON.parse(savem2.vertexpos), JSON.parse(savem1.vertexpos)];
    // console.log(vpmatjson, Status.status.mm.graph.viewPointShell);
    // return;
    let i, j;
    for (j = 0; j < vertexposMat.length; j++) {
        const vdic = vertexposMat[j];
        const m = marr[j];
        for (let key in vdic) {
            // console.log('key:', key, 'varr:', vdic);
            const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ModelPiece"].getByKeyStr(key);
            const size = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["GraphSize"]().clone(vdic[key]);
            if (!mp || !(mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IClassifier"])) {
                // U.cclear();
                _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].pw(true, 'invalid vertexposition save, failed to get classifier:', key, vdic);
                continue;
            }
            mp.getVertex().setSize(size);
        }
    }
    for (j = 0; j < vpmatjson.length; j++) {
        let vparr = vpmatjson[j];
        const m = marr[j];
        let v;
        vparr = vparr.sort(_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"].sortCriteria);
        for (i = 0; i < vparr.length; i++) {
            const jsonvp = vparr[i];
            // console.clear();
            // console.log('looping this:', jsonvp, ', vpmatjson:', vpmatjson);
            v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"](m);
            v.clone(jsonvp);
            v.updateTarget(m);
            v.runtimeorder = _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"].LAST_ORDER++;
            m.graph.viewPointShell.add(v, false); // [persistent isApplied] STEP 1: qui setto checked sulla gui in base al v.isApplied salvato.
            v.isApplied = false; // STEP 2: qui affermo che non è stato ancora applicato
        }
        if (vparr.length === 0) {
            v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ViewPoint"](m); // m.getPrefix() + '_VP autogenerated');
            v.isApplied = true;
            m.graph.viewPointShell.add(v, false); // [persistent isApplied] STEP 1: qui setto checked sulla gui in base al v.isApplied salvato.
            v.isApplied = false;
        }
        m.graph.viewPointShell.refreshApplied(); // STEP 3: qui vedo che non è stato applicato, ma è stato ordinato dalla gui di applicarlo -> lo applico.
    }
    // setTimeout( () => { Status.status.mm.graph.setGrid0(); Status.status.m.graph.setGrid0(); }, 1);
    // Imposto un autosave raramente (minuti) giusto nel caso di crash improvvisi o disconnessioni
    // per evitare di perdere oltre X minuti di lavoro.
    // In condizioni normali non è necessario perchè il salvataggio è effettuato al cambio di pagina asincronamente
    // e con consegna dei dati garantita dal browser anche a pagina chiusa (navigator.beacon)
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["IEdge"].all.forEach((e) => { e.refreshGui(); });
    _common_Joiner__WEBPACK_IMPORTED_MODULE_12__["ChangelogRoot"].CheckUpdates();
    fakemain();
    switch (_common_Joiner__WEBPACK_IMPORTED_MODULE_12__["U"].findGetParameter('example')) {
        default:
            break;
        case 'aircraft2021':
            console.error('aircraft example triggering vp', Status.status.m.graph.viewPointShell.checkboxes[0]);
            Status.status.m.graph.setUseGrid(false);
            Status.status.m.graph.setScroll(-72, -278);
            break;
    }
    // todo: migliora questo è un quick fix per gli archi che non caricano bene
    // todo fai un altro quickfix che forzi l'esecuzione degli onrefresh appena dopo che fai un cambio di viewpoint.
    /*$('.UtabHeaderContainer.main').on('click', () => {
      setTimeout(()=> {
        $(Status.status.m.graph.viewPointShell.checkboxes[0]).trigger('click');
        // setTimeout( ()=>Status.status.mm.refreshInstancesGUI(true), 200);
      }, 300);
    });*/
    return;
    Status.status.enableAutosave(2 * 60 * 1000);
    //Options.enableAutosave(2 * 60 * 1000);
    // Options.Load(Status.status);
}
function delayedMain() {
}
function fakemain() {
}
window['' + 'main'] = main0;
document.addEventListener('DOMContentLoaded', main0);


/***/ }),

/***/ "./src/app/color-scheme/color-scheme.component.css":
/*!*********************************************************!*\
  !*** ./src/app/color-scheme/color-scheme.component.css ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#colorSchemeEditorRoot th, #colorSchemeEditorRoot td{\r\n  vertical-align: middle;\r\n}\r\n#colorSchemeEditorRoot th{\r\n  text-align: center;\r\n}\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29sb3Itc2NoZW1lL2NvbG9yLXNjaGVtZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb2xvci1zY2hlbWUvY29sb3Itc2NoZW1lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY29sb3JTY2hlbWVFZGl0b3JSb290IHRoLCAjY29sb3JTY2hlbWVFZGl0b3JSb290IHRke1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuI2NvbG9yU2NoZW1lRWRpdG9yUm9vdCB0aHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiJdfQ== */");

/***/ }),

/***/ "./src/app/color-scheme/color-scheme.component.ts":
/*!********************************************************!*\
  !*** ./src/app/color-scheme/color-scheme.component.ts ***!
  \********************************************************/
/*! exports provided: ColorScheme2, ColorSchemeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorScheme2", function() { return ColorScheme2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorSchemeComponent", function() { return ColorSchemeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
var ColorSchemeComponent_1;



class ColorScheme2 {
    constructor(name, selector, colorPrefix, isActive, foreColors) {
        this.isActive = true;
        this.foreColors = [];
        this.name = name || 'cs-1';
        this.isActive = isActive;
        this.foreColors = foreColors || [];
        this.colorPrefix = colorPrefix || "color-";
        this.selector = selector || '';
        this.id = ColorScheme2.maxID++;
        this.autoGenerateSelector();
        ColorScheme2.all[this.id] = this;
    }
    static get(id) { return ColorScheme2.all[id]; }
    static getAll() { return Object.values(ColorScheme2.all); }
    static duplicate(other) {
        const ret = new ColorScheme2(null, null, null, null, null);
        ret.clone(other);
        return ret;
    }
    // warning: deve generare qualcosa di indipendente dagli altri dati, altrimenti se l'utente cambia gli altri dati si rompono i selettori auto-gestiti tramite la gui del dropdown
    autoGenerateSelector() { return this.autoselector = 'g.VertexRoot [color-scheme*="CS-' + this.id + '|"]'; } // '[color-scheme*="' + this.validateStringForCssVarName(this.name) + '"]'; }
    clone(json) {
        let oldid = this.id;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneProperties(this, json);
        this.autoGenerateSelector();
        ColorScheme2.maxID = Math.max(ColorScheme2.maxID, this.id + 1);
        ColorScheme2.all[oldid] = null;
        ColorScheme2.all[this.id] = this;
        return this;
    }
    static staticinit() {
        const str = localStorage.getItem(ColorScheme2.storageKey) || '[]';
        const arr = (JSON.parse(str) || []).map(e => ColorScheme2.duplicate(e));
        ColorScheme2.maxID = arr.length ? Math.max(...(arr.map((e, i) => { return e.id; }))) + 1 : 0;
        return []; // arr; todo: rimetti array vero
    }
    static loadDefault() {
        let i = 0;
        const ret = [
            //   --color-1: '#f5f5f5', '#f0f0f0', '#3c3c44', '#2e2f34';
            //   --color-bg-1: '#ffffff', '#f0f0f0', '#2e2f34';
            new ColorScheme2('main theme Light', 'body', 'color-', true, ['#f5f5f5', '#3c3c44', '#2e2f34', '#1E90FF']),
            // background was: ['#ffffff', '#f0f0f0', '#2e2f34']
            new ColorScheme2('main theme Light bg', 'body', 'color-bg-', true, ['#f4f4f4', '#e0e0e0', '#2e2f34']),
            new ColorScheme2('main theme Dark', 'body', 'color-', false, ['#3c3c44', '#b2b2ba', '#f0f0f0', '#1E90FF']),
            new ColorScheme2('main theme Dark bg', 'body', 'color-bg-', false, ['#1a1a1c', '#2e2f34', '#44444c']),
            new ColorScheme2('Vertex', 'g.VertexRoot', null, true, ['#ffffff', '#000000', '#000000', '#1E90FF']),
            new ColorScheme2('Feature', '.graph .Feature', 'color-f-', true, ['#ff8c00', '#28a745', '#d3d3d3']),
            // examples
            new ColorScheme2('cs-' + i++, null, null, true, ['#ffffff', '#364f6b', '#3fc1c9', '#f5f5f5', '#fc5185']),
            new ColorScheme2('cs-' + i++, null, null, true, ['#ffffff', '#f9a828', '#ececeb', '#07617d', '#2e383f']),
            new ColorScheme2('cs-' + i++, null, null, true, ['#ffffff', '#fa4659', '#effe40', '#a33e83', '#2eb872']),
            new ColorScheme2('cs-' + i++, null, null, true, ['#ffffff', '#BE64FA', '#8459DE', '#5975DE', '#64ACFA']),
        ];
        return ret;
    }
    validateStringForCssVarName(name) {
        name = name.trim().replace(/\s/gi, '-');
        name = name.replace(/([^a-z0-9_\-]+)/gi, '');
        if (!name.length) {
            name = "color-scheme-1";
        }
        else if (!name.match(/^[a-zA-Z_]/)) {
            name += "_";
        }
        return name;
    }
    getFullSelector(joinStr = ', ') {
        if (!this.selector)
            return this.autoselector;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(this.autoselector, '"', "'") === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(this.selector, '"', "'"))
            return this.selector;
        return this.selector + joinStr + this.autoselector;
    }
}
ColorScheme2.all = {};
ColorScheme2.maxID = 1;
ColorScheme2.storageKey = 'jodelColorSchemes';
let ColorSchemeComponent = ColorSchemeComponent_1 = class ColorSchemeComponent {
    constructor() {
        this.colorSchemes = [];
    }
    ngOnDestroy() {
        localStorage.setItem(ColorScheme2.storageKey, JSON.stringify(this.colorSchemes));
    }
    ngOnInit() {
        ColorSchemeComponent_1.cs = this;
        this.temporaryInvisible = false;
        this.colorSchemes = ColorScheme2.staticinit();
        if (this.colorSchemes.length === 0) {
            this.colorSchemes = ColorScheme2.loadDefault();
        }
        // this.display = 'none';
        ColorSchemeComponent_1.$html = $('app-color-scheme > #colorSchemeEditorRoot');
        ColorSchemeComponent_1.$styleNode = $('style#colorSchemeStyle');
        ColorSchemeComponent_1.styleNode = ColorSchemeComponent_1.$styleNode[0];
        this.updateCss();
        ColorSchemeComponent_1.show();
    }
    toggleArchived(cs) {
        cs.isActive = !cs.isActive;
        this.enableOmonyms(cs);
        this.updateCss();
    }
    enableOmonyms(master) {
        let csarr = [...this.colorSchemes]; // must clone array, altrimenti updateOrder rompe l'iterazione forEach
        csarr.forEach((cs) => {
            if (cs.name.indexOf(master.name) !== 0)
                return;
            cs.isActive = master.isActive;
            this.updateOrder(cs);
        });
    }
    updateOrder(cs) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(this.colorSchemes, cs);
        let lastActiveIndex = this.colorSchemes.length;
        while (--lastActiveIndex) {
            if (this.colorSchemes[lastActiveIndex].isActive)
                break;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].insertAt(this.colorSchemes, lastActiveIndex + 1, cs);
    }
    /*
    disable(cs: ColorScheme2): void {
      U.arrayRemoveAll(this.colorSchemes, cs);
      let lastActiveIndex = this.colorSchemes.length;
      while (--lastActiveIndex) {
        if (this.colorSchemes[lastActiveIndex].isActive) break;
      }
      U.insertAt(this.colorSchemes, lastActiveIndex, cs);
    }*/
    removeColor($event, cs, arr) {
        if (arr.length)
            arr.length = arr.length - 1;
        this.updateCss();
    }
    changeColor($event, cs, arr, index) {
        const input = $event.target;
        arr[index] = input.value;
        this.updateCss();
    }
    addColor($event, cs, arr) {
        const debug = false;
        debug && console.log('addColor(', $event, cs, arr);
        const objarr = arr.map((e, i) => _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].HexToHexObj(e));
        const avg = { r: 0, g: 0, b: 0, a: 0 };
        let weights = [];
        let lastVal = 1; // 2^0
        const sum = Math.pow(2, objarr.length + 1) - 2; // perchè l'array parte da 2 invece che da 1
        for (let i = 0; i < objarr.length; i++) {
            weights.push((lastVal *= 2) / sum);
        }
        if (objarr.length % 2 == 1) {
            weights = weights.reverse();
        }
        debug && console.log('objarr:', objarr, weights, sum);
        const randomPart = 0.5;
        if (objarr) {
            for (let i = objarr.length; --i >= 0;) {
                const color = objarr[i];
                const randomWeight = randomPart * (2 * Math.random() - 1);
                debug && console.log('randomWeight', randomWeight);
                const weight = weights[i] * (1 + randomWeight);
                avg.a += color.a ? color.a * weight : 0;
                avg.r += color.r * weight;
                avg.g += color.g * weight;
                avg.b += color.b * weight;
                debug && console.log('objarr adding::', color, weight, { r: color.r * weight, g: color.g * weight, b: color.b * weight }, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneObj(avg));
            } /*
            avg.a /= objarr.length;
            avg.r /= objarr.length;
            avg.g /= objarr.length;
            avg.b /= objarr.length;*/
        }
        avg.a = Math.max(0, Math.min(255, avg.a));
        avg.r = Math.max(0, Math.min(255, avg.r));
        avg.g = Math.max(0, Math.min(255, avg.g));
        avg.b = Math.max(0, Math.min(255, avg.b));
        arr.push(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].colorObjToArgb(avg, '#', '').rgbhex);
        // this.colorSchemes = this.colorSchemes;// force trigger change?
        this.updateCss();
    }
    addCS() {
        const lastCS = this.colorSchemes[this.colorSchemes.length - 1];
        const newCS = new ColorScheme2(null, null, null, true, null);
        newCS.foreColors = lastCS.foreColors.map((e) => {
            const color = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].HexToHexObj(e);
            color.r = (color.r + 127) % 256;
            color.g = (color.g + 127) % 256;
            color.b = (color.b + 127) % 256;
            color.a = (color.a + 127) % 256 || null;
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].colorObjToArgb(color, '#', '').rgbhex;
        });
        const index = this.colorSchemes.push(newCS);
        this.changeName(null, newCS, newCS.name);
        newCS.selector = newCS.autoGenerateSelector();
        this.updateCss();
    }
    remove(cs) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(this.colorSchemes, cs);
        ColorScheme2.all[cs.id] = null;
        this.updateCss();
    }
    updateCss() {
        // const scope = "body"; // ".Vertex";
        let str = "";
        for (let i = 0; i < this.colorSchemes.length; i++) {
            let cs = this.colorSchemes[i];
            if (!cs.isActive)
                continue;
            let selector = cs.getFullSelector(',\n');
            str += selector + ' {'; // '[color-scheme="' + cs.name + '"] {\n';
            str += '        /***  ' + cs.name + "  ***/";
            for (let j = 0; j < cs.foreColors.length; j++) {
                const color = cs.foreColors[j];
                str += "\n    --" + cs.colorPrefix + (1 + j) + ": " + color + ";";
            }
            /*
            for (let j = 0; j < cs.backColors.length; j++) {
              const color = cs.backColors[j];
              str += "\n    back-color-" + j + ": " + color + ";";
            }*/
            str += "\n}\n\n";
        }
        // str += "body{ color: red !important; background-color: wheat !important;}"
        this.styleStr = str;
        ColorSchemeComponent_1.styleNode.innerHTML = this.styleStr;
    }
    move($event, cs, csindex, direction) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(this.colorSchemes, cs);
        if (csindex + direction === -1) {
            csindex = this.colorSchemes.length;
            direction = 0;
        }
        else if (csindex + direction === this.colorSchemes.length + 1) {
            csindex = 0;
            direction = 0;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].insertAt(this.colorSchemes, csindex + direction, cs);
        this.updateCss();
    }
    changeColorPrefix($event, cs) {
        const input = $event && $event.target;
        cs.colorPrefix = cs.validateStringForCssVarName(input.value);
        this.updateCss();
    }
    changeSelector($event, cs) {
        const input = $event && $event.target;
        input.value = cs.selector = input.value.trim();
        this.updateCss();
    }
    changeName($event, cs, namepar = null) {
        // let regenerateSelector: boolean = cs.name && cs.autoGenerateSelector() === cs.selector;
        const input = $event && $event.target;
        let name = (namepar || input.value).trim();
        if (!namepar && cs.name === name)
            return;
        const namearr = this.colorSchemes.map((e, i) => e.name);
        const names = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ArrayToMap(namearr);
        // console.log('name map', names, namearr, 'name:', name);
        while (names[name]) {
            name = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].increaseEndingNumber(name);
        }
        input.value = cs.name = name;
        // regenerateSelector = true;
        // if (regenerateSelector) cs.selector = cs.autoGenerateSelector();
        this.updateCss();
    }
    hide() {
        ColorSchemeComponent_1.$html.hide();
        // this.display = 'none';
        //console.log("cs.hide()");
    }
    /*
      show(): void {
        this.display = 'flex'; }*/
    static show() {
        // NB: il codice eseguito fuori da questo componente, o dentro componenti che NON hanno @ViewChild non viene osservato per cambiamenti,
        // se modifico le variabili esternamente la grafica non viene aggiornata.
        // quindi modifico direttamente html invece delle variabili
        // console.log("cs.show()");
        ColorSchemeComponent_1.$html.show();
    }
    invisible() {
        this.temporaryInvisible = true;
    }
    visible() {
        this.temporaryInvisible = false;
    }
    static getAllSelectors(excludeDisabled = true) {
        const ret = {};
        for (let cs of ColorSchemeComponent_1.cs.colorSchemes) {
            if (excludeDisabled && !cs.isActive)
                continue;
            const fullselector = cs.getFullSelector();
            if (!ret[fullselector])
                ret[fullselector] = [cs];
            else
                ret[fullselector].push(cs);
        }
        return ret;
    }
};
ColorSchemeComponent = ColorSchemeComponent_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-color-scheme',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./color-scheme.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/color-scheme/color-scheme.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./color-scheme.component.css */ "./src/app/color-scheme/color-scheme.component.css")).default]
    })
], ColorSchemeComponent);



/***/ }),

/***/ "./src/app/measurabletemplate/measurabletemplate.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/measurabletemplate/measurabletemplate.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".labelmeasurable{\r\n  margin-left:auto;\r\n  margin-right:auto\r\n}\r\n\r\n.meas_acc0{\r\n  width: 100%;\r\n}\r\n\r\n.meas_acc0 .measurableSettingRoot{\r\n  width: 100%;\r\n  display: block;\r\n}\r\n\r\n.meas_acc0 .boxesroot {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n}\r\n\r\n.meas_acc0 .preleft, .meas_acc0 .postName {\r\n  border: none;\r\n  background: none;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto 0;\r\n  padding: 0;\r\n  color: inherit;\r\n  height: unset;\r\n}\r\n\r\n.meas_acc0 .preleft { margin-right: 5px; }\r\n\r\n.meas_acc0 .postName { margin-left: 5px; }\r\n\r\n.meas_acc0 .botmarg { margin-bottom: 5px; display: -webkit-box; display: flex; }\r\n\r\n.meas_acc0 .movementboxroot, .meas_acc0 .resizeboxroot {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n}\r\n\r\n.meas_acc0 .columncontainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: row;\r\n  flex-wrap: nowrap;\r\n}\r\n\r\n.meas_acc0 .rowcontainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  flex-wrap: nowrap;\r\n}\r\n\r\n.meas_acc0 .column, .meas_acc0 .row{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n}\r\n\r\n.meas_acc0 .row {\r\n  max-width: 100%;\r\n  margin-right: unset;\r\n  margin-left: unset; /* dumb _grid.scss fixer */\r\n}\r\n\r\n.meas_acc0 .break { flex-wrap: wrap; }\r\n\r\n.meas_acc0 .autobreak { flex-wrap: initial; }\r\n\r\n.meas_acc0 .fill { -webkit-box-flex: 1; flex-grow: 1; }\r\n\r\n.meas_acc0 .boxtitle { display: block; text-align: center; margin-bottom: 12px; }\r\n\r\n.meas_acc0 .side { display: -webkit-box; display: flex; }\r\n\r\n.meas_acc0 .side.left, .meas_acc0 .side.right { width: 10px; }\r\n\r\n.meas_acc0 .side.top, .meas_acc0 .side.bot { height: 10px; width: calc(100% - 20px); }\r\n\r\n.meas_acc0 .corner { display: -webkit-box; display: flex; width: 10px; height: 10px; }\r\n\r\n.meas_acc0 .middle { background-color: goldenrod; display: -webkit-box; display: flex; }\r\n\r\n.meas_acc0 .middle .middle { width: 120px; height: 90px; }\r\n\r\n.meas_acc0 .rectangledrawing.inner > .row > .side, .meas_acc0 .rectangledrawing.inner > .row > .corner {\r\n  background-color: black;\r\n}\r\n\r\n.meas_acc0 .boxroot {\r\n  display: block;\r\n  margin: auto;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.meas_acc0 .ruletitle{\r\n  display: block;\r\n  text-align: center;\r\n}\r\n\r\n.meas_acc0 button.ruledelete {\r\n  height: 100%;\r\n  width: 30px;\r\n  padding: 0;\r\n  margin-right: 5px;\r\n  border-radius: 25px 0 0 25px;\r\n}\r\n\r\n.meas_acc0 .compoundInputprefix {\r\n  max-width: 100%;\r\n  height: -webkit-fit-content;\r\n  height: -moz-fit-content;\r\n  height: fit-content;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  -webkit-box-flex: 0 !important;\r\n          flex-grow: 0 !important;\r\n  width: auto;\r\n  flex-basis: auto !important;\r\n  flex-shrink: 0 !important;\r\n}\r\n\r\n.meas_acc0 .operator.trigger {\r\n  -webkit-box-ordinal-group: 3;\r\n          order: 2;\r\n  margin: auto 0;\r\n  margin-left: -4px;\r\n  padding: 0;\r\n  background: transparent;\r\n  color: inherit;\r\n  -moz-text-align-last: left;\r\n       text-align-last: left;\r\n}\r\n\r\n.meas_acc0 ._ondrag .operator.trigger{\r\n  width: 56px;\r\n}\r\n\r\n.meas_acc0 ._onresize .operator.trigger{\r\n  width: 64px;\r\n}\r\n\r\n.meas_acc0 ._onrotation .operator.trigger{\r\n  width: 77px;\r\n}\r\n\r\n.meas_acc0 .operator.trigger:focus{\r\n  outline: none;\r\n  box-shadow: none;\r\n  border: none;\r\n}\r\n\r\n.meas_acc0 .compoundInputprefix > input.attrname {\r\n  -webkit-box-ordinal-group: 4;\r\n          order: 3;\r\n  border-left: none;\r\n  padding-left: 0;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  min-width: 0;\r\n}\r\n\r\n.meas_acc0 .compoundInputprefix > * { border: none; }\r\n\r\n.meas_acc0 .compoundInputprefix > *:first-child {\r\n  margin-top: 1px;\r\n  padding-right: 0;\r\n  background-color: transparent;\r\n  width: -webkit-min-content;\r\n  width: -moz-min-content;\r\n  width: min-content;\r\n}\r\n\r\n.meas_acc0 .compoundInputprefix > input:focus { box-shadow: none; }\r\n\r\n.meas_acc0 .compoundInputprefix:focus-within {\r\n  border-color: #80bdff;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.meas_acc0 .rulecontainer > .rightx, .meas_acc0 .rulecontainer > .leftx { margin-bottom: 0 !important; }\r\n\r\n/* .meas_acc0 .rightx { min-width: 0; } */\r\n\r\n.meas_acc0 .rightx span.operator {\r\n  margin: auto;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  /*margin-top: 8px;*/\r\n}\r\n\r\n.meas_acc0 .rightx span.operator.apply {\r\n   margin-left: 0px;\r\n }\r\n\r\n.meas_acc0 .operatorcontainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.meas_acc0 select.operator {\r\n  width: 45px;\r\n  margin: auto 5px;\r\n  text-align: center;\r\n  -moz-text-align-last: center;\r\n       text-align-last: center;\r\n}\r\n\r\n.meas_acc0 .rightx .compoundInputprefix, .meas_acc0 .rightx input.rightside, .meas_acc0 input.leftside, .meas_acc0 .rightx > .target {\r\n  margin-bottom: 5px;\r\n  min-width: 120px;\r\n  flex-basis: 0;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n}\r\n\r\n.meas_acc0 .rulecontainer { margin-bottom: 1rem; }\r\n\r\n.meas_acc0 .rightx > .target { margin-bottom: 0; }\r\n\r\n.meas_acc0 .rightx > .measurabledebug { margin-top: 5px; }\r\n\r\n.meas_acc0 .attrname {\r\n  max-width: 200px !important; /* todo: remove when is autosizing */\r\n}\r\n\r\n.meas_acc0 .addrule {\r\n  float: right;\r\n  margin-top: -4px;\r\n  padding: 4px 10px;\r\n}\r\n\r\n.meas_acc0 .ruletitle {\r\n  padding-right: 4px;\r\n  margin-bottom: 5px;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  border: 2px solid transparent;\r\n  border-radius: 22.5px 0 0 22.5px;\r\n}\r\n\r\n.meas_acc0 .maintitle{\r\n  border-radius: 5px;\r\n}\r\n\r\n.meas_acc0 .ruletitle:hover{\r\n  border-color: gray;\r\n  background-color: rgba(127, 127, 127, 0.2); }\r\n\r\n.meas_acc0 .ruletitle:hover.ruletitle[counter]:not([counter=\"0\"]), .meas_acc0 .ruletitle[counter]:not([counter=\"0\"]):not(.collapsed),\r\n.meas_acc0 .maintitle:hover,  .meas_acc0 .maintitle:not(.collapsed){\r\n  border-color: var(--color-4);\r\n  background-color: rgba(30, 144, 255, 0.2); }\r\n\r\n::ng-deep .meas_acc0 .innertitle { margin: auto; }\r\n\r\n/* dynamically added*/\r\n\r\n.meas_acc0 .ruletitle.collapsed { -webkit-appearance: initial; }\r\n\r\n.meas_acc0 .ruletitle:hover { -webkit-appearance: button; text-decoration: none; color: var(--color-4); }\r\n\r\n.meas_acc0 .form-control > .form-control:not(:first-child){\r\n  border-top-left-radius: unset;\r\n  /* disable bootstrap rule*/\r\n}\r\n\r\n.meas_acc0 .measurableoutputtext:focus,\r\n.meas_acc0 .measurableerrortext:focus,\r\n.meas_acc0 .measurablewarningtext:focus{\r\n  /*outline: none;\r\n  box-shadow: none;*/\r\n}\r\n\r\n.meas_acc0 .measurableoktext{\r\n  margin-left: 5px;\r\n  color: var(--success);\r\n}\r\n\r\n.meas_acc0 .measurableerrortext{\r\n  margin-left: 5px;\r\n  color: var(--danger);\r\n}\r\n\r\n.meas_acc0 .measurablewarningtext{\r\n  margin-left: 5px;\r\n  color: var(--warning);\r\n}\r\n\r\n.meas_acc0 .measurableoutputtext{\r\n  margin-left: 5px;\r\n  color: var(--secondary);\r\n}\r\n\r\n.meas_acc0 .rulecontainer{ margin-bottom: 5px; }\r\n\r\n.meas_acc0 .measurabledebug { display: none; }\r\n\r\n.meas_acc0 .rightx:focus-within .measurabledebug{ display: -webkit-box; display: flex; }\r\n\r\n.meas_acc0 .measurabledebug .debugrows { display: none; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-flow: column; }\r\n\r\n.meas_acc0 .measurabledebug:focus-within .debugrows { display: -webkit-box; display: flex; }\r\n\r\n.meas_acc0 .countershell { float: right; }\r\n\r\n.meas_acc0 .rectangledrawing.outer > * {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n\r\n.meas_acc0 .rectangledrawing.outer > .row > *, .meas_acc0 .arrowh, .meas_acc0 .arrowv {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n\r\n.meas_acc0 .rectangledrawing.outer > .top > .left {\r\n  /*background-image: url(https://i.ibb.co/tqxXhk4/tl.png);*/\r\n  background-image: url(https://i.ibb.co/Zgvpywz/tll.png);\r\n}\r\n\r\n.meas_acc0 .rectangledrawing.outer > .top > .side.top {\r\n  background-image: url(https://i.ibb.co/M9fC7DP/t.png); }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .top > .right {\r\n  /*background-image: url(https://i.ibb.co/Pzsmjxf/tr.png);*/\r\n  background-image: url(https://i.ibb.co/SN2THLt/trl.png); }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\r\n  background-image: url(https://i.ibb.co/7jm9BBQ/l.png); }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\r\n  background-image: url(https://i.ibb.co/RYZnVN5/r.png); }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .bot > .left {\r\n  /*background-image: url(https://i.ibb.co/qrYWdpH/bl.png);*/\r\n  background-image: url(https://i.ibb.co/gDKFry5/bll.png); }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .bot > .side.bot {\r\n  background-image: url(https://i.ibb.co/cXc0nmS/b.png); }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .bot > .right {\r\n  /*background-image: url(https://i.ibb.co/K0pVVT7/br.png);*/\r\n  background-image: url(https://i.ibb.co/QpwRSsT/brl.png); }\r\n\r\n.meas_acc0 input.side.top {\r\n  margin-bottom: 3px;\r\n  margin-top: -3px; }\r\n\r\n.meas_acc0 input.side.bot {\r\n  margin-bottom: -3px;\r\n  margin-top: 3px; }\r\n\r\n.meas_acc0 input.side.left {\r\n  margin-right: 3px;\r\n  margin-left: -3px; }\r\n\r\n.meas_acc0 input.side.right {\r\n  margin-right: -3px;\r\n  margin-left: 3px; }\r\n\r\n.meas_acc0 .arrowh {\r\n  background-image: url(https://i.ibb.co/Zd3jtbc/lr.png); }\r\n\r\n.meas_acc0 .arrowv {\r\n  background-image: url(https://i.ibb.co/jHTtPDx/tb.png); }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .row > .corner {\r\n  height: 50px;\r\n  min-width: 50px;\r\n}\r\n\r\n.meas_acc0 .rectangledrawing.outer > .top > * {\r\n  height: 50px; }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .bot > * {\r\n  height: 50px; }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\r\n  height: auto;\r\n  width: 50px; }\r\n\r\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\r\n  height: auto;\r\n  width: 50px; }\r\n\r\n.meas_acc0 .arrow { -webkit-appearance: initial; }\r\n\r\n.meas_acc0 .arrowh, .meas_acc0 .arrowv{\r\n  width: 75px;\r\n  height: 75px; }\r\n\r\n.meas_acc0 .arrow:focus{ outline: none; }\r\n\r\n.meas_acc0 .arrow:checked{\r\n  -webkit-filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%);\r\n          filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%); }\r\n\r\n.meas_acc0 .directions {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: auto; }\r\n\r\n.meas_acc0 .directions > * { margin: auto; }\r\n\r\n.meas_acc0 .draggable.boxroot{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  /*height: 237px;*/\r\n}\r\n\r\n.meas_acc0 .collapse:not(.show) { display: none; }\r\n\r\n.meas_acc0 .rule.template { display: none !important; }\r\n\r\n.meas_acc0 .selected { background-color: #37ff66 !important; }\r\n\r\n.meas_acc .rulesearch:focus {\r\n  border: 1px solid var(--color-4);\r\n  box-shadow: 0 0 0 1px var(--color-4);\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/measurabletemplate/measurabletemplate.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/measurabletemplate/measurabletemplate.component.ts ***!
  \********************************************************************/
/*! exports provided: MeasurabletemplateComponent, MeasurableTemplateGenerator, Rotatableoptions, Resizableoptions, Draggableoptions, RotatableoptionsPH, ResizableoptionsPH, DraggableOptionsPH */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurabletemplateComponent", function() { return MeasurabletemplateComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableTemplateGenerator", function() { return MeasurableTemplateGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rotatableoptions", function() { return Rotatableoptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Resizableoptions", function() { return Resizableoptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Draggableoptions", function() { return Draggableoptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RotatableoptionsPH", function() { return RotatableoptionsPH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizableoptionsPH", function() { return ResizableoptionsPH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DraggableOptionsPH", function() { return DraggableOptionsPH; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



let MeasurabletemplateComponent = class MeasurabletemplateComponent {
    constructor() { }
    ngOnInit() {
    }
};
MeasurabletemplateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-measurabletemplate',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./measurabletemplate.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/measurabletemplate/measurabletemplate.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./measurabletemplate.component.css */ "./src/app/measurabletemplate/measurabletemplate.component.css")).default]
    })
], MeasurabletemplateComponent);

class MeasurableTemplateGenerator {
    static generateMeasurableTemplate() {
        if (MeasurableTemplateGenerator.output)
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml(MeasurableTemplateGenerator.output, true);
        const $root = $('#measurableTemplateGeneratorShell');
        class Tmp {
            constructor(prefix, name, preleft = null, haveleft = true, haveoperator = false, havetarget = true, leftph = null, rightph = null, nameph = null) {
                this.preleft = preleft;
                this.haveleft = haveleft;
                this.index = Tmp.maxindex++;
                this.name = name;
                this.prefix = prefix;
                this.nameph = nameph ? nameph : 'Name';
                this.leftph = leftph ? leftph : '#####';
                this.rightph = rightph ? rightph : 'Value';
                this.havetarget = havetarget;
                this.haveoperator = haveoperator === null ? false : haveoperator;
            }
        }
        Tmp.maxindex = 0;
        const arr = [];
        let prefix;
        let name;
        let preleft;
        let haveleft;
        let havetarget;
        let leftph;
        let rightph;
        let nameph;
        let haveoperator;
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRefresh;
        name = prefix.substr(1);
        preleft = 'if';
        haveleft = true;
        haveoperator = 'do';
        havetarget = true;
        nameph = null;
        leftph = 'condition';
        rightph = '[selector] [' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].AttributeSelectorOperator + '] rulename';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragStart;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeStart;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationStart;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileDragging;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileResizing;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileRotating;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragEnd;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeEnd;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationEnd;
        name = prefix.substr(1);
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].variable;
        name = 'Generic command / variable';
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = true;
        nameph = 'VarName';
        leftph = null;
        rightph = null;
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].export;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = true;
        haveoperator = '⇠';
        havetarget = true;
        nameph = null;
        leftph = 'selector++';
        rightph = 'String';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = true;
        haveoperator = true;
        havetarget = true;
        nameph = null;
        leftph = 'Size/Pos';
        rightph = null;
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].bind;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = false;
        nameph = null;
        leftph = null;
        rightph = 'ModelPiece.id';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].console;
        name = prefix.charAt(1).toUpperCase() + prefix.substr(2);
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = false;
        nameph = null;
        leftph = null;
        rightph = 'Console command';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].dynamicStyle;
        name = 'Dynamic Style';
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = true;
        nameph = null;
        leftph = null;
        rightph = 'Html style string';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].dynamicClass;
        name = 'Dynamic Class';
        rightph = '+classToAdd -classToRemove';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra;
        name = 'jQueryUI draggable options';
        preleft = null;
        haveleft = false;
        haveoperator = false;
        havetarget = false;
        nameph = 'ggable Option name';
        leftph = null;
        rightph = null;
        arr.push(new Tmp(prefix, name, null, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes;
        name = 'jQuery resizable options';
        nameph = 'izable Option name';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        prefix = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot;
        name = 'jQuery rotatable options';
        nameph = 'atable Option name';
        arr.push(new Tmp(prefix, name, preleft, haveleft, haveoperator, havetarget, leftph, rightph, nameph));
        // console.log('arr:', JSON.stringify(arr));
        let i;
        const template = $root.find('.rule.template')[0];
        const accordion = $root.find('.meas_acc')[0];
        let genericvarattrnameinput;
        let genericvarpattern = '^(?!ng';
        /*delete prefix;
        delete name;
        delete preleft;
        delete haveleft;
        delete havetarget;
        delete leftph;
        delete rightph;
        delete nameph;
        delete haveoperator;*/
        let debugrulecounter = 0;
        for (let k in _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]) {
            debugrulecounter++;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(arr.length !== debugrulecounter, 'missing ' + (debugrulecounter - (2 * 3) - arr.length) + ' rules:', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"], arr); // - on(dra, res, rot) + (start, end) = 3*2 casi esclusi
        for (i = 0; i < arr.length; i++) {
            const elem = arr[i];
            const nodee = template.cloneNode(true);
            nodee.setAttribute('class', 'panel ' + elem.prefix);
            nodee.setAttribute('prefix', elem.prefix);
            nodee.setAttribute('prefixlc', elem.prefix.toLowerCase());
            const $node = $(nodee);
            const title = $node.find('h7')[0];
            const prefix = $node.find('.compoundInputprefix > .prefix')[0];
            const attrname = $node.find('.compoundInputprefix > .attrname')[0];
            const preleft = $node.find('.preleft')[0];
            const leftside = $node.find('.leftside')[0];
            const operatorselect = $node.find('select.operator.relational')[0];
            const operatorselect2 = $node.find('select.operator.trigger')[0];
            const operatortext = $node.find('span.operator')[0];
            const opparent = operatorselect.parentElement;
            const rightside = $node.find('.rightside')[0];
            const target = $node.find('input.target')[0];
            if (elem.haveoperator === true) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatortext);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect2);
            }
            else if (elem.haveoperator === 'when') {
                // empty on purpose
            }
            else if (elem.haveoperator === elem.haveoperator + '') {
                operatortext.innerText = elem.haveoperator;
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect2);
            }
            else if (elem.haveoperator === false) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatortext);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect2);
            }
            if (elem.preleft) {
                preleft.innerText = elem.preleft;
            }
            else
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(preleft);
            attrname.placeholder = elem.nameph;
            nodee.classList.remove(arr[i].prefix);
            nodee.classList.add(arr[i].prefix);
            leftside.placeholder = elem.leftph;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator.length !== 1, 'se cambi il separatore da char a stringa devi aggiornare questo pattern');
            leftside.pattern = '[^' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + ']*';
            rightside.placeholder = elem.rightph;
            prefix.innerHTML = elem.prefix;
            attrname.innerHTML = elem.nameph;
            attrname.setAttribute('defaultvalue', '1');
            const triggerscommon = () => {
                operatortext.innerText = 'apply';
                operatortext.classList.add('apply');
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(operatorselect);
                const row = operatortext.parentElement.parentElement;
                const newrow = document.createElement('div');
                row.parentElement.insertBefore(newrow, row.nextElementSibling);
                newrow.classList.add('row', 'break');
                const splitindex = row.innerHTML.indexOf('<span class="eventsplitpoint');
                newrow.innerHTML = row.innerHTML.substring(splitindex);
                row.innerHTML = row.innerHTML.substring(0, splitindex);
            };
            if (arr[i].prefix !== '_')
                genericvarpattern += '|' + arr[i].prefix.substr(1);
            switch (arr[i].prefix) {
                default: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].variable:
                    genericvarattrnameinput = attrname;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRefresh:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragStart:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationStart:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeStart:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileRotating:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileResizing:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileDragging:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragEnd:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeEnd:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRotationEnd:
                    // U.remove(operatorselect2); triggerscommon();
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint:
                    leftside.setAttribute('list', 'measurableList' + arr[i].prefix);
                    leftside.dataset['target'] = arr[i].prefix;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra: //dynamicjquiplaceholder(attrname, Draggableoptions); break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes: //dynamicjquiplaceholder(attrname, Resizableoptions); break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot: //dynamicjquiplaceholder(attrname, Rotatableoptions); break;
                    attrname.setAttribute('list', 'measurableList' + arr[i].prefix);
                    attrname.dataset['target'] = arr[i].prefix;
                    attrname.setAttribute('defaultvalue', '');
                    break;
                /*
              case 'never again, was on (Drag, res, rot) + (start, doing, end)':
                prefix.innerText = '_ondrag';
                operatorselect2.children[0].children[0].innerHTML = 'Start';
                operatorselect2.children[0].children[1].innerHTML = 'ging';
                operatorselect2.children[0].children[2].innerHTML = 'End';
                triggerscommon();
                prefix.innerText = '_onresiz';
                operatorselect2.children[0].children[0].innerHTML = 'eStart';
                operatorselect2.children[0].children[1].innerHTML = 'ing';
                operatorselect2.children[0].children[2].innerHTML = 'eEnd';
                triggerscommon();
                prefix.innerText = '_onrotat';
                operatorselect2.children[0].children[0].innerHTML = 'ionStart';
                operatorselect2.children[0].children[1].innerHTML = 'ing';
                operatorselect2.children[0].children[2].innerHTML = 'ionEnd';
                triggerscommon();
                break;*/
            }
            if (!elem.haveleft) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(leftside);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(opparent);
            }
            if (!elem.havetarget) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(target);
            }
            title.dataset.target = ".meas_acc > .panel > ." + elem.prefix;
            title.innerHTML = '<span class="innertitle">' + elem.name + '&nbsp;(<span class="rulecounter">0</span>)</span><button class="addrule btn btn-sm btn-success">+</button><span class="countershell"></span>';
            $node.find('.rulecontainer')[0].classList.add(elem.prefix);
            accordion.appendChild(nodee);
        }
        genericvarattrnameinput.pattern = genericvarpattern + ')[\\S]+$';
        $root.find('.comment').remove();
        $root.find('.export').remove();
        $root.find('style').remove();
        $root.find('script').remove();
        $root.find('.rule.template').remove();
        let ret = MeasurableTemplateGenerator.output = $root[0];
        ret.classList.remove('template');
        ret.classList.add('oldMeasurablePlaceholder');
        ret.parentElement.removeChild(ret);
        ret.removeAttribute('id');
        MeasurableTemplateGenerator.makedatasetLists();
        return this.generateMeasurableTemplate();
    }
    static makedatasetLists() {
        const constraintOptions = {};
        let opt;
        let datalist;
        let key;
        let i;
        const constraintOptionsPH = {};
        for (key in _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ConstraintLeftAdmittedsStatic"]) {
            constraintOptions[_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ConstraintLeftAdmittedsStatic"][key]] = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ConstraintLeftAdmittedsStatic"][key];
            constraintOptionsPH[_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ConstraintLeftAdmittedsStatic"][key]] = 'Number';
        }
        MeasurableTemplateGenerator.constraintMap = constraintOptions;
        MeasurableTemplateGenerator.constraintPlaceholderMap = constraintOptionsPH;
        let datasets = [ResizableoptionsPH, DraggableOptionsPH, RotatableoptionsPH, constraintOptionsPH];
        let rulenames = [_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint];
        for (i = 0; i < datasets.length; i++) {
            datalist = document.createElement('datalist');
            document.body.appendChild(datalist);
            datalist.id = 'measurableList' + rulenames[i];
            // console.log('datasets:', datasets);
            for (key in datasets[i]) {
                opt = document.createElement('option');
                datalist.appendChild(opt);
                // opt.value = datasets[i][key];
                opt.value = key;
            }
        }
    }
}
MeasurableTemplateGenerator.output = null;
class Rotatableoptions {
}
Rotatableoptions.degrees = 'degrees';
// static radians: string = 'radians';
Rotatableoptions.handle = 'handle'; //  internamente richiede come parametro un $('imageselector')... crea un elemento con quell'immagine. e appendilo al vertice con display: none per evitare di ricrearne uno ogni volta che crei un vertice, almeno così viene anche cancellato assieme al vertice. prova se l'url netto va bene lo stesso in overloading
Rotatableoptions.handleOffsetX = 'handleOffsetX';
Rotatableoptions.handleOffsetY = 'handleOffsetY'; // internamente è: handleOffset: { top: 0, left: 0 }
Rotatableoptions.rotationCenterOffsetX = 'rotationCenterOffsetX';
Rotatableoptions.rotationCenterOffsetY = 'rotationCenterOffsetY';
// internamente è: rotationCenterOffset: { top: 0, left: 0 } from the center of the element
Rotatableoptions.step = 'step'; // internamente ha "snap = boolean" e step = number, setta anche snap = true se trovi step come attributo measur-rotatable.
Rotatableoptions.transforms = 'transforms'; // non chiaro neanche negli esempi demo. googla.
Rotatableoptions.wheelRotate = 'wheelRotate'; // NB: non previene lo scroll della pagina come azione default.
Rotatableoptions.onRotating = 'onRotating'; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.
Rotatableoptions.onRotationStart = 'onRotationStart'; // in realtà è "start"
Rotatableoptions.onRotationEnd = 'onRotationEnd'; // in realtà è "stop"
Rotatableoptions.disabled = 'disabled';
//if the placeholder value is a choice of literals, the first literal is the default value. UPPERCASED, CamelCased and (parenthesized) words are not literals. Those values are not dynamic and are evaluated only once.
class Resizableoptions {
}
Resizableoptions.alsoResize = 'alsoResize';
Resizableoptions.animate = 'animate';
Resizableoptions.animateDuration = 'animateDuration';
Resizableoptions.animateEasing = 'animateEasing';
Resizableoptions.aspectRatio = 'aspectRatio';
Resizableoptions.autoHide = 'autoHide';
Resizableoptions.cancel = 'cancel';
Resizableoptions.classes = 'classes';
Resizableoptions.containment = 'containment';
Resizableoptions.delay = 'delay';
Resizableoptions.distance = 'distance';
Resizableoptions.ghost = 'ghost';
Resizableoptions.grid = 'grid';
Resizableoptions.handles = 'handles';
Resizableoptions.helper = 'helper';
Resizableoptions.maxHeight = 'maxHeight';
Resizableoptions.maxWidth = 'maxWidth';
Resizableoptions.minHeight = 'minHeight';
Resizableoptions.minWidth = 'minWidth';
// Methods
// destroy()
Resizableoptions.disabled = 'disabled';
// static readonly enabled: string = 'enabled'; // $var.resizable('disable'); or .resizable( "enable" );
// instance(); only useful as return value on javascript
// .resizable('option',{key', 'optionname') return the current option or a key-value object with all options or .resizable('option', {key: value}) setta opzioni.
// .resizable('widget') return $(resizable element)
Resizableoptions.create = 'create'; // .resizable('create', functioncallback);
Resizableoptions.resizing = 'resizing';
Resizableoptions.resizeStart = 'resizeStart';
Resizableoptions.resizeStop = 'resizeStop';
class Draggableoptions {
}
Draggableoptions.addClasses = 'addClasses';
Draggableoptions.appendTo = 'appendTo';
Draggableoptions.axis = 'axis'; // actually "x, y" happens when you input "false"
Draggableoptions.cancel = 'cancel';
Draggableoptions.classes = 'classes';
Draggableoptions.connectToSortable = 'connectToSortable';
Draggableoptions.containment = 'containment';
Draggableoptions.cursor = 'cursor'; // todo: setta default: quadriarrow (crosshair?)
Draggableoptions.cursorAt = 'cursorAt';
Draggableoptions.delay = 'delay';
Draggableoptions.distance = 'distance';
//todo: permetti di fare cambiamenti a run-time usando: chain -> optional export (dinamically rcalculate and replace content of _jquiDrag* attributes), second chain -> point to _jquiDragRule and execute things like in the example "Get or set the grid option, after initialization: ..."
Draggableoptions.grid = 'grid';
Draggableoptions.handle = 'handle';
Draggableoptions.helper = 'helper';
Draggableoptions.iframeFix = 'iframeFix';
Draggableoptions.opacity = 'opacity';
Draggableoptions.refreshPositions = 'refreshPositions';
// todo: droppable
Draggableoptions.revert = 'revert';
Draggableoptions.revertDuration = 'revertDuration';
Draggableoptions.scope = 'scope';
Draggableoptions.scroll = 'scroll'; //todo: devi fare lo scroll quando trascini un vertice out of visible graph boundary.
Draggableoptions.scrollSensitivity = 'scrollSensitivity'; //Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.
Draggableoptions.scrollSpeed = 'scrollSpeed';
Draggableoptions.snap = 'snap';
Draggableoptions.snapMode = 'snapMode';
Draggableoptions.snapTolerance = 'snapTolerance';
Draggableoptions.stack = 'stack';
Draggableoptions.zIndex = 'zIndex';
// Methods
Draggableoptions.disabled = 'disabled';
// static readonly enabled: string = 'enabled'; //  actually it is: .droppable( "enable" / "disable")
Draggableoptions.dragging = 'dragging';
Draggableoptions.dragStart = 'dragStart';
Draggableoptions.dragStop = 'dragStop';
class RotatableoptionsPH {
}
RotatableoptionsPH.degrees = 'false | number';
RotatableoptionsPH.radians = 'false | number';
RotatableoptionsPH.handle = 'image url'; // internamente richiede come parametro un $('imageselector')... crea un elemento con quell'immagine. e appendilo al vertice con display: none per evitare di ricrearne uno ogni volta che crei un vertice, almeno così viene anche cancellato assieme al vertice. prova se l'url netto va bene lo stesso in overloading
RotatableoptionsPH.handleOffsetX = 'width / 2';
RotatableoptionsPH.handleOffsetY = '-20'; // internamente è: handleOffset: { top: 0, left: 0 }
RotatableoptionsPH.rotationCenterOffsetX = 'width / 2';
RotatableoptionsPH.rotationCenterOffsetY = 'height / 2';
// internamente è: rotationCenterOffset: { top: 0, left: 0 } from the center of the element
RotatableoptionsPH.step = 'degree'; // internamente ha "snap = boolean" e step = number, setta anche snap = true se trovi step come attributo measur-rotatable.
RotatableoptionsPH.transforms = 'null | {scaleY: 2}'; // non chiaro neanche negli esempi demo. googla.
RotatableoptionsPH.wheelRotate = 'false'; // NB: non previene lo scroll della pagina come azione default.
RotatableoptionsPH.onRotating = 'function(event, ui) { ... }'; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.
RotatableoptionsPH.onRotationStart = 'function(event, ui) { ... }'; // in realtà è "start"
RotatableoptionsPH.onRotationEnd = 'function(event, ui) { ... }'; // in realtà è "stop"
RotatableoptionsPH.disabled = 'false | true';
//if the placeholder value is a choice of literals, the first literal is the default value. UPPERCASED, CamelCased and (parenthesized) words are not literals. Those values are not dynamic and are evaluated only once.
class ResizableoptionsPH {
}
ResizableoptionsPH.alsoResize = 'Selector | Element | jQuery';
ResizableoptionsPH.animate = 'Boolean';
ResizableoptionsPH.animateDuration = 'slow | fast | msec number';
ResizableoptionsPH.animateEasing = 'swing | api.jqueryui.com/easings';
ResizableoptionsPH.aspectRatio = 'Boolean | Number';
ResizableoptionsPH.autoHide = 'Boolean';
ResizableoptionsPH.cancel = 'Selector';
ResizableoptionsPH.classes = 'Object (see jQUI website)';
ResizableoptionsPH.containment = 'Selector | Element | parent | document';
ResizableoptionsPH.delay = 'Number';
ResizableoptionsPH.distance = 'Number (tolerance)';
ResizableoptionsPH.ghost = 'Boolean';
ResizableoptionsPH.grid = '[x: 0, y: 0]';
ResizableoptionsPH.handles = 'se|s|e|n|w|ne|sw|nw|all (comma separated)';
ResizableoptionsPH.helper = 'Classname';
ResizableoptionsPH.maxHeight = 'Number';
ResizableoptionsPH.maxWidth = 'Number';
ResizableoptionsPH.minHeight = 'Number';
ResizableoptionsPH.minWidth = 'Number';
ResizableoptionsPH.disabled = 'false | true';
// Methods
// destroy()
ResizableoptionsPH.enabled = 'true | false'; // $var.resizable('disable'); or .resizable( "enable" );
// instance(); only useful as return value on javascript
// .resizable('option', 'optionname') return the current option or a key-value object with all options or .resizable('option', {key: value}) setta opzioni.
// .resizable('widget') return $(resizable element)
// create: string = ''; .resizable('create', functioncallback);
ResizableoptionsPH.resizing = 'function(event, ui){...}';
ResizableoptionsPH.resizeStart = 'function(event, ui){...}';
ResizableoptionsPH.resizeStop = 'function(event, ui){...}';
class DraggableOptionsPH {
}
DraggableOptionsPH.addClasses = 'false | tr ue';
DraggableOptionsPH.appendTo = 'Selector | Element | jQuery | parent';
DraggableOptionsPH.axis = 'x, y | x | y'; // actually "x, y" happens when you input "false"
DraggableOptionsPH.cancel = 'Selector';
DraggableOptionsPH.classes = 'Object (see jQUI website)';
DraggableOptionsPH.connectToSortable = 'Selector';
DraggableOptionsPH.containment = 'Selector | SizeArray | parent | document | window';
DraggableOptionsPH.cursor = 'CSSCursor'; // todo: setta default: quadriarrow (crosshair?)
DraggableOptionsPH.cursorAt = '{top, left} | {right, bottom} | {top, right} | {bottom, left}';
DraggableOptionsPH.delay = 'Number (msec)';
DraggableOptionsPH.distance = 'Number (pixel tolerance)';
//todo: permetti di fare cambiamenti a run-time usando: chain -> optional export (dinamically rcalculate and replace content of _jquiDrag* attributes), second chain -> point to _jquiDragRule and execute things like in the example "Get or set the grid option, after initialization: ..."
DraggableOptionsPH.grid = '[x: 0, y: 0]';
DraggableOptionsPH.handle = 'Selector | Element';
DraggableOptionsPH.helper = 'original | clone | Function() => Element';
DraggableOptionsPH.iframeFix = 'Boolean | Selector';
DraggableOptionsPH.opacity = 'Number';
DraggableOptionsPH.refreshPositions = 'false | true';
//todo: droppable
DraggableOptionsPH.revert = 'false | true | valid | invalid | Function() => Boolean';
DraggableOptionsPH.revertDuration = 'Number (msec)';
DraggableOptionsPH.scope = 'String';
DraggableOptionsPH.scroll = 'true | false'; //todo: devi fare lo scroll quando trascini un vertice out of visible graph boundary.
DraggableOptionsPH.scrollSensitivity = 'Number (pixel)'; //Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.
DraggableOptionsPH.scrollSpeed = '20 | Number';
DraggableOptionsPH.snap = 'false | true | Selector';
DraggableOptionsPH.snapMode = 'both | inner | outer';
DraggableOptionsPH.snapTolerance = '20 | Number';
DraggableOptionsPH.stack = 'Selector';
DraggableOptionsPH.zIndex = 'Number';
// Methods
DraggableOptionsPH.dragging = 'function(event, ui){...}';
DraggableOptionsPH.dragStart = 'function(event, ui){...}';
DraggableOptionsPH.dragStop = 'function(event, ui){...}';
DraggableOptionsPH.disabled = 'false | true';
/*
draggableui vertex:
  usa jqui draggable, lui ti aggiorna top, left, tu le trasformi in GraphPoint e setti:
  NO transform() che funzionerebbe su tutti
ma switch sulla taga e setta both: cx (al centro), x (al top-left)
  i vertici default diventano "measurable", con responsabilità dell'utente di inserire la classe se li vuole spostabili. default axis = both.*/


/***/ }),

/***/ "./src/common/Database.ts":
/*!********************************!*\
  !*** ./src/common/Database.ts ***!
  \********************************/
/*! exports provided: DatabaseMode, Database */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatabaseMode", function() { return DatabaseMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Database", function() { return Database; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Joiner */ "./src/common/Joiner.ts");


var DatabaseMode;
(function (DatabaseMode) {
    DatabaseMode[DatabaseMode["browserMemory"] = 0] = "browserMemory";
    DatabaseMode[DatabaseMode["Sql"] = 1] = "Sql";
    DatabaseMode[DatabaseMode["File"] = 2] = "File";
})(DatabaseMode || (DatabaseMode = {}));
class Database {
    constructor(mode = DatabaseMode.browserMemory, username = '_TestUser_', phpDbPageUrl = null, sqlurl = null, sqldb = null, sqlpass = null) {
        this.phpDbPageUrl = null;
        this.sqlurl = null;
        this.sqldb = null;
        this.sqluser = null;
        this.sqlpass = null;
        this.mode = null;
        this.mode = mode;
        this.sqluser = username;
        this.phpDbPageUrl = phpDbPageUrl;
        this.sqldb = sqldb;
        this.sqlpass = sqlpass;
        this.sqlurl = sqlurl;
    }
    writeKV(table, key, value) {
        switch (this.mode) {
            default:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected db mode:', this.mode);
                break;
            case DatabaseMode.browserMemory:
                key = this.sqluser + '_' + table + '_' + key;
                localStorage.setItem(key, value);
                break;
            case DatabaseMode.Sql:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'update sql: todo');
                break;
            case DatabaseMode.File:
                key = this.sqluser + '_' + table + '_' + key;
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'download file: todo');
                break;
        }
    }
    readKV(table, key) {
        switch (this.mode) {
            default:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected db mode:', this.mode);
                break;
            case DatabaseMode.browserMemory:
                key = this.sqluser + '_' + table + '_' + key;
                return localStorage.getItem(key);
            case DatabaseMode.Sql:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'select sql: todo');
                break;
            case DatabaseMode.File:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'readKV: cannot be executed with savemode = File');
                break;
        }
    }
}
Database.db = new Database();


/***/ }),

/***/ "./src/common/Joiner.ts":
/*!******************************!*\
  !*** ./src/common/Joiner.ts ***!
  \******************************/
/*! exports provided: is, ansiUp, StringSimilarity, CSS, JSCSS_CSSPARSER, $, $b, Swal, prjson2xml, prxml2json, Layouting, VsCodeLayerIn, VsCodeLayerOut, ViewHtmlSettings, ViewPoint, ViewRule, EdgeViewRule, LocalStorage, ModelPiece, Info, ModelNone, StyleComplexEntry, ECoreEnum, EcoreLiteral, ECoreParameter, ECoreOperation, ECoreAttribute, ECoreReference, ECoreClass, ECorePackage, ECoreRoot, ECoreAnnotation, ECoreDetail, XMIModel, IModel, TagNames, ShortAttribETypes, U, Json, AttribETypes, InputPopup, DetectZoom, Dictionary, ParseNumberOrBooleanOptions, IPoint, Point, GraphPoint, ISize, Size, GraphSize, myFileReader, FocusHistoryEntry, FileReadTypeEnum, EvalOutput, SelectorOutput, TSON_JSTypes, TSON, TSON_UnsupportedTypes, CSSRuleSorted, Keystrokes, AutocompleteMatch, CSSParser, ColorScheme2, ColorSchemeComponent, MeasurableRuleParts, Measurable, MeasurableEvalContext, measurableRules, MeasurableRuleLists, MeasurableOperators, DraggableOptionsImpl, ResizableOptionsImpl, RotatableOptions, UnsafeMeasurableEvalContext, ConstraintLeftAdmittedsStatic, EditorContext, Status, IGraph, ViewPointShell, IVertex, IField, ISidebar, IEdge, EdgeModes, ExtEdge, EdgePoint, EdgePointFittizio, CursorFollowerEP, EdgeStyle, EdgePointStyle, PropertyBarr, PropertyBarTabs, TopBar, StyleEditor, SaveListEntry, MyConsole, MetaMetaModel, MetaModel, Model, IPackage, M3Package, M2Package, MPackage, IClassifier, IClass, M3Class, M2Class, MClass, EEnum, Type, EType, Typedd, ELiteral, IFeature, IReference, M3Reference, M2Reference, MReference, IAttribute, M3Attribute, M2Attribute, MAttribute, EAnnotation, EAnnotationDetail, Database, DamContextMenu, EOperation, AccessModifier, EParameter, Draggableoptions, Resizableoptions, Rotatableoptions, ResizableoptionsPH, DraggableOptionsPH, RotatableoptionsPH, MeasurableTemplateGenerator, MeasurabletemplateComponent, ChangelogRoot, ChangelogEntry, VersionUpload, Feature, Bug, BugFix, WebsiteTheme, ModelUpdateMessage, SendManager, CSSEditor, ReservedClasses, ReservedAttributes, ReservedDatasets, ReservedStorageKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is", function() { return is; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ansiUp", function() { return ansiUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StringSimilarity", function() { return StringSimilarity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CSS", function() { return CSS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JSCSS_CSSPARSER", function() { return JSCSS_CSSPARSER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$", function() { return $; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$b", function() { return $b; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Swal", function() { return Swal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prjson2xml", function() { return prjson2xml; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prxml2json", function() { return prxml2json; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReservedClasses", function() { return ReservedClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReservedAttributes", function() { return ReservedAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReservedDatasets", function() { return ReservedDatasets; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReservedStorageKey", function() { return ReservedStorageKey; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var ansi_up__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ansi_up */ "./node_modules/ansi_up/ansi_up.js");
/* harmony import */ var ansi_up__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ansi_up__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! is_js */ "./node_modules/is_js/is.js");
/* harmony import */ var is_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(is_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_StringSimilarity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/StringSimilarity.js */ "./src/common/StringSimilarity.js");
/* harmony import */ var cssjson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cssjson */ "./node_modules/cssjson/cssjson.js");
/* harmony import */ var cssjson__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(cssjson__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var jqueryui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jqueryui */ "./node_modules/jqueryui/jquery-ui.js");
/* harmony import */ var jqueryui__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(jqueryui__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap/dist/js/bootstrap.js");
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(bootstrap__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _common_prj_json2xml_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/prj_json2xml.js */ "./src/common/prj_json2xml.js");
/* harmony import */ var _common_prj_xml2json_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common/prj_xml2json.js */ "./src/common/prj_xml2json.js");
/* harmony import */ var _guiElements_mGraph_Layouting__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../guiElements/mGraph/Layouting */ "./src/guiElements/mGraph/Layouting.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Layouting", function() { return _guiElements_mGraph_Layouting__WEBPACK_IMPORTED_MODULE_11__["Layouting"]; });

/* harmony import */ var _vscodeLayer_VsCodeLayer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../vscodeLayer/VsCodeLayer */ "./src/vscodeLayer/VsCodeLayer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VsCodeLayerIn", function() { return _vscodeLayer_VsCodeLayer__WEBPACK_IMPORTED_MODULE_12__["VsCodeLayerIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VsCodeLayerOut", function() { return _vscodeLayer_VsCodeLayer__WEBPACK_IMPORTED_MODULE_12__["VsCodeLayerOut"]; });

/* harmony import */ var _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../GuiStyles/viewpoint */ "./src/GuiStyles/viewpoint.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewHtmlSettings", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_13__["ViewHtmlSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewPoint", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_13__["ViewPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewRule", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_13__["ViewRule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgeViewRule", function() { return _GuiStyles_viewpoint__WEBPACK_IMPORTED_MODULE_13__["EdgeViewRule"]; });

/* harmony import */ var _Database_LocalStorage__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Database/LocalStorage */ "./src/Database/LocalStorage.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LocalStorage", function() { return _Database_LocalStorage__WEBPACK_IMPORTED_MODULE_14__["LocalStorage"]; });

/* harmony import */ var _Model_modelPiece__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../Model/modelPiece */ "./src/Model/modelPiece.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModelPiece", function() { return _Model_modelPiece__WEBPACK_IMPORTED_MODULE_15__["ModelPiece"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return _Model_modelPiece__WEBPACK_IMPORTED_MODULE_15__["Info"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModelNone", function() { return _Model_modelPiece__WEBPACK_IMPORTED_MODULE_15__["ModelNone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StyleComplexEntry", function() { return _Model_modelPiece__WEBPACK_IMPORTED_MODULE_15__["StyleComplexEntry"]; });

/* harmony import */ var _Model_iModel__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../Model/iModel */ "./src/Model/iModel.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreEnum", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreEnum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EcoreLiteral", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["EcoreLiteral"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreParameter", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreOperation", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreOperation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreAttribute", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreAttribute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreReference", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreReference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreClass", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECorePackage", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECorePackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreRoot", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreAnnotation", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreAnnotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ECoreDetail", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["ECoreDetail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XMIModel", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["XMIModel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IModel", function() { return _Model_iModel__WEBPACK_IMPORTED_MODULE_16__["IModel"]; });

/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./util */ "./src/common/util.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TagNames", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["TagNames"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ShortAttribETypes", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["ShortAttribETypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "U", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["U"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Json", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["Json"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AttribETypes", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["AttribETypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InputPopup", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["InputPopup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DetectZoom", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["DetectZoom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["Dictionary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ParseNumberOrBooleanOptions", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["ParseNumberOrBooleanOptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IPoint", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["IPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["Point"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GraphPoint", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["GraphPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ISize", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["ISize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GraphSize", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["GraphSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "myFileReader", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["myFileReader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FocusHistoryEntry", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["FocusHistoryEntry"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FileReadTypeEnum", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["FileReadTypeEnum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvalOutput", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["EvalOutput"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SelectorOutput", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["SelectorOutput"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TSON_JSTypes", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["TSON_JSTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TSON", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["TSON"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TSON_UnsupportedTypes", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["TSON_UnsupportedTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CSSRuleSorted", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["CSSRuleSorted"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Keystrokes", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["Keystrokes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutocompleteMatch", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["AutocompleteMatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CSSParser", function() { return _util__WEBPACK_IMPORTED_MODULE_17__["CSSParser"]; });

/* harmony import */ var _app_color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../app/color-scheme/color-scheme.component */ "./src/app/color-scheme/color-scheme.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorScheme2", function() { return _app_color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_18__["ColorScheme2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorSchemeComponent", function() { return _app_color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_18__["ColorSchemeComponent"]; });

/* harmony import */ var _measurable__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./measurable */ "./src/common/measurable.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleParts", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["MeasurableRuleParts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Measurable", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["Measurable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableEvalContext", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["MeasurableEvalContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measurableRules", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["measurableRules"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleLists", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["MeasurableRuleLists"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableOperators", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["MeasurableOperators"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DraggableOptionsImpl", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["DraggableOptionsImpl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResizableOptionsImpl", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["ResizableOptionsImpl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RotatableOptions", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["RotatableOptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnsafeMeasurableEvalContext", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["UnsafeMeasurableEvalContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConstraintLeftAdmittedsStatic", function() { return _measurable__WEBPACK_IMPORTED_MODULE_19__["ConstraintLeftAdmittedsStatic"]; });

/* harmony import */ var _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../guiElements/style-editor/style-editor.component */ "./src/guiElements/style-editor/style-editor.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EditorContext", function() { return _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_20__["EditorContext"]; });

/* harmony import */ var _src_app_app_module__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../src/app/app.module */ "./src/app/app.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Status", function() { return _src_app_app_module__WEBPACK_IMPORTED_MODULE_21__["Status"]; });

/* harmony import */ var _guiElements_mGraph_iGraph__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../guiElements/mGraph/iGraph */ "./src/guiElements/mGraph/iGraph.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IGraph", function() { return _guiElements_mGraph_iGraph__WEBPACK_IMPORTED_MODULE_22__["IGraph"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewPointShell", function() { return _guiElements_mGraph_iGraph__WEBPACK_IMPORTED_MODULE_22__["ViewPointShell"]; });

/* harmony import */ var _guiElements_mGraph_Vertex_iVertex__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../guiElements/mGraph/Vertex/iVertex */ "./src/guiElements/mGraph/Vertex/iVertex.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IVertex", function() { return _guiElements_mGraph_Vertex_iVertex__WEBPACK_IMPORTED_MODULE_23__["IVertex"]; });

/* harmony import */ var _guiElements_mGraph_Field_iField__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../guiElements/mGraph/Field/iField */ "./src/guiElements/mGraph/Field/iField.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IField", function() { return _guiElements_mGraph_Field_iField__WEBPACK_IMPORTED_MODULE_24__["IField"]; });

/* harmony import */ var _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../guiElements/isidebar/isidebar.component */ "./src/guiElements/isidebar/isidebar.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ISidebar", function() { return _guiElements_isidebar_isidebar_component__WEBPACK_IMPORTED_MODULE_25__["ISidebar"]; });

/* harmony import */ var _guiElements_mGraph_Edge_iEdge__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/iEdge */ "./src/guiElements/mGraph/Edge/iEdge.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IEdge", function() { return _guiElements_mGraph_Edge_iEdge__WEBPACK_IMPORTED_MODULE_26__["IEdge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgeModes", function() { return _guiElements_mGraph_Edge_iEdge__WEBPACK_IMPORTED_MODULE_26__["EdgeModes"]; });

/* harmony import */ var _guiElements_mGraph_Edge_ExtEdge__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/ExtEdge */ "./src/guiElements/mGraph/Edge/ExtEdge.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtEdge", function() { return _guiElements_mGraph_Edge_ExtEdge__WEBPACK_IMPORTED_MODULE_27__["ExtEdge"]; });

/* harmony import */ var _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/EdgePoint */ "./src/guiElements/mGraph/Edge/EdgePoint.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgePoint", function() { return _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_28__["EdgePoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgePointFittizio", function() { return _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_28__["EdgePointFittizio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CursorFollowerEP", function() { return _guiElements_mGraph_Edge_EdgePoint__WEBPACK_IMPORTED_MODULE_28__["CursorFollowerEP"]; });

/* harmony import */ var _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/edgeStyle */ "./src/guiElements/mGraph/Edge/edgeStyle.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgeStyle", function() { return _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_29__["EdgeStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EdgePointStyle", function() { return _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_29__["EdgePointStyle"]; });

/* harmony import */ var _guiElements_propertyBar_propertyBar__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../guiElements/propertyBar/propertyBar */ "./src/guiElements/propertyBar/propertyBar.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertyBarr", function() { return _guiElements_propertyBar_propertyBar__WEBPACK_IMPORTED_MODULE_30__["PropertyBarr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertyBarTabs", function() { return _guiElements_propertyBar_propertyBar__WEBPACK_IMPORTED_MODULE_30__["PropertyBarTabs"]; });

/* harmony import */ var _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../guiElements/top-bar/top-bar.component */ "./src/guiElements/top-bar/top-bar.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TopBar", function() { return _guiElements_top_bar_top_bar_component__WEBPACK_IMPORTED_MODULE_31__["TopBar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StyleEditor", function() { return _guiElements_style_editor_style_editor_component__WEBPACK_IMPORTED_MODULE_20__["StyleEditor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveListEntry", function() { return _Database_LocalStorage__WEBPACK_IMPORTED_MODULE_14__["SaveListEntry"]; });

/* harmony import */ var _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../guiElements/console/console.component */ "./src/guiElements/console/console.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MyConsole", function() { return _guiElements_console_console_component__WEBPACK_IMPORTED_MODULE_32__["MyConsole"]; });

/* harmony import */ var _Model_MetaMetaModel__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../Model/MetaMetaModel */ "./src/Model/MetaMetaModel.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaMetaModel", function() { return _Model_MetaMetaModel__WEBPACK_IMPORTED_MODULE_33__["MetaMetaModel"]; });

/* harmony import */ var _Model_MetaModel__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../Model/MetaModel */ "./src/Model/MetaModel.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetaModel", function() { return _Model_MetaModel__WEBPACK_IMPORTED_MODULE_34__["MetaModel"]; });

/* harmony import */ var _Model_Model__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../Model/Model */ "./src/Model/Model.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Model", function() { return _Model_Model__WEBPACK_IMPORTED_MODULE_35__["Model"]; });

/* harmony import */ var _Model_mPackage_iPackage__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../Model/mPackage/iPackage */ "./src/Model/mPackage/iPackage.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IPackage", function() { return _Model_mPackage_iPackage__WEBPACK_IMPORTED_MODULE_36__["IPackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Package", function() { return _Model_mPackage_iPackage__WEBPACK_IMPORTED_MODULE_36__["M3Package"]; });

/* harmony import */ var _Model_mPackage_MMPackage__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../Model/mPackage/MMPackage */ "./src/Model/mPackage/MMPackage.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Package", function() { return _Model_mPackage_MMPackage__WEBPACK_IMPORTED_MODULE_37__["M2Package"]; });

/* harmony import */ var _Model_mPackage_MPackage_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../Model/mPackage/MPackage.component */ "./src/Model/mPackage/MPackage.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MPackage", function() { return _Model_mPackage_MPackage_component__WEBPACK_IMPORTED_MODULE_38__["MPackage"]; });

/* harmony import */ var _mClass_IClassifier__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../mClass/IClassifier */ "./src/mClass/IClassifier.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IClassifier", function() { return _mClass_IClassifier__WEBPACK_IMPORTED_MODULE_39__["IClassifier"]; });

/* harmony import */ var _mClass_iClass__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../mClass/iClass */ "./src/mClass/iClass.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IClass", function() { return _mClass_iClass__WEBPACK_IMPORTED_MODULE_40__["IClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Class", function() { return _mClass_iClass__WEBPACK_IMPORTED_MODULE_40__["M3Class"]; });

/* harmony import */ var _mClass_m2Class__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../mClass/m2Class */ "./src/mClass/m2Class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Class", function() { return _mClass_m2Class__WEBPACK_IMPORTED_MODULE_41__["M2Class"]; });

/* harmony import */ var _mClass_MClass__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../mClass/MClass */ "./src/mClass/MClass.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MClass", function() { return _mClass_MClass__WEBPACK_IMPORTED_MODULE_42__["MClass"]; });

/* harmony import */ var _mClass_EEnum__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../mClass/EEnum */ "./src/mClass/EEnum.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EEnum", function() { return _mClass_EEnum__WEBPACK_IMPORTED_MODULE_43__["EEnum"]; });

/* harmony import */ var _mClass_classChild_Type__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../mClass/classChild/Type */ "./src/mClass/classChild/Type.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return _mClass_classChild_Type__WEBPACK_IMPORTED_MODULE_44__["Type"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EType", function() { return _mClass_classChild_Type__WEBPACK_IMPORTED_MODULE_44__["EType"]; });

/* harmony import */ var _mClass_classChild_Typedd__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../mClass/classChild/Typedd */ "./src/mClass/classChild/Typedd.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Typedd", function() { return _mClass_classChild_Typedd__WEBPACK_IMPORTED_MODULE_45__["Typedd"]; });

/* harmony import */ var _mClass_classChild_ELiteral__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../mClass/classChild/ELiteral */ "./src/mClass/classChild/ELiteral.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ELiteral", function() { return _mClass_classChild_ELiteral__WEBPACK_IMPORTED_MODULE_46__["ELiteral"]; });

/* harmony import */ var _mClass_classChild_Features_iFeature__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../mClass/classChild/Features/iFeature */ "./src/mClass/classChild/Features/iFeature.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IFeature", function() { return _mClass_classChild_Features_iFeature__WEBPACK_IMPORTED_MODULE_47__["IFeature"]; });

/* harmony import */ var _mClass_classChild_Features_References_iReference__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../mClass/classChild/Features/References/iReference */ "./src/mClass/classChild/Features/References/iReference.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IReference", function() { return _mClass_classChild_Features_References_iReference__WEBPACK_IMPORTED_MODULE_48__["IReference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Reference", function() { return _mClass_classChild_Features_References_iReference__WEBPACK_IMPORTED_MODULE_48__["M3Reference"]; });

/* harmony import */ var _mClass_classChild_Features_References_M2Reference__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../mClass/classChild/Features/References/M2Reference */ "./src/mClass/classChild/Features/References/M2Reference.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Reference", function() { return _mClass_classChild_Features_References_M2Reference__WEBPACK_IMPORTED_MODULE_49__["M2Reference"]; });

/* harmony import */ var _mClass_classChild_Features_References_MReference__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../mClass/classChild/Features/References/MReference */ "./src/mClass/classChild/Features/References/MReference.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MReference", function() { return _mClass_classChild_Features_References_MReference__WEBPACK_IMPORTED_MODULE_50__["MReference"]; });

/* harmony import */ var _mClass_classChild_Features_Attributes_iAttribute__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../mClass/classChild/Features/Attributes/iAttribute */ "./src/mClass/classChild/Features/Attributes/iAttribute.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IAttribute", function() { return _mClass_classChild_Features_Attributes_iAttribute__WEBPACK_IMPORTED_MODULE_51__["IAttribute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M3Attribute", function() { return _mClass_classChild_Features_Attributes_iAttribute__WEBPACK_IMPORTED_MODULE_51__["M3Attribute"]; });

/* harmony import */ var _mClass_classChild_Features_Attributes_mmAttribute__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../mClass/classChild/Features/Attributes/mmAttribute */ "./src/mClass/classChild/Features/Attributes/mmAttribute.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "M2Attribute", function() { return _mClass_classChild_Features_Attributes_mmAttribute__WEBPACK_IMPORTED_MODULE_52__["M2Attribute"]; });

/* harmony import */ var _mClass_classChild_Features_Attributes_MAttribute__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../mClass/classChild/Features/Attributes/MAttribute */ "./src/mClass/classChild/Features/Attributes/MAttribute.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAttribute", function() { return _mClass_classChild_Features_Attributes_MAttribute__WEBPACK_IMPORTED_MODULE_53__["MAttribute"]; });

/* harmony import */ var _Model_EAnnotation__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../Model/EAnnotation */ "./src/Model/EAnnotation.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EAnnotation", function() { return _Model_EAnnotation__WEBPACK_IMPORTED_MODULE_54__["EAnnotation"]; });

/* harmony import */ var _Model_EAnnotationDetail__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../Model/EAnnotationDetail */ "./src/Model/EAnnotationDetail.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EAnnotationDetail", function() { return _Model_EAnnotationDetail__WEBPACK_IMPORTED_MODULE_55__["EAnnotationDetail"]; });

/* harmony import */ var _common_Database__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../common/Database */ "./src/common/Database.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Database", function() { return _common_Database__WEBPACK_IMPORTED_MODULE_56__["Database"]; });

/* harmony import */ var _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../guiElements/dam-context-menu/dam-context-menu.component */ "./src/guiElements/dam-context-menu/dam-context-menu.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DamContextMenu", function() { return _guiElements_dam_context_menu_dam_context_menu_component__WEBPACK_IMPORTED_MODULE_57__["DamContextMenu"]; });

/* harmony import */ var _mClass_classChild_Operations_eOperation__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../mClass/classChild/Operations/eOperation */ "./src/mClass/classChild/Operations/eOperation.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EOperation", function() { return _mClass_classChild_Operations_eOperation__WEBPACK_IMPORTED_MODULE_58__["EOperation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccessModifier", function() { return _mClass_classChild_Operations_eOperation__WEBPACK_IMPORTED_MODULE_58__["AccessModifier"]; });

/* harmony import */ var _mClass_classChild_Operations_eParameter__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../mClass/classChild/Operations/eParameter */ "./src/mClass/classChild/Operations/eParameter.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EParameter", function() { return _mClass_classChild_Operations_eParameter__WEBPACK_IMPORTED_MODULE_59__["EParameter"]; });

/* harmony import */ var _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../app/measurabletemplate/measurabletemplate.component */ "./src/app/measurabletemplate/measurabletemplate.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Draggableoptions", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["Draggableoptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Resizableoptions", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["Resizableoptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rotatableoptions", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["Rotatableoptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResizableoptionsPH", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["ResizableoptionsPH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DraggableOptionsPH", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["DraggableOptionsPH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RotatableoptionsPH", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["RotatableoptionsPH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurableTemplateGenerator", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["MeasurableTemplateGenerator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurabletemplateComponent", function() { return _app_measurabletemplate_measurabletemplate_component__WEBPACK_IMPORTED_MODULE_60__["MeasurabletemplateComponent"]; });

/* harmony import */ var _guiElements_changelog_ChangelogEntry__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../guiElements/changelog/ChangelogEntry */ "./src/guiElements/changelog/ChangelogEntry.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChangelogRoot", function() { return _guiElements_changelog_ChangelogEntry__WEBPACK_IMPORTED_MODULE_61__["ChangelogRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChangelogEntry", function() { return _guiElements_changelog_ChangelogEntry__WEBPACK_IMPORTED_MODULE_61__["ChangelogEntry"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VersionUpload", function() { return _guiElements_changelog_ChangelogEntry__WEBPACK_IMPORTED_MODULE_61__["VersionUpload"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Feature", function() { return _guiElements_changelog_ChangelogEntry__WEBPACK_IMPORTED_MODULE_61__["Feature"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bug", function() { return _guiElements_changelog_ChangelogEntry__WEBPACK_IMPORTED_MODULE_61__["Bug"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BugFix", function() { return _guiElements_changelog_ChangelogEntry__WEBPACK_IMPORTED_MODULE_61__["BugFix"]; });

/* harmony import */ var _GuiStyles_global__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../GuiStyles/global */ "./src/GuiStyles/global.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WebsiteTheme", function() { return _GuiStyles_global__WEBPACK_IMPORTED_MODULE_62__["WebsiteTheme"]; });

/* harmony import */ var _ServerCommunication_Synchronization_ModelUpdateMessage__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../ServerCommunication/Synchronization/ModelUpdateMessage */ "./src/ServerCommunication/Synchronization/ModelUpdateMessage.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModelUpdateMessage", function() { return _ServerCommunication_Synchronization_ModelUpdateMessage__WEBPACK_IMPORTED_MODULE_63__["ModelUpdateMessage"]; });

/* harmony import */ var _ServerCommunication_Synchronization_SendManager__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../ServerCommunication/Synchronization/SendManager */ "./src/ServerCommunication/Synchronization/SendManager.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SendManager", function() { return _ServerCommunication_Synchronization_SendManager__WEBPACK_IMPORTED_MODULE_64__["SendManager"]; });

/* harmony import */ var _src_guiElements_style_editor_csseditor_CssEditor__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../../src/guiElements/style-editor/csseditor/CssEditor */ "./src/guiElements/style-editor/csseditor/CssEditor.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CSSEditor", function() { return _src_guiElements_style_editor_csseditor_CssEditor__WEBPACK_IMPORTED_MODULE_65__["CSSEditor"]; });

/* NOTE: error in module.extends: devi importare i file rispettando l'ordine di dichiarazioni delle classi, se dichiaro class A nel file A, e class
 B extensa A nel file B, il file B non può essere importato prima del file A*/
/* this is undefined in constructors or method calls: likely caused by a reserved class name that is listed in config.ts and is behaving
 differently.*/
// /*new*/export {Styles, ModelPieceStyleEntry, SortType, StyleVisibility} from '../GuiStyles/styles';
// /*new*/export {ViewHtmlSettings, ViewPoint, ViewRule, ModelView, PackageView, ClassView, AttributeView, EdgeViewRule, ReferenceView, OperationView,
// ParameterView} from '../GuiStyles/viewpoint';



let is = is_js__WEBPACK_IMPORTED_MODULE_2__;
const ansiUp = new ansi_up__WEBPACK_IMPORTED_MODULE_1___default.a(); // https://github.com/drudru/ansi_up // ansi color formatter.

const StringSimilarity = _common_StringSimilarity_js__WEBPACK_IMPORTED_MODULE_3__;

const CSS = { toCSS: cssjson__WEBPACK_IMPORTED_MODULE_4__["toCSS"], toJSON: cssjson__WEBPACK_IMPORTED_MODULE_4__["toJSON"] };
const JSCSS_CSSPARSER = window['CSSParser'] || {};
/*import * as CSSS from 'css';
export const CSS = CSSS;*/

// import "jquery";

const $ = window['' + '$'] = jquery__WEBPACK_IMPORTED_MODULE_6__;

const $b = bootstrap__WEBPACK_IMPORTED_MODULE_7__;

const Swal = sweetalert2__WEBPACK_IMPORTED_MODULE_8___default.a;
/*
import * as JQueryUII        from '../../node_modules/jqueryui';
export const JQueryUI: JQueryUII = JQueryUII.JQueryUI;*/


const prjson2xml = _common_prj_json2xml_js__WEBPACK_IMPORTED_MODULE_9__;
const prxml2json = _common_prj_xml2json_js__WEBPACK_IMPORTED_MODULE_10__;
/*export const $$$: JQueryStatic = require('jquery-ui');
export const $ui: JQueryStatic = $$$;*/





/*new*/ 
















/*neww*/ 
// export {Options} from '../Save/Save';
 /*
export {IModel, ECoreRoot, ECorePackage, ECoreClass, ECoreReference,
  ECoreAttribute, ECoreParameter, ECoreOperation, XMIModel, EcoreLiteral, ECoreEnum } from '../Model/iModel';*/
// export {IModel} from '../Model/iModel';























/*new*/ 









class ReservedClasses {
}
// everytime i draw a vertex, i need to search in all the DOM sub-tree for all attributes starting with measurableRules.onRefresh and execute them.
// hence i made a class tied with the presence of attributes starting with measurableRules.onRefresh for efficiency.
ReservedClasses.onRefresh = 'onRefresh';
ReservedClasses.template = 'template';
ReservedClasses.vertexRootG = 'VertexRoot'; // on G element
class ReservedAttributes {
}
ReservedAttributes.todo = 'todo';
class ReservedDatasets {
}
ReservedDatasets.todo = 'todo';
class ReservedStorageKey {
}
ReservedStorageKey.userTheme = 'userTheme';
ReservedStorageKey.versionAcknowledged = 'versionAcknowledged';
// import {IClassifier} from '../mClass/IClassifier';
/*
// @ts-ignore
let enc = he.encode;
// @ts-ignore
let dec = he.decode;
// @ts-ignore
let esc = he.escape;
// @ts-ignore
let unesc = he.unescape;
// @ts-ignore
let ver = he.version;
export const HE = {encode: enc, decode: dec, escape: esc, unescape: unesc, version: ver};*/
// NB: se li esporti e usi come identificatori/costruttori nel codice, typescript li collega da una fantomatica user-class con nome __CambiatoTipoCosì
// e pur esistendo la classe A, lui cerca __A e dice che non esiste.
// soluzione: attiva quando scrivi codice per abilitare il type check, disabilita in produzione.
/*
type ResizeObserverSize = unknown;
declare type ResizeObserverEntry = {
  readonly target: Element;
  readonly contentRect: DOMRectReadOnly;
  readonly borderBoxSize: ResizeObserverSize[]; // type was "readonly attribute sequence<ResizeObserverSize>"
  readonly contentBoxSize: ResizeObserverSize[];
  devicePixelContentBoxSize: ResizeObserverSize[];
}
declare type ResizeObserverCallback = (entries: ResizeObserverEntry[], observer: ResizeObserverr) => unknown;
declare type ResizeObserverOptions = {box: 'content-box' | 'border-box'}
declare type ResizeObserverr = {
  constructor(callback: ResizeObserverCallback);
  observe(target: Element, options?: ResizeObserverOptions): void;
  unobserve(target: Element): void;
  disconnect(): void;
}
export let ResizeObserver: ResizeObserverr = window['' + 'ResizeObserver'];
*/


/***/ }),

/***/ "./src/common/StringSimilarity.js":
/*!****************************************!*\
  !*** ./src/common/StringSimilarity.js ***!
  \****************************************/
/*! exports provided: compareTwoStrings, findBestMatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareTwoStrings", function() { return compareTwoStrings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findBestMatch", function() { return findBestMatch; });

var compareTwoStrings = compareTwoStrings0;
var findBestMatch = findBestMatch0;
function compareTwoStrings0(first, second) {
	first = first.replace(/\s+/g, '')
	second = second.replace(/\s+/g, '')

	if (!first.length && !second.length) return 1;                   // if both are empty strings
	if (!first.length || !second.length) return 0;                   // if only one is empty string
	if (first === second) return 1;       							 // identical
	if (first.length === 1 && second.length === 1) return 0;         // both are 1-letter strings
	if (first.length < 2 || second.length < 2) return 0;			 // if either is a 1-letter string

	let firstBigrams = new Map();
	for (let i = 0; i < first.length - 1; i++) {
		const bigram = first.substr(i, 2);
		const count = firstBigrams.has(bigram)
			? firstBigrams.get(bigram) + 1
			: 1;

		firstBigrams.set(bigram, count);
	};

	let intersectionSize = 0;
	for (let i = 0; i < second.length - 1; i++) {
		const bigram = second.substr(i, 2);
		const count = firstBigrams.has(bigram)
			? firstBigrams.get(bigram)
			: 0;

		if (count > 0) {
			firstBigrams.set(bigram, count - 1);
			intersectionSize++;
		}
	}

	return (2.0 * intersectionSize) / (first.length + second.length - 2);
}

function findBestMatch0(mainString, targetStrings) {
	if (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');
	
	const ratings = [];
	let bestMatchIndex = 0;

	for (let i = 0; i < targetStrings.length; i++) {
		const currentTargetString = targetStrings[i];
		const currentRating = compareTwoStrings(mainString, currentTargetString)
		ratings.push({target: currentTargetString, rating: currentRating})
		if (currentRating > ratings[bestMatchIndex].rating) {
			bestMatchIndex = i
		}
	}
	
	
	const bestMatch = ratings[bestMatchIndex]
	
	return { ratings, bestMatch, bestMatchIndex };
}

function flattenDeep(arr) {
	return Array.isArray(arr) ? arr.reduce((a, b) => a.concat(flattenDeep(b)), []) : [arr];
}

function areArgsValid(mainString, targetStrings) {
	if (typeof mainString !== 'string') return false;
	if (!Array.isArray(targetStrings)) return false;
	if (!targetStrings.length) return false;
	if (targetStrings.find(s => typeof s !== 'string')) return false;
	return true;
}

function letterPairs(str) {
	const pairs = [];
	for (let i = 0, max = str.length - 1; i < max; i++) pairs[i] = str.substring(i, i + 2);
	return pairs;
}

function wordLetterPairs(str) {
	const pairs = str.toUpperCase().split(' ').map(letterPairs);
	return flattenDeep(pairs);
}


/***/ }),

/***/ "./src/common/measurable.ts":
/*!**********************************!*\
  !*** ./src/common/measurable.ts ***!
  \**********************************/
/*! exports provided: ConstraintLeftAdmittedsStatic, UnsafeMeasurableEvalContext, MeasurableEvalContext, MeasurableOperators, MeasurableRuleParts, measurableRules, MeasurableRuleLists, RotatableOptions, Measurable, ResizableOptionsImpl, DraggableOptionsImpl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstraintLeftAdmittedsStatic", function() { return ConstraintLeftAdmittedsStatic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnsafeMeasurableEvalContext", function() { return UnsafeMeasurableEvalContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableEvalContext", function() { return MeasurableEvalContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableOperators", function() { return MeasurableOperators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleParts", function() { return MeasurableRuleParts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measurableRules", function() { return measurableRules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurableRuleLists", function() { return MeasurableRuleLists; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RotatableOptions", function() { return RotatableOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Measurable", function() { return Measurable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResizableOptionsImpl", function() { return ResizableOptionsImpl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DraggableOptionsImpl", function() { return DraggableOptionsImpl; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Model/modelPiece */ "./src/Model/modelPiece.ts");
// requires: U, jQuery, jQueryUI



/*
export class MeasurableArrays {rules: Attr[]; imports: Attr[]; exports: Attr[]; variables: Attr[];
  constraints: Attr[]; chain: Attr[]; chainFinal: Attr[]; dstyle: Attr[]; html: Element; e: Event; }*/
class ConstraintLeftAdmittedsStatic {
}
ConstraintLeftAdmittedsStatic.vertexSizeX = 'vertexSize.x';
ConstraintLeftAdmittedsStatic.vertexSizeY = 'vertexSize.y';
ConstraintLeftAdmittedsStatic.vertexSizeW = 'vertexSize.w';
ConstraintLeftAdmittedsStatic.vertexSizeH = 'vertexSize.h';
ConstraintLeftAdmittedsStatic.width = 'width';
ConstraintLeftAdmittedsStatic.height = 'height';
ConstraintLeftAdmittedsStatic.relativePosX = 'relativePos.x';
ConstraintLeftAdmittedsStatic.relativePosY = 'relativePos.y';
ConstraintLeftAdmittedsStatic.relativeVPosX = 'relativeVPos.x';
ConstraintLeftAdmittedsStatic.relativeVPosY = 'relativeVPos.y';
ConstraintLeftAdmittedsStatic.absoluteGPosX = 'absoluteGPos.x';
ConstraintLeftAdmittedsStatic.absoluteGPosY = 'absoluteGPos.y';
ConstraintLeftAdmittedsStatic.absoluteDocPosX = 'absoluteDocPos.x';
ConstraintLeftAdmittedsStatic.absoluteDocPosY = 'absoluteDocPos.y';
ConstraintLeftAdmittedsStatic.targetvertexSizeX = 'target.vertexSize.x';
ConstraintLeftAdmittedsStatic.targetvertexSizeY = 'target.vertexSize.y';
ConstraintLeftAdmittedsStatic.targetvertexSizeW = 'target.vertexSize.w';
ConstraintLeftAdmittedsStatic.targetvertexSizeH = 'target.vertexSize.h';
ConstraintLeftAdmittedsStatic.targetwidth = 'target.width';
ConstraintLeftAdmittedsStatic.targetheight = 'target.height';
ConstraintLeftAdmittedsStatic.targetrelativePosX = 'target.relativePos.x';
ConstraintLeftAdmittedsStatic.targetrelativePosY = 'target.relativePos.y';
ConstraintLeftAdmittedsStatic.targetrelativeVPosX = 'target.relativeVPos.x';
ConstraintLeftAdmittedsStatic.targetrelativeVPosY = 'target.relativeVPos.y';
ConstraintLeftAdmittedsStatic.targetabsoluteGPosX = 'target.absoluteGPos.x';
ConstraintLeftAdmittedsStatic.targetabsoluteGPosY = 'target.absoluteGPos.y';
ConstraintLeftAdmittedsStatic.targetabsoluteDocPosX = 'target.absoluteDocPos.x';
ConstraintLeftAdmittedsStatic.targetabsoluteDocPosY = 'target.absoluteDocPos.y';
class UnsafeMeasurableEvalContext {
}
class MeasurableEvalContext {
    constructor() {
        this.isFilled = false;
        this.setSize = (w = null /*number*/, h = null /*number*/) => /*void*/ {
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(w)) {
                this.width = +w;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(h)) {
                this.height = +h;
            }
        };
        this.setAbsoluteGPos = (x = null /*number*/, y = null /*number*/) => /*void*/ {
            const isVertex = MeasurableEvalContext.isVertex(this);
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteGPos.x = +x;
                if (isVertex) {
                    this.vertexSize.x = this.absoluteGPos.x;
                    this.relativeVPos.y = 0; //y intenzionale
                    this.relativeVPos.x = 0;
                }
                else {
                    this.relativeVPos.x = this.absoluteGPos.x - this.vertexSize.x;
                }
                if (this.target) {
                    this.relativePos.x = this.absoluteGPos.x - this.target.absoluteGPos.x;
                }
                this.absoluteDocPos.x = this.graphSize.x + (this.absoluteGPos.x - this.graphScroll.x) / this.graphZoom.x;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteGPos.y = +y;
                if (isVertex) {
                    this.vertexSize.y = this.absoluteGPos.y;
                    this.relativeVPos.x = 0; //x intenzionale
                    this.relativeVPos.y = 0;
                }
                else {
                    this.relativeVPos.y = this.absoluteGPos.y - this.vertexSize.y;
                }
                if (this.target) {
                    this.relativePos.y = this.absoluteGPos.y - this.target.absoluteGPos.y;
                }
                this.absoluteDocPos.y = this.graphSize.y + (this.absoluteGPos.y - this.graphScroll.y) / this.graphZoom.y;
            }
        };
        this.setRelativePos = (x = null /*number*/, y = null /*number*/) => /*void*/ {
            if (!this.target)
                return;
            //const isVertex: boolean = MeasurableEvalContext.isVertex(this);
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteGPos.x = this.target.absoluteGPos.x + +x;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteGPos.y = this.target.absoluteGPos.y + +y;
            }
            this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
        };
        this.setRelativeVPos = (x = null /*number*/, y = null /*number*/) => /*void*/ {
            //const isVertex: boolean = MeasurableEvalContext.isVertex(this); should not be used at all in vertexes.
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteGPos.x = this.vertexSize.x + +x;
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteGPos.y = this.vertexSize.y + +y;
            }
            this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
        };
        this.setVertexSize = (x = null /*number*/, y = null /*number*/, w = null /*number*/, h = null /*number*/) => /*void*/ {
            const isVertex = MeasurableEvalContext.isVertex(this);
            console.log('vsize pre:', this.vertexSize.duplicate(), 'w:', w, 'isVertex?', isVertex);
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(w))
                this.vertexSize.w = +w;
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(h))
                this.vertexSize.h = +h;
            console.log('vsize mid:', this.vertexSize.duplicate());
            if (isVertex) {
                this.setAbsoluteGPos(x, y);
            }
            else {
                if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                    this.absoluteGPos.x = +x + this.relativeVPos.x;
                }
                if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                    this.absoluteGPos.y = +y + this.relativeVPos.y;
                }
                this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
            }
            console.log('vsize post:', this.vertexSize.duplicate());
        };
        // può servire a tenere qualcosa fisso al centro del grafo anche se faccio panning
        this.setAbsoluteDocPos = (x = null /*number */, y = null /*number*/) => /*void*/ {
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(x)) {
                this.absoluteDocPos.x = +x;
                this.absoluteGPos.x = this.graphScroll.x + this.graphZoom.x * (this.absoluteDocPos.x - this.graphSize.x);
            }
            if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(y)) {
                this.absoluteDocPos.y = +y;
                this.absoluteGPos.y = this.graphScroll.y + this.graphZoom.y * (this.absoluteDocPos.y - this.graphSize.y);
            }
            this.setAbsoluteGPos(this.absoluteGPos.x, this.absoluteGPos.y);
        };
        this.setVertexSizeX = (x = null) => /*void*/ { return this.setVertexSize(x, null, null, null); };
        this.setVertexSizeY = (y = null) => /*void*/ { return this.setVertexSize(null, y, null, null); };
        this.setVertexSizeW = (w = null) => /*void*/ { return this.setVertexSize(null, null, w, null); };
        this.setVertexSizeH = (h = null) => /*void*/ { return this.setVertexSize(null, null, null, h); };
        this.setVertexX = (x = null) => /*void*/ { return this.setVertexSizeX(x); };
        this.setVertexY = (y = null) => /*void*/ { return this.setVertexSizeY(y); };
        this.setVertexW = (w = null) => /*void*/ { return this.setVertexSizeW(w); };
        this.setVertexH = (h = null) => /*void*/ { return this.setVertexSizeH(h); };
        this.setRelativePosX = (x = null) => /*void*/ { return this.setRelativePos(x, null); };
        this.setRelativePosY = (y = null) => /*void*/ { return this.setRelativePos(null, y); };
        this.setRelativeVPosX = (x = null) => /*void*/ { return this.setRelativeVPos(x, null); };
        this.setRelativeVPosY = (y = null) => /*void*/ { return this.setRelativeVPos(null, y); };
        this.setAbsoluteGPosX = (x = null) => /*void*/ { return this.setAbsoluteGPos(x, null); };
        this.setAbsoluteGPosY = (y = null) => /*void*/ { return this.setAbsoluteGPos(null, y); };
        this.setAbsoluteDocPosX = (x = null) => /*void*/ { return this.setAbsoluteDocPos(x, null); };
        this.setAbsoluteDocPosY = (y = null) => /*void*/ { return this.setAbsoluteDocPos(null, y); };
        this.setWidth = (w = null) => /*void*/ { return this.setSize(w, null); };
        this.setHeight = (h = null) => /*void*/ { return this.setSize(null, h); };
        this.unsafe = new UnsafeMeasurableEvalContext();
    }
    static isVertex(context) { return context.unsafe.vertex.getHtmlRawForeign() === context.unsafe.node; }
    // serve a dare un oggetto verosimile da cui poter generare i suggerimenti dei nomi e tipi per l'editor delle measurableRule
    static fillFake(filltarget = true) {
        let thiss = new MeasurableEvalContext();
        thiss.isFilled = false;
        thiss.width = thiss.height = 0;
        thiss.unsafe = new UnsafeMeasurableEvalContext();
        thiss.relativePos = thiss.relativeVPos = thiss.absoluteGPos = thiss.absoluteDocPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        thiss.absoluteDocPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](0, 0);
        thiss.documentSize = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["Size"](0, 0);
        thiss.vertexSize = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](0, 0, 0, 0);
        thiss.model = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].copyFirstLevelStructureWithoutValues(new _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__["ProtectedModelPiece"](null, null));
        // set unsafe
        console.log(new _Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"](null, null), _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].copyFirstLevelStructureWithoutValues(new _Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"](null, null)));
        // throw new Error();
        thiss.unsafe.vertex = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].copyFirstLevelStructureWithoutValues(new _Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"](null, null));
        thiss.unsafe.graph = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].copyFirstLevelStructureWithoutValues(_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph);
        thiss.unsafe.modelRoot = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].copyFirstLevelStructureWithoutValues(_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm);
        thiss.unsafe.node = document.createElement('div');
        thiss.attributes = thiss.a = []; // not an array but i want [] suggestions. todo: se è oggetto suggerisci "." se è array suggerisci "["
        // approximation tricks
        if (filltarget)
            thiss.target = MeasurableEvalContext.fillFake(false);
        thiss.model.unsafemp = thiss.unsafe.model = thiss.model;
        return thiss;
    }
}
var MeasurableOperators;
(function (MeasurableOperators) {
    MeasurableOperators["eq"] = "=";
    MeasurableOperators["lt"] = "<";
    MeasurableOperators["lte"] = "<=";
    MeasurableOperators["gt"] = ">";
    MeasurableOperators["gte"] = ">=";
    MeasurableOperators["ne"] = "!=";
})(MeasurableOperators || (MeasurableOperators = {}));
/*
export class SizeVariables {
  static width: string = 'width';
  static height: string = 'height';
  static positionRelX: string = 'positionRelX';
  static positionRelY: string = 'positionRelY';
  static positionAbsX: string = 'positionAbsX';
  static positionAbsY: string = 'positionAbsY';
  static relativeTargetSizeX: string = 'relativeTargetSizeX';
  static relativeTargetSizeY: string = 'relativeTargetSizeY';
  static relativeTargetSizeW: string = 'relativeTargetSizeW';
  static relativeTargetSizeH: string = 'relativeTargetSizeH';
  static absoluteTargetSizeX: string = 'absoluteTargetSizeX';
  static absoluteTargetSizeY: string = 'absoluteTargetSizeY';
  static absoluteTargetSizeW: string = 'absoluteTargetSizeW';
  static absoluteTargetSizeH: string = 'absoluteTargetSizeH';
}
export class ValidImportLefts {
  static width: string = 'width';
  static height: string = 'height';
  static positionRelX: string = 'positionRelX';
  static positionRelY: string = 'positionRelY';
  static positionAbsX: string = 'positionAbsX';
  static positionAbsY: string = 'positionAbsY';
  static relativeTargetSizeX: string = 'relativeTargetSizeX';
  static relativeTargetSizeY: string = 'relativeTargetSizeY';
  static absoluteTargetSizeX: string = 'absoluteTargetSizeX';
  static absoluteTargetSizeY: string = 'absoluteTargetSizeY';
}*/
// le uso direttamente dentro la libreria U... // export enum constraintConditions { insideRect = 'insideRect', insideNode = 'insideNode', insidePolygon = 'insidePolygon', insideCircle = 'insideCircle'};
class MeasurableRuleParts {
    constructor(a, prefix = null, doNotThrow = false) {
        this.attr = a;
        if (a === null) {
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!doNotThrow, 'MeasurableRuleParts() called on null attribute:', a, prefix);
            this.attr = null;
            this.output = null;
            this.outputAttr = null;
            this.triggeredResults = [];
            this.operator = '';
            this.right = '';
            this.left = '';
            this.target = '';
            this.prefix = '';
            this.fallbackValue = '';
            this.name = '';
            return;
        } // empty constructor used by output clone var.
        if (!prefix) {
            const attrname = a.name.toLowerCase();
            if (a.name.indexOf('_') === 0)
                for (let i = 0; i < Measurable.ruleParsingOrder.length; i++) {
                    prefix = Measurable.ruleParsingOrder[i];
                    if (attrname.indexOf(prefix.toLowerCase()) === 0) {
                        break;
                    }
                }
        }
        if (!prefix && doNotThrow) {
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'The attribute "' + a.name + '" is not a valid measurable rule and cannot be parsed or executed.');
            return;
        }
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!prefix, 'not a rule! ', a.name, a);
        this.prefix = prefix; //a.name.substr(0, prefixendindex); questo può avere ChaRCaSe sballati
        this.name = a.name.substr(prefix.length);
        /*
        let gti = a.value.indexOf('>=');
        gti = gti == -1 ? Number.POSITIVE_INFINITY : gti;
        let eqi = a.value.indexOf('=');
        eqi = eqi == -1 ? Number.POSITIVE_INFINITY : eqi;
        let lti = a.value.indexOf('>=');
        lti = lti == -1 ? Number.POSITIVE_INFINITY : lti;
        const opindex: number = Math.min(gti, eqi, lti);
        if (opindex === Number.POSITIVE_INFINITY) return null;
        const rightindex = opindex + (eqi === opindex ? 1 : 2);
        this.output = new MeasurableRuleParts(null, null);
        this.left = a.value.substr(0, opindex);
        this.operator = a.value.substr(opindex, rightindex);
        this.right = a.value.substr(rightindex);*/
        const parts = a.value.split(Measurable.separator);
        this.left = parts.length > 1 ? parts[0] : '';
        this.operator = parts.length === 3 ? parts[1] : '';
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.prefix === measurableRules.constraint && !this.operator, 'failed to get constraint operator: ', this);
        this.right = parts[parts.length - 1];
        const targetstr = a.ownerElement.getAttribute(('relativeSelectorOf' + a.name));
        this.target = targetstr ? targetstr.trim() : null;
        this.fallbackValue = null;
        let outputname = a.name.substr(1);
        this.outputAttr = this.attr.ownerElement.attributes.getNamedItem(outputname);
        if (!this.outputAttr) {
            this.attr.ownerElement.setAttribute(outputname, '');
            this.outputAttr = this.attr.ownerElement.attributes.getNamedItem(outputname);
        }
    }
    static staticinit() {
        const leftmap = {};
        const operatormap = {};
        console.log(leftmap, measurableRules.variable);
        console.log(leftmap, measurableRules.variable);
        leftmap[measurableRules.variable] = '^$';
        // leftmap[measurableRules.rule] = '^\$##.*(\.values|\.values\.[0-9]+)\$$'; poi diventata "^values\[[0-9]*\]$" poi cancellata
        leftmap[measurableRules.constraint] = '.*'; // should be '^(' + Object.values(SizeVariables).join('|') + ')$';
        leftmap[measurableRules.dynamicStyle] =
            leftmap[measurableRules.dynamicClass] = leftmap[measurableRules.variable];
        // CSS3 selector is not regular language https://stackoverflow.com/questions/12575845/what-is-the-regex-of-a-css-selector
        leftmap[measurableRules.export] =
            leftmap[measurableRules.onRefresh] =
                leftmap[measurableRules.onResizeStart] =
                    leftmap[measurableRules.whileResizing] =
                        leftmap[measurableRules.onResizeEnd] =
                            leftmap[measurableRules.onDragStart] =
                                leftmap[measurableRules.whileDragging] =
                                    leftmap[measurableRules.onDragEnd] = '.+';
        leftmap[measurableRules._jquiRes] = leftmap[measurableRules._jquiDra] = leftmap[measurableRules._jquiRot] = '\'.*';
        operatormap[measurableRules._jquiRes] = {};
        operatormap[measurableRules._jquiDra] = {};
        operatormap[measurableRules._jquiRot] = {};
        operatormap[measurableRules.variable] = {}; // none
        // operatormap[measurableRules.rule] = {};
        // operatormap[measurableRules.rule][MeasurableOperators.eq] = true;
        operatormap[measurableRules.export] = {};
        operatormap[measurableRules.export][MeasurableOperators.eq] = true;
        operatormap[measurableRules.constraint] = {};
        operatormap[measurableRules.constraint][MeasurableOperators.lte] = true;
        operatormap[measurableRules.constraint][MeasurableOperators.eq] = true;
        operatormap[measurableRules.constraint][MeasurableOperators.gte] = true;
        // se lo fai: constraint non lineare NON ha operatori, le cose tipo "insideNode" sono funzioni in U.
        // il valore di fallback è calcolato da un'attributo "fallbackOfLinearConstraint<name>"
        operatormap[measurableRules.dynamicClass] =
            operatormap[measurableRules.dynamicStyle] = operatormap[measurableRules.variable];
        operatormap[measurableRules.onResizeStart] =
            operatormap[measurableRules.whileResizing] =
                operatormap[measurableRules.onResizeEnd] =
                    operatormap[measurableRules.onDragStart] =
                        operatormap[measurableRules.whileDragging] =
                            operatormap[measurableRules.onDragEnd] = operatormap[measurableRules.export];
        MeasurableRuleParts.leftmap = leftmap;
        return MeasurableRuleParts.operatormap = operatormap;
    }
    static fillEvalContext(evalContext, backupContext = null, node, targetquery) {
        console.log('FillEvalContext() called, targetquery: |' + targetquery + '|');
        let tmp;
        let tmpjq;
        let i;
        let j;
        const mp = _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(node);
        const vertex = mp.getVertex();
        const graph = vertex.owner;
        const backupcontext0 = backupContext; // to overwrite ".target"
        // prevent to overwrite the initial backup status with a mid-way status by filling a disposable object instead
        if (!backupContext || backupContext.isFilled)
            backupContext = new MeasurableEvalContext();
        let debug = (window['debug'] === 1);
        let filltarget = () => {
            let backupcontext = 'do not use here, keep changes on the real backupcontext, never write on the mock disposable object.';
            let $tmpjq;
            if (targetquery)
                try {
                    $tmpjq = $(graph.container).find(targetquery);
                }
                catch (e) {
                    console.error('exception:', e);
                    return e;
                }
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(true, '1.context:', evalContext, 'target:', $tmpjq, evalContext.target);
            if ($tmpjq && $tmpjq.length) {
                evalContext.target = new MeasurableEvalContext();
                backupcontext0.target = backupcontext0.target || new MeasurableEvalContext();
                let exception = MeasurableRuleParts.fillEvalContext(evalContext.target, backupcontext0.target, $tmpjq[0], null);
                if (exception) {
                    console.error('exception2:', exception);
                    exception['mysource'] = ['occurred inside this.target'];
                    return exception;
                }
            }
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(true, '2.context:', evalContext, 'target:', $tmpjq, evalContext.target);
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(debug && !evalContext.target, '!target');
        };
        if (targetquery && !backupContext.target) {
            filltarget();
        }
        if (evalContext.isFilled) {
            evalContext.setAbsoluteDocPos(evalContext.absoluteDocPos.x, evalContext.absoluteDocPos.y); // non ho capito perchè ma rel.pos và in casino, quindi rifaccio la set absolutepos che reinizializza tutte a catena
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(evalContext.target && (evalContext.relativePos.y !== evalContext.absoluteGPos.y - evalContext.target.absoluteGPos.y), 'context:', evalContext, 'failed assertion, relativePos != this.absolGpos - target.absolGpos ', evalContext.relativePos, ' !== ', evalContext.absoluteGPos, ' - ', evalContext.target && evalContext.target.absoluteGPos);
            return null;
        } // must call filltarget() (at least to check if target is filled) even if the main context is already filled. so it's placed below.
        backupContext.isFilled = true; // avoid dual fill, se ci sono due eval() questo rollbackerebbe alla scorsa esecuzione.
        evalContext.isFilled = true;
        evalContext.unsafe.node = node;
        backupContext.unsafe.node = node; // node.cloneNode(true) as Element;
        backupContext.unsafe.graph = evalContext.unsafe.graph = graph;
        backupContext.unsafe.vertex = evalContext.unsafe.vertex = vertex;
        backupContext.unsafe.model = evalContext.unsafe.model = mp;
        backupContext.unsafe.modelRoot = evalContext.unsafe.modelRoot = mp.getModelRoot();
        backupContext.model = new _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__["ProtectedModelPiece"](mp, null);
        evalContext.model = new _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__["ProtectedModelPiece"](mp, null);
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!evalContext.model.unsafemp, 'unsafe is unset:', evalContext.model, mp, evalContext);
        delete evalContext.model.applyChanges;
        const isvroot = vertex.getMeasurableNode() === node;
        // console.log('xxxx', 'perchè a volte qua mi misura foreignobject invece che prendere vertex.getsize?', {isvroot, vertex, node});
        const size = isvroot ? graph.toHtmlCoordS(vertex.getSize()) : _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(node);
        backupContext.width = evalContext.width = size.w;
        backupContext.height = evalContext.height = size.h;
        evalContext.graphScroll = graph.scroll.duplicate();
        evalContext.graphZoom = graph.zoom.duplicate();
        evalContext.vertexSize = vertex.getSize().duplicate();
        evalContext.graphSize = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(graph.container).duplicate();
        evalContext.documentSize = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["Size"](0, 0, document.documentElement.scrollWidth, document.documentElement.scrollHeight); // documentElement counts also body's margin
        backupContext.graphScroll = evalContext.graphScroll.duplicate();
        backupContext.graphZoom = evalContext.graphZoom.duplicate();
        backupContext.vertexSize = evalContext.vertexSize.duplicate();
        backupContext.graphSize = evalContext.graphSize.duplicate();
        backupContext.documentSize = evalContext.documentSize.duplicate();
        let attrs = evalContext.unsafe.node.attributes;
        evalContext.a = {};
        evalContext.attributes = evalContext.a;
        backupContext.attributes = null;
        backupContext.a = null;
        for (i = 0; i < attrs.length; i++) {
            evalContext.a[attrs[i].name] = attrs[i].value;
        }
        evalContext.relativePos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"]();
        evalContext.relativeVPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"]();
        evalContext.absoluteGPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](); // all updated when absoluteGpos is updated.
        evalContext.absoluteDocPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"]();
        backupContext.relativePos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"]();
        backupContext.relativeVPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"]();
        backupContext.absoluteGPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"]();
        backupContext.absoluteDocPos = new _Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"]();
        // if (evalContext.target) evalContext.relativePos.y = null; // debug
        evalContext.setAbsoluteDocPos(size.x, size.y);
        backupContext.setAbsoluteDocPos(size.x, size.y);
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(evalContext.target && (evalContext.relativePos.y !== evalContext.absoluteGPos.y - evalContext.target.absoluteGPos.y), 'context:', evalContext, 'failed assertion, relativePos != this.absolGpos - target.absolGpos ', evalContext.relativePos, ' !== ', evalContext.absoluteGPos, ' - ', evalContext.target && evalContext.target.absoluteGPos);
        return null;
    }
    ;
    process(validatefirst = false, vertex = null, graph = null) {
        let out;
        out = this.process0(validatefirst, vertex, graph);
        console.log('process rule:', this.prefix, this, 'out:', out);
        // console.error('triggering rule processed:', this);
        return out;
    }
    process0(validatefirst = false, vertex = null, graph = null) {
        if (!_Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableTemplateGenerator"].constraintMap)
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableTemplateGenerator"].generateMeasurableTemplate();
        let exception;
        const out = new MeasurableRuleParts(null, null, true);
        let tmp;
        let i;
        let j;
        let evalContext = new MeasurableEvalContext();
        let rollbackContext = new MeasurableEvalContext();
        if (validatefirst) {
            const validoperators = Object.keys(MeasurableRuleParts.operatormap[this.prefix]);
            if (validoperators.length > 0 && this.operator || !MeasurableRuleParts.operatormap[this.prefix][this.operator]) {
                out.operator = validoperators.length ? 'must be one of: ' + tmp.join(' ') : 'must be empty, found instead: ' + this.operator + '';
            }
            if (!new RegExp(MeasurableRuleParts.leftmap[this.prefix]).test(this.left)) {
                out.left = validoperators.length ? 'must be one of: ' + tmp.join(' ') : 'must be empty, found instead: ' + this.operator + '';
            }
            exception = MeasurableRuleParts.fillEvalContext(evalContext, rollbackContext, this.attr.ownerElement, out && out.target);
            if (exception) {
                out.left += '\ninvalid target selector: ' + exception.toString();
                out.right += '\ninvalid target selector: ' + exception.toString();
                return out;
            }
            const tmpev = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.right);
            out.right = tmpev.exception || tmpev.return;
            // do nothing, just report validation  and execution debugging results
            if (out.left || out.operator || tmpev.exception)
                return out;
        }
        const exportChanges = (outContext, safeContextRollback) => {
            let ret = true;
            try {
                console.log('exportchanges part 1', outContext.vertexSize.y);
                exportChanges0(outContext, safeContextRollback, false);
                console.log('exportchanges part 2', outContext.vertexSize.y);
                if (outContext.target)
                    exportChanges0(outContext.target, safeContextRollback.target, false);
                console.log('exportchanges part 3', outContext.vertexSize.y);
            }
            catch (e) {
                throw e;
                out.right += +'\n\npartially failed to export changes, likely caused by an overwrite of a predefined variable object.:' + e.toString();
                doRollback();
                ret = false;
            }
            // rollbackContext.unsafe.model.refreshGUI_Alone(); will erase export changes and cause infinite looks on "onRefresh"
            // if (rollbackContext.target) rollbackContext.target.unsafe.model.refreshGUI_Alone();
            return ret;
        };
        let debug = this.prefix === measurableRules.export;
        const doRollback = () => {
            return;
            console.trace('doing rollback');
            try {
                exportChanges0(rollbackContext, rollbackContext, true);
                if (rollbackContext.target)
                    exportChanges0(rollbackContext.target, rollbackContext.target, true);
            }
            catch (e) {
                out.right += +'\npartially failed to rollback changes, contact the developer.:' + e.toString();
                return false;
            }
            return true;
        };
        const exportChanges0 = (outcontext, safeContextRollback, isRollback) => {
            // let oldContext = outcontext;
            let ermsg;
            let rollbackContext = 'donotuse';
            let evalContext = 'donotusetoo';
            const vertex = safeContextRollback.unsafe.vertex;
            const graph = vertex.owner;
            graph.setZoom(outcontext.graphZoom.x, outcontext.graphZoom.y);
            // graph.setScroll(500, 500);//  error here??? questo mi cambia vpos.y
            graph.setScroll(outcontext.graphScroll.x, outcontext.graphScroll.y); //  error here??? questo mi cambia vpos.y
            // U.pe(true, 'meastest');
            // evalContext.graph.setGrid(outcontext.graphGrid.x, outcontext.graphGrid.y);
            const isVertex = (vertex.getMeasurableNode() === safeContextRollback.unsafe.node);
            vertex.setSize(outcontext.vertexSize, false, true);
            if (!outcontext.model && outcontext !== safeContextRollback) {
                out.right += 'invalid final value for this.model = ' + outcontext.model + ', please do not overwrite context variables.';
                doRollback();
                return;
            }
            if (!isVertex) {
                const html = safeContextRollback.unsafe.node instanceof HTMLElement || safeContextRollback.unsafe.node instanceof SVGSVGElement ? safeContextRollback.unsafe.node : null;
                const svgSubElement = !html ? safeContextRollback.unsafe.node : null;
                if (!outcontext.relativeVPos || !_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(safeContextRollback.relativeVPos.x) || !_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(outcontext.relativeVPos.y)) {
                    out.right += '\nAn error inside a measurable condition has happened, an invalid value has been wrote inside the variable "relativeVPos".';
                    doRollback();
                    return;
                }
                if (!html) {
                    out.right += 'inner svg\'s are currently not supported';
                    doRollback();
                    return;
                }
                if (html.style.position !== 'absolute')
                    html.style.position = 'absolute';
                let relativeParentNode = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getRelativeParentNode(safeContextRollback.unsafe.node);
                if (relativeParentNode === vertex.getHtmlRawForeign()) {
                    html.style.top = (outcontext.relativeVPos.y * graph.zoom.y) + 'px';
                    html.style.left = (outcontext.relativeVPos.x * graph.zoom.x) + 'px';
                }
                else {
                    // vertex.setSize(outcontext.vertexSize); already done no need to do anything?
                    /*const parentGpos: GraphPoint = graph.toGraphCoord(U.sizeof(relativeParentNode).tl());
                    html.style.top = ((outcontext.absoluteGPos.y - parentGpos.y) * graph.zoom.y) + 'px';
                    html.style.left = ((outcontext.absoluteGPos.x - parentGpos.x) * graph.zoom.y) + 'px';*/
                }
                if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(outcontext.width))
                    html.style.width = (+outcontext.width) + 'px';
                if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(outcontext.height))
                    html.style.height = (+outcontext.height) + 'px';
            }
            if (!isRollback) {
                // called by rollbackContext because evalContext got the method deleted.
                try {
                    _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__["PendingFunctionCall"].executeProtectedMPBuffer();
                    _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__["PendingFunctionCall"].clearProtectedMPBuffer();
                }
                catch (e) {
                    out.right += 'Error while executing buffered model "set" functions, likely caused by invalid paramerers. ' + e.toString();
                    doRollback();
                    return;
                }
            }
            else {
                _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__["PendingFunctionCall"].clearProtectedMPBuffer();
            }
            // outcontext.setsize o refresh vertex
        };
        let evalOutput = null;
        const executeRight = () => {
            //      window['debug'] = 1;
            exception = MeasurableRuleParts.fillEvalContext(evalContext, rollbackContext, this.attr.ownerElement, out && out.target);
            //      U.pe(window['debug'] === 1, 'out:', out, 'targetStr: |' + out.target + '|', 'exception:', exception, 'evalContext:', evalContext);
            if (exception) {
                out.right += '\nexecution failed, probably for an invalid target selector: ' + exception.toString();
                return false;
            }
            evalOutput = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.right);
            let ret;
            if (evalOutput.exception) {
                out.right += '\n' + evalOutput.exception;
                ret = false;
            }
            else {
                this.outputAttr.value = evalOutput.return;
                out.right += evalOutput.return;
                ret = true;
            }
            if (!ret)
                doRollback();
            return ret;
        };
        const executeSelector = () => {
            exception = MeasurableRuleParts.fillEvalContext(evalContext, rollbackContext, this.attr.ownerElement, null);
            evalOutput = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.target);
            let ret;
            if (evalOutput.exception) {
                throw evalOutput.exception;
                out.target += '\n' + evalOutput.exception;
                ret = false;
            }
            else {
                if (evalOutput.return instanceof _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] || evalOutput.return instanceof _Model_modelPiece__WEBPACK_IMPORTED_MODULE_2__["ProtectedModelPiece"]) {
                    out.target += '\nwarn: output was a ' + _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(evalOutput.return) + ', it got automatically transformed to css+ selector string with .getSelector();';
                    evalOutput.return = evalOutput.return.getSelector();
                }
                this.outputAttr.value = evalOutput.return;
                out.target = evalOutput.return + out.target;
                ret = true;
            }
            if (!ret)
                doRollback();
            return ret;
        };
        // const exportChanges = () => { U.pe(true, todo); };
        let selectorout;
        //U.pe(!rollbackContext.target, '!starget-1', evalOutput.outContext.target);
        if (this.target && !executeSelector())
            return out;
        switch (this.prefix) {
            case measurableRules._jquiRes:
            case measurableRules._jquiDra:
            case measurableRules._jquiRot:
                out.prefix = 'invalid prefix or wrong execution time. ' + this.prefix + ' rules are parsed at refresh time.';
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, out.prefix);
                return out;
            case measurableRules.console:
                try {
                    out.right += _Joiner__WEBPACK_IMPORTED_MODULE_1__["MyConsole"].console.execCommand(this.right);
                }
                catch (e) {
                    out.right += 'command failed:' + e.toString();
                }
                return out;
            default:
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected rule: ' + this.prefix, this);
                out.prefix = 'unexpected rule:' + this.prefix;
                return out;
            case measurableRules.bind:
                if (!executeRight())
                    return out;
                if (!exportChanges(evalOutput.outContext, rollbackContext))
                    return out;
                let newmp = evalOutput.return;
                if (!(newmp instanceof _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"])) {
                    out.right += 'returned value is not a ModelPiece.';
                    return out;
                }
                newmp.linkToLogic(this.attr.ownerElement);
                return out;
            case measurableRules.variable:
                if (!executeRight())
                    return out;
                if (!exportChanges(evalOutput.outContext, rollbackContext))
                    return out;
                return out;
            case measurableRules.onDragStart:
            case measurableRules.whileDragging:
            case measurableRules.onDragEnd:
            case measurableRules.onResizeStart:
            case measurableRules.whileResizing:
            case measurableRules.onResizeEnd:
            case measurableRules.onRotationStart:
            case measurableRules.whileRotating:
            case measurableRules.onRotationEnd:
            case measurableRules.onRefresh:
                out.triggeredResults = [];
                ///// check precondition
                exception = MeasurableRuleParts.fillEvalContext(evalContext, rollbackContext, this.attr.ownerElement, out && out.target);
                if (exception) {
                    out.left += '\ninvalid target selector: ' + exception.toString();
                    out.right += '\ninvalid target selector: ' + exception.toString();
                    return out;
                }
                vertex = rollbackContext.unsafe.vertex;
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(evalContext.target && (evalContext.relativePos.y !== evalContext.absoluteGPos.y - evalContext.target.absoluteGPos.y), 'context:', evalContext, 'failed assertion, relativePos != this.absolGpos - target.absolGpos ', evalContext.relativePos, ' !== ', evalContext.absoluteGPos, ' - ', evalContext.target && evalContext.target.absoluteGPos);
                evalOutput = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].evalInContext(evalContext, this.left);
                if (evalOutput.exception) {
                    out.left += '' + evalOutput.exception;
                    out.right += 'not executed.';
                    return out;
                }
                out.left = evalOutput.return;
                if (!out.left) {
                    out.right += 'not executed.';
                    return out;
                }
                console.log('5xd', evalOutput.outContext, rollbackContext);
                // return null; // per qualche motivo questo export changes mi azzera la Y del vertex.
                if (!exportChanges(evalOutput.outContext, rollbackContext))
                    return out; // va messo qui, se lo metto dopo i triggers equivale ad un rollback dei loro cambiamenti.
                ///// try execution
                selectorout = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].processSelectorPlusPlus(this.right, false, $(vertex.owner.container), $(this.attr.ownerElement), Measurable.GlobalPrefix);
                if (selectorout.exception) {
                    out.right += (out.right ? '\n' : '') + selectorout.exception.toString();
                    return out;
                }
                // last validation and execution.
                const htmlFoundsevt = [];
                const vertexFoundsevt = [];
                // console.log('resultset', selectorout);
                for (i = 0; i < selectorout.resultSetAttr.length; i++) {
                    const a = selectorout.resultSetAttr[i];
                    let ruleprefix = Measurable.isExecutableRule(a.name, true);
                    if (!ruleprefix)
                        continue;
                    let html = a.ownerElement;
                    let vertex;
                    let pos = htmlFoundsevt.indexOf(html);
                    if (pos > 0) {
                        vertex = vertexFoundsevt[pos];
                    }
                    else {
                        vertex = _Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].getvertexByHtml(html);
                        htmlFoundsevt.push(html);
                        vertexFoundsevt.push(vertex);
                    }
                    let mr = new MeasurableRuleParts(a, ruleprefix, true);
                    try {
                        out.triggeredResults.push(mr.process(false, vertex));
                    }
                    catch (e) {
                        out.right += '\n' + e.toString(); /* must not stop if only 1 triggered fails. */
                    }
                }
                out.right += selectorout.jqselector + ' ' + _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].AttributeSelectorOperator + ' ' + selectorout.attrselector
                    + (out.right.length ? '\n' : '') + out.right;
                return out;
            case measurableRules.export:
                ////////// prima trovo i bersagli, così se non ci sono mi fermo.
                vertex = vertex || _Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].getvertexByHtml(this.attr.ownerElement);
                this.left = this.left.trim();
                this.left = this.left || 'this ->';
                selectorout = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].processSelectorPlusPlus(this.left, false, $(vertex.owner.container), $(this.attr.ownerElement), null);
                if (selectorout.exception) {
                    out.left += (out.left ? '\n' : '') + selectorout.exception.toString();
                    return out;
                }
                out.left = 'matched ' + selectorout.resultSetElem.length + ' elements and ' + selectorout.resultSetAttr.length + ' attributes. search "xprt" on console to see them';
                console.info('xprt', 'Matched elements:', selectorout.resultSetElem, 'Matched attributes:', selectorout.resultSetAttr, { selectorout, thiss: this, context: evalContext });
                if (selectorout.resultSetAttr.length + selectorout.resultSetElem.length === 0) {
                    out.right += 'not executed.';
                    return out;
                }
                ////////// can proceed to execution.
                if (!executeRight())
                    return out;
                if (!exportChanges(evalOutput.outContext, rollbackContext))
                    return out;
                if (evalOutput.return instanceof Object) {
                    if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isFunction(evalOutput.return.toString)) {
                        evalOutput.return = evalOutput.return.toString();
                    }
                    else
                        evalOutput.return = JSON.stringify(evalOutput.return);
                }
                out.right += evalOutput.return;
                ////////// exporting resulting value
                for (i = 0; i < selectorout.resultSetAttr.length; i++) {
                    selectorout.resultSetAttr[i].value = evalOutput.return;
                }
                if (!selectorout.resultSetAttr)
                    for (i = 0; i < selectorout.resultSetElem.length; i++) {
                        selectorout.resultSetElem[i].innerHTML = evalOutput.return;
                    }
                return out;
            case measurableRules.dynamicClass:
                if (!executeRight()) {
                    out.right += '\n If it isn\'t code, try wrapping it in quotes.';
                    return out;
                }
                if (!exportChanges(evalOutput.outContext, rollbackContext))
                    return out;
                if (evalOutput.return instanceof Object) {
                    if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isFunction(evalOutput.return.toString)) {
                        evalOutput.return = evalOutput.return.toString();
                    }
                    else
                        evalOutput.return = JSON.stringify(evalOutput.return);
                }
                // out.right += evalOutput.return;
                // start setting classes
                const classes = (evalOutput.return + '').split(' ');
                for (i = 0; i < classes.length; i++) {
                    const cl = classes[i];
                    if (!cl[i].length)
                        continue;
                    if (cl[i][0] === '+') {
                        this.attr.ownerElement.classList.add(cl[i].substr(1));
                        continue;
                    }
                    if (cl[i][0] === '-') {
                        this.attr.ownerElement.classList.remove(cl[i].substr(1));
                        continue;
                    }
                    out.right += '\nall class tokens must start with a plus (if inserting) or minus (if removing) sign.';
                    return out;
                }
                return out;
            case measurableRules.dynamicStyle:
                if (!executeRight()) {
                    out.right += '\n If it isn\'t code, try wrapping it in quotes.';
                    return out;
                }
                if (!exportChanges(evalOutput.outContext, rollbackContext))
                    return out;
                if (evalOutput.return instanceof Object) {
                    if (_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isFunction(evalOutput.return.toString)) {
                        evalOutput.return = evalOutput.return.toString();
                    }
                    else
                        evalOutput.return = JSON.stringify(evalOutput.return);
                }
                // out.right += evalOutput.return;
                // start setting styles
                console.log('mergeSTyles:', this.attr.ownerElement, evalOutput.return);
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mergeStyles(this.attr.ownerElement, null, evalOutput.return, true);
                return out;
            case measurableRules.constraint:
                ///// left validation
                this.left = this.left.trim();
                if (!_Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableTemplateGenerator"].constraintMap[this.left]) {
                    console.trace('icr ');
                    console.error('irc: invalid constraint rule, found:', this.left, 'not in: ', _Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableTemplateGenerator"].constraintMap); //
                    out.left += 'invalid.';
                    out.right += 'not processed.';
                    return out;
                }
                console.trace('icr ', { evalContext, evalOutput });
                console.info('irc: valid constraint rule, found:', this.left, ' in: ', _Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableTemplateGenerator"].constraintMap);
                //console.log('preconstraint1');
                //        const preLeft: number = eval("evalContext." + this.left); // must be a simple eval, just because i evalContext[this.left] would become evalContext[vpos.x]
                //U.pe(!rollbackContext.target, '!starget1', evalOutput.outContext.target);
                if (!executeRight())
                    return out;
                //U.pe(!rollbackContext.target, '!starget2', evalOutput.outContext.target);
                //console.log('preconstraint2', evalOutput.outContext, rollbackContext);
                if (!exportChanges(evalOutput.outContext, rollbackContext))
                    return out;
                //console.log('preconstraint3', evalOutput.outContext, rollbackContext);
                let postLeft = null;
                try {
                    postLeft = eval("evalOutput.outContext." + this.left);
                } // this one CAN fail if the user deletes the predefined variable in the context.
                catch (e) {
                    out.right += '\n' + e.toString() + '\n; likely caused by an overwrite on a predefined variable inside the path "' + this.left + '".';
                    return out;
                }
                // console.log('preconstraint4', evalOutput.outContext, rollbackContext);
                if (this.operator === '=')
                    this.operator = '==';
                const condition = eval(postLeft + this.operator + evalOutput.return);
                out.operator += '' + !!condition;
                let isTargeting = this.left.indexOf('target.') === 0;
                const left = isTargeting ? this.left.substr('target.'.length) : this.left;
                let oc0 = evalOutput.outContext;
                let rc0 = rollbackContext;
                let oc = isTargeting ? evalOutput.outContext.target : evalOutput.outContext;
                let rc = isTargeting ? rollbackContext.target : rollbackContext;
                // U.pe(!isTargeting, 'left side is not targeting');
                if (isTargeting && (!oc || !rc)) {
                    out.left = 'this kind of rule cannot be executed without a target.';
                    return out;
                }
                switch (left) {
                    default:
                        out.left += 'invalid left part, use one of the precompiled suggestions.';
                        doRollback();
                        // U.pe(true, 'unexpected left part:', this.left, 'but only validated left parts should reach here.');
                        return out;
                    case ConstraintLeftAdmittedsStatic.height:
                        out.left += '' + rc.height;
                        if (!condition)
                            oc.setHeight(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.width:
                        out.left += '' + rc.width;
                        if (!condition)
                            oc.setWidth(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.absoluteDocPosX:
                        out.left += '' + rc.absoluteDocPos.x;
                        if (!condition)
                            oc.setAbsoluteDocPosX(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.absoluteDocPosY:
                        out.left += '' + rc.absoluteDocPos.y;
                        if (!condition)
                            oc.setAbsoluteDocPosY(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.absoluteGPosX:
                        out.left += '' + rc.absoluteGPos.x;
                        if (!condition)
                            oc.setAbsoluteGPosX(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.absoluteGPosY:
                        out.left += '' + rc.absoluteGPos.y;
                        if (!condition)
                            oc.setAbsoluteGPosY(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.relativePosX:
                        out.left += '' + rc.relativePos.x;
                        if (!condition)
                            oc.setRelativePosX(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.relativePosY:
                        out.left += '' + rc.relativePos.y;
                        if (!condition)
                            oc.setRelativePosY(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.relativeVPosX:
                        out.left += '' + rc.relativeVPos.x;
                        if (!condition)
                            oc.setRelativeVPosX(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.relativeVPosY:
                        out.left += '' + rc.relativeVPos.y;
                        if (!condition)
                            oc.setRelativeVPosY(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.vertexSizeX:
                        out.left += '' + rc.vertexSize.x;
                        if (!condition)
                            oc.setVertexSizeX(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.vertexSizeY:
                        out.left += '' + rc.vertexSize.y;
                        if (!condition)
                            oc.setVertexSizeY(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.vertexSizeW:
                        out.left += '' + rc.vertexSize.w;
                        if (!condition)
                            oc.setVertexSizeW(evalOutput.return);
                        break;
                    case ConstraintLeftAdmittedsStatic.vertexSizeH:
                        out.left += '' + rc.vertexSize.h;
                        if (!condition)
                            oc.setVertexSizeH(evalOutput.return);
                        break;
                }
                exportChanges(oc0, rc0); // commit
                return out;
        }
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'should never reach here');
        return null;
    }
}
MeasurableRuleParts.operatormap = null;
var measurableRules;
(function (measurableRules) {
    // check when updating measurable rules: 1
    measurableRules["_jquiRes"] = "_jquiRes";
    measurableRules["_jquiDra"] = "_jquiDra";
    measurableRules["_jquiRot"] = "_jquiRot";
    measurableRules["console"] = "_Console";
    measurableRules["bind"] = "_Bind";
    measurableRules["variable"] = "_Var";
    measurableRules["export"] = "_Export";
    measurableRules["constraint"] = "_Constraint";
    measurableRules["dynamicClass"] = "_dClass";
    measurableRules["dynamicStyle"] = "_dStyle";
    measurableRules["onRefresh"] = "_onRefresh";
    measurableRules["onResizeStart"] = "_onResizeStart";
    measurableRules["whileResizing"] = "_whileResizing";
    measurableRules["onResizeEnd"] = "_onResizeEnd";
    measurableRules["onDragStart"] = "_onDragStart";
    measurableRules["whileDragging"] = "_whileDragging";
    measurableRules["onDragEnd"] = "_onDragEnd";
    measurableRules["onRotationStart"] = "_onRotationStart";
    measurableRules["whileRotating"] = "_whileRotating";
    measurableRules["onRotationEnd"] = "_onRotationEnd";
    // linearConstraint = '_linearConstraint',
    /*
    studia un miglioramento di rule per poter:
    settare una reference
    settare un valore
    gestire array di valori?
    soluzione: crea array values nel contesto.
    values[] = expressionArray
    values[i] = expressionSimpleValue
    ?
    come posso specificare più semplicemente se settare tutti i valori o solo uno senza usare una left-part?
    remind esisterà anche il comando console:
    set $something$ = value
    e devo renderlo significativamente più semplice di quello
  
  
    */
    // onMouseEnter = '_onMouseEnter',
    // onMouseLeave = '_onMouseLeave',
    // onFocus = '_onBlur',
    // onBlur = '_onBlur', it's ok to apply css changes here but not change in data, this should be handled by css only.ù
})(measurableRules || (measurableRules = {}));
class MeasurableRuleLists {
    constructor() {
        // check when updating measurable rules: 2
        this.all = [];
        this._Var = [];
        this._jquiDra = [];
        this._jquiRes = [];
        this._jquiRot = [];
        this._Console = [];
        this._Bind = [];
        this._Export = [];
        this._Constraint = [];
        this._dClass = [];
        this._dStyle = [];
        this._onRefresh = [];
        this._onResizeStart = [];
        this._whileResizing = [];
        this._onResizeEnd = [];
        this._onDragStart = [];
        this._whileDragging = [];
        this._onDragEnd = [];
        this._onRotationStart = [];
        this._whileRotating = [];
        this._onRotationEnd = [];
    }
}
class RotatableOptions {
    constructor() {
        this.degrees = 0;
        this.handle = undefined;
        this.handleOffset = { top: 0, left: 0 };
        this.rotationCenterOffset = { top: 0, left: 0 };
        this.snap = false;
        this.step = undefined;
        this.transforms = undefined; // non chiaro neanche negli esempi demo. googla.
        this.wheelRotate = undefined; // NB: non previene lo scroll della pagina come azione default.
        this.rotate = undefined; // NB: se la sua trimmed version non inizia con function oppure con /^([^)]+)[\s]*=>$/ allora aggiungicelo tu a tempo di esecuzione? o non vale la pena per degradazione performance?.
        this.start = undefined; // in realtà è "start"
        this.stop = undefined; // in realtà è "stop"
        this.disabled = false;
    }
}
class Measurable {
    static staticinit() {
        const arr = Object.values(measurableRules);
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(arr, measurableRules.variable);
        arr.push(measurableRules.variable);
        Measurable.eventTriggers = [measurableRules.onRefresh,
            measurableRules.onDragStart, measurableRules.onDragEnd, measurableRules.whileDragging,
            measurableRules.onResizeStart, measurableRules.onResizeEnd, measurableRules.whileResizing,
            measurableRules.onRotationStart, measurableRules.onRotationEnd, measurableRules.whileRotating,
        ];
        Measurable.JQUIRules = [measurableRules._jquiDra, measurableRules._jquiRes, measurableRules._jquiRot];
        Measurable.executableRules = [];
        Measurable.executableRulesLowerCase = [];
        Measurable.ruleToUppercase = {};
        for (let key in measurableRules) {
            let val = measurableRules[key];
            let valLowercase = val.toLowerCase();
            Measurable.ruleToUppercase[valLowercase] = val;
            if (Measurable.eventTriggers.indexOf(val) !== -1)
                continue;
            if (Measurable.JQUIRules.indexOf(val) !== -1)
                continue;
            Measurable.executableRules.push(val);
            Measurable.executableRulesLowerCase.push(valLowercase);
        }
        Measurable.eventTriggersLowerCase = [];
        Measurable.eventTriggersLowerCase.length = Measurable.eventTriggers.length;
        Measurable.JQUIRulesLowerCase = [];
        Measurable.JQUIRulesLowerCase.length = Measurable.eventTriggers.length;
        for (let i = 0; i < Measurable.eventTriggers.length; i++) {
            Measurable.eventTriggersLowerCase[i] = Measurable.eventTriggers[i].toLowerCase();
        }
        for (let i = 0; i < Measurable.JQUIRules.length; i++) {
            Measurable.JQUIRulesLowerCase[i] = Measurable.JQUIRules[i].toLowerCase();
        }
        return arr;
    }
    static getRuleList(elem, rulefilter = null, debug = false) {
        let i;
        let j;
        const rulefilterobj = rulefilter && rulefilter.length ? _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toDictionary(rulefilter) : null;
        let ret = new MeasurableRuleLists();
        let prefix;
        for (i = 0; i < elem.attributes.length; i++) {
            const attr = elem.attributes[i];
            const attrname = attr.name.toLowerCase();
            for (j = 0; j < Measurable.ruleParsingOrder.length; j++) {
                // for (j = 0; j < Measurable.rulesListParsingOrder.length; j++) {
                prefix = Measurable.ruleParsingOrder[j];
                if (rulefilterobj && !rulefilterobj[prefix])
                    continue;
                if (attrname.indexOf(prefix.toLowerCase()) === 0) {
                    // if (prefix === '_' && attr.name.indexOf('_ng') === 0) continue;
                    ret.all.push(new MeasurableRuleParts(attr, prefix));
                    _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!ret[prefix], 'Incoerenza tra MeasurableRuleLists e measurableRules:', prefix, ret);
                    ret[prefix].push(new MeasurableRuleParts(attr, prefix));
                    break;
                }
            }
        }
        return ret;
    }
    // ################ oldies but good
    static measurableElementSetup($root, resConfig = null, rotConfig = null, dragConfig = null, v = null) {
        let arr = $root.find('.measurable').addBack('.measurable');
        const vroot = v ? v.getMeasurableNode() : null;
        for (let i = 0; i < arr.length; i++) {
            let h = arr[i];
            if (arr[i] === vroot) {
                Measurable.measurableElementSetupSingle(h, resConfig, rotConfig, dragConfig, v);
            }
            else
                Measurable.measurableElementSetupSingle(h, resConfig, rotConfig, dragConfig);
        }
    }
    // todo: devo importare rotatableOptions, ResizableOptions è la vra classe dichiarata dalla libreria jqui, non la mia. devo fare lo stesso con rotatable.
    static measurableElementSetupSingle(elem0, resConfig = null, rotConfig = null, draConfig = null, isvroot = null) {
        const elem = elem0;
        // apply resizableborder AND jquery.resize
        if (!elem.classList || !elem.classList.contains('measurable') || elem === document) {
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid measurable:', elem, !elem.classList, '||', !elem.classList.contains('measurable'));
            return;
        }
        _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].resizableBorderSetup(elem);
        if (!resConfig) {
            resConfig = new ResizableOptionsImpl();
        }
        if (!rotConfig) {
            rotConfig = new RotatableOptions();
        }
        if (!draConfig) {
            draConfig = new DraggableOptionsImpl();
        }
        let func = null;
        let attrval = null;
        let i;
        let arr = [];
        arr.push({ config: resConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Resizableoptions"].create, jquiname: 'create' });
        arr.push({ config: resConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Resizableoptions"].resizeStart, jquiname: 'start' });
        arr.push({ config: resConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Resizableoptions"].resizing, jquiname: 'resize' });
        arr.push({ config: resConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Resizableoptions"].resizeStop, jquiname: 'stop' });
        arr.push({ config: draConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Draggableoptions"]['create'], jquiname: 'create' });
        arr.push({ config: draConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Draggableoptions"].dragStart, jquiname: 'start' });
        arr.push({ config: draConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Draggableoptions"].dragging, jquiname: 'resize' });
        arr.push({ config: draConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Draggableoptions"].dragStop, jquiname: 'stop' });
        arr.push({ config: rotConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Rotatableoptions"]['create'], jquiname: 'create' });
        arr.push({ config: rotConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Rotatableoptions"].onRotationStart, jquiname: 'start' });
        arr.push({ config: rotConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Rotatableoptions"].onRotating, jquiname: 'resize' });
        arr.push({ config: rotConfig, friendlyname: _Joiner__WEBPACK_IMPORTED_MODULE_1__["Rotatableoptions"].onRotationEnd, jquiname: 'stop' });
        resConfig.prefix = measurableRules._jquiRes;
        rotConfig.prefix = measurableRules._jquiRot;
        draConfig.prefix = measurableRules._jquiDra;
        for (i = 0; i < arr.length; i++) {
            attrval = elem.getAttribute((arr[i].config.prefix + arr[i].friendlyname));
            attrval = attrval && attrval.trim();
            if (!attrval)
                func = null;
            else
                try {
                    func = eval(attrval);
                    func = (e, ui) => {
                        try {
                            func(e, ui);
                        }
                        catch (e) {
                            _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'error evaluating' + arr[i].friendlyname + ':', e);
                        }
                    };
                }
                catch (e) {
                    _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid function as argument of resize create', e);
                    func = null;
                }
            // se resConfig[triggername] non è settato, lo setto a func.
            arr[i].config[arr[i].jquiname] = arr[i].config[arr[i].jquiname] || func;
        }
        if (isvroot) {
            isvroot.dragConfig = draConfig;
            const oldconfig = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneObj(resConfig);
            oldconfig.resize = resConfig.resize;
            oldconfig.start = resConfig.start;
            oldconfig.stop = resConfig.stop; // because they will not be copied by cloneobj, todo: check if other functions are missing
            resConfig.resize = (e, ui) => {
                console.log('measurableevt on resizing', { e, ui, oldHandler: oldconfig.resize });
                isvroot.autosizeNew(true, true, measurableRules.whileResizing);
                if (oldconfig.resize)
                    oldconfig.resize(e, ui);
            };
            resConfig.start = (e, ui) => {
                isvroot.autosizeNew(true, true, measurableRules.onResizeStart);
                console.log('measurableevt on resizeStart', { e, ui, oldHandler: oldconfig.start });
                if (oldconfig.start)
                    oldconfig.start(e, ui);
            };
            resConfig.stop = (e, ui) => {
                isvroot.autosizeNew(true, true, measurableRules.onResizeEnd);
                console.log('measurableevt on resizeEnd', { e, ui, oldHandler: oldconfig.stop && oldconfig.stop.toString() });
                if (oldconfig.stop)
                    oldconfig.stop(e, ui);
            };
        }
        delete resConfig.prefix;
        delete rotConfig.prefix;
        delete draConfig.prefix;
        for (const jquikey in resConfig) {
            let friendlykey;
            switch (jquikey) {
                default:
                    friendlykey = jquikey;
                    let customparameterval = elem.getAttribute((measurableRules._jquiRes + friendlykey));
                    if (resConfig[jquikey] || !customparameterval) {
                        continue;
                    }
                    resConfig[jquikey] = customparameterval;
                    break;
                // case U.varname2(resConfig.disabled, resConfig): break;
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.create):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.start):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.stop):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(resConfig, resConfig.resize):
                    break;
            }
        }
        let isRotatableCustomized = false;
        for (const jquikey in rotConfig) {
            let friendlykey;
            switch (jquikey) {
                default:
                    friendlykey = jquikey;
                    let customparameterval = elem.getAttribute((measurableRules._jquiRot + friendlykey));
                    if (rotConfig[jquikey] || !customparameterval || rotConfig[jquikey] === customparameterval) {
                        continue;
                    }
                    rotConfig[jquikey] = customparameterval;
                    isRotatableCustomized = true;
                    break;
                // case U.varname2(resConfig.disabled, resConfig): break;
                // case U.varname2(rotConfig, rotConfig.create):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(rotConfig, rotConfig.start):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(rotConfig, rotConfig.stop):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(rotConfig, rotConfig.rotate):
                    break;
            }
        }
        let defaultAction = (friendlykey, jquikey) => {
            let customparameterval = elem.getAttribute((measurableRules._jquiDra + friendlykey));
            if (draConfig[jquikey] || !customparameterval) {
                return;
            }
            draConfig[jquikey] = customparameterval;
        };
        for (const jquikey in draConfig) {
            let friendlykey;
            let customparameterval;
            switch (jquikey) {
                default:
                    friendlykey = jquikey;
                    defaultAction(friendlykey, jquikey);
                    break;
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["Draggableoptions"].axis:
                    friendlykey = jquikey;
                    defaultAction(friendlykey, jquikey);
                    console.log('draconfig.setaxis: ', draConfig[jquikey], elem, jquikey, friendlykey);
                    const val = _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(draConfig[jquikey] + '', ' ', '');
                    if (val === null || val === undefined) {
                        draConfig[jquikey] = '';
                        break;
                    }
                    // else if (val === 'x,y') { draConfig[jquikey] = null; break; } null funziona come se fosse 'x,y', non so se 'x,y' funziona lo stesso. provo.
                    else {
                        ;
                    }
                    break;
                // case U.varname2(resConfig.disabled, resConfig): break;
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.create):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.start):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.stop):
                case _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].varname2(draConfig, draConfig.drag):
                    break;
            }
        }
        const $elem = $(elem);
        console.log('measurableConfig:  drag:', draConfig, 'res:', resConfig, 'rot:', rotConfig, 'isVertex:', isvroot, 'axis:', draConfig.axis, 'handles:', resConfig.handles, elem);
        if (draConfig.axis !== undefined && draConfig.axis !== '' && !isvroot) {
            $elem.draggable(draConfig);
            if (draConfig.disabled)
                $elem.draggable('disable');
        }
        if (resConfig.handles && resConfig.handles !== '') {
            $elem.resizable(resConfig);
            if (resConfig.disabled)
                $elem.resizable('disable');
        }
        if (isRotatableCustomized) {
            let $elemr = $elem;
            if (!$elemr.rotatable)
                _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].oneTime('RotatableSupport', _Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw, true, '$.rotatable is not supported yet.');
            else
                $elemr.rotatable(rotConfig);
            if (rotConfig.disabled)
                $elemr.rotatable('disable');
        }
    }
    static isRuleOfKind(name, rules = null, useLowerCaseRules = null) {
        let ret = Measurable.isRuleOfKind0(name, rules, useLowerCaseRules);
        console.log('rulevalidation:', ret, Measurable.ruleToUppercase);
        return ret;
    }
    static isRuleOfKind0(name, rules = null, useLowerCaseRules = null) {
        name = useLowerCaseRules ? name.toLowerCase() : name;
        let arr = useLowerCaseRules ? useLowerCaseRules : rules;
        let i;
        for (i = 0; i < arr.length; i++) {
            if (name.indexOf(arr[i]) === 0)
                return useLowerCaseRules ? Measurable.ruleToUppercase[arr[i]] : arr[i];
        }
        return null;
    }
    static isExecutableRule(name, caseInsensitive = false) {
        return Measurable.isRuleOfKind(name, Measurable.executableRules, caseInsensitive ? Measurable.executableRulesLowerCase : null);
    }
    static isJQUIRule(name, caseInsensitive = false) {
        return Measurable.isRuleOfKind(name, Measurable.JQUIRules, caseInsensitive ? Measurable.JQUIRulesLowerCase : null);
    }
    static isTriggerRule(name, caseInsensitive = false) {
        return Measurable.isRuleOfKind(name, Measurable.eventTriggers, caseInsensitive ? Measurable.eventTriggersLowerCase : null);
    }
}
Measurable.separator = '≔';
Measurable.GlobalPrefix = '_';
Measurable.ruleParsingOrder = Measurable.staticinit();
class ResizableOptionsImpl {
    constructor() {
        this.alsoResize = undefined;
        this.animate = undefined;
        this.animateDuration = undefined;
        this.animateEasing = undefined;
        this.aspectRatio = undefined;
        this.autoHide = undefined;
        this.cancel = undefined;
        this.containment = undefined;
        this.create = undefined;
        this.delay = undefined;
        this.disabled = undefined;
        this.distance = undefined;
        this.ghost = undefined;
        this.grid = undefined;
        this.handles = undefined;
        this.helper = undefined;
        this.maxHeight = undefined;
        this.maxWidth = undefined;
        this.minHeight = undefined;
        this.minWidth = undefined;
        this.resize = undefined;
        this.start = undefined;
        this.stop = undefined;
    }
}
class DraggableOptionsImpl {
    constructor() {
        this.addClasses = undefined;
        this.appendTo = undefined;
        this.axis = undefined;
        this.cancel = undefined;
        this.classes = undefined;
        this.connectToSortable = undefined;
        this.containment = undefined;
        this.create = undefined;
        this.cursor = undefined;
        this.cursorAt = undefined;
        this.delay = undefined;
        this.disabled = undefined;
        this.distance = undefined;
        this.drag = undefined;
        this.grid = undefined;
        this.handle = undefined;
        this.helper = undefined;
        this.iframeFix = undefined;
        this.opacity = undefined;
        this.refreshPositions = undefined;
        this.revert = undefined;
        this.revertDuration = undefined;
        this.scope = undefined;
        this.scroll = undefined;
        this.scrollSensitivity = undefined;
        this.scrollSpeed = undefined;
        this.snap = undefined;
        this.snapMode = undefined;
        this.snapTolerance = undefined;
        this.stack = undefined;
        this.start = undefined;
        this.stop = undefined;
        this.zIndex = undefined;
    }
}


/***/ }),

/***/ "./src/common/prj_json2xml.js":
/*!************************************!*\
  !*** ./src/common/prj_json2xml.js ***!
  \************************************/
/*! exports provided: json2xml */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "json2xml", function() { return json2xml; });
/*	This work is licensed under Creative Commons GNU LGPL License.

	License: http://creativecommons.org/licenses/LGPL/2.1/
   Version: 0.9
	Author:  Stefan Goessner/2006
	Web:     http://goessner.net/ 
*/
function json2xml(o, tab/*string, string*/) {
   var toXml = function(v, name, ind) {
      var xml = "";
      if (v instanceof Array) {
         for (var i=0, n=v.length; i<n; i++)
            xml += ind + toXml(v[i], name, ind+"\t") + "\n";
      }
      else if (typeof(v) == "object") {
         var hasChild = false;
         xml += ind + "<" + name;
         for (var m in v) {
            if (m.charAt(0) == "@")
               xml += " " + m.substr(1) + "=\"" + v[m].toString() + "\"";
            else
               hasChild = true;
         }
         xml += hasChild ? ">" : "/>";
         if (hasChild) {
            for (var m in v) {
               if (m == "#text")
                  xml += v[m];
               else if (m == "#cdata")
                  xml += "<![CDATA[" + v[m] + "]]>";
               else if (m.charAt(0) != "@")
                  xml += toXml(v[m], m, ind+"\t");
            }
            xml += (xml.charAt(xml.length-1)=="\n"?ind:"") + "</" + name + ">";
         }
      }
      else {
         xml += ind + "<" + name + ">" + v.toString() +  "</" + name + ">";
      }
      return xml;
   }, xml="";
   for (var m in o)
      xml += toXml(o[m], m, "");
   return tab ? xml.replace(/\t/g, tab) : xml.replace(/\t|\n/g, "");
}


/***/ }),

/***/ "./src/common/prj_xml2json.js":
/*!************************************!*\
  !*** ./src/common/prj_xml2json.js ***!
  \************************************/
/*! exports provided: xml2json */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xml2json", function() { return xml2json; });
/*	This work is licensed under Creative Commons GNU LGPL License.

	License: http://creativecommons.org/licenses/LGPL/2.1/
   Version: 0.9
	Author:  Stefan Goessner/2006
	Web:     http://goessner.net/ 
*/
function xml2json(xml, tab = '    '/*XML_DOM, string*/) {
   var X = {
      toObj: function(xml) {
         var o = {};
         if (xml.nodeType==1) {   // element node ..
            if (xml.attributes.length)   // element with attributes  ..
               for (var i=0; i<xml.attributes.length; i++)
                  o["@"+xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue||"").toString();
            if (xml.firstChild) { // element has child nodes ..
               var textChild=0, cdataChild=0, hasElementChild=false;
               for (var n=xml.firstChild; n; n=n.nextSibling) {
                  if (n.nodeType==1) hasElementChild = true;
                  else if (n.nodeType==3 && n.nodeValue.match(/[^ \f\n\r\t\v]/)) textChild++; // non-whitespace text
                  else if (n.nodeType==4) cdataChild++; // cdata section node
               }
               if (hasElementChild) {
                  if (textChild < 2 && cdataChild < 2) { // structured element with evtl. a single text or/and cdata node ..
                     X.removeWhite(xml);
                     for (var n=xml.firstChild; n; n=n.nextSibling) {
                        if (n.nodeType == 3)  // text node
                           o["#text"] = X.escape(n.nodeValue);
                        else if (n.nodeType == 4)  // cdata node
                           o["#cdata"] = X.escape(n.nodeValue);
                        else if (o[n.nodeName]) {  // multiple occurence of element ..
                           if (o[n.nodeName] instanceof Array)
                              o[n.nodeName][o[n.nodeName].length] = X.toObj(n);
                           else
                              o[n.nodeName] = [o[n.nodeName], X.toObj(n)];
                        }
                        else  // first occurence of element..
                           o[n.nodeName] = X.toObj(n);
                     }
                  }
                  else { // mixed content
                     if (!xml.attributes.length)
                        o = X.escape(X.innerXml(xml));
                     else
                        o["#text"] = X.escape(X.innerXml(xml));
                  }
               }
               else if (textChild) { // pure text
                  if (!xml.attributes.length)
                     o = X.escape(X.innerXml(xml));
                  else
                     o["#text"] = X.escape(X.innerXml(xml));
               }
               else if (cdataChild) { // cdata
                  if (cdataChild > 1)
                     o = X.escape(X.innerXml(xml));
                  else
                     for (var n=xml.firstChild; n; n=n.nextSibling)
                        o["#cdata"] = X.escape(n.nodeValue);
               }
            }
            if (!xml.attributes.length && !xml.firstChild) o = null;
         }
         else if (xml.nodeType==9) { // document.node
            o = X.toObj(xml.documentElement);
         }
         else alert("unhandled node type: " + xml.nodeType);
         return o;
      },
      toJson: function(o, name, ind) {
         var json = name ? ("\""+name+"\"") : "";
         if (o instanceof Array) {
            for (var i=0,n=o.length; i<n; i++)
               o[i] = X.toJson(o[i], "", ind+"\t");
            json += (name?":[":"[") + (o.length > 1 ? ("\n"+ind+"\t"+o.join(",\n"+ind+"\t")+"\n"+ind) : o.join("")) + "]";
         }
         else if (o == null)
            json += (name&&":") + "null";
         else if (typeof(o) == "object") {
            var arr = [];
            for (var m in o)
               arr[arr.length] = X.toJson(o[m], m, ind+"\t");
            json += (name?":{":"{") + (arr.length > 1 ? ("\n"+ind+"\t"+arr.join(",\n"+ind+"\t")+"\n"+ind) : arr.join("")) + "}";
         }
         else if (typeof(o) == "string")
            json += (name&&":") + "\"" + o.toString() + "\"";
         else
            json += (name&&":") + o.toString();
         return json;
      },
      innerXml: function(node) {
         var s = ""
         if ("innerHTML" in node)
            s = node.innerHTML;
         else {
            var asXml = function(n) {
               var s = "";
               if (n.nodeType == 1) {
                  s += "<" + n.nodeName;
                  for (var i=0; i<n.attributes.length;i++)
                     s += " " + n.attributes[i].nodeName + "=\"" + (n.attributes[i].nodeValue||"").toString() + "\"";
                  if (n.firstChild) {
                     s += ">";
                     for (var c=n.firstChild; c; c=c.nextSibling)
                        s += asXml(c);
                     s += "</"+n.nodeName+">";
                  }
                  else
                     s += "/>";
               }
               else if (n.nodeType == 3)
                  s += n.nodeValue;
               else if (n.nodeType == 4)
                  s += "<![CDATA[" + n.nodeValue + "]]>";
               return s;
            };
            for (var c=node.firstChild; c; c=c.nextSibling)
               s += asXml(c);
         }
         return s;
      },
      escape: function(txt) {
         return txt.replace(/[\\]/g, "\\\\")
                   .replace(/[\"]/g, '\\"')
                   .replace(/[\n]/g, '\\n')
                   .replace(/[\r]/g, '\\r');
      },
      removeWhite: function(e) {
         e.normalize();
         for (var n = e.firstChild; n; ) {
            if (n.nodeType == 3) {  // text node
               if (!n.nodeValue.match(/[^ \f\n\r\t\v]/)) { // pure whitespace text node
                  var nxt = n.nextSibling;
                  e.removeChild(n);
                  n = nxt;
               }
               else
                  n = n.nextSibling;
            }
            else if (n.nodeType == 1) {  // element node
               X.removeWhite(n);
               n = n.nextSibling;
            }
            else                      // any other node
               n = n.nextSibling;
         }
         return e;
      }
   };
   if (xml.nodeType == 9) // document node
      xml = xml.documentElement;
   var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, "\t");
   return "{\n" + tab + (tab ? json.replace(/\t/g, tab) : json.replace(/\t|\n/g, "")) + "\n}";
}


/***/ }),

/***/ "./src/common/util.ts":
/*!****************************!*\
  !*** ./src/common/util.ts ***!
  \****************************/
/*! exports provided: Dictionary, RawVertex, RawEdge, RawGraph, myFileReader, FocusHistoryEntry, InputPopup, TagNames, CSSRuleSorted, CSSParser, ShortAttribETypes, EvalOutput, SelectorOutput, U, $s, Keystrokes, AutocompleteMatch, TSON_JSTypes, TSON_UnsupportedTypes, TSON, AttribETypes, ParseNumberOrBooleanOptions, Json, DetectZoom, ISize, Size, GraphSize, IPoint, GraphPoint, Point, FileReadTypeEnum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return Dictionary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RawVertex", function() { return RawVertex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RawEdge", function() { return RawEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RawGraph", function() { return RawGraph; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "myFileReader", function() { return myFileReader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusHistoryEntry", function() { return FocusHistoryEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputPopup", function() { return InputPopup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TagNames", function() { return TagNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CSSRuleSorted", function() { return CSSRuleSorted; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CSSParser", function() { return CSSParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShortAttribETypes", function() { return ShortAttribETypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EvalOutput", function() { return EvalOutput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectorOutput", function() { return SelectorOutput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return U; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$s", function() { return $s; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Keystrokes", function() { return Keystrokes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutocompleteMatch", function() { return AutocompleteMatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSON_JSTypes", function() { return TSON_JSTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSON_UnsupportedTypes", function() { return TSON_UnsupportedTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TSON", function() { return TSON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttribETypes", function() { return AttribETypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseNumberOrBooleanOptions", function() { return ParseNumberOrBooleanOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Json", function() { return Json; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetectZoom", function() { return DetectZoom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISize", function() { return ISize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return Size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraphSize", function() { return GraphSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IPoint", function() { return IPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraphPoint", function() { return GraphPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return Point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileReadTypeEnum", function() { return FileReadTypeEnum; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var detect_zoom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! detect-zoom */ "./node_modules/detect-zoom/detect-zoom.js");
/* harmony import */ var detect_zoom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(detect_zoom__WEBPACK_IMPORTED_MODULE_2__);


class Dictionary extends Object {
}
 // https://github.com/tombigel/detect-zoom broken 2013? but works
class RawVertex {
    constructor(id, data = null) {
        this.id = id;
        this.data = data;
        this.edgesOut = [];
        this.edgesIn = [];
    }
}
class RawEdge {
    constructor(id, source, target, data = null) {
        this.id = id;
        this.source = source;
        this.target = target;
        this.data = data;
        if (this.source)
            this.source.edgesOut.push(this);
        if (this.target)
            this.target.edgesIn.push(this);
    }
}
class RawGraph {
    constructor(vertex, edges) {
        this.vertex = vertex;
        this.edges = edges;
        this.matrix = null;
        this.idMapping = {};
        for (let v of this.vertex) {
            this.idMapping[v.id] = v;
        }
        for (let e of this.edges) {
            this.idMapping[e.id] = e;
        }
    }
    isDag(canDestryData = false) {
        let out = { elementsInLoop: [] };
        this.getDagOrder(canDestryData, out);
        return !!out.elementsInLoop.length;
    }
    clone() {
        const vertex = [];
        const edges = [];
        const copiesMapID = {};
        for (let v of this.vertex) {
            v = new RawVertex(v.id, v.data);
            vertex.push(v);
            copiesMapID[v.id] = v;
        }
        for (let e of this.edges) {
            let source = e.source && copiesMapID[e.source.id];
            let target = e.target && copiesMapID[e.target.id];
            e = new RawEdge(e.id, source, target);
            edges.push(e);
        }
        return new RawGraph(vertex, edges);
    }
    getDagOrder(canDestroyData = false, out = {}) {
        if (!canDestroyData) {
            const ret = this.clone().getDagOrder(true, out).map(varr => varr.map(v => this.idMapping[v.id]));
            out.elementsInLoop = out.elementsInLoop.map(lv => this.idMapping[lv.id]);
            return ret;
        }
        out.elementsInLoop = [...this.vertex];
        let visitedThisIteration;
        const ret = [];
        while (true) {
            visitedThisIteration = [];
            ret.push(visitedThisIteration);
            for (let i = 0; i < out.elementsInLoop.length; i++) {
                let v = out.elementsInLoop[i];
                if (!v || v.edgesOut)
                    continue;
                visitedThisIteration.push(v);
                out.elementsInLoop[i] = null;
                for (let enteringedges of v.edgesIn) {
                    U.arrayRemoveAll(enteringedges.source.edgesOut, enteringedges);
                }
            }
            out.elementsInLoop = out.elementsInLoop.filter(v => !!v);
            if (!visitedThisIteration.length)
                break;
            break;
        }
        return ret.reverse();
    }
    getMatrix() {
        return this.matrix || this.buildMatrix();
    }
    buildMatrix() {
        const matrix = {};
        for (let v1 of this.vertex) {
            matrix[v1.id] = {};
            for (let v2 of this.vertex) {
                matrix[v1.id][v2.id] = U.arrayIntersection(v1.edgesOut, v2.edgesIn).length;
            }
        }
        return this.matrix = matrix;
    }
    static fromMatrix(matrix) {
        const vertex = [];
        const edges = [];
        const vertexIDMapping = {};
        let idMax = 0;
        for (let key in matrix) {
            const v = new RawVertex(key, null);
            vertex.push(v);
            vertexIDMapping[key] = v;
        }
        const getEdgeID = () => { while (matrix['' + idMax])
            idMax++; return '' + idMax; };
        for (let v1key in matrix) {
            for (let v2key in matrix) {
                let count = matrix[v1key][v2key];
                while (count-- > 0) {
                    const e = new RawEdge(getEdgeID(), vertexIDMapping[v1key], vertexIDMapping[v2key]);
                    edges.push(e);
                }
            }
        }
        return new RawGraph(vertex, edges);
    }
}
class myFileReader {
    // constructor(onchange: (e: ChangeEvent) => void = null, fileTypes: FileReadTypeEnum[] | string[] = null) { myFileReader.setinfos(fileTypes, onchange); }
    static setinfos(fileTypes = null, onchange, readcontent) {
        myFileReader.fileTypes = (fileTypes || myFileReader.fileTypes);
        const debug = false;
        debug && console.log('fileTypes:', myFileReader.fileTypes, fileTypes);
        myFileReader.input = document.createElement('input');
        const input = myFileReader.input;
        myFileReader.onchange = function (e) {
            if (!readcontent) {
                onchange(e, input.files, null);
                return;
            }
            let contentObj = {};
            let fileLetti = 0;
            for (let i = 0; i < input.files.length; i++) {
                const f = input.files[i];
                debug && console.log('filereadContent[' + i + ']( file:', f, ')');
                U.fileReadContent(f, (content) => {
                    debug && console.log('file[' + i + '] read complete. done: ' + (1 + fileLetti) + ' / ' + input.files.length, 'contentObj:', contentObj);
                    contentObj[i] = content; // cannot use array, i'm not sure the callbacks will be called in order. using push is safer but could alter order.
                    // this is last file to read.
                    if (++fileLetti === input.files.length) {
                        const contentArr = [];
                        for (let j = 0; j < input.files.length; j++) {
                            contentArr.push(contentObj[j]);
                        }
                        onchange(e, input.files, contentArr);
                    }
                });
            }
        } || myFileReader.onchange;
    }
    static reset() {
        myFileReader.fileTypes = null;
        myFileReader.onchange = null;
        myFileReader.input = null;
    }
    static show(onChange, extensions = null, readContent) {
        myFileReader.setinfos(extensions, onChange, readContent);
        myFileReader.input.setAttribute('type', 'file');
        if (myFileReader.fileTypes) {
            let filetypestr = '';
            const sepkey = U.getStartSeparatorKey();
            for (let i = 0; i < myFileReader.fileTypes.length; i++) {
                filetypestr += U.startSeparator(sepkey, ',') + myFileReader.fileTypes[i];
            }
            myFileReader.input.setAttribute('accept', filetypestr);
        }
        //console.log('fileTypes:', myFileReader.fileTypes, 'input:', myFileReader.input);
        $(myFileReader.input).on('change.custom', myFileReader.onchange).trigger('click');
        myFileReader.reset();
    }
}
class FocusHistoryEntry {
    constructor(e, element = null, time = null) {
        this.evt = e;
        this.element = element || e.target;
        this.time = time || new Date();
    }
}
class InputPopup {
    constructor(title = null, txtPre = null, inputOrTag = null, txtPost = null) {
        this.validators = [];
        const id = 'popup_' + InputPopup.popupCounter++;
        this.container = U.toHtml('<div data-closebuttontarget="' + id + '" class="screenWideShadow" style="display: none;"></div>');
        this.xbutton = document.createElement('button');
        this.xbutton.classList.add('closeButton');
        this.xbutton.dataset.closebuttontarget = id;
        this.xbutton.innerText = 'X';
        this.html = document.createElement('div');
        this.html.classList.add('popupContent');
        this.buttonContainer = document.createElement('div');
        this.buttonContainer.style.width = '100%';
        this.buttonContainer.style.display = 'flex';
        this.buttonContainer.style.marginTop = '10px';
        this.$container = $(this.container);
        this.$xbutton = $(this.xbutton);
        this.$html = $(this.html);
        this.container.append(this.html);
        this.html.append(this.xbutton);
        U.closeButtonSetup($(this.container));
        if (title || txtPre || txtPost)
            this.setText(title, txtPre, txtPost);
        this.setInputNode(inputOrTag);
    }
    addButtons(textornode, onclick, classes = ['btn-primary']) {
        let btn;
        if (textornode instanceof HTMLButtonElement) {
            btn = textornode;
        }
        else {
            btn = document.createElement('button');
            btn.style.margin = 'auto';
            btn.textContent = textornode;
            btn.classList.add('btn', ...classes);
        }
        let i;
        for (i = 0; i < onclick.length; i++) {
            let clickhandler = onclick[i];
            $(btn).on('click', (e) => { clickhandler(e, U.getValue(this.input), this.input, btn); });
        }
        this.buttonContainer.append(btn);
        return btn;
    }
    addOkButton(text = 'Confirm', onclick) {
        onclick = onclick || [];
        text = text || 'Confirm';
        onclick.push((e, value, input, btn) => { this.destroy(); });
        U.remove(this.okButton);
        this.okButton = this.addButtons(text, onclick, ['btn-primary']);
        this.$okButton = $(this.okButton);
    }
    onCloseButton(onclick) {
        let i;
        for (i = 0; i < onclick.length; i++) {
            let func = onclick[i];
            this.$xbutton.on('click.customhandler', (e) => { func(e, U.getValue(this.input), this.input, this.xbutton); });
        }
    }
    setText(title = '', pre = '', post = '') {
        U.remove(this.title);
        U.remove(this.txtPre);
        U.remove(this.txtPost);
        if (typeof title === 'string') {
            this.title = document.createElement('h1');
            this.title.style.textAlign = 'center';
            this.title.innerText = title;
        }
        else
            this.title = title;
        if (typeof pre === 'string') {
            this.txtPre = document.createElement('div');
            this.txtPre.innerText = pre;
        }
        else
            this.txtPre = pre;
        if (typeof post === 'string') {
            this.txtPost = document.createElement('div');
            this.txtPost.innerText = post;
        }
        else
            this.txtPost = post;
        this.$title = $(this.title);
        this.$txtPre = $(this.txtPre);
        this.$txtPost = $(this.txtPost);
    }
    setNestedInputNode(container = null, node, addDefaultEvents = true) {
        this.innercontainer = container;
        this.setInputNode(node, null, null, addDefaultEvents);
    }
    setInputNode(nodeOrTag = null, inputSubType = null, pattern = null, addDefaultEvents = true) {
        if (!this.innercontainer)
            U.remove(this.input);
        if (nodeOrTag === null)
            return;
        if (typeof nodeOrTag === 'string') {
            this.input = document.createElement(nodeOrTag);
            //console.log('tadebug', nodeOrTag === 'textarea', nodeOrTag);
            if (nodeOrTag === 'textarea') {
                // this.input.classList.add('form-control'); looks better without, mainly for font-size and overflowing outline
                // this.input.style.fontSize = 'inherit';
                this.input.style.width = 'calc(75vw - 152px)';
                this.input.style.height = 'calc(75vh - 200px)';
            }
            if (nodeOrTag === 'input') {
                this.input.classList.add('form-control', 'form-control-lg');
                this.input.style.width = '100%';
                this.input.style.textAlign = 'center';
                this.input.style.margin = '50px 0';
            }
            else {
                this.input.style.width = 'calc(75vw - 152px)';
                this.input.style.height = 'calc(75vh - 200px)';
                this.input.style.border = '1px solid #ced4da';
                this.input.style.borderRadius = '.25rem;';
                this.input.style.padding = '1rem';
            }
        }
        else
            this.input = nodeOrTag;
        if (inputSubType) {
            this.input.setAttribute('type', inputSubType);
        }
        if (pattern) {
            this.input.setAttribute('pattern', pattern);
        }
        this.$input = $(this.input);
        if (addDefaultEvents) {
            this.validators.push({ validatorCallback: (value, input) => {
                    const pattern = input.getAttribute('pattern');
                    if (!pattern)
                        return true;
                    const regex = new RegExp(pattern);
                    //console.log('validating pattern:', regex, pattern, value);
                    return regex.test(value);
                }, errormsg: 'pattern violated.' });
            this.$input.off('keydown.defaultvalidate').on('keydown.defaultvalidate', (e) => { this.defaultKeydownEvt(e); });
            // $input.off('change.defaultvalidate').on('change.defaultvalidate', (e: BlurEvent) => {this.defaultChangeEvt(e)});
        }
    }
    setInput(value = null, placeholder = null) {
        U.pe(!this.input, 'cannot set inputPopup values without setting an input field first.');
        U.setInputValue(this.input, value);
        this.input.setAttribute('placeholder', placeholder || '');
    }
    /*
      oldconstructor(title: string, txtpre: string, txtpost: string, event: any[][] /* array of (['oninput', onInputFunction])* /,
                  placeholder: string = null, value: string, inputType: string = 'input',
                     inputSubType: string = null, onsuccess: ((value: string, input: HTMLElement) => any)[]) {
        const value0 = value;
        if (!value) { value = ''; }
        this.onsuccess = onsuccess ? onsuccess : [];
        const id = 'popup_' + InputPopup.popupCounter++;
        placeholder = (placeholder ? 'placeholder="' + placeholder + '"' : '');
        inputSubType = (inputSubType ? 'type = "' + inputSubType + '"' : '');
        let innerValue: string;
        if (inputType.toLowerCase() === 'textarea') {
          innerValue = U.replaceAll(U.replaceAll(value, '<', '&lt;'), '>', '&gt;');
          innerValue += '</' + inputType + '>';
          value = '';
        } else { value = value === '' ? '' : 'value="' + U.replaceAll(value, '"', '&quot;') + '"'; innerValue = ''; }
        const container: HTMLElement = U.toHtml('' +
          '<div _ngcontent-c3="" data-closebuttontarget="' + id + '" class="screenWideShadow" style="display: none;">' +
          '<div _ngcontent-c3="" class="popupContent">' +
          '<h1 _ngcontent-c3="" style="text-align: center;">' + title + '</h1>' +
          '<button _ngcontent-c3="" class="closeButton" data-closebuttontarget="' + id + '">X</button>' +
          '<br _ngcontent-c3="">' +
          '<div _ngcontent-c3="" class="TypeList">' +
          '<table class="typeTable"><tbody>' +
          '<tr class="typeRow"><td class="alias textPre">' + txtpre + '</td>' +
          '<' + inputType + ' ' + inputSubType + ' ' + placeholder + ' ' + value + ' class="form-control popupInput" ' +
          'aria-label="Small" aria-describedby="inputGroup-sizing-sm">' + innerValue + txtpost +
          '</td>' +
          '</tr>' +
          '<tr><td class="errors" style="display: none;"></td></tr>' +
          '</tbody></table></div>' +
          '</div></div>');
        U.closeButtonSetup($(container));
        this.events = event;
        this.html = container;
    
        if (inputType === 'textarea') {
          this.getInputNode()[0].setAttribute('style', 'width: calc(75vw - 152px); height: calc(75vh - 200px);');
        }
        this.show();
      }*/
    // events: any[][];
    // onsuccess: ((value: string, input: HTMLElement) => any)[];
    // valid = false;
    // getInputNode(): JQuery<HTMLElement> { return $(this.html).find('.popupInput'); }
    // defaultBlurEvt(e: JQuery.BlurEvent){ this.inputted(); }
    defaultKeydownEvt(e) { this.inputted(); }
    inputted() {
        const input = this.input;
        const value = U.getValue(input);
        let i;
        let valid = true;
        for (i = 0; this.validators && i < this.validators.length; i++) {
            const valentry = this.validators[i];
            if (!valentry)
                continue;
            //console.log('this:', this, 'input:', input, 'value:', value);
            if (!valentry.validatorCallback(value, input)) {
                this.setErrText(valentry.errormsg);
                valid = false;
            }
        }
        this.okButton.disabled = !valid;
    }
    show() {
        document.body.appendChild(this.container);
        this.container.style.display = 'none';
        if (this.title)
            this.html.appendChild(this.title);
        if (this.xbutton)
            this.html.appendChild(this.xbutton);
        if (this.innercontainer)
            this.html.appendChild(this.innercontainer);
        else if (this.input)
            this.html.appendChild(this.input);
        if (this.txtPre)
            this.html.appendChild(this.txtPre);
        if (this.txtPost)
            this.html.appendChild(this.txtPost);
        this.html.appendChild(this.buttonContainer);
        this.$container.slideDown(400);
        if (this.input)
            this.input.focus();
    }
    hide() {
        this.container.style.display = 'block';
        this.$container.slideUp(400);
    }
    destroy() {
        this.container.style.display = 'block';
        $(this.container).slideUp(400, () => {
            if (this.container && this.container.parentNode) {
                this.container.parentNode.removeChild(this.container);
                this.container = null;
            }
        });
        return null;
    }
    setErrText(str) {
        this.setText(null, null, str);
    }
    setValidation(validatorCallback, errormsg) {
        if (validatorCallback)
            this.validators.push({ validatorCallback: validatorCallback, errormsg: errormsg });
    }
}
InputPopup.popupCounter = 0;
class TagNames {
}
TagNames.FOREIGNOBJECT = "FOREIGNOBJECT";
class CSSRuleSorted {
    constructor(styleNode) {
        const oldParent = styleNode.parentElement;
        if (!oldParent)
            document.body.append(styleNode);
        let cssRuleList = styleNode.sheet['cssRules'] || styleNode.sheet['rules'];
        this.all = [...cssRuleList];
        if (!oldParent)
            document.body.removeChild(styleNode);
        // if (se aveva parent rimane attaccato lì e non serve fare questo) oldParent.append(styleNode);
    }
    getCSSMediaRule() {
        return this.all.filter((e, i) => { return e instanceof CSSMediaRule; });
    }
    getCSSStyleRule() {
        return this.all.filter((e, i) => { return e instanceof CSSStyleRule; });
    }
    notIn(list) {
        return this.all.filter((e, i) => { return list.indexOf(e) !== -1; });
    }
}
class CSSParser {
    static parse(styleNode) { return new CSSRuleSorted(styleNode); }
}
var ShortAttribETypes;
(function (ShortAttribETypes) {
    ShortAttribETypes["void"] = "void";
    ShortAttribETypes["EChar"] = "EChar";
    ShortAttribETypes["EString"] = "EString";
    ShortAttribETypes["EDate"] = "EDate";
    ShortAttribETypes["EFloat"] = "EFloat";
    ShortAttribETypes["EDouble"] = "EDouble";
    ShortAttribETypes["EBoolean"] = "EBoolean";
    ShortAttribETypes["EByte"] = "EByte";
    ShortAttribETypes["EShort"] = "EShort";
    ShortAttribETypes["EInt"] = "EInt";
    ShortAttribETypes["ELong"] = "ELong";
    /*
    ECharObj  = 'ECharObj',
    EStringObj  = 'EStringObj',
    EDateObj  = 'EDateObj',
    EFloatObj  = 'EFloatObj',
    EDoubleObj  = 'EDoubleObj',
    EBooleanObj = 'EBooleanObj',
    EByteObj  = 'EByteObj',
    EShortObj  = 'EShortObj',
    EIntObj  = 'EIntObj',
    ELongObj  = 'ELongObj',
    EELIST  = 'EELIST',*/
})(ShortAttribETypes || (ShortAttribETypes = {}));
class EvalOutput {
}
class EvalContext {
    constructor(context, str, allowContextEvalEdit) {
        EvalContext.EC_TmpAllowcontextEvalEdit = allowContextEvalEdit;
        EvalContext.EC_ParStr = str;
        EvalContext.EC_TmpParContext = context;
        EvalContext.EC_TmpAllowcontextEvalEdit = allowContextEvalEdit;
        EvalContext.EC_ret = undefined;
        EvalContext.EC_exception = null;
        //console.log('evalincontext: this', this, 'context:', context);
        delete this['str'];
        delete this['context'];
        delete this['allowContextEvalEdit'];
        // tengo tutte le chiavi al di fuori per non sporcare "this" con variabili locali mentre faccio diventare "this" una shallowcopy di "context"
        for (EvalContext.EC_TmpKey in EvalContext.EC_TmpParContext) {
            this['' + EvalContext.EC_TmpKey] = EvalContext.EC_TmpParContext['' + EvalContext.EC_TmpKey];
        }
        try {
            EvalContext.EC_ret = eval(EvalContext.EC_ParStr);
        }
        catch (e) {
            EvalContext.EC_exception = e;
        }
        if (!EvalContext.EC_TmpAllowcontextEvalEdit)
            return;
        for (EvalContext.EC_TmpKey in this) {
            EvalContext.EC_TmpParContext['' + EvalContext.EC_TmpKey] = this['' + EvalContext.EC_TmpKey];
        }
    }
}
class SelectorOutput {
}
class U {
    // static vertexOldPos: GraphPoint = null;
    static checkDblClick() {
        const now = new Date().getTime();
        const old = U.dblclickchecker;
        U.dblclickchecker = now;
        //console.log('dblclick time:', now - old, now, old);
        return (now - old <= U.dblclicktimerms);
    }
    static remove(x) { if (x && x.parentElement)
        x.parentElement.removeChild(x); }
    static firstToUpper(s) {
        if (!s || s === '')
            return s;
        return s.charAt(0).toUpperCase() + s.slice(1);
    }
    static fileReadContent(file, callback) {
        const textType = /text.*/;
        try {
            if (!file.type || file.type.match(textType)) {
                let reader = new FileReader();
                reader.onload = function (e) { callback('' + reader.result); };
                reader.readAsText(file);
                return;
            }
        }
        catch (e) {
            U.pe(true, "Exception while trying to read file as text. Error: |", e, "|", file);
        }
        U.pe(true, "Wrong file type found: |", file ? file.type : null, "|", file);
    }
    static fileRead(onChange, extensions = null, readContent) {
        myFileReader.show(onChange, extensions, readContent);
    }
    static textToSvg(str) { return U.textToSvgArr(str)[0]; }
    static textToSvgArr(str) {
        if (!U.varTextToSvg) {
            U.varTextToSvg = U.newSvg('svg');
        }
        U.varTextToSvg.innerHTML = str;
        const ret = [];
        let i;
        for (i = 0; i < U.varTextToSvg.childNodes.length; i++) {
            ret.push(U.varTextToSvg.childNodes[i]);
        }
        return ret;
    }
    static addCss(key, str, prepend = true) {
        const css = document.createElement('style');
        css.innerHTML = str;
        const old = U.addCssAvoidDuplicates[key];
        if (old) {
            old.parentNode.removeChild(old);
        }
        U.addCssAvoidDuplicates[key] = css;
        if (prepend) {
            document.head.prepend(css);
        }
        else {
            document.head.append(css);
        }
    }
    static clear(htmlNode) {
        while (htmlNode.firstChild) {
            htmlNode.removeChild(htmlNode.firstChild);
        }
    }
    static clearAllTimeouts() {
        const highestTimeoutId = setTimeout(() => { }, 1);
        for (let i = 0; i < highestTimeoutId; i++) {
            clearTimeout(i);
        }
    }
    // todo: un U.genID() che generi unico a seconda del n° linea di codice da cui viene invocato, o sempre diverso se senza linea (console, eval)
    static getStackTrace(sliceThisCall = true) {
        const ret = Error().stack;
        // try { var a = {}; a.debug(); } catch(ex) { ret = ex.stack; }
        // if (Array.isArray(ret)) return ret;
        if (!ret)
            return ['UnknownStackTrace'];
        const arr = ret.split('\n');
        // first 2 entries are "Erorr" and "getStackTrace()"
        return sliceThisCall ? arr.slice(2) : arr;
    }
    static getID() { return this.genID(); }
    static genID() { return 'timedkey_' + new Date().valueOf() + '_' + (this.sequenceNumber++); }
    static setID(key, value) {
        U.idMap[key] = value;
    }
    static unsetID(key) { delete U.idMap[key]; }
    static isSetID(key) { return U.idMap.hasOwnProperty(key); }
    static getByID(key) { return U.idMap[key]; }
    static getCaller(stacksToSkip = 1) {
        const stack = this.getStackTrace(false);
        return stack[stacksToSkip + 3]; // erase getStackTrace() and isFirstTimeCalled() + Error() first stack + n° of layer the caller wants.
    }
    static isFirstTimeCalledByThisLine(stacksToSkip = 1) {
        const caller = this.getCaller(stacksToSkip);
        if (U.gotcalledby[caller])
            return false;
        return U.gotcalledby[caller] = true;
    }
    static lineKey() { return this.getCaller(1); }
    static oneTime(key = null, printFunction, condition, s, ...restArgs) {
        if (key === null)
            key = s;
        if (condition || U.oneTimeMap[key])
            return null;
        U.oneTimeMap[key] = true;
        return printFunction(condition, s, restArgs);
    }
    static petmp(b, s, ...restArgs) { return U.pe(b, s, restArgs); }
    static pedev(b, s, ...restArgs) {
        // todo: questi sono gli errori che dovrebbero verificarsi solo in caso di errori nel codice, mai in seguito ad azioni utente invalide.
        // quindi dovrebbero avere un sistema di error reporting verso un server con ajax request.
        return U.pe(b, s, ...restArgs);
    }
    static pe(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = 'Error:' + s + '';
        for (let i = 0; i < restArgs.length; i++) {
            str += '' + restArgs[i] + '\t\r\n';
        }
        console.error(s, ...restArgs);
        window['lastError'] = [restArgs];
        U.bootstrapPopup(str, 'danger', 5000);
        throw new Error(str);
    }
    static pw(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = 'Warning:' + s + '';
        for (let i = 0; i < restArgs.length; i++) {
            str += '' + restArgs[i] + '\t\r\n';
        }
        console.trace();
        console.warn(s, ...restArgs);
        U.bootstrapPopup(str, 'warning', 5000);
        return str;
    }
    static ps(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = s + '';
        for (let i = 0; i < restArgs.length; i++) {
            str += '' + restArgs[i] + '\t\t\r\n';
        }
        console.info(s, ...restArgs);
        U.bootstrapPopup(str, 'success', 3000);
        return str;
    }
    static pif(b, s, ...restArgs) {
        if (!b) {
            return null;
        }
        return U.p(s, ...restArgs);
    }
    static p(s, ...restArgs) {
        if (restArgs === null || restArgs === undefined) {
            restArgs = [];
        }
        let str = '' + s;
        for (let i = 0; i < restArgs.length; i++) {
            str += '' + restArgs[i] + '\t\r\n';
        }
        console.info(s, ...restArgs);
        return str;
    }
    static bootstrapPopup(innerhtmlstr, color, timer) {
        const div = document.createElement('div');
        if (!U.$alertcontainer) {
            U.alertcontainer = document.createElement('div');
            U.alertcontainer.classList.add('alertcontainer');
            document.body.appendChild(U.alertcontainer);
            U.$alertcontainer = $(U.alertcontainer);
        }
        const container = U.alertcontainer;
        const $container = U.$alertcontainer;
        const $div = $(div);
        div.classList.add('alertshell', 'alert_' + color);
        div.setAttribute('role', 'alert');
        const alertMargin = document.createElement('div');
        alertMargin.innerHTML = innerhtmlstr;
        if (U.displayedTexts[innerhtmlstr])
            return;
        U.displayedTexts[alertMargin.innerHTML] = div;
        container.appendChild(div);
        alertMargin.classList.add('alert', 'alert-' + color);
        div.appendChild(alertMargin);
        const end = () => {
            $div.slideUp(400, () => {
                delete U.displayedTexts[innerhtmlstr];
                div.parentElement && container.removeChild(div);
            });
        }; // div.parentElement: nel caso non sia stato manualmente rimosso.
        $div.on('mousedown', (e) => {
            U.clipboardCopy(innerhtmlstr);
            e.preventDefault();
            e.stopPropagation();
            if (U.mouseRightButton === e.button) {
                let i;
                let $popups = $('.alertshell.alert_' + color);
                for (i = 0; i < $popups.length; i++) {
                    delete U.displayedTexts[$popups[i].innerHTML];
                }
                $popups.remove();
                return;
            }
            if (U.mouseWheelButton === e.button) {
                U.displayedTexts = [];
                $('.alertshell').remove();
                return;
            }
            delete U.displayedTexts[innerhtmlstr];
            div.parentElement && container.removeChild(div);
        });
        $div.hide().slideDown(200, () => setTimeout(end, timer));
    }
    static cloneHtml(html, deep = true, defaultIDNum = 1) {
        const clone = html.cloneNode(deep);
        const getLastNum = (str) => {
            let pos = str.length;
            while (--pos > 0 && !isNaN(+str.charAt(pos))) { }
            const numstr = (str.substring(pos));
            return isNaN(+numstr) ? defaultIDNum : +numstr;
        };
        if (!clone.id) {
            return clone;
        }
        let lastnum = getLastNum(clone.id) - 1;
        const tmpID = clone.id + (clone.id.indexOf('_Clone') === -1 ? '_Clone' : '');
        while (document.getElementById(tmpID + (++lastnum))) { }
        clone.id = tmpID + lastnum;
        return clone;
    }
    static clearAttributes(node) {
        let j;
        for (j = 0; j < node.attributes.length; j++) {
            node.removeAttribute(node.attributes[j].name);
        }
    }
    // safe con SVG, input, select, textarea.
    static copyVisibleText(element0) {
        const element = element0.cloneNode(true);
        const $element = $(element);
        $element.remove(':hidden');
        $element.remove('.addFieldButtonContainer');
        $element.find('input, textarea').addBack('input, textarea').each((i, e) => {
            const replacement = document.createElement('div');
            replacement.dataset.replacement = "1";
            replacement.innerText = e.value;
            U.swap(e, replacement);
        });
        $element.find('select').addBack('select').each((i, e) => {
            const replacement = document.createElement('div');
            replacement.dataset.replacement = "1";
            replacement.innerText = e.selectedIndex >= 0 ? e.options[e.selectedIndex].text : '';
            U.swap(e, replacement);
        });
        U.pe(!!$element.find('select, input, textarea').length, 'input remaining:', $element.find('select, input, textarea').addBack('select, input, textarea'));
        // console.log('copyVisibleText() textcontent of:', element, U.getRawInnerText(element));
        return U.getRawInnerText(element);
    }
    // safe con SVG, !! NON safe con input, textarea e select
    static getRawInnerText(element, win = null) {
        let userselect, msuserselect, wkuserselect;
        if (element['style']) {
            let e = element;
            userselect = e.style.userSelect;
            msuserselect = e.style.msUserSelect;
            wkuserselect = e.style.webkitUserSelect;
            e.style.userSelect = 'all'; // text
            e.style.msUserSelect = 'all';
            e.style.webkitUserSelect = 'all';
        }
        win = win || window;
        const doc = win.document;
        const wasInDocument = U.isChildrenOf(element, doc.body);
        if (!wasInDocument) {
            doc.body.appendChild(element);
        }
        let sel, range, prevRange, selString;
        sel = win.getSelection();
        if (sel.rangeCount) {
            prevRange = sel.getRangeAt(0);
        }
        range = doc.createRange();
        range.selectNodeContents(element);
        sel.removeAllRanges();
        sel.addRange(range);
        selString = sel.toString();
        sel.removeAllRanges();
        prevRange && sel.addRange(prevRange);
        if (!wasInDocument) {
            doc.body.removeChild(element);
        }
        if (element['style']) {
            let e = element;
            if (userselect) {
                e.style.userSelect = userselect;
            }
            if (msuserselect) {
                e.style.msUserSelect = userselect;
            }
            if (wkuserselect) {
                e.style.webkitUserSelect = userselect;
            }
        }
        return selString;
    }
    static cloneObj(o) {
        // const r: HTMLElement = document.createElement(o.tagName);
        // r.innerHTML = o.innerHTML;
        // U.pe( o as HTMLElement !== null, 'non utilizzabile su html');
        return JSON.parse(JSON.stringify(o));
        // todo: questa funzione non può clonare html. allow cloneObj of circular objects.
    }
    static cloneObj2(o) {
        U.pe(true, 'todo: dovrebbe fare una deep copy copiando anche le funzioni (cosa che json.stringify non fa).');
        return null;
    }
    static loadScript(path, useEval = false) {
        const script = document.createElement('script');
        script.src = path;
        script.type = 'text/javascript';
        U.pe(useEval, 'useEval: todo. potrebbe essere utile per avviare codice fuori dalle funzioni in futuro.');
        document.body.append(script);
    }
    static newSvg(type) {
        return document.createElementNS('http://www.w3.org/2000/svg', type);
    }
    // can replace templates on the root node, canNOT avoid cloning parameter node
    static replaceVars(obj, elem, debug = false) {
        /// see it in action & parse or debug at
        // v1) perfetto ma non supportata in jscript https://regex101.com/r/Do2ndU/1
        // v2) usata: aggiustabile con if...substring(1). https://regex101.com/r/Do2ndU/3
        // get text between 2 single '$' excluding $$, so they can be used as escape character to display a single '$'
        // console.log('html0:', html0, 'html:', html);
        U.pe(!(elem instanceof Element), 'target must be a html node.', elem);
        let container = elem.parentElement;
        const wasDetached = !container;
        if (wasDetached) {
            container = document.createElement('div');
            container.append(elem);
            console.info(container, elem);
        }
        container.innerHTML = U.replaceVarsString(obj, container.innerHTML, debug);
        U.pif(debug, 'ReplaceVars() return = ', container.innerHTML);
        elem = container.firstElementChild;
        if (wasDetached) {
            container.removeChild(elem);
        }
        return elem;
    }
    // cannot replace templates on the root node, can avoid cloning parameter node.
    static replaceVarsInnerOnly(obj, html0, cloneHtml = true, debug = false) {
        const html = cloneHtml ? U.cloneHtml(html0) : html0;
        /// see it in action & parse or debug at
        // v1) perfetto ma non supportata in jscript https://regex101.com/r/Do2ndU/1
        // v2) usata: aggiustabile con if...substring(1). https://regex101.com/r/Do2ndU/3
        // get text between 2 single '$' excluding $$, so they can be used as escape character to display a single '$'
        // console.log('html0:', html0, 'html:', html);
        U.pe(!(html instanceof Element), 'target must be a html node.', html, html0);
        html.innerHTML = U.replaceVarsString(obj, html.innerHTML, debug);
        U.pif(debug, 'ReplaceVars() return = ', html.innerHTML);
        return html;
    }
    static replaceVarsString0(obj, str, escapeC = null, replacer = null, debug = false) {
        U.pe(escapeC && !replacer, 'replacer cannot be null if escapeChar is defined.');
        U.pe(replacer && !escapeC, 'escapeChar cannot be null if replacer is defined');
        if (!escapeC && !replacer) {
            escapeC = replacer = [];
        }
        U.pe(escapeC.length !== replacer.length, 'replacer and escapeChar must be arrays of the same length');
        str = str.replace(/(^\$|(((?!\$).|^))[\$](?!\$))(.*?)(^\$|((?!\$).|^)[\$](?!\$))/gm, (match, capture) => {
            // console.log('matched:', match, 'capture: ', capture);
            if (match === '$') {
                return '';
            }
            let prefixError = '';
            if (match.charAt(0) !== '$') {
                prefixError = match.charAt(0);
                match = match.substring(1);
            }
            // # = default value: {asHtml = true, isbase64 = false}
            const asHtml = match.charAt(1) === '1' || match.charAt(1) !== '#';
            const isBase64 = match.charAt(2) === '1' || match.charAt(2) !== '#';
            const varname = match.substring(3, match.length - 1);
            const debugtext = varname + '(' + match + ')';
            U.pif(debug, 'match:', match);
            const resultarr = U.replaceSingleVar(obj, varname, isBase64, false);
            let result = resultarr[resultarr.length - 1].value;
            if (result !== '' + result) {
                try {
                    result = JSON.stringify(result);
                }
                catch (e) {
                    result = '{_Cyclic object_}';
                }
            }
            let i = -1;
            U.pif(debug, 'replaceSingleVar: ', match, ', arr', resultarr, ', ret', result, ', this:', obj);
            if (!asHtml) {
                while (++i < escapeC.length) {
                    result = U.replaceAll(result, escapeC[i], replacer[i]);
                }
            }
            U.pif(debug, 'replaceSingleVar: ' + debugtext + ' --> ' + result + ' --> ' + prefixError, result, obj);
            if (U.isObject(result)) { }
            return prefixError + result;
        });
        return str;
    }
    static replaceVarsString(obj, htmlStr, debug = false) {
        U.pe(!obj || !htmlStr, 'parameters cannot be null. obj:', obj, ', htmlString:', htmlStr);
        //  https://stackoverflow.com/questions/38563414/javascript-regex-to-select-quoted-string-but-not-escape-quotes
        //  good regex fatto da me https://regex101.com/r/bmWVrp/4
        if (U.isFunction(obj.preReplace))
            obj.preReplace();
        // only replace content inside " quotes. (eventually escaping ")
        htmlStr = U.QuoteReplaceVarString(obj, htmlStr, '"', debug);
        // only replace content inside ' quotes. (eventually escaping ')
        htmlStr = U.QuoteReplaceVarString(obj, htmlStr, '\'', debug);
        // replaces what's left outside any quotation. (eventually escaping <>)
        htmlStr = U.replaceVarsString0(obj, htmlStr, ['<', '>'], ['&lt;', '&gt;']);
        return htmlStr;
    }
    static QuoteReplaceVarString(obj, htmlStr, quote, debug = false) {
        U.pe(quote !== '"' && quote !== '\'', 'the only quote supported are single chars " and \'.');
        const quoteEscape = quote === '&quot;' ? '' : '&#39;'; // '\\' + quote;
        // todo: dovrei anche rimpiazzare & with &amp; per consentire input &something; trattati come stringhe.
        // ""|(:?[^\\](?!"")|^)((:?\\\\)*\"(:?.*?[^\\"]+){0,1}(:?\\\\)*\")
        // '""|(:?[^\\](?!"")|^)((:?\\\\)*\"(:?.*?[^\\"]+){0,1}(:?\\\\)*\")'
        // let regex = /""|(:?[^\\](?!"")|^)((:?\\\\)*\"(:?.*?[^\\"]+){0,1}(:?\\\\)*\")/;
        let regexStr = '""|(:?[^\\\\](?!"")|^)((:?\\\\\\\\)*\\"(:?.*?[^\\\\"]+){0,1}(:?\\\\\\\\)*\\")';
        if (quote !== '"') {
            regexStr = U.replaceAll(regexStr, '"', '\'');
        }
        const quoteRegex = new RegExp(regexStr, 'g'); // new RegExp("a", "b"); === /a/b
        htmlStr = htmlStr.replace(quoteRegex, (match, capture) => {
            const start = match.indexOf(quote);
            const end = match.lastIndexOf(quote);
            const content = U.replaceVarsString0(obj, match.substring(start + 1, end), [quote], [quoteEscape], debug);
            const ret = match.substring(0, start + 1) + content + match.substring(end);
            U.pif(debug, 'replaceQuotedVars: match: |' + match + '| --> |' + content + '| --> |' + ret + '| html:', htmlStr, 'capt:', capture);
            return ret;
        });
        return htmlStr;
    }
    //todo: da rimuovere, è stata completamente superata dal nuovo return type array di replaceSingleVar
    static replaceSingleVarGetParentAndChildKey(obj, fullpattern, canThrow = false) {
        const ret = { parent: null, childkey: null };
        let targetPatternParent;
        const pos = fullpattern.indexOf('.');
        const isBase64 = fullpattern.charAt(2) === '1' || fullpattern.charAt(2) !== '#';
        U.pe(isBase64, 'currently this method does not support base64 encoded templates. the conversion is still to do.', fullpattern);
        if (pos === -1) {
            ret.parent = obj;
            ret.childkey = fullpattern.substring(3, fullpattern.length - 1);
            return ret;
        }
        try {
            targetPatternParent = fullpattern.substring(0, pos) + '$';
            const tmparr = U.replaceSingleVarRaw(obj, targetPatternParent);
            ret.parent = tmparr[tmparr.length - 1].value;
            ret.childkey = fullpattern.substring(pos + 1, fullpattern.length - 1);
        }
        catch (e) {
            U.pw(true, 'replaceSingleVarGetParentAndChildKey failed. fullpattern: |' + fullpattern + '| targetPatternParent: |'
                + targetPatternParent + '| obj: ', obj, ' reason: ', e);
            return null;
        }
        return ret;
    }
    static replaceSingleVarRaw(obj, fullpattern, canThrow = false) {
        fullpattern = fullpattern.trim();
        const isBase64 = fullpattern.charAt(2) === '1' || fullpattern.charAt(2) !== '#';
        const varName = fullpattern.substring(3, fullpattern.length - 1);
        return U.replaceSingleVar(obj, varName, isBase64, canThrow);
    }
    static replaceSingleVar(obj, varname, isBase64, canThrow = false) {
        const debug = false;
        const showErrors = false;
        let debugPathOk = '';
        /////////////////// debug start
        if (isBase64) {
            isBase64 = false;
            // varname = 'name';
        }
        /////////////////////// debug end
        if (isBase64) {
            U.pe(true, 'base64 unimplemented, varname:', varname);
            varname = atob(varname);
        }
        let requestedValue = obj;
        const fullpath = varname;
        const tokens = varname.split('.'); // varname.split(/\.,/);
        const ret = [];
        let j;
        let token = null;
        for (j = 0; j < tokens.length; j++) {
            ret.push({ token: token === null ? 'this' : token, value: requestedValue });
            token = tokens[j];
            U.pif(debug || showErrors, 'replacer: obj[req] = ', requestedValue, '[', token, '] =', (requestedValue ? requestedValue[token] : ''));
            if (requestedValue === null || requestedValue === undefined) {
                U.pe(showErrors, 'requested null or undefined:', obj, ', canthrow ? ', canThrow, ', fillplath:', fullpath);
                if (canThrow) {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. object = ', obj);
                    throw new DOMException('replace_Vars.WrongVariablePath', 'replace_Vars.WrongVariablePath');
                }
                else {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. ovjet = ', obj);
                }
                ret.push({ token: token, value: 'Error: ' + debugPathOk + '.' + token + ' = ' + undefined });
                // ret.push({token: token, value: requestedValue});
                return ret;
            }
            else {
                debugPathOk += (debugPathOk === '' ? '' : '.') + token;
            }
            ////
            if (requestedValue instanceof _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"]) {
                const info = requestedValue.getInfo(true);
                const key = token.toLowerCase();
                if (key in info) {
                    requestedValue = info[key];
                }
                else {
                    requestedValue = requestedValue[token];
                }
            }
            else {
                requestedValue = (requestedValue === null) ? undefined : requestedValue[token];
            }
        }
        ret.push({ token: token, value: requestedValue });
        return ret;
    }
    static replaceSingleVar_backup(obj, varname, isBase64, canThrow = false) {
        const debug = false;
        const showErrors = false;
        let debugPathOk = '';
        if (isBase64) {
            varname = atob(varname);
        }
        let requestedValue = obj;
        const fullpath = varname;
        const tokens = varname.split('.'); // varname.split(/\.,/);
        let j;
        for (j = 0; j < tokens.length; j++) {
            const token = tokens[j];
            U.pif(debug || showErrors, 'replacer: obj[req] = ', requestedValue, '[', token, '] =', (requestedValue ? requestedValue[token] : ''));
            if (requestedValue === null || requestedValue === undefined) {
                U.pe(showErrors, 'requested null or undefined:', obj, ', canthrow ? ', canThrow, ', fillplath:', fullpath);
                if (canThrow) {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. object = ', obj);
                    throw new DOMException('replace_Vars.WrongVariablePath', 'replace_Vars.WrongVariablePath');
                }
                else {
                    U.pif(showErrors, 'wrong variable path:', debugPathOk + '.' + token, ': ' + token + ' is undefined. ovjet = ', obj);
                }
                return 'Error: ' + debugPathOk + '.' + token + ' = ' + undefined;
            }
            else {
                debugPathOk += (debugPathOk === '' ? '' : '.') + token;
            }
            ////
            if (requestedValue instanceof _Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"]) {
                const info = requestedValue.getInfo(true);
                const key = token.toLowerCase();
                if (key in info) {
                    requestedValue = info[key];
                }
                else {
                    requestedValue = requestedValue[token];
                }
            }
            else {
                requestedValue = (requestedValue === null) ? undefined : requestedValue[token];
            }
        }
        return requestedValue;
    }
    static changeVarTemplateDelimitersInMeasurables(innerText, toReplace = '$', replacement = '£') {
        if (!innerText.indexOf('measurable')) {
            return innerText;
        } // + performance su scommessa probabilistica. better avg, worser worst case.
        const html = document.createElement('div');
        html.innerHTML = innerText;
        const $measurables = $(html).find('.measurable');
        let i;
        let j;
        for (i = 0; i < $measurables.length; i++) {
            for (j = 0; j < $measurables[i].attributes.length; j++) {
                if ($measurables[i].attributes[j].name[0] !== '_') {
                    continue;
                }
                U.changeVarTemplateDelimitersInMeasurablesAttr($measurables[i].attributes[j], toReplace, replacement);
            }
        }
        return html.innerHTML;
    }
    static changeBackVarTemplateDelimitersInMeasurablesAttr(attrVal, toReplace = '£', replacement = '$') {
        return U.changeVarTemplateDelimitersInMeasurablesAttrStr(attrVal, toReplace, replacement);
    }
    static changeVarTemplateDelimitersInMeasurablesAttr(attr, toReplace = '$', replacement = '£') {
        attr.value = U.changeVarTemplateDelimitersInMeasurablesAttrStr(attr.value, toReplace, replacement);
    }
    static changeVarTemplateDelimitersInMeasurablesAttrStr(val, toReplace, replacement) {
        const r = toReplace;
        const rstr = '(^\\' + r + '|(((?!\\' + r + ').|^))[\\' + r + '](?!\\' + r + '))(.*?)(^\\' + r + '|((?!\\' + r + ').|^)[\\' + r + '](?!\\' + r + '))';
        return val.replace(new RegExp(rstr, 'gm'), (match, capture) => {
            if (match === toReplace) {
                return toReplace;
            }
            let prefixError = '';
            if (match.charAt(0) !== toReplace) {
                prefixError = match.charAt(0);
                match = match.substring(1);
            }
            return prefixError + replacement + match.substring(1, match.length - 1) + replacement;
        });
    }
    static sizeof(element0, debug = false) {
        let element = element0;
        U.pif(debug, 'sizeof(', element, ')');
        U.pe(element === document, 'trying to measure document.');
        if (element === document) {
            element = document.body;
        }
        const $element = $(element);
        U.pe(element.tagName === 'foreignObject', 'SvgForeignElementObject have a bug with size, measure a child instead.');
        let i;
        let tmp;
        let size;
        if (!U.sizeofvar) {
            U.sizeofvar = document.createElement('div');
            document.body.append(U.sizeofvar);
        }
        const isOrphan = element.parentNode === null;
        // var visible = element.style.display !== 'none';
        // var visible = $element.is(":visible"); crea bug quando un elemento è teoricamente visibile ma orfano
        const ancestors = U.ancestorArray(element);
        const visibile = [];
        if (isOrphan) {
            U.sizeofvar.append(element);
        }
        // show all and saveToDB visibility to restore it later
        for (i = 0; i < ancestors.length; i++) { // document has undefined style
            visibile[i] = (ancestors[i].style === undefined) ? true : (ancestors[i].style.display !== 'none');
            if (!visibile[i]) {
                $(ancestors[i]).show();
            }
        }
        tmp = $element.offset();
        size = new Size(tmp.left, tmp.top, 0, 0);
        tmp = element.getBoundingClientRect();
        size.w = tmp.width;
        size.h = tmp.height;
        // restore visibility
        for (i = 0; i < ancestors.length; i++) {
            if (!visibile[i]) {
                $(ancestors[i]).hide();
            }
        }
        if (isOrphan) {
            U.clear(U.sizeofvar);
        }
        // Status.status.getActiveModel().graph.markS(size, false);
        return size;
    }
    /* ritorna un array con tutti i figli, nipoti... discendenti di @parent */
    static iterateDescendents(parent) {
        return parent.getElementsByTagName('*');
    }
    static ancestorFilter(selector, domelem, stopNode = null, includeSelf = true) {
        return $(U.ancestorArray(domelem, stopNode, includeSelf)).filter(selector);
    }
    static ancestorArray(domelem, stopNode = null, includeSelf = true) {
        // [0]=element, [1]=father, [2]=grandfather... [n]=document
        if (domelem === null || domelem === undefined) {
            return [];
        }
        const arr = includeSelf ? [domelem] : [];
        let tmp = domelem.parentNode;
        while (tmp !== null && tmp != stopNode) {
            arr.push(tmp);
            tmp = tmp.parentNode;
        }
        return arr;
    }
    static toSvg(html) {
        U.pe(true, 'toSvg maybe not working, test before use');
        const o = U.newSvg('svg');
        o.innerHTML = html;
        return o.firstChild;
    }
    static toHtmlValidate(text) {
        const html = U.toHtml(text);
        if (html.innerHTML === text.replace(/\s+/gi, ''))
            return html;
        return null;
    }
    static toHtmlRow(html) {
        return U.toHtml(html, U.toHtml('<table><tbody></tbody></table>').firstChild);
    }
    static toHtmlCell(html) {
        return U.toHtml(html, U.toHtml('<table><tbody><tr></tr></tbody></table>').firstChild.firstChild);
    }
    static toHtml(html, container = null, containerTag = 'div') {
        if (container === null) {
            container = document.createElement(containerTag);
        }
        if (!html || html === '')
            return null;
        container.innerHTML = html;
        const ret = container.firstChild;
        if (ret)
            container.removeChild(ret);
        return ret;
    }
    static toBase64Image(html, container = null, containerTag = 'div') {
        // https://github.com/tsayen/dom-to-image
        return 'HtmlToImage todo: check https://github.com/tsayen/dom-to-image';
    }
    static getParentLine(node, parentLimit = null, bottomToTopOrder = true, includeparentlimit = false, includenode = false) {
        const arr = [];
        if (includenode)
            arr.push(node);
        U.pe(!node, 'U.getParentLine() node argument cannot be null.');
        while (node.parentElement && node.parentElement !== parentLimit) {
            arr.push(node = node.parentElement);
        }
        if (includeparentlimit && node.parentElement === parentLimit)
            arr.push(parentLimit);
        return bottomToTopOrder ? arr : arr.reverse();
    }
    /**
     * checks if nodes have a vertical line relationship in the tree (parent, grandparent, ...);
     * @ return {boolean}
     */
    static isParentOf(parent, child) {
        //  parent chains:   element -> ... -> body -> html -> document -> null
        while (child !== null) {
            if (parent === child) {
                return true;
            }
            child = child.parentNode;
        }
        return false;
    }
    static isChildrenOf(child, parent) {
        return U.isParentOf(parent, child);
    }
    static setSvgSize(style, size, defaultsize) {
        if (!style)
            return;
        if (size) {
            size = size.duplicate();
        }
        else {
            size = defaultsize.duplicate();
            defaultsize = null;
        }
        if (!U.isNumber(size.x)) {
            U.pw(true, 'VertexSize Svg x attribute is NaN: ' + size.x + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.x));
            U.pe(!defaultsize || !U.isNumber(defaultsize.x), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.x = defaultsize.x;
        }
        if (!U.isNumber(size.y)) {
            U.pw(true, 'VertexSize Svg y attribute is NaN: ' + size.y + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.y));
            U.pe(!defaultsize || !U.isNumber(defaultsize.y), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.y = defaultsize.y;
        }
        if (!U.isNumber(size.w)) {
            U.pw(true, 'VertexSize Svg w attribute is NaN: ' + size.w + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.w));
            U.pe(!defaultsize || !U.isNumber(defaultsize.w), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.w = defaultsize.w;
        }
        if (!U.isNumber(size.h)) {
            U.pw(true, 'VertexSize Svg h attribute is NaN: ' + size.h + (!defaultsize ? '' : ' will be set to default: ' + defaultsize.h));
            U.pe(!defaultsize || !U.isNumber(defaultsize.h), 'Both size and defaultsize are null.', size, defaultsize, style);
            size.h = defaultsize.h;
        }
        // U.pe(true, '100!, ', size, style);
        style.setAttributeNS(null, 'x', '' + size.x);
        style.setAttributeNS(null, 'y', '' + size.y);
        style.setAttributeNS(null, 'width', '' + size.w);
        style.setAttributeNS(null, 'height', '' + size.h);
        return size;
    }
    static getSvgSize(elem, minimum = null, maximum = null) {
        const defaults = new GraphSize(0, 0, 200, 99);
        const ret0 = new GraphSize(+elem.getAttribute('x'), +elem.getAttribute('y'), +elem.getAttribute('width'), +elem.getAttribute('height'));
        const ret = ret0.duplicate();
        if (!U.isNumber(ret.x)) {
            U.pw(true, 'Svg x attribute is NaN: ' + elem.getAttribute('x') + ' will be set to default: ' + defaults.x);
            ret.x = defaults.x;
        }
        if (!U.isNumber(ret.y)) {
            U.pw(true, 'Svg y attribute is NaN: ' + elem.getAttribute('y') + ' will be set to default: ' + defaults.y);
            ret.y = defaults.y;
        }
        if (!U.isNumber(ret.w)) {
            U.pw(true, 'Svg w attribute is NaN: ' + elem.getAttribute('width') + ' will be set to default: ' + defaults.w);
            ret.w = defaults.w;
        }
        if (!U.isNumber(ret.h)) {
            U.pw(true, 'Svg h attribute is NaN: ' + elem.getAttribute('height') + ' will be set to default: ' + defaults.h);
            ret.h = defaults.h;
        }
        if (minimum) {
            if (U.isNumber(minimum.x) && ret.x < minimum.x) {
                ret.x = minimum.x;
            }
            if (U.isNumber(minimum.y) && ret.y < minimum.y) {
                ret.y = minimum.y;
            }
            if (U.isNumber(minimum.w) && ret.w < minimum.w) {
                ret.w = minimum.w;
            }
            if (U.isNumber(minimum.h) && ret.h < minimum.h) {
                ret.h = minimum.h;
            }
        }
        if (maximum) {
            if (U.isNumber(maximum.x) && ret.x > maximum.x) {
                ret.x = maximum.x;
            }
            if (U.isNumber(maximum.y) && ret.y > maximum.y) {
                ret.y = maximum.y;
            }
            if (U.isNumber(maximum.w) && ret.w > maximum.w) {
                ret.w = maximum.w;
            }
            if (U.isNumber(maximum.h) && ret.h > maximum.h) {
                ret.h = maximum.h;
            }
        }
        if (!ret.equals(ret0)) {
            U.setSvgSize(elem, ret, null);
        }
        return ret;
    }
    static findMetaParent(parent, childJson, canFail, debug = true) {
        const modelRoot = parent.getModelRoot();
        // instanceof crasha non so perchè, dà undefined constructor quando non lo è.
        if (U.getClass(modelRoot) === 'MetaMetaModel') {
            U.pif(debug, 'return null;');
            return null;
        }
        if (U.getClass(modelRoot) === 'MetaModel') {
            U.pif(debug, 'return null;');
            return null;
        } // potrei ripensarci e collegarlo a m3
        // todo: risolvi bene e capisci che collegamento deve esserci tra mmpackage e mpackage.
        // fix temporaneo: così però consento di avere un solo package.
        if (U.getClass(modelRoot) === 'Model' && U.getClass(parent) === 'Model') {
            U.pif(debug, 'return: ', parent.metaParent.childrens[0]);
            return parent.metaParent.childrens[0];
        }
        // if (modelRoot === Status.status.mmm || !Status.status.mmm && modelRoot instanceof MetaMetaModel) { return null; }
        // if (modelRoot === Status.status.mm) { return null; }
        const ParentMetaParent = parent.metaParent;
        const metaParentName = Json.read(childJson, _Joiner__WEBPACK_IMPORTED_MODULE_1__["XMIModel"].namee, null);
        // U.pe(!metaParentName, 'type not found.', childJson);
        let i;
        let ret = null;
        U.pif(debug, 'finding metaparent of:', childJson, 'parent:', parent, 'parent.metaparent:', ParentMetaParent, 'childrens:', ParentMetaParent ? ParentMetaParent.childrens : 'null parent');
        for (i = 0; i < ParentMetaParent.childrens.length; i++) {
            const metaVersionCandidate = ParentMetaParent.childrens[i];
            const candidateName = metaVersionCandidate.name;
            U.pif(debug, 'check[' + i + '/' + ParentMetaParent.childrens.length + '] ' + candidateName + ' =?= ' + metaParentName + ' ? ' +
                (candidateName === metaParentName));
            // console.log('is metaparent? of:', metaParentName, ' === ', candidateName, ' ? ', candidateName === metaParentName);
            if (candidateName === metaParentName) {
                ret = metaVersionCandidate;
                break;
            }
        }
        U.pif(debug, 'return: ', ret);
        U.pe(ret == null && !canFail, 'metaParent not found. metaParentParent:', ParentMetaParent, 'metaParentName:', metaParentName, 'parent:', parent, 'json:', childJson);
        // console.log('findMetaParent of:', childJson, ' using parent:', parent, ' = ', ret);
        return ret;
    }
    /*
      static findMetaParentP(parent: IModel, childJson: Json, canFail: boolean = true): IPackage {
        return U.findMetaParent<IModel, IPackage>(parent, childJson, canFail);
      }
  
      static findMetaParentC(parent: IPackage, childJson: Json, canFail: boolean = true): M2Class {
        return U.findMetaParent<IPackage, M2Class>(parent, childJson, canFail);
      }
  
      static findMetaParentA(prnt: M2Class, childJ: Json, canFail: boolean = true): IAttribute {
        return U.findMetaParent<M2Class, IAttribute>(prnt, childJ, canFail);
      }
  
      static findMetaParentR(prnt: M2Class, childJ: Json, canFail: boolean = true): IReference {
        return U.findMetaParent<M2Class, IReference>(prnt, childJ, canFail);
      }
    */
    static arrayRemoveAll(arr, elem, debug = false) {
        let index;
        if (!arr)
            return;
        while (true) {
            index = arr.indexOf(elem);
            U.pif(debug, 'ArrayRemoveAll: index: ', index, '; arr:', arr, '; elem:', elem);
            if (index === -1) {
                return;
            }
            arr.splice(index, 1);
            U.pif(debug, 'ArrayRemoveAll RemovedOne:', arr);
        }
    }
    static arraySubstr(arr, start, length = null) { return arr ? arr.slice(start, start + length) : arr; }
    static arraySubstringSlice(arr, start, end = null) { return arr ? arr.slice(start, end) : arr; }
    static eventiDaAggiungereAlBody(selecteds) {
        // todo: guarda gli invocatori
    }
    static isOnEdge(pt, shape, tolerance = null) {
        return U.isOnHorizontalEdges(pt, shape, tolerance) || U.isOnVerticalEdges(pt, shape, tolerance);
    }
    static isOnVerticalEdges(pt, shape, tolerance = null) {
        return U.isOnLeftEdge(pt, shape, tolerance) || U.isOnRightEdge(pt, shape, tolerance);
    }
    static isOnHorizontalEdges(pt, shape, tolerance = null) {
        return U.isOnTopEdge(pt, shape, tolerance) || U.isOnBottomEdge(pt, shape, tolerance);
    }
    static isOnRightEdge(pt, shape, tolerance = null) {
        if (!pt || !shape) {
            return null;
        }
        if (tolerance === null)
            tolerance = U.GeomTolerance;
        if (tolerance)
            return Math.abs(pt.x - (shape.x + shape.w)) < tolerance
                && (pt.y - (shape.y) > tolerance && pt.y - (shape.y + shape.h) < tolerance);
        return (pt.x === shape.x + shape.w) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);
    }
    static isOnLeftEdge(pt, shape, tolerance = null) {
        if (!pt || !shape) {
            return null;
        }
        if (tolerance === null)
            tolerance = U.GeomTolerance;
        if (tolerance)
            return Math.abs(pt.x - shape.x) < tolerance
                && (pt.y - (shape.y) > tolerance && pt.y - (shape.y + shape.h) < tolerance);
        return (pt.x === shape.x) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);
    }
    static isOnTopEdge(pt, shape, tolerance = null) {
        if (!pt || !shape) {
            return null;
        }
        if (tolerance === null)
            tolerance = U.GeomTolerance;
        if (tolerance)
            return Math.abs(pt.y - shape.y) < tolerance
                && (pt.x - (shape.x) > tolerance && pt.x - (shape.x + shape.w) < tolerance);
        return (pt.y === shape.y) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);
    }
    static isOnBottomEdge(pt, shape, tolerance = null) {
        if (!pt || !shape) {
            return null;
        }
        if (tolerance === null)
            tolerance = U.GeomTolerance;
        if (tolerance)
            return Math.abs(pt.y - shape.y + shape.h) < tolerance
                && (pt.x - (shape.x) > tolerance && pt.x - (shape.x + shape.w) < tolerance);
        return (pt.y === shape.y + shape.h) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);
    }
    // usage: var scope1 = makeEvalContext("variable declariation list"); scope1("another eval like: x *=3;");
    // remarks: variable can be declared only on the first call, further calls on a created context can only modify the context without expanding it.
    static evalInContext(context, str, allowcontextEvalEdit = true) {
        const out = new EvalContext(context, str, allowcontextEvalEdit); // becomes a copy of T
        const ret = new EvalOutput();
        ret.outContext = allowcontextEvalEdit ? context : out; // context contiene l'oggetto originario, out contiene la shallowcopy modificata dall'eval.
        ret.return = EvalContext.EC_ret;
        ret.exception = EvalContext.EC_exception;
        return ret;
    }
    // same as above, but with dynamic context, although it's only extensible manually and not by the eval code itself.
    static evalInContextOld(context, js) {
        let value;
        try { // for expressions
            value = eval('with(context) { ' + js + ' }');
        }
        catch (e) {
            if (e instanceof SyntaxError) {
                //try { // for statements
                value = (new Function('with(this) { ' + js + ' }')).call(context);
                //} catch (e) { U.pw(true, 'error evaluating')}
            }
        }
        return value;
    }
    static multiReplaceAllKV(a, kv = []) {
        const keys = [];
        const vals = [];
        let i;
        for (i = 0; i < kv.length; i++) {
            keys.push(kv[i][0]);
            vals.push(kv[i][0]);
        }
        return U.multiReplaceAll(a, keys, vals);
    }
    static multiReplaceAll(a, searchText = [], replacement = []) {
        U.pe(!(searchText.length === replacement.length), 'search and replacement must be have same length:', searchText, replacement);
        let i = -1;
        while (++i < searchText.length) {
            a = U.replaceAll(a, searchText[i], replacement[i]);
        }
        return a;
    }
    static toFileName(a = 'nameless.txt') {
        if (!a) {
            a = 'nameless.txt';
        }
        a = U.multiReplaceAll(a.trim(), ['\\', '//', ':', '*', '?', '<', '>', '"', '|'], ['[lslash]', '[rslash]', ';', '°', '_', '{', '}', '\'', '!']);
        return a;
    }
    static download(filename = 'nameless.txt', text = null, debug = true) {
        if (!text) {
            return;
        }
        filename = U.toFileName(filename);
        const htmla = document.createElement('a');
        const blob = new Blob([text], { type: 'text/plain', endings: 'native' });
        const blobUrl = URL.createObjectURL(blob);
        U.pif(debug, text + '|\r\n| <-- rn, |\n| <--n.');
        htmla.style.display = 'none';
        htmla.href = blobUrl;
        htmla.download = filename;
        document.body.appendChild(htmla);
        htmla.click();
        window.URL.revokeObjectURL(blobUrl);
        document.body.removeChild(htmla);
    }
    /// arrotonda verso zero.
    static trunc(num) {
        if (Math['trunc' + '']) {
            return Math['trunc' + ''](num);
        }
        if (Math.floor && Math.ceil) {
            return Math[num > 0 ? 'floor' : 'ceil'](num);
        }
        return Number(String(num).replace(/\..*/, ''));
    }
    static closeButtonSetup($root, debug = false) {
        $root.find('.closeButton').off('click.closeButton').on('click.closeButton', (e) => {
            let html = e.target;
            const target = html.dataset.closebuttontarget;
            html = html.parentElement;
            U.pif(debug, 'html:', html, 'target:', e.target, 'targetstr:', target, 'dataset:', e.target.dataset);
            while (html && html.dataset.closebuttontarget !== target) {
                U.pif(debug, 'html:', html, ', data:', (html).dataset.closebuttontarget, ' === ' + target);
                html = html.parentElement;
            }
            U.pif(debug, 'html:', html);
            U.pe(!html, 'closeTarget not found: event trigger:', e.target, 'html:', html);
            $(html).hide();
        });
    }
    static insertAt(arr, index, elem) {
        if (index >= arr.length) {
            arr.push(elem);
            return;
        }
        arr.splice(index, 0, elem);
    }
    static setViewBox(svg, size = null) {
        if (!size) {
            size = new Size();
            size.x = size.y = size.w = size.h = null;
        }
        let x = +size.x;
        let y = +size.y;
        let w = +size.w;
        let h = +size.h;
        let htmlsize = null;
        if (isNaN(x)) {
            x = 0;
        }
        if (isNaN(y)) {
            y = 0;
        }
        if (isNaN(w)) {
            w = htmlsize ? htmlsize.w : (htmlsize = U.sizeof(svg)).w;
        }
        if (isNaN(h)) {
            h = htmlsize ? htmlsize.h : (htmlsize = U.sizeof(svg)).h;
        }
        svg.setAttributeNS(null, 'viewBox', x + ' ' + y + ' ' + w + ' ' + h);
    }
    static getViewBox(svg) {
        const str = svg.getAttributeNS(null, 'viewbox');
        if (!str)
            return U.sizeof(svg);
        const arr = str.split(' ');
        let vbox = new Size(0, 0, 0, 0);
        if (isNaN(+arr[0])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.x = +arr[0];
        }
        if (isNaN(+arr[1])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.y = +arr[1];
        }
        if (isNaN(+arr[2])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.w = +arr[2];
        }
        if (isNaN(+arr[3])) {
            vbox = U.sizeof(svg);
            vbox.x = vbox.y = 0;
            return vbox;
        }
        else {
            vbox.h = +arr[3];
        }
        return vbox;
    }
    static selectHtml(htmlSelect, optionValue, canFail = false) {
        const $options = $(htmlSelect).find('option');
        let i;
        let isFound = false;
        if (optionValue === null || optionValue === undefined) {
            return;
        }
        for (i = 0; i < $options.length; i++) {
            const opt = $options[i];
            if (opt.value === optionValue) {
                opt.selected = isFound = true;
            }
        }
        U.pw(!isFound, 'SelectOption not found. html:', htmlSelect, ', searchingFor: |' + optionValue + '|, in options:', $options);
        U.pe(!isFound && !canFail, 'SelectOption not found. html:', htmlSelect, ', searchingFor: |' + optionValue + '| in options:', $options);
    }
    static removeAllNgAttributes($root) {
        let attrs = U.getAllAttributes($root, (a) => !!a.name.match('ng\-|_ng'));
        for (let attr of attrs) {
            if (!attr.ownerElement)
                continue;
            attr.ownerElement.removeAttributeNode(attr);
        }
    }
    static getAllAttributes($root = null, matcher) {
        if (!$root)
            $root = $(document);
        const $elems = $root.find('*').addBack();
        const ret = [];
        for (let elem of $elems) {
            if (elem.attributes)
                Array.prototype.push.apply(ret, Array.prototype.filter.call(elem.attributes, matcher));
        }
        return ret;
    }
    static tabSetup(root = document.body) {
        $('.UtabHeader').off('click.tabchange').on('click.tabchange', U.tabClick);
        $('.UtabContent').hide();
        const $tabRoots = $('.UtabContainer');
        let i;
        for (i = 0; i < $tabRoots.length; i++) {
            const selectedStr = $tabRoots[i].dataset.selectedtab;
            const $selected = $($tabRoots[i]).find('>.UtabHeaderContainer>.UtabHeader[data-target="' + selectedStr + '"]');
            U.pe($selected.length !== 1, 'tab container must select exactly one tab. found instead: ' + $selected.length, 'tabRoot:', $tabRoots[i], 'selector:', selectedStr);
            // console.clear(); console.log('triggered: ', $selected);
            $selected.trigger('click');
        }
        /*
            U.addCss('customTabs',
              '.UtabHeaderContainer{ padding: 0; margin: 0; display: flex;}\n' +
              '.UtabContainer{\n' +
              'display: flex;\n' +
              'flex-flow: column;\n' +
              '\n}\n' +
              '.UtabHeader{\n' +
              'display: inline-block;\n' +
              'width: auto; flex-grow: 1;\n' +
              'margin: 10px;\n' +
              'margin-bottom: 0;\n' +
              'flex-basis: 0;\n' +
              'text-align: center;\n' +
              'border: 1px solid red;\n}\n' +
              '.UtabHeader+.UtabHeader{\n' +
              'margin-left:0;\n}\n' +
              '.UtabHeader[selected="true"]{\n' +
              'background-color: darkred;\n' +
              '}\n' +
              '.UtabContentContainer{\n' +
              '\n' +
              '    flex-grow: 1;\n' +
              '    flex-basis: 0;\n' +
              '    overflow: auto;' +
              '\n}\n' +
              '.UtabContent{\n' +
              'flex-grow: 1;\n' +
              // 'height: 100%;\n' +
              '\n}\n');*/
    }
    static tabClick(e) {
        let root = e.currentTarget;
        const target = root.dataset.target;
        while (root && !root.classList.contains('UtabContainer')) {
            root = root.parentNode;
        }
        const $root = $(root);
        const oldTarget = root.dataset.selectedtab;
        root.dataset.selectedtab = target;
        const $targethtml = $root.find('>.UtabContentContainer>.UtabContent[data-target="' + target + '"]');
        U.pe($targethtml.length !== 1, 'tab target count (' + $targethtml.length + ') is !== 1');
        const $oldTargetHtml = $root.find('>.UtabContentContainer>.UtabContent[data-target="' + oldTarget + '"]');
        U.pe($oldTargetHtml.length !== 1, 'oldTab target count (' + $oldTargetHtml.length + ') is !== 1');
        const $oldTargetHeader = $root.find('>.UtabHeaderContainer>.UtabHeader[data-target="' + oldTarget + '"]');
        U.pe($oldTargetHeader.length !== 1, 'oldTabHeader target count (' + $oldTargetHeader.length + ') is !== 1');
        const $targetHeader = $root.find('>.UtabHeaderContainer>.UtabHeader[data-target="' + target + '"]');
        U.pe($targetHeader.length !== 1, 'TabHeader target count (' + $targetHeader.length + ') is !== 1');
        if ($targethtml[0].getAttribute('selected') === 'true') {
            return;
        }
        $oldTargetHeader[0].setAttribute('selected', 'false');
        $targetHeader[0].setAttribute('selected', 'true');
        $oldTargetHtml.slideUp();
        $targethtml.slideDown();
    }
    static removeemptynodes(root, includeNBSP = false, debug = false) {
        let n;
        for (n = 0; n < root.childNodes.length; n++) {
            const child = root.childNodes[n];
            U.pif(debug, 'removeEmptyNodes: ', child.nodeType);
            switch (child.nodeType) {
                default:
                    break;
                case 1:
                    U.removeemptynodes(child, includeNBSP);
                    break; // node: element
                case 2:
                    break; // leaf: attribute
                case 8:
                    break; // leaf: comment
                case 3: // leaf: text node
                    let txt = child.nodeValue;
                    let i;
                    // replacing first blanks (\n, \r, &nbsp;) with classic spaces.
                    for (i = 0; i < txt.length; i++) {
                        let exit =  false && false;
                        switch (txt[i]) {
                            default:
                                exit = true;
                                break; // if contains non-blank is allowed to live but trimmed.
                            case '&nbsp':
                                if (includeNBSP) {
                                    txt[i] = ' ';
                                }
                                else {
                                    exit = true;
                                }
                                break;
                            case ' ':
                            case '\n':
                            case '\r':
                                txt[i] = ' ';
                                break;
                        }
                        if (exit) {
                            break;
                        }
                    }
                    // replacing last blanks (\n, \r, &nbsp;) with classic spaces.
                    for (i = txt.length; i >= 0; i--) {
                        let exit =  false && false;
                        switch (txt[i]) {
                            default:
                                exit = true;
                                break; // if contains non-blank is allowed to live but trimmed.
                            case '&nbsp':
                                if (includeNBSP) {
                                    txt[i] = ' ';
                                }
                                else {
                                    exit = true;
                                }
                                break;
                            case ' ':
                            case '\n':
                            case '\r':
                                txt[i] = ' ';
                                break;
                        }
                        if (exit) {
                            break;
                        }
                    }
                    txt = txt.trim();
                    U.pif(debug, 'txt: |' + root.nodeValue + '| --> |' + txt + '| delete?', (/^[\n\r ]*$/g.test(txt)));
                    if (txt === '') {
                        root.removeChild(child);
                        n--;
                    }
                    else {
                        root.nodeValue = txt;
                    }
                    break;
            }
        }
        return root;
    }
    static replaceAll(str, searchText, replacement, debug = false, warn = true) {
        if (!str) {
            return str;
        }
        return str.split(searchText).join(replacement);
        let lastPos = 0;
        if (searchText === replacement) {
            U.pw(warn, 'replaceAll invalid parameters: search text === replacement === ' + replacement);
            return str;
        }
        U.pif(debug, 'replaceAll(', searchText, ' with ', replacement, ') starting str:', searchText);
        while (str.indexOf(searchText, lastPos)) {
            const old = searchText;
            const lastPosOld = lastPos;
            searchText = searchText.substring(0, lastPos) + replacement + searchText.substring(lastPos + searchText.length);
            lastPos = lastPos + replacement.length;
            U.pif(debug, 'replaceAll() ', old, ' => ', searchText, '; lastpos:' + lastPosOld + ' => ', lastPos);
        }
        return str;
    }
    static isValidHtml(htmlStr, debug = false) {
        const div = document.createElement('div');
        if (!htmlStr) {
            return false;
        }
        div.innerHTML = htmlStr;
        // if (div.innerHTML === htmlStr) { return true; }
        const s2 = U.multiReplaceAll(div.innerHTML, [' ', ' ', '\n', '\r'], ['', '', '', '']);
        const s1 = U.multiReplaceAll(htmlStr, [' ', ' ', '\n', '\r'], ['', '', '', '']);
        const ret = s1 === s2;
        if (ret || !debug) {
            return ret;
        }
        const tmp = U.strFirstDiff(s1, s2, 20);
        U.pif(debug, 'isValidHtml() ' + (tmp ? '|' + tmp[0] + '| vs |' + tmp[1] + '|' : 'tmp === null'));
        return ret;
    }
    static RGBAToHex(str, prefix = '#', postfix = '') {
        return U.RGBAToHexObj(str, prefix, postfix).rgbahex;
    }
    static HexToHexObj(str) {
        str = U.replaceAll(str, '#', '');
        let byteLen;
        switch (str.length) {
            default: return null;
            case 3:
            case 4:
                byteLen = 1;
                break; // rgb & rgba con 1 byte color depth
            case 6:
            case 7:
            case 8:
                byteLen = 2;
                break;
        }
        const arr = [];
        let pos = 0;
        let strval;
        let val;
        while (true) {
            strval = str.substr(pos, byteLen);
            if (!strval)
                break;
            if (strval.length === 1)
                strval += strval; // f -> ff, 0 -> 00, 7 -> 77 nb: non usare byteLen, l'ultimo valore può avere bytelen diversa (RR GG BB A)
            val = Number.parseInt(strval, 16);
            if (isNaN(val))
                return null;
            arr.push(val);
            pos += byteLen;
        }
        if (arr.length < 3)
            return null;
        return { r: arr[0], g: arr[1], b: arr[2], a: arr[3] };
    }
    static colorObjToArgb(colorObj, prefix = '#', postfix = '') {
        const ret = colorObj;
        let tmp = prefix + U.toHex(ret.r, 2) + U.toHex(ret.g, 2) + U.toHex(ret.b, 2);
        ret.rgbhex = tmp + postfix;
        ret.rgbahex = tmp + U.toHex(ret.a || ret.a === 0 ? ret.a : 255, 2) + postfix;
        return ret;
    }
    static RGBAToHexObj(str, prefix = '#', postfix = '') {
        str = U.replaceAll(str, 'a', '');
        str = U.replaceAll(str, 'rgb', '');
        str = U.replaceAll(U.replaceAll(str, '(', ''), ')', '');
        const rgb = str.split(',');
        const ret = {
            r: parseInt(rgb[0]),
            g: parseInt(rgb[1]),
            b: parseInt(rgb[2]),
            a: rgb[3] && rgb[3].length ? 255 * (+rgb[3]) : 255,
        };
        return U.colorObjToArgb(ret);
    }
    static getIndex(node) {
        if (!node.parentElement) {
            return -1;
        }
        // return U.toArray(node.parentElement.children).indexOf(node);
        return Array.prototype.indexOf.call(node.parentElement.children, this);
    }
    static toArray(childNodes) {
        if (Array['' + 'from']) {
            return Array['' + 'from'](childNodes);
        }
        const array = [];
        let i = -1;
        while (++i < childNodes.length) {
            array.push(childNodes[i]);
        }
        return array;
    }
    static getClass(obj) { return obj.__proto__.constructor.name; }
    static isString(elem) { return elem + '' === elem; }
    static permuteV2(input) {
        U.PermuteArr = [];
        U.PermuteUsedChars = [];
        return U.permute0V2(input);
    }
    static permute0V2(input) {
        let i;
        let ch;
        for (i = 0; i < input.length; i++) {
            ch = input.splice(i, 1)[0];
            U.PermuteUsedChars.push(ch);
            if (input.length === 0) {
                U.PermuteArr.push(U.PermuteUsedChars.slice());
            }
            U.permute0V2(input);
            input.splice(i, 0, ch);
            U.PermuteUsedChars.pop();
        }
        return U.PermuteArr;
    }
    static permute(inputArr, debug = true) {
        const results = [];
        const permuteInner = (arr, memo = []) => {
            let cur;
            let i;
            for (i = 0; i < arr.length; i++) {
                cur = arr.splice(i, 1);
                if (arr.length === 0) {
                    results.push(memo.concat(cur));
                }
                permuteInner(arr.slice(), memo.concat(cur));
                arr.splice(i, 0, cur[0]);
            }
            return results;
        };
        return permuteInner(inputArr);
    }
    static resizableBorderMouseDblClick(e) {
        const size = U.sizeof(U.resizingContainer);
        const minSize = U.sizeof(U.resizingBorder);
        const oldSize = new Size(0, 0, +U.resizingContainer.dataset.oldsizew, +U.resizingContainer.dataset.oldsizeh);
        const horiz = U.resizingBorder.classList.contains('left') || U.resizingBorder.classList.contains('right');
        const vertic = U.resizingBorder.classList.contains('top') || U.resizingBorder.classList.contains('bottom');
        if (horiz && vertic)
            return; // do nothing on corner, non voglio che venga resizato sia a minheight che a minwidth, solo uno dei 2.
        minSize.w *= horiz ? 2 : 1;
        minSize.h *= vertic ? 2 : 1;
        minSize.x = size.x;
        minSize.y = size.y;
        // console.log('old, size, min', oldSize, size, minSize, oldSize.w && size.equals(minSize));
        if (oldSize.w && size.equals(minSize)) {
            U.resizingContainer.style.width = U.resizingContainer.style.minWidth = U.resizingContainer.style.maxWidth = oldSize.w + 'px';
            U.resizingContainer.style.height = U.resizingContainer.style.minHeight = U.resizingContainer.style.maxHeight = oldSize.h + 'px';
        }
        else {
            U.resizingContainer.style.width = U.resizingContainer.style.minWidth = U.resizingContainer.style.maxWidth = minSize.w + 'px';
            U.resizingContainer.style.height = U.resizingContainer.style.minHeight = U.resizingContainer.style.maxHeight = minSize.h + 'px';
            U.resizingContainer.dataset.oldsizew = '' + size.w;
            U.resizingContainer.dataset.oldsizeh = '' + size.h;
        }
    }
    static resizableBorderMouseDown(e) {
        U.resizingBorder = e.currentTarget;
        U.resizingContainer = U.resizingBorder;
        U.resizingContainer.style.padding = '0';
        U.resizingContainer.style.flexBasis = '0';
        // U.resizingContent.style.width = '100%'; required too
        while (!U.resizingContainer.classList.contains('resizableBorderContainer')) {
            U.resizingContainer = U.resizingContainer.parentNode;
        }
        if (U.checkDblClick())
            U.resizableBorderMouseDblClick(e);
    }
    static resizableBorderMouseUp(e) { U.resizingBorder = U.resizingContainer = null; }
    static resizableBorderUnset(e) {
        e.preventDefault();
        const border = e.currentTarget;
        let container = border;
        while (container.classList.contains('resizableBorderContainer')) {
            container = container.parentNode;
        }
        container.style.flexBasis = '';
        container.style.minHeight = container.style.minWidth =
            container.style.maxHeight = container.style.maxWidth =
                container.style.height = container.style.width = '';
    }
    static resizableBorderMouseMove(e) {
        if (!U.resizingBorder) {
            return;
        }
        const size = U.sizeof(U.resizingContainer);
        const missing = new Point(0, 0);
        const cursor = new Point(e.pageX, e.pageY);
        const puntoDaFarCoinciderePT = cursor.duplicate();
        const l = U.resizingBorder.classList.contains('left');
        const r = U.resizingBorder.classList.contains('right');
        const t = U.resizingBorder.classList.contains('top');
        const b = U.resizingBorder.classList.contains('bottom');
        if (l) {
            puntoDaFarCoinciderePT.x = size.x;
        }
        if (r) {
            puntoDaFarCoinciderePT.x = size.x + size.w;
        }
        if (t) {
            puntoDaFarCoinciderePT.y = size.y;
        }
        if (b) {
            puntoDaFarCoinciderePT.y = size.y + size.h;
        }
        const add = cursor.subtract(puntoDaFarCoinciderePT, true);
        if (l) {
            add.x *= -1;
        }
        if (t) {
            add.y *= -1;
        }
        // o = p0 - c
        // p = c
        // c = p0-o
        // console.log('lrtb: ', l, r, t, b);
        // console.log('ptcoinc: ', puntoDaFarCoinciderePT, ' cursor:', cursor, ' size:', size, 'adjust:', add);
        size.w += add.x;
        size.h += add.y;
        const borderSize = U.sizeof(U.resizingBorder);
        if (l || r) {
            size.w = Math.max(size.w, borderSize.w * 2);
        }
        if (t || b) {
            size.h = Math.max(size.h, borderSize.h * 2);
        }
        U.resizingContainer.style.width = U.resizingContainer.style.maxWidth = U.resizingContainer.style.minWidth = (size.w) + 'px';
        U.resizingContainer.style.height = U.resizingContainer.style.maxHeight = U.resizingContainer.style.minHeight = (size.h) + 'px';
        // console.log('result:' + U.resizingContainer.style.width);
        U.resizingContainer.style.flexBasis = 'unset';
    }
    static resizableBorderSetup(root = document.body) {
        // todo: addBack is great, aggiungilo tipo ovunque. find() esclude l'elemento radice anche se matcha la query, addback rimedia aggiungendo il
        //  previous matched set che matcha la condizione.
        const $arr = $(root).find('.resizableBorder').addBack('.resizableBorder');
        let i = -1;
        const nl = '\n';
        while (++i < $arr.length) {
            U.makeResizableBorder($arr[i]);
        }
        U.eventiDaAggiungereAlBody(null);
        $(document.body).off('mousemove.ResizableBorder').on('mousemove.ResizableBorder', U.resizableBorderMouseMove);
        $(document.body).off('mouseup.ResizableBorder').on('mouseup.ResizableBorder', U.resizableBorderMouseUp);
        $('.resizableBorder.corner').off('mousedown.ResizableBorder').on('mousedown.ResizableBorder', U.resizableBorderMouseDown)
            .off('contextmenu.ResizableBorder').on('contextmenu.ResizableBorder', U.resizableBorderUnset);
        $('.resizableBorder.side').off('mousedown.ResizableBorder').on('mousedown.ResizableBorder', U.resizableBorderMouseDown)
            .off('contextmenu.ResizableBorder').on('contextmenu.ResizableBorder', U.resizableBorderUnset);
        return;
    }
    static makeResizableBorder(html, left = true, top = true, right = true, bottom = true) {
        // if (!html.classList.contains('resizableBorderContainer')) { html.classList.add('resizableBorderContainer'); }
        let container = null;
        let content = null;
        if (false) {}
        else {
            // first run: initialing now.
            // const tmpNode: HTMLElement = document.createElement('div');
            // while (html.firstChild) { tmpNode.appendChild(html.firstChild); }
            // while (tmpNode.firstChild) { content.appendChild(tmpNode.firstChild); }
            content = html;
            container = U.cloneHtml(html, false);
            html.setAttribute('original', 'true');
            while (container.classList.length > 0) {
                container.classList.remove(container.classList.item(0));
            }
        }
        // console.log('container:', container, 'content:', content);
        U.pe(container.children.length !== 0, '');
        // U.copyStyle(html, container);
        html.parentNode.insertBefore(container, html);
        content.classList.remove('resizableBorderContainer');
        content.classList.add('resizableContent');
        container.classList.add('resizableBorderContainer');
        if (left) {
            html.dataset.resizableleft = 'true';
        }
        if (right) {
            html.dataset.resizableright = 'true';
        }
        if (top) {
            html.dataset.resizabletop = 'true';
        }
        if (bottom) {
            html.dataset.resizablebottom = 'true';
        }
        left = html.dataset.resizableleft === 'true';
        right = html.dataset.resizableright === 'true';
        top = html.dataset.resizabletop === 'true';
        bottom = html.dataset.resizablebottom === 'true';
        // const size: Size = U.sizeof(html);
        // container.style.width = size.w + 'px';
        // container.style.height = size.h + 'px';
        const l = U.toHtml('<div class="resizableBorder side left"></div>');
        const r = U.toHtml('<div class="resizableBorder side right"></div>');
        const t = U.toHtml('<div class="resizableBorder side top"></div>');
        const b = U.toHtml('<div class="resizableBorder side bottom"></div>');
        const tl = U.toHtml('<div class="resizableBorder corner top left"></div>');
        const tr = U.toHtml('<div class="resizableBorder corner top right"></div>');
        const bl = U.toHtml('<div class="resizableBorder corner bottom left"></div>');
        const br = U.toHtml('<div class="resizableBorder corner bottom right"></div>');
        const hstripT = U.toHtml('<div class="resizableStrip up"></div>');
        const hstripM = U.toHtml('<div class="resizableStrip center"></div>');
        const hstripB = U.toHtml('<div class="resizableStrip down"></div>');
        l.dataset.resizeenabled = left ? 'true' : 'false';
        r.dataset.resizeenabled = right ? 'true' : 'false';
        t.dataset.resizeenabled = top ? 'true' : 'false';
        b.dataset.resizeenabled = bottom ? 'true' : 'false';
        tl.dataset.resizeenabled = top && left ? 'true' : 'false';
        tr.dataset.resizeenabled = top && right ? 'true' : 'false';
        bl.dataset.resizeenabled = bottom && left ? 'true' : 'false';
        br.dataset.resizeenabled = bottom && right ? 'true' : 'false';
        const style = getComputedStyle(html, null);
        // html.style.border = 'none';
        t.style.borderTop = tl.style.borderTop = tr.style.borderTop = style.borderTop; // || '0';
        b.style.borderBottom = bl.style.borderBottom = br.style.borderBottom = style.borderBottom; // || '0';
        l.style.borderLeft = tl.style.borderLeft = bl.style.borderLeft = style.borderLeft; // || '0';
        r.style.borderRight = tr.style.borderRight = br.style.borderRight = style.borderRight; // || '0';
        // per un bug lo stile viene sempre letto come "none"
        /*l.style.borderStyle = 'solid';
        r.style.borderStyle = 'solid';
        t.style.borderStyle = 'solid';
        b.style.borderStyle = 'solid';*/
        //console.log('style.border:', style.border);
        /*U.pe(t.style.borderTopStyle === 'none', '1');
        U.pe(isNaN(+t.style.borderWidth), '2');
        U.pe(+t.style.borderWidth === 0, '3');
        if (t.style.borderTopStyle === 'none' || isNaN(+t.style.borderWidth) || +t.style.borderWidth === 0) {
          t.style.borderWidth = t.style.height = t.style.width = t.style.flexGrow = '0'; }
        if (b.style.borderBottomStyle === 'none' || isNaN(+b.style.borderWidth) || +b.style.borderWidth === 0) {
          b.style.borderWidth = b.style.height = b.style.width = b.style.flexGrow = '0'; }
        if (l.style.borderLeftStyle === 'none' || isNaN(+l.style.borderWidth) || +l.style.borderWidth === 0) {
          l.style.borderWidth = l.style.height = l.style.width = l.style.flexGrow = '0'; }
        if (r.style.borderTopStyle === 'none' || isNaN(+r.style.borderWidth) || +r.style.borderWidth === 0) {
          r.style.borderWidth = r.style.height = r.style.width = r.style.flexGrow = '0'; }*/
        /*
        const borderSizeL: Size;
        const borderSizeR: Size;
        const borderSizeT: Size;
        const borderSizeB: Size;
        tl.style.width = l.style.width = bl.style.width = (borderSizeL.w) + 'px';
        tr.style.width = r.style.width = br.style.width = (borderSizeR.w) + 'px';
        tl.style.height = t.style.height = tr.style.height = (borderSizeT.h) + 'px';
        bl.style.height = b.style.height = br.style.height = (borderSizeB.h) + 'px';
    
        t.style.width = b.style.width = (size.w - (borderSizeL.w + borderSizeR.w)) + 'px';
        l.style.height = r.style.height = (size.h - (borderSizeT.h + borderSizeB.w)) + 'px';*/
        // html.parentNode.appendChild(container);
        hstripT.appendChild(tl);
        hstripT.appendChild(t);
        hstripT.appendChild(tr);
        hstripM.appendChild(l);
        hstripM.appendChild(content);
        hstripM.appendChild(r);
        hstripB.appendChild(bl);
        hstripB.appendChild(b);
        hstripB.appendChild(br);
        container.appendChild(hstripT);
        container.appendChild(hstripM);
        container.appendChild(hstripB);
        container.style.border = 'none'; /*
        const size: Size = U.sizeof(container);
        const hbordersize = 10;
        const vbordersize = 10;
        container.style.width = Math.max(hbordersize * 2 + size.w) + 'px';
        container.style.height = Math.max(vbordersize * 2 + size.h) + 'px';*/
        content.style.border = 'none';
        if (!content.style.width || content.style.width === 'auto') {
            content.style.width = '100%';
            content.style.height = '100%';
        }
        content.style.minWidth = '0';
        content.style.minHeight = '0';
    }
    static copyStyle(from, to, computedStyle = null) {
        // trying to figure out which style object we need to use depense on the browser support, so we try until we have one.
        if (!computedStyle) {
            computedStyle = from['' + 'currentStyle'] || document.defaultView.getComputedStyle(from, null);
        }
        // if the browser dose not support both methods we will return failure.
        if (!computedStyle) {
            return false;
        }
        // checking that the value is not a undefined, object, function, empty or int index ( happens on some browser)
        const stylePropertyValid = (name, value) => {
            // nb: mind that typeof [] === 'object';
            return typeof value !== 'undefined' && typeof value !== 'object' && typeof value !== 'function' && value.length > 0
                // && value !== parseInt(value, 10); };
                && +name !== parseInt(name, 10);
        };
        let property;
        for (property in computedStyle) {
            // hasOwnProperty is useless, but compiler required
            // console.log('property[', property, '] = ', computedStyle[property]);
            if (!computedStyle.hasOwnProperty(property) || !stylePropertyValid(property, computedStyle[property])) {
                continue;
            }
            to.style[property] = computedStyle[property];
        }
        return true;
    }
    static cclear() { console.clear(); console.trace(); }
    static toDottedURI(uri) {
        return U.replaceAll(U.replaceAll(uri.substring(uri.indexOf('://') + '://'.length), '\\', '/'), '/', '.');
    }
    static toHttpsURI(uri, folderChar = '/') {
        return 'https://' + U.replaceAll(uri, '.', folderChar);
    }
    static toNumber(o) {
        if (o === null || o === undefined || (U.isString(o) && o.trim() === ''))
            return null;
        o = +o;
        if (isNaN(o))
            return null;
        return o;
    }
    // returns true only if parameter is already a number by type. U.isNumber('3') will return false
    static isNumber(o) { return +o === o && !isNaN(o); }
    // returns true only if parameter is a number or a stringified number. U.isNumber('3') will return true
    static isNumerizable(o) { return o !== null && o !== undefined && o !== '' && !isNaN(+o); }
    static isNumberArray(o, minn = Number.NEGATIVE_INFINITY, max = Number.POSITIVE_INFINITY, ifItIsEmptyArrReturn = true) {
        const validation = (val) => U.isNumber(val) && val >= minn && val <= max;
        return U.isArrayOf(o, validation, ifItIsEmptyArrReturn);
    }
    static isIntegerArray(o, minn = Number.NEGATIVE_INFINITY, max = Number.POSITIVE_INFINITY, ifItIsEmptyArrReturn = true) {
        const validation = (val) => (U.isNumber(val) && Math.floor(val) === val && val >= minn && val <= max);
        return U.isArrayOf(o, validation, ifItIsEmptyArrReturn);
    }
    static isCharArray(values, ifItIsEmpryArrayReturn = true) {
        const charValidator = (val) => (val.length === 1);
        return U.isArrayOf(values, charValidator, ifItIsEmpryArrayReturn);
    }
    static isArrayOf(value, functionCheck, ifItIsEmptyArrayReturn = true) {
        if (!Array.isArray(value)) {
            return false;
        }
        let i;
        if (value.length === 0) {
            return ifItIsEmptyArrayReturn;
        }
        for (i = 0; i < value.length; i++) {
            if (!functionCheck(value[i]) && !U.isArrayOf(value[i], functionCheck, ifItIsEmptyArrayReturn)) {
                return false;
            }
        }
        return true;
    }
    static isStringArray(value, ifItIsEmptyArrayReturn = true) {
        if (!Array.isArray(value)) {
            return false;
        }
        let i;
        if (value.length === 0) {
            return ifItIsEmptyArrayReturn;
        }
        for (i = 0; i < value.length; i++) {
            if (!U.isString(value[i]) && !U.isStringArray(value[i], true)) {
                return false;
            }
        }
        return true;
    }
    static clipboardCopy(text) {
        if (!U.clipboardinput) {
            U.clipboardinput = document.createElement('input');
            U.clipboardinput.id = U.prefix + 'CopyDataToClipboard';
            U.clipboardinput.type = 'text';
            U.clipboardinput.style.display = 'block';
            U.clipboardinput.style.position = 'absolute';
            U.clipboardinput.style.top = '-100vh';
        }
        document.body.appendChild(U.clipboardinput);
        U.clipboardinput.value = text;
        U.clipboardinput.select();
        document.execCommand('copy');
        document.body.removeChild(U.clipboardinput);
        U.clearSelection();
    }
    static clearSelection() { }
    static refreshPage() { window.location.href += ''; }
    static isArray(v) { return Array.isArray(v); }
    static isEmptyObject(v, returnIfNull = true, returnIfUndefined = false) {
        return U.isObject(v, returnIfNull, returnIfUndefined) && $.isEmptyObject(v);
    }
    static isObject(v, returnIfNull = true, returnIfUndefined = false, retIfArray = false) {
        if (v === null) {
            return returnIfNull;
        }
        if (v === undefined) {
            return returnIfUndefined;
        }
        if (Array.isArray(v)) {
            return retIfArray;
        }
        // nb: mind that typeof [] === 'object'
        return typeof v === 'object';
    }
    static isFunction(v) { return (typeof v === 'function'); }
    static isPrimitive(v, returnIfNull = true, returnIfUndefined = true) {
        if (v === null) {
            return returnIfNull;
        }
        if (v === undefined) {
            return returnIfUndefined;
        }
        // return (typeof v !== 'function') && (typeof v !== 'object') && (!U.isArray(v));
        return !U.isObject(v) && !Array.isArray(v) && !U.isFunction(v);
    }
    static getEndingNumber(s, ignoreNonNumbers = false, allowDecimal = false) {
        let i = s.length;
        let numberEnd = -1;
        while (--i > 0) {
            if (!isNaN(+s[i])) {
                if (numberEnd === -1) {
                    numberEnd = i;
                }
                continue;
            }
            if (s[i] === '.' && !allowDecimal) {
                break;
            }
            if (s[i] === '.') {
                allowDecimal = false;
                continue;
            }
            if (!ignoreNonNumbers) {
                break;
            }
            if (numberEnd !== -1) {
                ignoreNonNumbers = false;
            }
        }
        s = numberEnd === -1 ? '1' : s.substring(i, numberEnd);
        return +parseFloat(s);
    }
    static increaseEndingNumber(s, allowLastNonNumberChars = false, allowDecimal = false, increaseWhile = null) {
        /*let i = s.length;
        let numberEnd = -1;
        while (--i > 0) {
          if (!isNaN(+s[i])) { if (numberEnd === -1) { numberEnd = i; } continue; }
          if (s[i] === '.' && !allowDecimal) { break; }
          if (s[i] === '.') { allowDecimal = false; continue; }
          if (!ignoreNonNumbers) { break; }
          if (numberEnd !== -1) { ignoreNonNumbers = false; }
        }
        if (numberEnd === -1) { return s + '_1'; }
        // i++;
        numberEnd++;*/
        let regexpstr = '([0-9]+' + (allowDecimal ? '|[0-9]+\\.[0-9]+' : '') + ')' + (allowLastNonNumberChars ? '[^0-9]*' : '') + '$';
        const matches = new RegExp(regexpstr, 'g').exec(s); // Global (return multi-match) Single line (. matches \n).
        // S flag removed for browser support (firefox), should work anyway.
        let prefix;
        let num;
        if (!matches) {
            prefix = s;
            num = 2;
        }
        else {
            U.pe(matches.length > 2, 'parsing error: /' + regexpstr + '/gs.match(' + s + ')');
            let i = s.length - matches[0].length;
            prefix = s.substring(0, i);
            num = 1 + (+matches[1]);
            // U.pe(isNaN(num), 'wrong parsing:', s, s.substring(i, numberEnd), i, numberEnd);
            // const prefix: string = s.substring(0, i);
            // console.log('increaseendingNumber:  prefix: |' + prefix+'| num:'+num, '[i] = ['+i+']; s: |'+s+"|");
        }
        while (increaseWhile !== null && increaseWhile(prefix + num)) {
            num++;
        }
        return prefix + num;
    }
    static isValidName(name) { return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name); }
    static getTSClassName(thing) {
        if (!thing || !thing.constructor)
            return typeof (thing);
        return thing.constructor.name + '';
    }
    static detailButtonSetup($root = null) {
        if (!$root)
            $root = $(document.body);
        $root.find('button.detail').off('click.detailbutton').on('click.detailbutton', (e, forceHide) => {
            const btn = e.currentTarget;
            const $btn = $(btn);
            const $detailPanel = $root.find(btn.getAttribute('target'));
            const otherButtons = $(btn.parentElement).find('button.detail').toArray().filter(x => x != btn);
            // $styleown.find('div.detail:not(' + btn.getAttribute('target') + ')');
            const b = btn.dataset.on === '1';
            if (forceHide || b) {
                btn.style.width = '';
                btn.dataset.on = '0';
                btn.style.borderBottom = '';
                btn.style.borderBottomLeftRadius = '';
                btn.style.borderBottomRightRadius = '';
                $btn.find('.closed').show();
                $btn.find('.opened').hide();
                // $detailcontainers.show();
                $detailPanel.hide();
            }
            else {
                const size = U.sizeof(btn);
                btn.style.width = size.w + 'px';
                btn.dataset.on = '1';
                btn.style.borderBottom = 'none'; // '3px solid #252525';
                btn.style.borderBottomLeftRadius = '0';
                btn.style.borderBottomRightRadius = '0';
                $btn.find('.closed').hide();
                $btn.find('.opened').show()[0].style.width = (size.w - 15 * 2) + 'px';
                // console.log('others:', otherButtons, 'me:', $btn);
                $(otherButtons).data('on', '1').trigger('click', true);
                $detailPanel.show();
            }
        });
        $root.find('div.detail').hide();
    }
    // Prevent the backspace key from navigating back.
    static preventBackSlashHistoryNavigation(event) {
        if (!event || !event.key || event.key.toLowerCase() !== 'backspace') {
            return true;
        }
        const types = ['text', 'password', 'file', 'search', 'email', 'number', 'date',
            'color', 'datetime', 'datetime-local', 'month', 'range', 'search', 'tel', 'time', 'url', 'week'];
        const srcElement = $(event['' + 'srcElement'] || event.target);
        const disabled = srcElement.prop('readonly') || srcElement.prop('disabled');
        if (!disabled) {
            if (srcElement[0].isContentEditable || srcElement.is('textarea')) {
                return true;
            }
            if (srcElement.is('input')) {
                const type = srcElement.attr('type');
                if (!type || types.indexOf(type.toLowerCase()) > -1) {
                    return true;
                }
            }
        }
        event.preventDefault();
        return false;
    }
    // esercizio per antonella array deep copy
    /// copy all the element inside the array, eventually deep cloning but not duplicating objects or leaf elements.
    static ArrayCopy(arr, deep) {
        const ret = [];
        let i;
        for (i = 0; i < arr.length; i++) {
            if (deep && Array.isArray(arr[i])) {
                const tmp = U.ArrayCopy(arr[i], deep);
                ret.push(tmp);
            }
            else {
                ret.push(arr[i]);
            }
        }
        return ret;
    }
    static SetMerge(modifyFirst = true, ...iterables) {
        const set = modifyFirst ? iterables[0] : new Set();
        U.pe(!(set instanceof Set), 'U.SetMerge() used with modifyFirst = true requires the first argument to be a set');
        for (let iterable of iterables) {
            for (let item of iterable) {
                set.add(item);
            }
        }
        return set;
    }
    static MapMerge(modifyFirst = true, ...maps) {
        const ret = modifyFirst ? maps[0] : new Map();
        let i;
        for (i = 0; i < maps.length; i++) {
            maps[i].forEach(function (value, key) { ret.set(key, value); });
        }
        return ret;
    }
    static ArrayMerge(arr1, arr2, unique = false) {
        if (!arr1 || !arr2)
            return;
        if (!unique)
            Array.prototype.push.apply(arr1, arr2);
        let i;
        for (i = 0; i < arr2.length; i++) {
            U.ArrayAdd(arr1, arr2[i]);
        }
    }
    static ArrayAdd(arr, elem, unique = true, throwIfContained = false) {
        U.pe(!arr || !Array.isArray(arr), 'arr null or not array:', arr);
        if (!unique) {
            arr.push(elem);
            return true;
        }
        if (arr.indexOf(elem) === -1) {
            arr.push(elem);
            return true;
        }
        U.pe(throwIfContained, 'element already contained:', arr, elem);
        return false;
    }
    static fieldCount(obj) {
        let counter = 1 - 1;
        for (const key in obj) {
            if (!(key in obj)) {
                continue;
            }
            counter++;
        }
        return counter;
    }
    static isPositiveZero(m) {
        if (Object['is' + '']) {
            return Object['is' + ''](m, +0);
        }
        return (1 / m === Number.POSITIVE_INFINITY);
    }
    static isNegativeZero(m) {
        if (Object['is' + '']) {
            return Object['is' + ''](m, -0);
        }
        return (1 / m === Number.NEGATIVE_INFINITY);
    }
    static TanToRadian(n) { return U.DegreeToRad(U.TanToDegree(n)); }
    static TanToDegree(n) {
        if (U.isPositiveZero(n)) {
            return 0;
        }
        if (n === Number.POSITIVE_INFINITY) {
            return 90;
        }
        if (U.isNegativeZero(n)) {
            return 180;
        }
        if (n === Number.POSITIVE_INFINITY) {
            return 270;
        }
        return U.RadToDegree(Math.atan(n));
    }
    static RadToDegree(radians) { return radians * (180 / Math.PI); }
    static DegreeToRad(degree) { return degree * (Math.PI / 180); }
    static replaceAllRegExp(value, regExp, replacement) { return value.replace(regExp, replacement); }
    static fixHtmlSelected($root) {
        const $selecteds = $root.find('select');
        let i;
        for (i = 0; i < $selecteds.length; i++) {
            const $option = $($selecteds[i]).find('option[selected]');
            U.selectHtml($selecteds[i], $option.length ? $option[0].value : null);
        }
    }
    // ignores first N equal chars and return the substring of s1 from N to N+len or until s1 end.
    static strFirstDiff(s1, s2, len) {
        let i;
        if (!s1 && !s2) {
            return [s1, s2];
        }
        if (s1 && !s2) {
            return [s1.substr(0, len), s2];
        }
        if (!s1 && s2) {
            return [s1, s2.substr(0, len)];
        }
        const min = Math.min(s1.length, s2.length);
        for (i = 0; i < min; i++) {
            if (s1[i] !== s2[i]) {
                return [s1.substr(i, len), s2.substr(i, len)];
            }
        }
        return null;
    }
    // get the index of the first char not equal between s1 and s2 or null if one of the string ended.
    static strFirstDiffIndex(s1, s2) {
        let i = -1;
        if (!s1 || !s2)
            return -1;
        let minlen = Math.min(s1.length, s2.length);
        // console.log('strequal minlen:', minlen, '|'+s1+'|', '|'+s2+'|');
        for (i = -1; ++i < minlen && s1[i] === s2[i];) {
            // console.log('strequal:', i, 's1:', s1[i], 's2', s2[i], true);
        }
        return i;
    }
    static mergeArray(a, b, inplace, asSet) {
        a = a || [];
        b = b || [];
        let ret;
        if (inplace) {
            (ret = a).push(...b);
        }
        else {
            ret = a.concat(...b);
        }
        return asSet ? [...new Set(ret)] : ret;
    }
    static mergeClasses(elem1, elem2) {
        const classes1 = elem1.getAttribute('class').split(' ');
        const classes2 = elem2.getAttribute('class').split(' ');
        elem1.setAttribute('class', U.mergeArray(classes1, classes2, true, true).join(' '));
    }
    static mergeStyles(html, fake = null, styleString = null, prioritizeFake = false) {
        let i;
        const styles1 = html.getAttribute('style').split(';');
        const styles2 = (styleString = (styleString ? styleString : fake.getAttribute('style'))).split(';');
        let stylesKv1 = {};
        let stylesKv2 = {};
        let key;
        let val;
        let pos;
        for (i = 0; i < styles1.length; i++) {
            pos = styles1[i].indexOf(':');
            key = styles1[i].substr(0, pos).trim();
            val = styles1[i].substr(pos + 1).trim();
            if (key == '' || val == '')
                continue;
            stylesKv1[key] = val;
        }
        for (i = 0; i < styles2.length; i++) {
            pos = styles2[i].indexOf(':');
            key = styles2[i].substr(0, pos).trim();
            val = styles2[i].substr(pos + 1).trim();
            if (key == '' || val == '')
                continue;
            stylesKv2[key] = val;
        }
        if (prioritizeFake) {
            let tmp = stylesKv1;
            stylesKv1 = stylesKv2;
            stylesKv2 = tmp;
        }
        stylesKv1 = U.join(stylesKv1, stylesKv2, true, false);
        let style = '';
        for (key in stylesKv1) {
            style += key + ':' + stylesKv1[key] + '; ';
        }
        // console.log('final Style:', style, stylesKv1, stylesKv2, styles2);
        html.setAttribute('style', style);
    }
    static merge(a, b, overwriteNull = true, clone = true) { return U.join(a, b, overwriteNull, clone); }
    static join(a, b, overwriteNull = true, clone = true) {
        if (clone) {
            a = U.cloneObj(a);
        }
        let key;
        for (key in b) {
            if (!b.hasOwnProperty(key)) {
                continue;
            }
            if (b[key] !== undefined && a[key] === null && overwriteNull || a[key] === undefined) {
                a[key] = b[key];
            }
        }
        return a;
    }
    static getChildIndex_old(html, allNodes = true) {
        if (allNodes) {
            return Array.prototype.indexOf.call(html.parentNode.childNodes, html);
        }
        return Array.prototype.indexOf.call(html.parentNode.children, html);
    }
    static getChildIndex(array, child) {
        return Array.prototype.indexOf.call(array, child);
    }
    static getIndexesPath_old(parent, child) {
        let ret = [];
        while (child && child !== parent) {
            ret.push(U.getChildIndex(parent.childNodes, child));
            child = child.parentElement;
        }
        // ret = ret.splice(ret.length - 2, 1);
        return ret.reverse();
    }
    static getIndexesPath_NoParentKey(child, parent) {
        U.pe(true, 'getindexespath without parent key: todo');
        return null;
        // todo: top-down ricorsivo a tentativi. implementa loop detection. senza childkey (può variare es: parent.a[3].b.c[1] = child)
        //  return string array con nomi di campi e indici di array.
    }
    static getIndexesPath(child, parentKey, childKey = null /* null = parent is raw array*/, parentLimit = null) {
        let ret = [];
        while (child) {
            const parent = child[parentKey];
            if (child === parentLimit) {
                break;
            }
            if (!parent || parent === child) {
                break;
            }
            const parentArrChilds = childKey ? parent[childKey] : parent;
            ret.push(U.getChildIndex(parentArrChilds, child));
            child = child[parentKey];
        }
        return ret.reverse();
    }
    static followIndexesPath(root, indexedPath, childKey, outArr = { indexFollowed: [],
        debugArr: [{ index: 'Start', elem: root }] }, debug = false) {
        let j;
        let ret = root;
        let oldret = ret;
        U.pe(!childKey, 'must define a childkey', childKey);
        if (outArr)
            outArr.debugArr.push({ index: 'start', elem: root, childKey: childKey });
        debug = +window['debugi'] === 1;
        U.pe(childKey && childKey !== '' + childKey, 'U.followIndexesPath() childkey must be a string or a null:', childKey, 'root:', root);
        for (j = 0; j < indexedPath.length; j++) {
            let key = indexedPath[j];
            let childArr = childKey ? ret[childKey] : ret;
            U.pif(debug, 'path ' + j + ') = elem.' + childKey + ' = ', childArr);
            if (!childArr) {
                U.pif(debug, 'U.followIndexEnd 1:', outArr);
                return oldret;
            }
            ret = childArr[key];
            if (key >= childArr.length) {
                key = 'Key out of boundary: ' + key + '/' + childArr.length + '.';
            }
            U.pif(debug, 'path ' + j + ') = elem.' + childKey + '[ ' + key + '] = ', ret);
            if (outArr)
                outArr.debugArr.push({ index: key, elem: ret });
            if (!ret) {
                U.pif(debug, 'U.followIndexEnd 2:', outArr);
                return oldret;
            }
            if (outArr)
                outArr.indexFollowed.push(key);
            oldret = ret;
        }
        U.pif(debug, 'U.followIndexEnd 3:', outArr);
        return ret;
    }
    static followIndexesPathOld(templateRoot, indexedPath, allNodes = true, outArr = { indexFollowed: [] }, debug = false) {
        let j;
        let ret = templateRoot;
        let oldret = ret;
        const debugarr = [{ index: 'Start', html: ret }];
        for (j = 0; j < indexedPath.length; j++) {
            const index = indexedPath[j];
            ret = (allNodes ? ret.childNodes[index] : ret.children[index]);
            if (!ret) {
                console.log('folllowPath: clicked on some dinamically generated content, returning the closest static parent.', debugarr);
                U.pw(debug, 'clicked on some dinamically generated content, returning the closest static parent.', debugarr);
                return oldret;
            }
            oldret = ret;
            outArr.indexFollowed.push(index);
            debugarr.push({ index: index, html: ret });
        }
        U.pif(debug, 'followpath debug arr:', debugarr);
        return ret;
    }
    static removeDuplicates(arr0, clone = false) { return U.mergeArray(arr0, [], !clone, true); }
    static getStartSeparatorKey() { return ++U.startSeparatorKeyMax + ''; }
    static startSeparator(key, separator = ', ') {
        if (key in U.startSeparatorKeys)
            return separator;
        U.startSeparatorKeys[key] = true;
        return '';
    }
    static arrayContains(arr, searchElem) {
        if (!arr)
            return false;
        // return arr && arr.indexOf(searchElem) === -1; not working properly on strings. maybe they are evaluated by references and not by values.
        let i;
        for (i = 0; i < arr.length; i++) {
            if (arr[i] === searchElem)
                return true;
        }
        return false;
    }
    static toBoolString(bool, ifNotBoolean = false) { return bool === true ? 'true' : (bool === false ? 'false' : '' + ifNotBoolean); }
    static fromBoolString(str, defaultVal = false, allowNull = false, allowUndefined = false) {
        str = ('' + str).toLowerCase();
        if (allowNull && (str === 'null'))
            return null;
        if (allowUndefined && (str === 'undefined'))
            return undefined;
        if (str === "true" || str === 't' || str === '1')
            return true;
        // if (defaultVal === true) return str === "false" || str === 'f' || str === '0'; // false solo se è esplicitamente false, true se ambiguo.
        if (str === "false" || str === 'f' || str === '0')
            return false;
        return defaultVal;
    }
    static parseNumberOrBoolean(val, params = new ParseNumberOrBooleanOptions()) {
        let booleanTry = U.fromBoolString(val, '', true, true);
        // console.log("isAllowingEdge parsenumberorboolean:", booleanTry, "|", params, "|", val);
        switch ('' + booleanTry) {
            default:
                U.pe(true, "dev error, unexpected case on U.parseNumberOfBoolean: ", val, ' = ', booleanTry);
                break;
            case 'true':
                if (params.allowBooleans)
                    return params.trueValue;
                break;
            case 'false':
                if (params.allowBooleans)
                    return params.falseValue;
                break;
            case 'undefined':
                if (params.allowUndefined)
                    return params.undefinedValue;
                break;
            case 'null':
                if (params.allowNull)
                    return params.nullValue;
                break;
            case '':
                let valnumber = +val;
                if (isNaN(valnumber))
                    return params.allowedNan ? params.nanValue : params.defaultValue;
                return valnumber;
        }
        return params.defaultValue;
    }
    static parseSvgPath(str) {
        let i;
        let letter = null;
        let num1 = null;
        let num2 = null; // useless initializing phase to avoid IDE warnings
        let foundFloat = null;
        let pt = null;
        let current = null;
        const assoc = [];
        const pts = [];
        const ret = { assoc: assoc, pts: pts };
        const debug = false;
        str = str.toUpperCase();
        const startNextEntry = () => {
            num1 = '';
            num2 = '';
            pt = new Point(0, 0);
            pt.x = null;
            pt.y = null;
            foundFloat = false;
        };
        const endCurrentEntry = () => {
            pt.y = +num2;
            U.pe(isNaN(pt.y), 'parsed non-number as value of: |' + letter + '| in svg.path attribute: |' + str + '|', ret);
            current = { letter: letter, pt: pt };
            U.pe(pt.x === null || pt.y === null, num1, num2, pt, i, str);
            pts.push(pt);
            assoc.push(current);
            U.pif(debug, 'endEntry:', current, ' position: |' + str.substr(0, i) + '|' + str.substr(i) + "|");
            startNextEntry();
        };
        startNextEntry();
        for (i = 0; i < str.length; i++) {
            const c = str[i];
            switch (c) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case '.':
                case '-':
                case '+':
                    if (c === '.') {
                        U.pe(foundFloat, ' found 2 floating points in a single parsed number in svg.path attribute: |' + str + '|');
                        foundFloat = true;
                    }
                    U.pe((c === '+' || c === '-') && (pt.x === null && num1 !== '' || pt.y === null && num2 !== ''), 'found a ' + c + ' sign inside a number:', ret, i, str);
                    if (pt.x === null) {
                        num1 += c;
                        break;
                    }
                    if (pt.y === null) {
                        num2 += c;
                        break;
                    }
                    U.pe(true, 'found 3 numbers while parsing svg.path attribute: |' + str + '|', ret);
                    break;
                case ' ':
                    if (pt.x === null) {
                        pt.x = +num1;
                        foundFloat = false;
                        U.pe(isNaN(+pt.x), 'parsed non-number as value of: |' + letter + '| in svg.path attribute: |' + str + '|', ret);
                        break;
                    }
                    if (pt.y === null) {
                        pt.y = +num2;
                        U.pe(isNaN(+pt.y), 'parsed non-number as value of: |' + letter + '| in svg.path attribute: |' + str + '|', ret);
                        break;
                    }
                    break;
                default:
                    if (letter) {
                        endCurrentEntry();
                    }
                    letter = c;
                    break;
            }
        }
        endCurrentEntry();
        return ret;
    }
    static focusHistorySetup() {
        U.focusHistoryEntries = U.focusHistoryEntries || [];
        U.focusHistoryElements = U.focusHistoryElements || [];
        U.focusHistoryEntriesAndIdleTimes = U.focusHistoryEntriesAndIdleTimes || [];
        $(document).off('focusin.history').on('focusin.history', (e) => {
            const element = e.target;
            // if (document.activeElement === element) return; // do i need to avoid duplicates or not?
            const entry = new FocusHistoryEntry(e, element);
            U.focusHistoryEntriesAndIdleTimes.push(entry);
            U.focusHistoryElements.push(element);
            U.focusHistoryEntries.push(entry);
            setTimeout(() => { U.focusHistoryEntriesAndIdleTimes.push(null); }, 0);
        });
    }
    static focusHistoryReset() {
        U.focusHistoryEntries = [];
        U.focusHistoryElements = [];
    }
    static getLastFocusEntry() {
        U.pe(!U.focusHistoryEntries, 'focus history not initializated. call U.focusHistorySetup() before');
        return U.focusHistoryEntries[U.focusHistoryEntries.length];
    }
    /*
      static unescapeHtmlEntities(s: string): string { return HE.decode(s); }
      static escapeHtmlEntities(s: string): string { return HE.encode(s); }*/
    static shallowArrayCopy(arr) {
        let ret = [];
        let i;
        if (!arr)
            return null;
        for (i = 0; i < arr.length; i++) {
            ret.push(arr[i]);
        }
        return ret;
    }
    static arrayInsertAt(arr, index, item) {
        U.pe(!arr || !Array.isArray(arr), 'ArrayInsertAt() must have a parameter array');
        index = Math.max(0, index);
        index = Math.min(arr.length, index);
        arr.splice(index, 0, item);
    }
    static newArray(size) {
        let ret = [];
        ret.length = Math.max(0, size);
        return ret;
    }
    static isInput(target, deep_up, select = true, input = true, textarea = true, contenteditable = true) {
        let tag;
        let attrcontenteditable;
        let inputcheck = input ? 'input' : 'mustfail';
        let selectcheck = select ? 'select' : 'mustfail';
        let textareacheck = textarea ? 'textarea' : 'mustfail';
        while (target) {
            if (target === window.document)
                return false;
            let targetElement = target instanceof Element ? target : null;
            tag = targetElement ? targetElement.tagName.toLowerCase() : null;
            if (tag === inputcheck || tag === selectcheck || tag === textareacheck) {
                // console.log('isInput:', target);
                return true;
            }
            attrcontenteditable = contenteditable && targetElement ? targetElement.getAttribute('contenteditable') : null;
            if (attrcontenteditable === '' || attrcontenteditable === 'true') {
                // console.log('isInput:', target);
                return true;
            }
            if (!deep_up)
                return false;
            target = target.parentNode;
        }
        return false;
    }
    static getValue(input0) {
        if (!input0)
            return null;
        const input = (input0 instanceof HTMLInputElement) ? input0 : null;
        if (input)
            return input.value;
        const textarea = (input0 instanceof HTMLTextAreaElement) ? input0 : null;
        if (textarea)
            return textarea.value;
        return input0.getAttribute('value') || input0['' + 'innerText'] || input0.innerHTML;
    }
    static followsPattern(input0, value = null) {
        let input = (input0 instanceof HTMLInputElement) ? input0 : null;
        let pattern = input ? input.pattern : input0.getAttribute('pattern');
        if (pattern === null || pattern === undefined)
            return true;
        const val = value || (input ? input.value : U.getValue(input0));
        const regex = new RegExp(pattern);
        return regex && regex.test(val);
    }
    static trimStart(s, trimchars) {
        let i;
        for (i = 0; i < s.length && trimchars.indexOf(s[i]) !== -1; i++) {
            ;
        }
        return s.substr(i);
    }
    static arraySubtract(arr1, arr2, inPlace) {
        let i;
        const ret = inPlace ? arr1 : [...arr1];
        for (i = 0; i < arr2.length; i++) {
            U.arrayRemoveAll(ret, arr2[i]);
        }
        return ret;
    }
    static getAttributesByRegex(elem, regexp) {
        const ret = [];
        let i;
        for (i = 0; i < elem.attributes.length; i++) {
            const attr = elem.attributes[i];
            if (regexp.test(attr.name))
                ret.push(attr);
        }
        return ret;
    }
    static getAttributes(elem, validator) {
        const ret = [];
        let i;
        for (i = 0; i < elem.attributes.length; i++) {
            const attr = elem.attributes[i];
            if (validator(attr))
                ret.push(attr);
        }
        return ret;
    }
    static getRelativeParentNode(elem) {
        U.pe(!elem || !(elem instanceof Element), 'U.getRelativeParentNode argument must be an Element, found instead:', elem);
        while ((elem = elem.parentElement)) {
            if (window.getComputedStyle(elem).position === 'relative') {
                return elem;
            }
        }
        return document.body;
    }
    static swapChildrens(node1, node2) {
        const arr = Array.from(node1.childNodes);
        let i;
        for (i = 0; i < node2.childNodes.length; i++) {
            node1.appendChild(node2.childNodes[i]);
        }
        for (i = 0; i < arr.length; i++) {
            node2.appendChild(arr[i]);
        }
    }
    static swap(node1, node2) {
        U.pe(node1 && !(node1 instanceof Node) || node2 && !(node2 instanceof Node), 'aU.swap() arguments mudt be nodes, found instead:', node1, node2);
        const parent1 = node1.parentNode;
        const parent2 = node2.parentNode;
        // const next1: Node = node1.nextSibling; // qui non è necessario
        const next2 = node2.nextSibling; // se non metto almeno next2, il secondo insertBefore fallisce perchè node2 è stato spostato.
        //console.log('if (parent1 (', parent1, '))  parent1.insertBefore(', node2, node1, '); parent1.removeChild(', node1, '); }');
        //console.log('if (parent2 (', parent2, '))  parent2.insertBefore(', node1, next2, '); parent2.removeChild(', node2, '); }');
        if (parent1) {
            parent1.insertBefore(node2, node1);
            parent1.removeChild(node1);
        }
        if (parent2) {
            parent2.insertBefore(node1, next2);
            parent2.removeChild(node2);
        }
    }
    static validateDatalist(input, addinvalidclass = true, checkByValueAttribute = true) {
        const debug = false;
        debug && console.log('validateDatalist() input.list', input.list);
        if (!input.list)
            return true;
        let valid;
        if (checkByValueAttribute) {
            debug && console.log($(input.list), '.find(\'option[value="' + input.value + '"]');
            valid = $(input.list).find('option[value="' + input.value + '"]').length >= 1;
        }
        else {
            const arr = $(input.list).find('option[value="' + input.value + '"]');
            let i;
            valid = false;
            for (i = 0; i < arr.length; i++) {
                if (arr[i].innerText === input.value) {
                    valid = true;
                    break;
                }
            }
        }
        debug && console.log('input:', input, 'addclass:', addinvalidclass, 'valid:', valid);
        if (addinvalidclass) {
            if (valid) {
                input.removeAttribute('invalidDataList');
            }
            else {
                input.setAttribute('invalidDataList', 'true');
            }
        }
        return valid;
    }
    /// usage: U.varname({wrappedVariableName}) = 'wrappedVariableName';
    static varname(wrappedVariable) { return Object.keys(wrappedVariable)[0]; }
    static varname2(parentObject, variable) {
        for (let key in parentObject) {
            if (parentObject[key] === variable)
                return key;
        }
        U.pe(true, 'not a valid parent:', parentObject, variable);
    }
    static isTriggered(e) {
        // nb: actually JQ.ClickEvent implements JQ.EventBase extends JQ.TriggeredEvent that extends Event (native)
        // but for some reason the IDE is telling me clickEVent is a TriggeredEVent but not not an Event.
        let ist = !!e['isTrigger'];
        let orig = !!e['originalEvent'];
        U.pe(ist === orig, 'assertion failed (istrigger):', ist, orig);
        return ist;
    }
    static ArrayToMap(arr, useIndexesAsValues = false) { return U.toMap(arr, useIndexesAsValues); }
    static toDictionary(arr, useIndexesAsValues = false) { return U.toMap(arr, useIndexesAsValues); }
    static toMap(arr, useIndexesAsValues = false) {
        const ret = {};
        for (let i = 0; i < arr.length; i++) {
            ret['' + arr[i]] = useIndexesAsValues ? i : true;
        }
        // arr.reduce((accumulator,curr)=> (accumulator[curr]='',accumulator), {}); // geniale da stackoverflow (accumulator was "acc")
        return ret;
    }
    static isUnset(val, ignorespaces = true, parseStrings = true, ifemptystr = false, ifnull = true, ifundef = true, ifzero = false) {
        if (val === '' + val) {
            if (ignorespaces)
                val = val.trim();
            if (val === '')
                return ifemptystr;
            if (!parseStrings)
                return true;
            if (val === 'null')
                return ifnull;
            if (val === 'undefined')
                return ifundef;
            if (val === '0')
                return ifzero;
        }
        if (val)
            return true;
        if (val === null)
            return ifnull;
        if (val === undefined)
            return ifundef;
        if (val === 0)
            return ifzero;
        U.pe(true, 'isUnset() should not reach here', val);
        return true;
    }
    static findGetParameter(parameterName) {
        var result = null, tmp = [];
        location.search
            .substr(1)
            .split("&")
            .forEach(function (item) {
            tmp = item.split("=");
            if (tmp[0] === parameterName)
                result = decodeURIComponent(tmp[1]);
        });
        return result;
    }
    // usage: flags should be used only if delimiters are not used.
    // delimiters can only be single characters
    static parseRegexString(s, onlyIfDelimitedByOneOf = ['\\', '/'], flags = null, canThrow = true) {
        const firstchar = s.charAt(0);
        let lastindex = -1;
        let i;
        let ret;
        if (s !== '' + s) {
            U.pe(canThrow, 'U.parseRegexString() "s" argument must be a string.', s);
            return null;
        }
        if (onlyIfDelimitedByOneOf) {
            let found = false;
            for (i = 0; i < onlyIfDelimitedByOneOf.length; i++) {
                if (firstchar === onlyIfDelimitedByOneOf[i]) {
                    found = true;
                    break;
                }
            }
            if (!found)
                return null;
            lastindex = s.lastIndexOf(firstchar);
            if (lastindex === 0)
                return null;
            flags = s.substring(lastindex + 1).trim();
            s = s.substring(1, lastindex).trim();
            try {
                ret = new RegExp(s, flags);
            }
            catch (e) {
                U.pe(canThrow, 'evaluation of regex string failed:', s, onlyIfDelimitedByOneOf);
                return null;
            }
            return ret;
        }
        if (flags !== '' + flags) {
            U.pe(canThrow, 'U.parseRegexString() "flags" argument must be a string.', flags);
            return null;
        }
        try {
            ret = new RegExp(s, flags);
        }
        catch (e) {
            U.pe(canThrow, 'evaluation of regex string failed:', s, onlyIfDelimitedByOneOf);
            return null;
        }
        return ret;
    }
    static processSelectorPlusPlus(fullselector, prioritizeLeftPart, $searchRoots = null, $defaultNode = null, defaultAttributeSelector = null, debug = true) {
        fullselector = fullselector.trim();
        defaultAttributeSelector = defaultAttributeSelector && defaultAttributeSelector.trim().toLowerCase();
        if (!$searchRoots)
            $searchRoots = $(document);
        U.pe(fullselector !== '' + fullselector, 'Measurable.processSelectorPlusPlus() parameter exception: ', fullselector);
        ///// try execution
        let ret = new SelectorOutput();
        ret.resultSetAttr = [];
        ret.resultSetElem = $([]);
        if (!$searchRoots.length)
            return ret;
        let attributeSelectorIndex = fullselector.lastIndexOf(U.AttributeSelectorOperator);
        if (attributeSelectorIndex === -1) {
            attributeSelectorIndex = prioritizeLeftPart ? 0 : fullselector.length;
            fullselector = prioritizeLeftPart ? fullselector + U.AttributeSelectorOperator : U.AttributeSelectorOperator + fullselector;
        }
        let getAttributes = (html, selector, regexp) => {
            let ret;
            if (regexp) {
                ret = U.getAttributesByRegex(html, regexp);
            }
            else
                ret = U.getAttributes(html, (a) => { return a.name.indexOf(selector) === 0; });
            return ret;
        };
        // is mono-right (only attribute)
        if (attributeSelectorIndex === 0) {
            ret.jqselector = null;
            ret.attrselector = fullselector.substr(U.AttributeSelectorOperator.length).trim().toLowerCase();
            ret.attrRegex = U.parseRegexString(ret.attrselector, ['/', '\\'], null, false);
        }
        U.pif(debug, 'part1:  index:', attributeSelectorIndex, ' data:', Object.assign({}, ret));
        // is mono-left (only jqselector), becomes both.
        if (attributeSelectorIndex + U.AttributeSelectorOperator.length === fullselector.length) {
            ret.jqselector = fullselector.substr(0, attributeSelectorIndex).trim();
            ret.attrselector = defaultAttributeSelector ? defaultAttributeSelector : null;
            ret.attrRegex = null;
        }
        U.pif(debug, 'part2:  index:', attributeSelectorIndex, ' data:', Object.assign({}, ret));
        if (!ret.jqselector && attributeSelectorIndex > 0 && ret.jqselector == null) {
            ret.jqselector = fullselector.substr(0, attributeSelectorIndex);
        }
        if (!ret.attrselector && attributeSelectorIndex > 0 && attributeSelectorIndex < fullselector.length) {
            ret.attrselector = fullselector.substr(attributeSelectorIndex);
        }
        // check if ambiguous mono-part (left or right?), becomes both
        /*
        if (attributeSelectorIndex === -1) {
          // first try to see if is attribute only.
          ret.jqselector = null;
          ret.attrselector = fullselector.toLowerCase();
          ret.attrRegex = U.parseRegexString(ret.attrselector, ['/', '\\'], null, false);
          // first try to check if is mono-right (only attribute)
          ret.resultSetAttr = getAttributes(defaultNode, ret.attrselector, ret.attrRegex);
          if (ret.resultSetAttr.length) { return ret; }
          // if not, it is JQ_selector only
          ret.jqselector = fullselector;
          ret.attrselector = Measurable.GlobalPrefix;
          ret.attrRegex = null; }*/
        if (ret.attrselector === '*')
            ret.attrRegex = /.*/;
        // is both: left and right
        // U.pe(!ret.attrselector, 'attrselector should be always set at this point, at "-> ' + Measurable.GlobalPrefix + '" on worst case if it was empty.');
        // search for external triggers
        try {
            ret.resultSetElem = ret.jqselector && ret.jqselector !== 'this' ? $searchRoots.find(ret.jqselector) : ($defaultNode instanceof $ ? $defaultNode : $([]));
        }
        catch (e) {
            ret.exception = e;
            return ret;
        }
        U.pif(debug, 'part3:  index:', attributeSelectorIndex, ' data:', Object.assign({}, ret), '$serachRoots', $searchRoots, ' $defaultNode:', $defaultNode, 'jqinstance?', $defaultNode instanceof jQuery);
        let i;
        let j;
        if (!ret.attrRegex && !ret.attrselector)
            return ret;
        const attrSelectorArr = !ret.attrRegex ? U.replaceAll(ret.attrselector, ',', ' ').split(' ') : null;
        for (i = 0; i < ret.resultSetElem.length; i++) {
            if (ret.attrRegex) {
                U.ArrayMerge(ret.resultSetAttr, getAttributes(ret.resultSetElem[i], null, ret.attrRegex));
                continue;
            }
            for (j = 0; j < attrSelectorArr.length; j++) {
                let attrname = attrSelectorArr[j].trim();
                if (attrname === '')
                    continue;
                U.ArrayMerge(ret.resultSetAttr, getAttributes(ret.resultSetElem[i], attrname, null));
            }
        }
        U.pif(debug, 'part4 ret:  index:', attributeSelectorIndex, ' data:', Object.assign({}, ret));
        return ret;
    }
    static deepCloneWithFunctions(obj) {
        try {
            JSON.stringify(obj);
        }
        catch (e) {
            U.pe(true, 'U.deepCloneWithFunctions() Object have circular references.');
        } // just to throw exception if the object have circular references
        let copy;
        let key;
        // Handle the 3 simple types, and null or undefined
        if (null === obj || undefined === obj || "object" !== typeof obj)
            return obj;
        if (obj instanceof Date) {
            return new Date(obj.toString());
        }
        if (obj instanceof Number) {
            return new Number(obj.valueOf());
        }
        if (obj instanceof Boolean) {
            return new Boolean(obj.valueOf());
        }
        if (obj instanceof String) {
            return new String(obj.valueOf());
        }
        if (obj instanceof String) {
            return new String(obj.valueOf());
        }
        if (obj instanceof Function) {
            return obj;
        }
        if (Array.isArray(obj)) {
            copy = [];
        }
        if (obj instanceof Object) {
            copy = {};
        }
        // Handle Object
        if (obj instanceof Object) {
            copy = {};
            for (key in obj) {
                if (obj.hasOwnProperty(key))
                    copy[key] = U.deepCloneWithFunctions(obj[key]);
            }
            return copy;
        }
        return obj;
    }
    static objecKeysIntersect(obj1, obj2, prioritizeleft = true, clone = false) {
        if (!U.isObject(obj1, false, false, true) || !U.isObject(obj2, false, false, true))
            return prioritizeleft ? obj1 : obj2;
        let retobj = clone ? {} : obj1;
        let key;
        for (key in obj1) {
            if (key in obj2) {
                retobj[key] = prioritizeleft ? obj1[key] : obj2[key];
                continue;
            }
            if (!clone)
                delete obj1[key];
        }
        return retobj;
    }
    static toHex(num, lengthMin = 6) {
        let ret = Math.round(+num).toString(16);
        while (ret.length < lengthMin)
            ret = '0' + ret;
        return ret;
    }
    static hexToNum(hexstr) {
        if (hexstr === null || hexstr === undefined)
            return hexstr;
        if (hexstr.charAt(0) === '#')
            hexstr = hexstr.substr(1);
        if (hexstr.length <= 2 || hexstr.charAt(1).toLowerCase() !== 'x')
            hexstr = '0x' + hexstr;
        return parseInt(hexstr, 16);
    }
    static expandInputSetup($root) {
        $root.find('input.expansible').addBack('input.expansible').on('focus', (e) => {
            let inp = e.currentTarget;
            let $exp = $('.expandedinput[data-expandedid=\"' + inp.dataset.expandedid + '"]');
            let exp = $exp[0];
            let expinput = exp.firstElementChild;
            expinput.focus();
            $exp.show();
            console.log(expinput.innerText, inp.value);
            expinput.innerText = inp.value;
        });
        $('.expandedinput').on('keydown', (e) => {
            if (!(e.key === "Enter" && !e.shiftKey))
                return;
            let exp = e.currentTarget;
            let $exp = $(exp);
            let $inp = $('input.expansible[data-expandedid=\"' + exp.dataset.expandedid + '"]');
            let inp = $inp[0];
            inp.value = exp.firstElementChild.innerText;
            $exp.hide();
        });
    }
    /**
     * filtra la selezione dentro un elemento, ignorando selezione che fa overflow e calcolando gli elementi interni come se i testi fossero in un unico nodo (come se il parametero avesse tutto il testo senza childrens).
     * @param {HTMLElement} div: must be a contenteditable or contained in a contenteditable to work (getSelection() will not work on non-focusable i think?)
     **/
    static getDivSelection(div) {
        U.pe(div instanceof HTMLInputElement || div instanceof HTMLTextAreaElement, 'parameter must not be a input or textarea element');
        //let caretOffset: number = 0;
        const doc = div.ownerDocument || div['document'];
        const win = doc.defaultView || doc['parentWindow'];
        let sel;
        let ret = { start: 0, end: 0, text: '' };
        let range;
        let caretRange;
        if (typeof win.getSelection != "undefined") {
            sel = win.getSelection();
            if (sel.rangeCount > 0) { // if is contenteditable
                range = win.getSelection().getRangeAt(0);
                caretRange = range.cloneRange();
                caretRange.selectNodeContents(div);
                // taking start selection
                caretRange.setEnd(range.startContainer, range.startOffset);
                ret.start = caretRange.toString().length;
                caretRange.setEnd(range.endContainer, range.endOffset);
                ret.end = caretRange.toString().length;
                caretRange.setStart(range.startContainer, range.startOffset);
                ret.text = caretRange.toString();
            }
        }
        else if ((sel = doc['selection']) && sel.type != "Control") {
            //IE  compatibility (start and text sono improvvisati e non testati)
            var textRange = sel['createRange']();
            var preCaretTextRange = doc.body['createTextRange']();
            preCaretTextRange.moveToElementText(div);
            preCaretTextRange.setEndPoint("EndToStart", textRange); // set selection end to start of the input parameter range.
            ret.start = preCaretTextRange.text.length;
            preCaretTextRange.setEndPoint("EndToEnd", textRange);
            ret.end = preCaretTextRange.text.length;
            preCaretTextRange.setEndPoint("StartToStart", textRange);
            ret.text = preCaretTextRange.text;
        }
        return ret;
    }
    static getInputSelection(el) {
        let range;
        let textInputRange;
        let endRange;
        U.pe(!(el instanceof HTMLInputElement || el instanceof HTMLTextAreaElement), 'parameter must be a input or textarea element');
        let ret = { start: 0, end: 0, text: '' };
        if (typeof el.selectionStart == "number" && typeof el.selectionEnd == "number") {
            ret.start = el.selectionStart;
            ret.end = el.selectionEnd;
        }
        else { // IE compatibility
            range = document['selection'].createRange();
            if (range && range['parentElement']() == el) {
                let len = el.value.length;
                let normalizedValue = el.value.replace(/\r\n/g, "\n");
                // Create a working TextRange that lives only in the input
                textInputRange = el['createTextRange']();
                textInputRange['moveToBookmark'](range['getBookmark']());
                // Check if the start and end of the selection are at the very end
                // of the input, since moveStart/moveEnd doesn't return what we want
                // in those cases
                endRange = el['createTextRange']();
                endRange.collapse(false);
                if (textInputRange['compareEndPoints']("StartToEnd", endRange) > -1) {
                    ret.start = ret.end = len;
                }
                else {
                    ret.start = -textInputRange['moveStart']("character", -len);
                    ret.start += normalizedValue.slice(0, ret.start).split("\n").length - 1;
                    if (textInputRange['compareEndPoints']("EndToEnd", endRange) > -1) {
                        ret.end = len;
                    }
                    else {
                        ret.end = -textInputRange['moveEnd']("character", -len);
                        ret.end += normalizedValue.slice(0, ret.end).split("\n").length - 1;
                    }
                }
            }
        }
        ret.text = el.innerText.substring(ret.start, ret.end);
        return ret;
    }
    static getSelection(el) {
        let ret = { start: 0, end: 0, text: '' };
        U.pe(!(el instanceof HTMLElement), 'U.getSelection(): only html elements are supported');
        if (el instanceof HTMLInputElement || el instanceof HTMLTextAreaElement) {
            return U.getInputSelection(el);
        }
        else
            return U.getDivSelection(el);
    }
    // NB: might not work on contenteditable with childrens filled with text.
    static setSelection(el, start, end = null) {
        end = end === null ? start : null;
        let i;
        if (el['setSelectionRange']) {
            el['setSelectionRange'](start, end);
            return;
        } // for inputs
        let range = new Range();
        let endchildIndex = start;
        let startchildIndex = end;
        range.setStart(el.firstChild, startchildIndex);
        range.setEnd(el.firstChild, endchildIndex); // firstchild is raw text.
        // range.startOffset = start;
        // range.endOffset = end;
        // apply the selection, explained later
        document.getSelection().removeAllRanges();
        document.getSelection().addRange(range);
        // el.setSelectionRange(start, end);
    }
    static setSelection2(obj, start, end) {
        end = end === null ? start : null;
        var endNode, startNode = endNode = obj.firstChild;
        // startNode.nodeValue = startNode.nodeValue.trim();
        var range = document.createRange();
        range.setStart(startNode, start);
        range.setEnd(endNode, end + 1);
        var sel = window.getSelection();
        sel.removeAllRanges();
        sel.addRange(range);
    }
    static autocompleteInputSetup(inputGroup, autocomplete) {
        let input = inputGroup.firstElementChild;
        let suggestionList = inputGroup.lastElementChild;
        let $suggestionList = $(suggestionList);
        U.pe(!input || !input.contentEditable || !suggestionList || input === suggestionList, 'input html must be a container with firstchild as contenteditable, lastchild as suggestion ul list.');
        let validSuggestions = [];
        let splitIndexes = [];
        let i;
        let li;
        let $li;
        let $input = $(input);
        const debug = false;
        let getSuggestionText = (li) => { return li.lastElementChild.innerText; };
        let getPreCursorString = () => {
            let ret = U.getSelection(input);
            return input.innerText.substr(0, ret.start);
        };
        const insertStringAtCurrentCursorPosition = (input, text, replacePostText = false, rightArrow = false) => {
            let ret = U.getSelection(input);
            let fakeend = ' ';
            let str = input.innerText; // + fakeend;
            let arrowfix = (rightArrow && ret.start < str.length ? -1 : 0);
            // se premo right-arrow senza che ci siano elementi dopo il cursore lo mette come penultimo.
            let pre = str.substring(0, ret.start + arrowfix);
            let post = str.substring(ret.end + arrowfix, str.length) + ' ';
            let i = U.strFirstDiffIndex(text, post);
            // console.log('ArrowDebug:', pre, 'text:', text, 'post.substr(i):',post.substr(i), 'post:', post, 'i:', i);
            input.innerText = pre + text + post.substr(i);
            U.setSelection(input, pre.length + 1, null);
        };
        let updateSuggestions = () => {
            // logical and graphical update
            let str = getPreCursorString();
            str = U.replaceAll(str, String.fromCharCode(160), ' ');
            validSuggestions = [];
            splitIndexes = [];
            // console.log('updateSuggestions, prestring: |' + str + '|, suggestions:' + autocomplete.length);
            U.clear(suggestionList);
            for (i = 0; i < autocomplete.length; i++) {
                let matchindex = autocomplete[i].matches(str);
                // console.log(autocomplete[i], str);
                // console.log('updateSuggestions[' + i + '], str:' + str + ', hiddenMatch:' + autocomplete[i].hiddenprecondition + ', visibleMatch:' + autocomplete[i].key + ', matchindex:', matchindex);
                if (matchindex === -1)
                    continue;
                splitIndexes.push(matchindex);
                validSuggestions.push(autocomplete[i]);
                let li = autocomplete[i].getLI(matchindex);
                let $li = $(li);
                $li.on('click', () => {
                    insertStringAtCurrentCursorPosition(input, getSuggestionText(li));
                    U.setSelection(input, input.innerText.length, null);
                    updateSuggestions();
                });
                if (validSuggestions.length > 0)
                    $suggestionList.show();
                else
                    $suggestionList.hide();
                suggestionList.append(li);
            }
            debug && console.log('valid suggestions:', validSuggestions);
        };
        $input
            .on('mouseup', (e) => { updateSuggestions(); })
            .on('keydown', (e) => {
            switch (e.key) {
                default: break;
                case Keystrokes.tab:
                    e.preventDefault();
                    li = suggestionList.firstElementChild;
                    if (!li)
                        break;
                    $(li).trigger('click');
                    break;
            }
        })
            .on('keyup', (e) => {
            debug && console.log('input keyup:', e);
            switch (e.key) {
                default:
                    updateSuggestions();
                    break;
                // case Keystrokes.tab: break;// can never happen on keyUP unless i stop default action on keydown.
                case Keystrokes.arrowRight:
                    if (e.shiftKey)
                        return;
                    li = suggestionList.firstElementChild;
                    if (!li) {
                        updateSuggestions();
                        break;
                    } // as a normal arrow press
                    // as a suggestion accept
                    let char = li.lastElementChild.innerText.charAt(0);
                    insertStringAtCurrentCursorPosition(input, char, true, true);
                    $input.trigger(jQuery.Event('keyup', { key: char }));
                    break;
            }
        });
    }
    // NB: object.keys e for... in listano solo le proprietà enumerabili, le funzioni di classe in es6 non sono enumerabili.
    static getAllProperties(obj0) {
        let props = [];
        let obj = obj0;
        do {
            props = props.concat(Object.getOwnPropertyNames(obj));
        } while (obj = Object.getPrototypeOf(obj));
        return props.sort().filter(function (e, i, arr) { if (e != arr[i + 1])
            return true; });
    }
    static copyFirstLevelStructureWithoutValues(o, allowPrimitive = true, allowObject = false, allowFunctions = true) {
        let ret = {};
        let keys = U.getAllProperties(o);
        for (let index in keys) {
            let key = keys[index];
            let val = o[key];
            if (val instanceof Function) {
                ret[key] = allowFunctions ? val : null;
                continue;
            }
            if (val instanceof Object) {
                ret[key] = allowObject ? val : null;
                continue;
            }
            ret[key] = allowPrimitive ? val : null;
        }
        return ret;
    }
    static getFunctionSignatureFromComments(f) {
        U.pe(!(f instanceof Function), 'getFunctionSignature() parameter must be a function');
        // let parameters: {name: string, defaultVal: string, typedesc: string}[] = []; //{name: '', defaultVal: undefined, typedesc: ''};
        let ret = { parameters: [], returns: '', f: f, fname: '', isLambda: null, signature: '' };
        let str = f.toString();
        let starti = str.indexOf('(');
        let endi;
        let parcounter = 1;
        for (endi = starti + 1; endi < str.length; endi++) {
            if (str[endi] === ')' && --parcounter === 0)
                break;
            if (str[endi] === '(')
                parcounter++;
        }
        let parameterStr = str.substring(starti + 1, endi);
        // console.log('getfuncsignature starti:', starti, 'endi', endi, 'fname:', str.substr(0, starti), 'parameterStr:', parameterStr);
        ret.fname = str.substr(0, starti).trim();
        ret.fname = ret.fname.substr(0, ret.fname.indexOf(' ')).trim();
        // 2 casi: anonimo "function (par1...){}" e "() => {}", oppure nominato: "function a1(){}"
        if (ret.fname === '' || ret.fname === 'function')
            ret.fname = null; // 'anonymous function';
        let returnstarti = str.indexOf('/*', endi + 1);
        let returnendi = -1;
        let bodystarti = str.indexOf('{', endi + 1);
        if (returnstarti === -1 || bodystarti !== -1 && bodystarti < returnstarti) {
            // no return type or comment is past body
            ret.returns = null;
        }
        else {
            returnendi = str.indexOf('*/', returnstarti + 2);
            ret.returns = str.substring(returnstarti + 2, returnendi).trim();
            bodystarti = str.indexOf('{', returnendi);
        }
        if (ret.returns === '')
            ret.returns = null;
        // is lambda if do not have curly body or contains => between return comment and body
        // console.log('isLambda:', bodystarti, str.substring(Math.max(endi, returnendi)+1, bodystarti));
        ret.isLambda = bodystarti === -1 || str.substring(Math.max(endi, returnendi) + 1, bodystarti).trim() === '=>';
        let regexp = /([^=\/\,]+)(=?)([^,]*?)(\/\*[^,]*?\*\/)?,/g; // only problem: the last parameter won't match because it does not end with ",", so i will append it everytime.
        let match;
        while ((match = regexp.exec(parameterStr + ','))) {
            // match[0] is always the full match (not a capture group)
            // match[2] can only be "=" or empty string
            // nb: match[4] can be "/*something*/" or "," a single , without spaces.
            let par = { name: match[1], defaultVal: match[3], typedesc: match[4] && match[4].length > 1 ? match[4] : null };
            par.name = par.name.trim();
            par.defaultVal = par.defaultVal && par.defaultVal.trim() || null;
            par.typedesc = par.typedesc && par.typedesc && par.typedesc.length > 1 ? par.typedesc.substring(2, par.typedesc.length - 2).trim() || null : null;
            ret.parameters.push(par);
        }
        // set signature
        ret.signature = '' + (ret.fname ? '/*' + ret.fname + '*/' : '') + '(';
        let i;
        for (i = 0; i < ret.parameters.length; i++) {
            let par = ret.parameters[i];
            ret.signature += (i === 0 ? '' : ', ') + par.name + (par.typedesc ? '/*' + par.typedesc + '*/' : '') + (par.defaultVal ? ' = ' + par.defaultVal : '');
        }
        ret.signature += ')' + (ret.returns ? '/*' + ret.returns + '*/' : '');
        return ret;
    }
    /* for both input, textarea and contenteditable.*/
    static setInputValue(input, value) {
        value = value === null || value === undefined ? '' : value;
        if (input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement) {
            input.value = value;
        }
        else
            input.innerText = value;
    }
    static hasFocus(elem) { return window.document.activeElement === elem; }
    static hasFocusWithin(elem, includeSelf = true) {
        if (!elem)
            return false;
        const active = window.document.activeElement;
        // console.log('hasFocus1:', includeSelf, ' && ', elem === active);
        if (includeSelf && elem === active)
            return true;
        // console.log('hasFocus2:', active, 'contains', elem, ' = ', active.contains(elem));
        return elem.contains(active);
    }
    static $makeSelect($root, entries, optgrplabel = '', selectedVal = '') {
        $root.each((i, e) => U.makeSelect(e, entries, optgrplabel, selectedVal));
    }
    // used to convert type from string to some enum checking after validation
    static getEnumValByVal(val, enumDeclaration) {
        for (let key in enumDeclaration) {
            if (enumDeclaration[key] === val)
                return val;
        }
        return null;
    }
    static getEnumValByKey(key, enumDeclaration) {
        if (enumDeclaration && enumDeclaration.hasOwnProperty(key))
            return enumDeclaration[key];
        return null;
    }
    static getEnumKeyByVal(val, enumDeclaration) {
        for (let key in enumDeclaration) {
            if (enumDeclaration[key] === val)
                return key;
        }
        return null;
    }
    static makeSelect(select, entries, optgrplabel = '', selectedVal = '') {
        const grp = document.createElement('optgroup');
        U.clear(select);
        select.append(grp);
        grp.label = optgrplabel;
        for (let key in entries) {
            const opt = document.createElement('option');
            opt.setAttribute('value', key);
            opt.innerText = entries[key];
            if (entries[key] === selectedVal)
                opt.selected = true;
            grp.append(opt);
        }
    }
    static computeConditionalHides($root, obj, caseSensitive = false, cascadeOnChildrens = true, displayFunction = null, hideFunction = null) {
        if (!displayFunction)
            displayFunction = (e) => $(e).show();
        if (!hideFunction)
            hideFunction = (e) => $(e).hide();
        if (cascadeOnChildrens)
            $root = $root.find('[uif]').addBack('[uif]');
        else
            $root.filter('[uif]');
        let ret = { hide: [], show: [], inaltered: [] };
        $root.each((i, e) => {
            let b = U.checkConditionalHide(e, obj, caseSensitive);
            switch (b) {
                case true:
                    ret.show.push(e);
                    displayFunction(e);
                    break;
                case false:
                    ret.hide.push(e);
                    hideFunction(e);
                    break;
                default:
                case null:
                    ret.inaltered.push(e);
                    break;
            }
        });
        return ret;
    }
    static checkConditionalHide(html, obj, caseSensitive = false) {
        let attrstr = html.getAttribute('uif');
        if (!attrstr)
            return null;
        attrstr = attrstr
            .replace(/\|+/, ' || ')
            .replace(/&+/, ' && ')
            .replace('+', ' + ')
            .replace('-', ' - ')
            .replace('*', ' * ')
            .replace('/', ' / ')
            .replace('!', ' ! ')
            .replace(/\s+/, ' ');
        let i;
        let key;
        let tokens = attrstr.split(' ');
        if (!caseSensitive) {
            for (key in obj) {
                const lckey = key.toLowerCase();
                if (lckey === key)
                    continue;
                const val = obj[key];
                delete obj[key];
                obj[lckey] = val;
            }
        }
        for (i = 0; i < tokens.length; i++) {
            const token = caseSensitive ? tokens[i] : tokens[i].toLowerCase();
            // ricorda di non salvare in lowercase i token non sostituiti, altrimenti rimpiazza Math.abs() o altre funzioni java native.
            if (obj.hasOwnProperty(token))
                tokens[i] = obj[token];
        }
        let ret;
        try {
            ret = eval(tokens.join(' '));
        }
        catch (e) {
            // U.pw(true, 'Invalid conditional attribute (UIF), error:', e, 'html:', html, 'attrStr:', attrstr, 'tokens:', tokens, 'dic:', obj, 'caseSensitive:', caseSensitive);
            ret = null;
        }
        // if (ret === null) console.log('rrer', tokens);
        return ret;
        // ipotesi 1:
        //   computa hide = concatenazione hide1 || hide2 || hide3.... (es: m1hide || m1hideifclass), simile per "show"
        // se ottengo:
        // hide = null, show = null --> non computato, com'era rimane.
        // hide = null  --> valueof(showif)
        // show = null  --> valueof(hideif)
        // hide = true, show = true    --> hide
        // hide = true, show = false   --> hide
        // hide = false, show = false  --> hide
        // hide = false, show = true   --> show
    }
    static deserialize(value) {
        if (value === '')
            return ''; // json.parse fail on ''
        if (value == 'undefined')
            return undefined; // json.parse fail on undefined and 'undefined' too
        let ret;
        try {
            ret = JSON.parse(value);
        }
        catch (e) {
            // U.pe(true, 'failed to deserialize: |', value, '|', e);
            return value; // means it's a raw string different from 'true', 'null', ...
        }
        return ret;
    }
    static makeCssSheet() {
        const style = document.createElement('style');
        // Add a media (and/or media query) here if you'd like!
        // style.setAttribute("media", "screen")
        // style.setAttribute("media", "only screen and (max-width : 1024px)")
        style.type = 'text/css';
        style.appendChild(document.createTextNode("")); // necessario per un bug in webkit
        return style;
    }
    static getActualInlineStyles(el) {
        const ret = [];
        for (let i = 0, len = el.style.length; i < len; ++i) {
            let name = el.style[i];
            ret.push([name, el.style[name]]);
            // console.log(name, ':', value);
        }
        return ret;
    }
    static disableConsole() {
        console['logg'] = console.log;
        console.log = () => { };
    }
    static enableConsole() {
        if (console['logg'])
            console.log = console['logg'];
    }
    // copia propietà da un oggetto deserializzato (senza funzioni) in un oggetto non serializzato ma privo di dati
    static cloneProperties(param, json) {
        for (let key in json) {
            param[key] = json[key];
        }
    }
    static findFirstAncestor(startingNode, condition) {
        let current = startingNode;
        while (current && !condition(current)) {
            current = current.parentNode;
        }
        return current;
    }
    static insertNodeAt(parent, child, index) {
        let futureNextSibling = index < 0 ? parent.firstElementChild : (index > parent.children.length ? null : parent.children[index]);
        parent.insertBefore(child, futureNextSibling);
    }
    static arrayIntersection(arr1, arr2) {
        if (!arr1 || !arr2)
            return null;
        return arr1.filter(e => arr2.indexOf(e) >= 0);
    }
    static getLocale(defaultLocale = "en-UK") {
        if (!navigator)
            return defaultLocale;
        return navigator.language || navigator.languages[0] || defaultLocale;
    }
    /* NB: if using for <input type="week"> example usage:<br>
     * input.value = "2021-W" + (''+ U.getWeekNumber(d)).padStart(2, '0')
     * */
    static getWeekNumber(d) {
        const year = d.getFullYear();
        const month = d.getMonth();
        const day = d.getDate();
        function serial(days) { return 86400000 * days; }
        function dateserial(year, month, day) { return (new Date(year, month - 1, day).valueOf()); }
        function weekday(date) { return new Date(date).getDay() + 1; }
        function yearserial(date) { return (new Date(date)).getFullYear(); }
        const date = dateserial(year, month, day), date2 = dateserial(yearserial(date - serial(weekday(date - serial(1))) + serial(4)), 1, 3);
        // ~~ should be equal to for Math.trunc, it just truncate decimals. (not like Math.floor)
        return ~~((date - date2 + serial(weekday(date2) + 5)) / serial(7));
    }
    static fromWeekNumber(y, w) {
        var simple = new Date(y, 0, 1 + (w - 1) * 7);
        var dow = simple.getDay();
        var ISOweekStart = simple;
        if (dow <= 4)
            ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);
        else
            ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());
        // ISOweekStart.setMonth(ISOweekStart.getMonth()+1); // myaddition
        return ISOweekStart;
    }
} // end of class U
U.loopcounter = 0;
U.AttributeSelectorOperator = '->';
U.prefix = 'ULibrary_';
U.sizeofvar = null;
U.$sizeofvar = null;
U.clipboardinput = null;
U.PermuteArr = [];
U.PermuteUsedChars = [];
U.resizingBorder = null;
U.resizingContainer = null;
// static he = null;
U.addCssAvoidDuplicates = {};
U.varTextToSvg = null;
U.dblclickchecker = new Date().getTime(); // todo: move @ start
U.dblclicktimerms = 300;
U.mouseLeftButton = 0; // from e.button
U.mouseWheelButton = 1;
U.mouseRightButton = 2;
U.mouseBackButton = 3;
U.mouseForwardButton = 4;
U.mouseLeftButtons = 1; // "evt.buttons" is binary. 7 = left + right + wheel; 0 = no button pressed.
U.mouseRightButtons = 2;
U.mouseWheelButtons = 4;
U.mouseBackButtons = 8;
U.mouseForwardButtons = 16;
U.oneTimeMap = {};
U.sequenceNumber = 0;
U.idMap = {};
U.gotcalledby = {};
U.$alertcontainer = null;
U.alertcontainer = null;
U.displayedTexts = {};
U.GeomTolerance = 0; // 0.001;
U.startSeparatorKeys = {};
U.startSeparatorKeyMax = -1;
U.focusHistoryEntriesAndIdleTimes = undefined;
U.focusHistoryEntries = undefined;
U.focusHistoryElements = undefined;
const $smap = {};
// selettore query "statico", per memorizzare in cache i nodi del DOM read-only per recuperarli più efficientemente. (es: nodi template)
function $s(selector, clone = true) {
    let ret;
    if ($smap[selector]) {
        ret = $smap[selector];
    }
    else {
        ret = $(selector);
        $smap[selector] = ret;
    }
    if (clone)
        ret = ret.clone(false);
    return ret;
}
var Keystrokes;
(function (Keystrokes) {
    Keystrokes["escape"] = "Escape";
    Keystrokes["capsLock"] = "CapsLock";
    Keystrokes["shift"] = "Shift";
    Keystrokes["tab"] = "Tab";
    Keystrokes["alt"] = "Alt";
    Keystrokes["control"] = "Control";
    Keystrokes["end"] = "End";
    Keystrokes["home"] = "Home";
    Keystrokes["pageUp"] = "PageUp";
    Keystrokes["pageDown"] = "PageDown";
    Keystrokes["enter"] = "Enter";
    Keystrokes["numpadEnter"] = "NumpadEnter";
    Keystrokes["audioVolumeMute"] = "AudioVolumeMute";
    Keystrokes["audioVolumeUp"] = "AudioVolumeUp";
    Keystrokes["audioVolumeDown"] = "AudioVolumeDown";
    Keystrokes["mediaTrackPrevious"] = "MediaTrackPrevious";
    Keystrokes["delete"] = "Delete";
    Keystrokes["backspace"] = "Backspace";
    Keystrokes["space"] = " ";
    Keystrokes["altGraph"] = "AltGraph";
    Keystrokes["arrowLeft"] = "ArrowLeft";
    Keystrokes["arrowRight"] = "ArrowRight";
    Keystrokes["arrowUp"] = "ArrowUp";
    Keystrokes["arrowDown"] = "ArrowDown";
    Keystrokes["insert"] = "Insert";
    Keystrokes["f1"] = "F1";
    // weird ones:
    Keystrokes["meta"] = "Meta";
    Keystrokes["unidentified"] = "Unidentified";
    Keystrokes["__NotReacting__"] = "fn, print, maybe others";
})(Keystrokes || (Keystrokes = {}));
class AutocompleteMatch {
    //value: string;
    /*minCharMatch = 1;
  
    constructor(key: string, minCharMatch: number = 1, value: string = null){
      this.minCharMatch = Math.min(1, minCharMatch);
      //this.value = value;
      this.key = key; }
  */
    constructor(hiddenprecondition = '', key = '') {
        this.hiddenprecondition = hiddenprecondition;
        this.key = key;
    }
    matches(preCursorString) {
        let fullkey = this.hiddenprecondition + this.key;
        for (let i = this.hiddenprecondition.length; i < fullkey.length; i++) {
            let keystart = fullkey.substring(0, i);
            //console.log('str:', preCursorString, ' matches:', keystart);
            let matchindex = preCursorString.lastIndexOf(keystart);
            if (matchindex !== -1 && matchindex === preCursorString.length - keystart.length) {
                //console.log('matched!  at index:', preCursorString.lastIndexOf(keystart) );
                return i - this.hiddenprecondition.length; // indice dove posso splittare key
            }
        }
        return -1;
    }
    getLI(splitIndex) {
        const li = document.createElement('li');
        const matched = document.createElement('span');
        matched.style.fontWeight = '900';
        matched.classList.add('matched');
        const suggestion = document.createElement('span');
        suggestion.classList.add('prediction');
        li.classList.add('suggestion');
        li.style.cursor = 'pointer';
        li.append(matched);
        li.append(suggestion);
        matched.innerText = this.key.substr(0, splitIndex);
        suggestion.innerText = this.key.substr(splitIndex);
        return li;
    }
}
var TSON_JSTypes;
(function (TSON_JSTypes) {
    TSON_JSTypes["null"] = "null";
    TSON_JSTypes["undefined"] = "undefined";
    TSON_JSTypes["boolean"] = "boolean";
    TSON_JSTypes["number"] = "number";
    TSON_JSTypes["string"] = "string";
    TSON_JSTypes["object"] = "object";
    TSON_JSTypes["Array"] = "array";
    TSON_JSTypes["Date"] = "date";
    TSON_JSTypes["Boolean"] = "boolean";
    TSON_JSTypes["Number"] = "number";
    TSON_JSTypes["String"] = "string";
    TSON_JSTypes["function"] = "function";
})(TSON_JSTypes || (TSON_JSTypes = {}));
var TSON_UnsupportedTypes;
(function (TSON_UnsupportedTypes) {
    TSON_UnsupportedTypes["BigInt"] = "bigint";
    TSON_UnsupportedTypes["symbol"] = "symbol";
    TSON_UnsupportedTypes["arrowFunction?"] = "arrowfunction?";
    TSON_UnsupportedTypes["RegExp"] = "regexp";
    TSON_UnsupportedTypes["Int8Array"] = "int8array";
    TSON_UnsupportedTypes["Uint8Array"] = "uint8array";
    TSON_UnsupportedTypes["Uint8ClampedArray"] = "uint8clampedarray";
    TSON_UnsupportedTypes["Int16Array"] = "int16array";
    TSON_UnsupportedTypes["Uint16Array"] = "uint16array";
    TSON_UnsupportedTypes["Int32Array"] = "int32array";
    TSON_UnsupportedTypes["Uint32Array"] = "uint32array";
    TSON_UnsupportedTypes["Float32Array"] = "float32array";
    TSON_UnsupportedTypes["Float64Array"] = "float64array";
    TSON_UnsupportedTypes["BigInt64Array"] = "bigint64array";
    TSON_UnsupportedTypes["BigUint64Array"] = "biguint64array";
    TSON_UnsupportedTypes["Keyed"] = "keyed";
    TSON_UnsupportedTypes["collections"] = "collections";
    TSON_UnsupportedTypes["Map"] = "map";
    TSON_UnsupportedTypes["Set"] = "set";
    TSON_UnsupportedTypes["WeakMap"] = "weakmap";
    TSON_UnsupportedTypes["WeakSet"] = "weakset";
    TSON_UnsupportedTypes["ArrayBuffer"] = "arraybuffer";
    TSON_UnsupportedTypes["SharedArrayBuffer"] = "sharedarraybuffer";
    TSON_UnsupportedTypes["Atomics"] = "atomics";
    TSON_UnsupportedTypes["DataView"] = "dataview";
    TSON_UnsupportedTypes["Promise"] = "promise";
    TSON_UnsupportedTypes["Generator"] = "generator";
    TSON_UnsupportedTypes["GeneratorFunction"] = "generatorfunction";
    TSON_UnsupportedTypes["AsyncFunction"] = "asyncfunction";
    TSON_UnsupportedTypes["Iterator"] = "iterator";
    TSON_UnsupportedTypes["AsyncIterator"] = "asynciterator";
    TSON_UnsupportedTypes["Reflection"] = "reflection";
    TSON_UnsupportedTypes["Reflect"] = "reflect";
    TSON_UnsupportedTypes["Proxy"] = "proxy";
})(TSON_UnsupportedTypes || (TSON_UnsupportedTypes = {}));
class TSON {
    static stringify(val) {
        try {
            JSON.stringify(val);
        }
        catch (e) {
            U.pe(true, 'U.deepCloneWithFunctions() Object might have circular references.', e);
        } // just to throw exception if the object have circular references
        let tmp = TSON.cloneAndGetTypings(val);
        const ret = new TSON();
        ret.values = tmp.val; //  JSON.stringify(val);
        ret.types = tmp.type; // JSON.stringify(typings);
        return JSON.stringify(ret);
    }
    static parse(tson) {
        try {
            // let tson: TSON = typeof(Tson) === TSON_JSTypes.string ? JSON.parse(Tson as string) : Tson;
            return TSON.parse0(JSON.parse(tson));
        }
        catch (e) {
            let er = new Error('TSON.parse failed, it maybe the argument is not a valid TSON string / object.');
            er['suberror'] = e;
            throw e;
        }
    }
    static parse0(jsontson) {
        TSON.fixTypes(jsontson.values, jsontson.types);
        return jsontson;
    }
    static cloneAndGetTypings(obj) {
        // let copy: object;
        let key;
        let ret = { val: undefined, type: undefined };
        let tmp = { val: undefined, type: undefined };
        // Handle primitives
        if (null === obj) {
            ret.val = obj;
            ret.type = TSON_JSTypes.null;
            return ret;
        }
        if (undefined === obj) {
            ret.val = obj;
            ret.type = TSON_JSTypes.undefined;
            return ret;
        }
        switch (typeof obj) {
            default:
                U.pe(true, 'unexpected type:', obj, typeof obj);
                break; // do not use, too dangerous for types not defined in TSON_JSTypes
            case TSON_JSTypes.boolean:
                ret.val = obj;
                ret.type = TSON_JSTypes.boolean;
                return ret;
            case TSON_JSTypes.number:
                ret.val = obj;
                ret.type = TSON_JSTypes.number;
                return ret;
            case TSON_JSTypes.string:
                ret.val = obj;
                ret.type = TSON_JSTypes.string;
                return ret;
            case TSON_JSTypes.function: break;
            case TSON_JSTypes.object: break; // those should cover everything. array and date = object
        }
        if (typeof obj === TSON_JSTypes.boolean) {
            ret.val = obj;
            ret.type = TSON_JSTypes.undefined;
            return ret;
        }
        // handle non-primitives
        if (obj instanceof Date) {
            ret.val = new Date(obj.toString());
            ret.type = TSON_JSTypes.Date;
            return ret;
        }
        if (obj instanceof Boolean) {
            ret.val = new Boolean(obj.valueOf());
            ret.type = TSON_JSTypes.Boolean;
            return ret;
        }
        if (obj instanceof Number) {
            ret.val = new Number(obj.valueOf());
            ret.type = TSON_JSTypes.Number;
            return ret;
        }
        if (obj instanceof String) {
            ret.val = new String(obj.valueOf());
            ret.type = TSON_JSTypes.String;
            return ret;
        }
        // takes lambda too
        if (obj instanceof Function) {
            ret.val = obj.toString();
            ret.type = TSON_JSTypes.function;
            return ret;
        }
        if (Array.isArray(obj)) {
            ret.val = [];
            ret.type = [];
        }
        else if (obj instanceof Object) {
            ret.val = {};
            ret.type = {};
        }
        if (typeof (obj) === TSON_JSTypes.string) {
            ret.val = obj;
            ret.type = TSON_JSTypes.string;
            return ret;
        }
        // Handle Object
        for (key in obj) {
            //if (!obj.hasOwnProperty(key)) continue;
            tmp = TSON.cloneAndGetTypings(obj[key]);
            if (key === 'cc')
                console.log('cc:', tmp);
            ret.val[key] = tmp.val;
            ret.type[key] = tmp.type;
        }
        return ret;
    }
    static fixTypes(values, types) {
        let key;
        let i;
        let exampleval = { a: 0, b: '0', c: [1, 'kk', () => { }, { k: '' }] };
        let exampletyp = { a: 'number', b: 'string', c: ['number', 'string', 'arrowfunc', { k: 'string' }] };
        let leafvalstr;
        switch (typeof (values)) {
            default: // is leaf-type and i can read my typemap
            case TSON_UnsupportedTypes.BigInt:
            case TSON_UnsupportedTypes.symbol:
                U.pe(true, 'TSON parse found an unsupported type:', typeof (values));
                break;
            case TSON_JSTypes.string:
            case TSON_JSTypes.function:
            case TSON_JSTypes.undefined:
            case TSON_JSTypes.number:
            case TSON_JSTypes.boolean:
                leafvalstr = '' + values;
                switch (types) { // primitivi secondo JSON
                    default:
                        U.pe(true, 'Unimplemented TSON type found:', types);
                        break;
                    case TSON_JSTypes.null: return null;
                    case TSON_JSTypes.undefined: return undefined;
                    case TSON_JSTypes.Date: return new Date(leafvalstr);
                    case TSON_JSTypes.boolean: return new Boolean(leafvalstr).valueOf();
                    case TSON_JSTypes.number: return +leafvalstr;
                    case TSON_JSTypes.Boolean: return new Boolean(leafvalstr);
                    case TSON_JSTypes.Number: return new Number(leafvalstr);
                    case TSON_JSTypes.string: return leafvalstr;
                    case TSON_JSTypes.String: return new String(leafvalstr);
                    case TSON_JSTypes.function: return eval('let a=' + leafvalstr + '; a;');
                }
            //
            case TSON_JSTypes.object:
                let typestr = typeof (types) === 'string' ? types : null; // null if non-leaf type.
                switch (typestr) { // non primitivi secondo JSON
                    default:
                        U.pe(true, 'Unimplemented TSON typing found:', types);
                        break;
                    case null: // object or array (non primitivi secondo json e non-leaf per tson)
                        // if (Array.isArray(values)){ same as object fallback, will ignore length.
                        for (key in values) {
                            values[key] = TSON.fixTypes(values[key], types[key]);
                        }
                        // problema: Json stringify and parse trasforma (let a = []; a[600] = 1;) in un array con 600 elementi (599 null). problema ereditato da TSON.
                        return values;
                }
        }
        U.pe(true, 'TSON.fixtypes() should not reach here');
    }
}
var AttribETypes;
(function (AttribETypes) {
    //  FakeElementAddFeature = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//FakeElement',
    // era il 'pulsante per aggiungere feature nel mm.',
    // reference = 'reference??',
    AttribETypes["void"] = "???void";
    AttribETypes["EChar"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EChar";
    AttribETypes["EString"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString";
    AttribETypes["EDate"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate";
    AttribETypes["EFloat"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloat";
    AttribETypes["EDouble"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble";
    AttribETypes["EBoolean"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean";
    AttribETypes["EByte"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EByte";
    AttribETypes["EShort"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EShort";
    AttribETypes["EInt"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt";
    AttribETypes["ELong"] = "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong";
    /*
    ECharObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ECharObject',
    EStringObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EStringObject',
    EDateObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDateObject',
    EFloatObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFloatObject',
    EDoubleObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject',
    EBooleanObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObj',
    EByteObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EByteObject',
    EShortObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EShortObject',
    EIntObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject',
    ELongObj = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELongObject', */
    // EELIST = 'ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList', // List<E> = List<?>
})(AttribETypes || (AttribETypes = {}));
// export type Json = object;
class ParseNumberOrBooleanOptions {
    constructor(defaultValue = null, allowNull = false, nullValue = null, allowUndefined = false, undefinedValue = undefined, allowedNan = false, nanValue = NaN, allowBooleans = true, trueValue = 1, falseValue = 0) {
        this.defaultValue = defaultValue;
        this.allowNull = allowNull;
        this.nullValue = nullValue;
        this.allowUndefined = allowUndefined;
        this.undefinedValue = undefinedValue;
        this.allowedNan = allowedNan;
        this.nanValue = nanValue;
        this.allowBooleans = allowBooleans;
        this.trueValue = trueValue;
        this.falseValue = falseValue;
    }
}
class Json {
    constructor(j) { }
    static getAnnotations(thiss) {
        const ret = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].eAnnotations];
        if (!ret || $.isEmptyObject(ret)) {
            return [];
        }
        if (Array.isArray(ret)) {
            return ret;
        }
        else {
            return [ret];
        }
    }
    static getDetails(thiss) {
        const ret = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAnnotation"].details];
        if (!ret || $.isEmptyObject(ret)) {
            return [];
        }
        if (Array.isArray(ret)) {
            return ret;
        }
        else {
            return [ret];
        }
    }
    static getChildrens(thiss, throwError = false, functions = false) {
        if (!thiss && !throwError) {
            return [];
        }
        const mod = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreRoot"].ecoreEPackage];
        const pkg = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECorePackage"].eClassifiers];
        const cla = thiss[functions ? _Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eOperations : _Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eStructuralFeatures];
        const fun = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eParameters];
        const lit = thiss[_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].eLiterals];
        const ret = mod || pkg || cla || fun || lit;
        /*if ( ret === undefined || ret === null ) {
          if (thiss['@name'] !== undefined) { ret = thiss; } // if it's the root with only 1 child arrayless
        }*/
        // U.pe(true, debug, 'getchildrens(', thiss, ')');
        U.pe(throwError && !ret, 'getChildrens() Failed: ', thiss, ret);
        // console.log('ret = ', ret, ' === ', {}, ' ? ', ($.isEmptyObject(ret) ? [] : [ret]));
        if (!ret || $.isEmptyObject(ret)) {
            return [];
        }
        if (Array.isArray(ret)) {
            return ret;
        }
        else {
            return [ret];
        }
    }
    static read(json, field, valueIfNotFound = 'read<T>()CanThrowError') {
        let ret = json ? json[field] : null;
        if (ret !== null && ret !== undefined && field.indexOf(_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker) !== -1) {
            U.pe(U.isObject(ret, false, false, true), 'inline value |' + field + '| must be primitive.', ret);
            ret = U.multiReplaceAll('' + ret, ['&amp;', '&#38;', '&quot;'], ['&', '\'', '"']);
        }
        if ((ret === null || ret === undefined)) {
            U.pe(valueIfNotFound === 'read<T>()CanThrowError', 'Json.read<', '> failed: field[' + field + '], json: ', json);
            return valueIfNotFound;
        }
        return ret;
    }
    static write(json, field, val) {
        if (val !== null && field.indexOf(_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker) !== -1) {
            U.pe(val !== '' + val, 'inline value |' + field + '| must be a string.', val);
            val = U.multiReplaceAll(val, ['&', '\'', '"'], ['&amp;', '&#38;', '&quot;']);
        }
        else
            U.pe(val !== '' + val || !U.isObject(val, true), 'primitive values should be inserted only inline in the xml:', field, val);
        json[field] = val;
        return val;
    }
}
class DetectZoom {
    static device() { return detect_zoom__WEBPACK_IMPORTED_MODULE_2__["device"](); }
    static zoom() { U.pe(true, 'better not use this, looks like always === 1'); return detect_zoom__WEBPACK_IMPORTED_MODULE_2__["zoom"](); }
    test() {
        let a;
        return a = null;
    }
}
class ISize {
    constructor(x = 0, y = 0, w = 0, h = 0) {
        if (x === null)
            this.x = null;
        else if (isNaN(+x)) {
            this.x = 0;
        }
        else
            this.x = +x;
        if (y === null)
            this.y = null;
        else if (isNaN(+y)) {
            this.y = 0;
        }
        else
            this.y = +y;
        if (w === null)
            this.w = null;
        else if (isNaN(+w)) {
            this.w = 0;
        }
        else
            this.w = +w;
        if (h === null)
            this.h = null;
        else if (isNaN(+h)) {
            this.h = 0;
        }
        else
            this.h = +h;
    }
    tl() { return this.makePoint(this.x, this.y); }
    tr() { return this.makePoint(this.x + this.w, this.y); }
    bl() { return this.makePoint(this.x, this.y + this.h); }
    br() { return this.makePoint(this.x + this.w, this.y + this.h); }
    equals(size) { return this.x === size.x && this.y === size.y && this.w === size.w && this.h === size.h; }
    /// field-wise Math.min()
    min(minSize, clone) {
        const ret = clone ? this.duplicate() : this;
        if (!isNaN(minSize.x) && ret.x < minSize.x) {
            ret.x = minSize.x;
        }
        if (!isNaN(minSize.y) && ret.y < minSize.y) {
            ret.y = minSize.y;
        }
        if (!isNaN(minSize.w) && ret.w < minSize.w) {
            ret.w = minSize.w;
        }
        if (!isNaN(minSize.h) && ret.h < minSize.h) {
            ret.h = minSize.h;
        }
        return ret;
    }
    max(maxSize, clone) {
        const ret = clone ? this.duplicate() : this;
        if (!isNaN(maxSize.x) && ret.x > maxSize.x) {
            ret.x = maxSize.x;
        }
        if (!isNaN(maxSize.y) && ret.y > maxSize.y) {
            ret.y = maxSize.y;
        }
        if (!isNaN(maxSize.w) && ret.w > maxSize.w) {
            ret.w = maxSize.w;
        }
        if (!isNaN(maxSize.h) && ret.h > maxSize.h) {
            ret.h = maxSize.h;
        }
        return ret;
    }
    contains(pt) {
        return pt.x >= this.x && pt.x <= this.x + this.w && pt.y >= this.y && pt.y <= this.y + this.h;
    }
}
class Size extends ISize {
    static fromPoints(firstPt, secondPt) {
        const minX = Math.min(firstPt.x, secondPt.x);
        const maxX = Math.max(firstPt.x, secondPt.x);
        const minY = Math.min(firstPt.y, secondPt.y);
        const maxY = Math.max(firstPt.y, secondPt.y);
        return new Size(minX, minY, maxX - minX, maxY - minY);
    }
    clone(json) { return new Size(json.x, json.y, json.w, json.h); }
    duplicate() { return new Size().clone(this); }
    makePoint(x, y) { return new Point(x, y); }
    tl() { return super.tl(); }
    tr() { return super.tr(); }
    bl() { return super.bl(); }
    br() { return super.br(); }
    equals(size) { return super.equals(size); }
    min(minSize, clone) { return super.min(minSize, clone); }
    max(minSize, clone) { return super.max(minSize, clone); }
    intersection(size) {
        // anche "isinside"
        let startx, starty, endx, endy;
        startx = Math.max(this.x, size.x);
        starty = Math.max(this.y, size.y);
        endx = Math.min(this.x + this.w, size.x + size.w);
        endy = Math.min(this.y + this.h, size.y + size.h);
        const intersection = new Size(0, 0, 0, 0);
        intersection.x = startx;
        intersection.y = starty;
        intersection.w = endx - startx;
        intersection.h = endy - starty;
        const doesintersect = intersection.w > 0 && intersection.h > 0;
        return (doesintersect) ? intersection : null;
    }
}
class GraphSize extends ISize {
    static fromPoints(firstPt, secondPt) {
        const minX = Math.min(firstPt.x, secondPt.x);
        const maxX = Math.max(firstPt.x, secondPt.x);
        const minY = Math.min(firstPt.y, secondPt.y);
        const maxY = Math.max(firstPt.y, secondPt.y);
        return new GraphSize(minX, minY, maxX - minX, maxY - minY);
    }
    static closestIntersection(vertexGSize, prevPt, pt0, gridAlign = null) {
        let pt = pt0.duplicate();
        const m = GraphPoint.getM(prevPt, pt);
        const q = GraphPoint.getQ(prevPt, pt);
        // U.pe( Math.abs((pt.y - m * pt.x) - (prevPt.y - m * prevPt.x)) > .001, 'wrong math in Q:', (pt.y - m * pt.x), ' vs ', (prevPt.y - m * prevPt.x));
        /*const isL = prevPt.x < pt.x;
        const isT = prevPt.y < pt.y;
        const isR = !isL;
        const isB = !isT; */
        if (m === Number.POSITIVE_INFINITY && q === Number.NEGATIVE_INFINITY) { // bottom middle
            return new GraphPoint(vertexGSize.x + vertexGSize.w / 2, vertexGSize.y + vertexGSize.h);
        }
        // console.log('pt:', pt, 'm:', m, 'q:', q);
        let L = new GraphPoint(0, 0);
        let T = new GraphPoint(0, 0);
        let R = new GraphPoint(0, 0);
        let B = new GraphPoint(0, 0);
        L.x = vertexGSize.x;
        L.y = m * L.x + q;
        R.x = vertexGSize.x + vertexGSize.w;
        R.y = m * R.x + q;
        T.y = vertexGSize.y;
        T.x = (T.y - q) / m;
        B.y = vertexGSize.y + vertexGSize.h;
        B.x = (B.y - q) / m;
        // prendo solo il compreso pt ~ prevPt (escludo così il "pierce" sulla faccia opposta), prendo il più vicino al centro.
        // console.log('4 possibili punti di intersezione (LTBR):', L, T, B, R);
        /* this.owner.mark(this.owner.toHtmlCoord(T), true, 'blue');
        this.owner.mark(this.owner.toHtmlCoord(B), false, 'violet');
        this.owner.mark(this.owner.toHtmlCoord(L), false, 'red');
        this.owner.mark(this.owner.toHtmlCoord(R), false, 'orange');*/
        if ((B.x >= pt.x && B.x <= prevPt.x) || (B.x >= prevPt.x && B.x <= pt.x)) { }
        else {
            B = null;
        }
        if ((T.x >= pt.x && T.x <= prevPt.x) || (T.x >= prevPt.x && T.x <= pt.x)) { }
        else {
            T = null;
        }
        if ((L.y >= pt.y && L.y <= prevPt.y) || (L.y >= prevPt.y && L.y <= pt.y)) { }
        else {
            L = null;
        }
        if ((R.y >= pt.y && R.y <= prevPt.y) || (R.y >= prevPt.y && R.y <= pt.y)) { }
        else {
            R = null;
        }
        // console.log('superstiti step1: (LTBR):', L, T, B, R);
        const vicinanzaT = !T ? Number.POSITIVE_INFINITY : ((T.x - pt.x) * (T.x - pt.x)) + ((T.y - pt.y) * (T.y - pt.y));
        const vicinanzaB = !B ? Number.POSITIVE_INFINITY : ((B.x - pt.x) * (B.x - pt.x)) + ((B.y - pt.y) * (B.y - pt.y));
        const vicinanzaL = !L ? Number.POSITIVE_INFINITY : ((L.x - pt.x) * (L.x - pt.x)) + ((L.y - pt.y) * (L.y - pt.y));
        const vicinanzaR = !R ? Number.POSITIVE_INFINITY : ((R.x - pt.x) * (R.x - pt.x)) + ((R.y - pt.y) * (R.y - pt.y));
        const closest = Math.min(vicinanzaT, vicinanzaB, vicinanzaL, vicinanzaR);
        // console.log( 'closest:', closest);
        // succede quando pt e prevPt sono entrambi all'interno del rettangolo del vertice.
        // L'edge non è visibile e il valore ritornato è irrilevante.
        if (closest === Number.POSITIVE_INFINITY) {
            /* top center */
            pt = vertexGSize.tl();
            pt.x += vertexGSize.w / 2;
        }
        else if (closest === Number.POSITIVE_INFINITY) {
            /* bottom center */
            pt = vertexGSize.br();
            pt.x -= vertexGSize.w / 2;
        }
        else if (closest === vicinanzaT) {
            pt = T;
        }
        else if (closest === vicinanzaB) {
            pt = B;
        }
        else if (closest === vicinanzaR) {
            pt = R;
        }
        else if (closest === vicinanzaL) {
            pt = L;
        }
        if (!gridAlign) {
            return pt;
        }
        if ((pt === T || pt === B || isNaN(closest)) && gridAlign.x) {
            const floorX = Math.floor(pt.x / gridAlign.x) * gridAlign.x;
            const ceilX = Math.ceil(pt.x / gridAlign.x) * gridAlign.x;
            let closestX;
            let farthestX;
            if (Math.abs(floorX - pt.x) < Math.abs(ceilX - pt.x)) {
                closestX = floorX;
                farthestX = ceilX;
            }
            else {
                closestX = ceilX;
                farthestX = floorX;
            }
            // todo: possibile causa del bug che non allinea punti fake a punti reali. nel calcolo realPT questo non viene fatto.
            // if closest grid intersection is inside the vertex.
            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) {
                pt.x = closestX;
            }
            else 
            // if 2° closer grid intersection is inside the vertex.
            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) {
                pt.x = farthestX;
                // if no intersection are inside the vertex (ignore grid)
            }
            else {
                pt = pt;
            }
        }
        else if ((pt === L || pt === R) && gridAlign.y) {
            const floorY = Math.floor(pt.y / gridAlign.y) * gridAlign.y;
            const ceilY = Math.ceil(pt.y / gridAlign.y) * gridAlign.y;
            let closestY;
            let farthestY;
            if (Math.abs(floorY - pt.y) < Math.abs(ceilY - pt.y)) {
                closestY = floorY;
                farthestY = ceilY;
            }
            else {
                closestY = ceilY;
                farthestY = floorY;
            }
            // if closest grid intersection is inside the vertex.
            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) {
                pt.y = closestY;
            }
            else 
            // if 2° closer grid intersection is inside the vertex.
            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) {
                pt.y = farthestY;
                // if no intersection are inside the vertex (ignore grid)
            }
            else {
                pt = pt;
            }
        }
        return pt;
    }
    clone(json) { return new GraphSize(json.x, json.y, json.w, json.h); }
    duplicate() { return new GraphSize().clone(this); }
    makePoint(x, y) { return new GraphPoint(x, y); }
    tl() { return super.tl(); }
    tr() { return super.tr(); }
    bl() { return super.bl(); }
    br() { return super.br(); }
    equals(size) { return super.equals(size); }
    min(minSize, clone) { return super.min(minSize, clone); }
    max(minSize, clone) { return super.max(minSize, clone); }
    intersection(size) {
        // anche "isinside"
        let startx, starty, endx, endy;
        startx = Math.max(this.x, size.x);
        starty = Math.max(this.y, size.y);
        endx = Math.min(this.x + this.w, size.x + size.w);
        endy = Math.min(this.y + this.h, size.y + size.h);
        const intersection = new GraphSize(0, 0, 0, 0);
        intersection.x = startx;
        intersection.y = starty;
        intersection.w = endx - startx;
        intersection.h = endy - starty;
        const doesintersect = intersection.w > 0 && intersection.h > 0;
        return (doesintersect) ? intersection : null;
    }
    contains(pt) { return super.contains(pt); }
    isOverlapping(size2) { return !!this.intersection(size2); }
    isOverlappingAnyOf(sizes) {
        if (!sizes)
            return false;
        for (let size of sizes) {
            if (this.isOverlapping(size))
                return true;
        }
        return false;
    }
    multiplyPoint(other, newInstance) {
        const ret = newInstance ? new GraphSize() : this;
        ret.x *= other.x;
        ret.w *= other.x;
        ret.y *= other.y;
        ret.h *= other.y;
        return ret;
    }
    dividePoint(other, newInstance) {
        const ret = newInstance ? new GraphSize() : this;
        ret.x /= other.x;
        ret.w /= other.x;
        ret.y /= other.y;
        ret.h /= other.y;
        return ret;
    }
}
class IPoint {
    static getM(firstPt, secondPt) { return (firstPt.y - secondPt.y) / (firstPt.x - secondPt.x); }
    static getQ(firstPt, secondPt) { return firstPt.y - IPoint.getM(firstPt, secondPt) * firstPt.x; }
    constructor(x = 0, y = 0) {
        if (x === null)
            this.x = null;
        else if (isNaN(+x)) {
            this.x = 0;
        }
        else
            this.x = +x;
        if (y === null)
            this.y = null;
        else if (isNaN(+y)) {
            this.y = 0;
        }
        else
            this.y = +y;
    }
    toString() { return '(' + this.x + ', ' + this.y + ')'; }
    subtract(p2, newInstance) {
        U.pe(!p2, 'subtract argument must be a valid point: ', p2);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x -= p2.x;
        p1.y -= p2.y;
        return p1;
    }
    add(p2, newInstance) {
        U.pe(!p2, 'add argument must be a valid point: ', p2);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x += p2.x;
        p1.y += p2.y;
        return p1;
    }
    addAll(p, newInstance) {
        let i;
        let p0;
        if (!newInstance) {
            p0 = this;
        }
        else {
            p0 = this.duplicate();
        }
        for (i = 0; i < p.length; i++) {
            p0.add(p[i], true);
        }
        return p0;
    }
    subtractAll(p, newInstance) {
        let i;
        let p0;
        if (!newInstance) {
            p0 = this;
        }
        else {
            p0 = this.duplicate();
        }
        for (i = 0; i < p.length; i++) {
            p0.subtract(p[i], true);
        }
        return p0;
    }
    multiply(scalar, newInstance) {
        U.pe(isNaN(+scalar), 'scalar argument must be a valid number: ', scalar);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x *= scalar;
        p1.y *= scalar;
        return p1;
    }
    divide(scalar, newInstance) {
        U.pe(isNaN(+scalar), 'scalar argument must be a valid number: ', scalar);
        let p1;
        if (!newInstance) {
            p1 = this;
        }
        else {
            p1 = this.duplicate();
        }
        p1.x /= scalar;
        p1.y /= scalar;
        return p1;
    }
    isInTheMiddleOf(firstPt, secondPt, tolleranza) {
        const rectangle = Size.fromPoints(firstPt, secondPt);
        const tolleranzaX = tolleranza; // actually should be cos * arctan(m);
        const tolleranzaY = tolleranza; // actually should be sin * arctan(m);
        if (this.x < rectangle.x - tolleranzaX || this.x > rectangle.x + rectangle.w + tolleranzaX) {
            return false;
        }
        if (this.y < rectangle.y - tolleranzaX || this.y > rectangle.y + rectangle.h + tolleranzaY) {
            return false;
        }
        const m = IPoint.getM(firstPt, secondPt);
        const q = IPoint.getQ(firstPt, secondPt);
        const lineDistance = this.distanceFromLine(firstPt, secondPt);
        // console.log('distance:', lineDistance, ', this:', this, ', p1:', firstPt, ', p2:', secondPt);
        return lineDistance <= tolleranza;
    }
    distanceFromLine(p1, p2) {
        const top = +(p2.y - p1.y) * this.x
            - (p2.x - p1.x) * this.y
            + p2.x * p1.y
            - p1.x * p2.y;
        const bot = (p2.y - p1.y) * (p2.y - p1.y) +
            (p2.x - p1.x) * (p2.x - p1.x);
        return Math.abs(top) / Math.sqrt(bot);
    }
    equals(pt, tolleranzaX = 0, tolleranzaY = 0) {
        if (pt === null) {
            return false;
        }
        return Math.abs(this.x - pt.x) <= tolleranzaX && Math.abs(this.y - pt.y) <= tolleranzaY;
    }
    moveOnNearestBorder(startVertexSize, clone, debug = true) {
        const pt = clone ? this.duplicate() : this;
        const tl = startVertexSize.tl();
        const tr = startVertexSize.tr();
        const bl = startVertexSize.bl();
        const br = startVertexSize.br();
        const L = pt.distanceFromLine(tl, bl);
        const R = pt.distanceFromLine(tr, br);
        const T = pt.distanceFromLine(tl, tr);
        const B = pt.distanceFromLine(bl, br);
        const min = Math.min(L, R, T, B);
        if (min === L) {
            pt.x = tl.x;
        }
        if (min === R) {
            pt.x = tr.x;
        }
        if (min === T) {
            pt.y = tr.y;
        }
        if (min === B) {
            pt.y = br.y;
        }
        if (debug && pt instanceof GraphPoint) {
            _Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markg(pt, false, 'purple');
        }
        return pt;
    }
    getM(pt2) { return IPoint.getM(this, pt2); }
    degreeWith(pt2, toRadians) {
        const directionVector = this.subtract(pt2, true);
        const ret = Math.atan2(directionVector.y, directionVector.x);
        return toRadians ? ret : U.RadToDegree(ret);
    }
    absolute() { return Math.sqrt(this.x * this.x + this.y * this.y); }
}
class GraphPoint extends IPoint {
    static fromEvent(e) {
        if (!e) {
            return null;
        }
        const p = new Point(e.pageX, e.pageY);
        const g = _Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph;
        return g.toGraphCoord(p);
    }
    duplicate() { return new GraphPoint(this.x, this.y); }
    clone(other) { this.x = other.x; this.y = other.y; }
    subtract(p2, newInstance) { return super.subtract(p2, newInstance); }
    add(p2, newInstance) { return super.add(p2, newInstance); }
    multiply(scalar, newInstance) { return super.multiply(scalar, newInstance); }
    divide(scalar, newInstance) { return super.divide(scalar, newInstance); }
    isInTheMiddleOf(firstPt, secondPt, tolleranza) { return super.isInTheMiddleOf(firstPt, secondPt, tolleranza); }
    distanceFromLine(p1, p2) { return super.distanceFromLine(p1, p2); }
    equals(pt, tolleranzaX = 0, tolleranzaY = 0) { return super.equals(pt, tolleranzaX, tolleranzaY); }
    moveOnNearestBorder(startVertexSize, clone, debug = true) {
        return super.moveOnNearestBorder(startVertexSize, clone, debug);
    }
    getM(pt2) { return super.getM(pt2); }
    degreeWith(pt2, toRadians) { return super.degreeWith(pt2, toRadians); }
}
class Point extends IPoint {
    static fromEvent(e) {
        if (!e) {
            return null;
        }
        const p = new Point(e.pageX, e.pageY);
        return p;
    }
    duplicate() { return new Point(this.x, this.y); }
    clone(other) { this.x = other.x; this.y = other.y; }
    subtract(p2, newInstance) { return super.subtract(p2, newInstance); }
    add(p2, newInstance) { return super.add(p2, newInstance); }
    multiply(scalar, newInstance) { return super.multiply(scalar, newInstance); }
    divide(scalar, newInstance) { return super.divide(scalar, newInstance); }
    isInTheMiddleOf(firstPt, secondPt, tolleranza) { return super.isInTheMiddleOf(firstPt, secondPt, tolleranza); }
    distanceFromLine(p1, p2) { return super.distanceFromLine(p1, p2); }
    equals(pt, tolleranzaX = 0, tolleranzaY = 0) { return super.equals(pt, tolleranzaX, tolleranzaY); }
    moveOnNearestBorder(startVertexSize, clone, debug = true) {
        return super.moveOnNearestBorder(startVertexSize, clone, debug);
    }
    getM(pt2) { return super.getM(pt2); }
    degreeWith(pt2, toRadians) { return super.degreeWith(pt2, toRadians); }
}
class FileReadTypeEnum {
}
FileReadTypeEnum.image = "image/*";
FileReadTypeEnum.audio = "audio/*";
FileReadTypeEnum.video = "video/*";
/// a too much huge list https://www.iana.org/assignments/media-types/media-types.xhtml
FileReadTypeEnum.AndManyOthersButThereAreTooMuch = "And many others... https://www.iana.org/assignments/media-types/media-types.xhtml";
FileReadTypeEnum.OrJustPutFileExtension = "OrJustPutFileExtension";


/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.

const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/guiElements/changelog/ChangelogEntry.ts":
/*!*****************************************************!*\
  !*** ./src/guiElements/changelog/ChangelogEntry.ts ***!
  \*****************************************************/
/*! exports provided: ChangelogEntry, Feature, FeatureInfo, BugFix, Bug, VersionUpload, ChangelogRoot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangelogEntry", function() { return ChangelogEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Feature", function() { return Feature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeatureInfo", function() { return FeatureInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BugFix", function() { return BugFix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bug", function() { return Bug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionUpload", function() { return VersionUpload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangelogRoot", function() { return ChangelogRoot; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/util */ "./src/common/util.ts");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



class ChangelogEntry {
    constructor(title, description, subPoints = null, allowHTML = false) {
        this.title = (title ? '' + title : '').trim();
        this.description = (description ? '' + description : '').trim();
        if (this.description)
            this.title += ' ';
        this.subPoints = subPoints || [];
        this.allowHtml = allowHTML;
    }
    generateHtml() {
        const li = document.createElement('li');
        const title = document.createElement('span');
        const description = document.createElement('span');
        const subPoints = document.createElement('ul');
        title.classList.add('title');
        description.classList.add('description');
        // const date: HTMLElement = document.createElement('span');
        // li.appendChild(date);
        li.appendChild(title);
        li.appendChild(description);
        li.appendChild(subPoints);
        const isFeature = this instanceof Feature;
        const isInfo = this instanceof FeatureInfo;
        const isBug = this instanceof Bug;
        const isBugfix = this instanceof BugFix;
        const isVersion = this instanceof VersionUpload;
        const isRoot = this instanceof ChangelogRoot;
        if (isRoot) {
            subPoints.classList.add('versionPoints', 'changelog');
        }
        else if (isVersion) {
            subPoints.classList.add('versionSubPoints');
        }
        else {
            subPoints.classList.add('subPoint');
        }
        if (isInfo)
            li.classList.add('info');
        if (isVersion)
            li.classList.add('version');
        if (isFeature)
            li.classList.add('feature');
        if (isBug)
            li.classList.add('bug');
        if (isBugfix)
            li.classList.add('bugfix');
        if (this.date) {
            let datestr = this.date.getDate() + ' ' + this.date.toLocaleString('default', { month: 'long' });
            if (new Date().getFullYear() !== this.date.getFullYear())
                datestr += ' ' + this.date.getFullYear();
            this.title = datestr + (this.title ? ' - ' + this.title : '');
        }
        if (this.allowHtml) {
            title.innerHTML = this.title || '';
            description.innerHTML = this.description || '';
        }
        else {
            title.innerText = this.title || '';
            description.innerText = this.description || '';
        }
        let i;
        for (i = 0; i < this.subPoints.length; i++) {
            subPoints.appendChild(this.subPoints[i].generateHtml());
        }
        return li;
    }
    addb(title, description, subPoints = null, asHtml = false) {
        this.subPoints.push(new Bug(title, description, subPoints, asHtml));
    }
    addi(title, description, subPoints = null, asHtml = false) {
        this.subPoints.push(new FeatureInfo(title, description, subPoints, asHtml));
    }
    addbf(title, description, subPoints = null, asHtml = false) {
        this.subPoints.push(new BugFix(title, description, subPoints, asHtml));
    }
    addf(title, description, subPoints = null, asHtml = false) {
        this.subPoints.push(new Feature(title, description, subPoints, asHtml));
    }
}
class Feature extends ChangelogEntry {
}
class FeatureInfo extends ChangelogEntry {
}
class BugFix extends ChangelogEntry {
}
class Bug extends ChangelogEntry {
}
class VersionUpload extends ChangelogEntry {
    constructor(date, title, description, subPoints = []) {
        super(title, description, subPoints);
        this.date = date;
        ChangelogRoot.latestVersion = date.toString();
        VersionUpload.all.push(this);
    }
}
VersionUpload.all = [];
class ChangelogRoot extends ChangelogEntry {
    static generateHtml() {
        ChangelogRoot.versionBlockNoteWriteHere();
        let root = new ChangelogRoot(null, null, VersionUpload.all.reverse());
        const points = $(root.generateHtml()).find('.versionPoints')[0];
        const html = document.createElement('div');
        const $html = $(html);
        const buttonfilters = document.createElement('div');
        const buttonnamesArr = ['Feature', 'Info', 'Bug', 'BugFix'];
        const buttonstylearr = ['info', 'secondary', 'danger', 'success'];
        const getStyle = (button) => { let ind = buttonnamesArr.indexOf(button.getAttribute('stile')); return buttonstylearr[ind]; };
        let i;
        let button;
        let buttons = [];
        for (i = 0; i < buttonnamesArr.length; i++) {
            let name = buttonnamesArr[i];
            let namelc = name.toLowerCase();
            button = document.createElement('button');
            buttons.push(button);
            buttonfilters.append(button);
            button.classList.add('featurefilter', namelc, 'btn');
            button.setAttribute('filter', namelc);
            button.setAttribute('stile', name);
            button.innerText = name;
            button.classList.add('btn');
            button.classList.add('active');
        }
        $(buttons).on('click', (e) => {
            let button = e.currentTarget;
            let active = button.classList.contains('active');
            let targettype = button.getAttribute('filter');
            let $targets = $html.find('.changelog li.' + targettype);
            let style = getStyle(button);
            if (active) {
                button.classList.remove('active', 'btn-' + style);
                button.classList.add('btn-outline-' + style);
                $targets.hide();
            }
            else {
                button.classList.add('active', 'btn-' + style);
                button.classList.remove('btn-outline-' + style);
                $targets.show();
            }
        }).trigger('click').trigger('click');
        buttonfilters.classList.add('filterContainer');
        /*const title = document.createElement('h1');
        title.style.textAlign = "center";
        title.innerText = 'Changelog';
        html.style.position = 'relative';
        html.append(title);*/
        html.append(buttonfilters);
        html.append(points);
        return html;
    }
    static versionBlockNoteWriteHere() {
        let v;
        v = new VersionUpload(new Date('2020/4/21'), 'Measurable reworking:', 'Measurable system got rewritten from scratch to expand functionality and making the syntax more user friendly, the old documentation became obsolete and will be rewritten.', null);
        v.addf('GUI: ', 'Demo of light theme inserted (in the topbar).');
        v.addf('GUI: ', 'for inserting measurable rules without editing directly the HTML with some suggestion while typing and minor autocorrections on input mistakes.');
        v.addf('debugger: ', 'built-in simple debugger to see the output or execution errors of the rules executed and manually trigger measurable events. ("Test it!" button)');
        v.addf('Popup improvement 1: ', 'now a single click on a popup will close all of them and copy the content of the clicked alert in the clipboard.\n' +
            'useful to dismiss them faster or as an help to read long messages without rush.');
        v.addf('Popup improvement 2: ', 'Some popup will now be displayed just once for each page visit.' +
            'Such as warning the user about improper usage of some feature or warning about partially invalid inputs that are being auto-corrected.');
        v.addi('Measurable: ', 'inserted 3 logical group of rules:<ul><li>Event triggers</li><li>Executable rules</li><li>JqueryUI config (measurable relies on jqueryUI)</li></ul>', null, true);
        v.addbf('Many minor bugfixed', '');
        v.addf('Vertex', 'Support for manually set vertex size and position through coordinates and possibility to set a vertex in autosize mode, losing the ability to manually resize it but ensuring it will always fit to his contents.');
        v.addi('Other:', 'Implemented this self-referential changelog system, that will automatically pop-up every time there are new updates not yet acknowledged.');
        v = new VersionUpload(new Date('2020/4/30'), '', '');
        v.addi('Info:', 'Measurable elements are now called layouting elements');
        v.addf('GUI:', 'Layouting elements editor now have a search form to filter layouting rules.');
        v.addf('Changelog:', 'Inserted possibility to filter news on your interests (features, info, bugfix...).');
        v.addbf('GUI:', 'Layouting rules counter on the editor gui was not updated on rule removal.');
        v.addf('GUI:', 'Default edge colors will now change according to website theme (manually edited styles won\'t change).');
        v.addbf('Layoutable:', '_Constraint was not working properly, rules sometime were improperly altering graph grid\'s size.');
        v.addbf('GUI:', 'A recent chrome update was making the graph grid blurry on extremely big or small grid sizes, fixed.');
        v = new VersionUpload(new Date('2020/5/6'), '', '');
        v.addf('Layoutable:', 'Improved the rule editor with code autocompletion, providing dynamic suggestions and information about types of available variables, function\'s parameters and return values. With a link to documentation.');
        v.addi('Optimization:', 'Reduced redundant calls during MClass creation and loading.');
        v = new VersionUpload(new Date('2020/6/6'), 'Generalization / Inheritance system', 'Huge update with many features and bugfixes.');
        v.addf('Generalization / Inheritance:', 'Can be added through vertex contextmenù.\n'
            + 'Like all edges, you can change their endpoint by selecting the edge and dragging the dot near the target vertex, and you can delete them by pressing CANC/DEL key.\n' +
            'By default inherited features are hidden in m2 and displayed in m1, this behaviour can be changed using the new filtering feature described in a following point.\n' +
            'Chain of inheritances are supported. (ClassA can extend ClassB and ClassB will extend classC, so ClassA indirectly extends classC).\n' +
            'Multiple inheritance is allowed. (ClassA can directly extend ClassB and ClassC at the same time)\n' +
            'The setup of circular inheritances will be prevented, either directly or indirectly and a popup will warn the user.\n' +
            'E.g. If ClassA extends ClassB, and ClassB extends ClassC, you cannot make classC extend classA.');
        v.addf('Overriding / Polymorphism', 'Operations can now violate name uniqueness constraint to allow overriding and polymorphism.\n' +
            'If two functions are homonym and cannot be in a polymorphism or overriding relationship they will be marked in pairs as invalid with the same dynamic color until the user makes a change to fix the violation.');
        v.addf('Shadowing', 'Features shadowed by redeclaration on subclasses are now detected and hidden.\n' +
            'Shadowed variables can be displayed in M1 for informative purpose, but their value will not be saved (on purpose).');
        v.addf('Style editor: ', 'Inserted "Use as default style" checkbox which can only be used on customized elements.\n' +
            'When marked the customized style of this element will be inherited by all other elements of the same type (Class, Enum, Attribute, Reference...) with the least priority.\n' +
            'A reminder on style priorities:' +
            '<ul>' +
            '<li>1) "Own html" customized style attached to the element itself.</li>' +
            '<li>2) "Inherited html" customized style attached to the meta-parent of the element (eg: a M1-class instance inheriting his style from his M2-class type).</li>' +
            '<li>3) User-defined "default html", eg: a M1-class instance inheriting his style from another M1-class peer marked as default style with this brand new feature.</li>' +
            '<li>4) Hardcoded, static "default html", the one you see on "default" viewpoint.</li>' +
            '</ul>' +
            'If one of those style throws an exception while rendering or executing custom code injected inside the style,' +
            ' that faulty style will be automatically removed and the next style in priority order will be applied.' +
            'Until eventually the fourth level is reached, which has been broadly tested and should never fail.', null, true);
        v.addf('Vertex gui customization:', 'It is now possible to set up a custom filter and condition to select which childrens of a classifier / operation should be displayed.' +
            'There are shortcuts to filter children based on their type or whether they are inherited or not. <a href="https://github.com/DamianoNaraku/jjodel/wiki/Display-and-filter-sub-features-inside-a-vertex">More info here.</a>', null, true);
        v.addf('Text popup improved:', '' +
            'Textual popup notifying the user about invalid actions, errors, tooltip or automatic fixing invalid user input now cannot show duplicates at the same time.\n' +
            'Clicking a popup will make it disappear instantly while copying his text to the clipboard (copy-paste, old feature reminder).\n' +
            'Right-clicking a popup will now hide all same-colored notifications.\n' +
            'Wheel-clicking a popup will now hide all notifications.');
        v.addf('Usability: mouse shortcuts', '' +
            '<ul>' +
            '<li>Rightclicking a vertex will make it follow the cursor until released, ignoring measurables.\n' +
            'Can be useful if the only visible part of a vertex / feature is a input or a measurable, as left-clicking them will not drag the vertex.</li>' +
            '<li>MouseWheel-clicking anywhere on the graph and start dragging will ignore any vertexes and make the graph offset follow the cursor.\n' +
            'Can be useful on high zoom levels, huge vertexes or densely populated graph.</li></ul>', null, true);
        v.addf('ContextMenu:', 'User right-clicking input elements inside vertexes might desire both native contextmenù or customized contextmenù.\n' +
            'To access the native context menù, the user must rightclicking a input field inside the currently selected feature / vertex or do a slow right-click.\n' +
            'Here are detailed rules to check which one will appear: ' +
            '<ul>' +
            '<li>RightClick and drag on any child of a vertex / feature: no custom menù, the whole vertex will be dragged, measurables and inputs will be ignored.</li>' +
            '<li>still RightClick on a input child of a selected vertex / feature: native context menù.</li>' +
            '<li>still RightClick on any child of a un-selected vertex / feature: custom context menù.</li>' +
            '<li>still, slow (hold for 1 sec) RightClick a input child of vertex / feature: native menù</li></ul>', null, true);
        v.addb('Bug:', 'The usage of the $ and £ characters outside variable templates ($##likeThis$) and inside the html of custom styles might cause errors.\n' +
            'Until bugfix use the unicode combination \\u0024 for $ and \\u00A3 for £ when possible. This bugfix will have low priority.');
        v.addbf('Edge:', 'Fixed an error that was preventing to insert the first mid-points to an edge when his style was "straight".');
        v.addbf('PropertyBar:', 'Automatized update of structured view, style editor and raw viewer when visualized html node in graph or his parents are updated.\n');
        v.addbf('ContextMenu:', 'Was not appearing.');
        v = new VersionUpload(new Date('2020/7/31'), '', '');
        v.addf('Interface and Abstract classes support', 'Accessible through the structured tree view on the right bar.');
        v.addf('Class conversion:', 'It is now possible to change type of a single M1-class, or of all instances of a target M2-class. (<a href="https://github.com/DamianoNaraku/jjodel/wiki/Class-deletion-&-Class-type-conversion">Full guide here</a>)\n' +
            'For example converting all "Date" instances to "DateTime" instances, adding a "time" attribute to all of them without changing the definition of the "Date" class.', null, true);
        v.addb('Class conversion', 'casting an object to a superclass is not removing properties for the subclass.');
        v.addbf('children filtering:', 'was not working properly only on his generic version (childrenContainer) and not on AttributeContainer');
        v.addbf('validation:', 'was working on run-time edits, but not on the initial load of the model');
        v.addbf('class deletion:', 'When a class was used as function parameter, the removal was causing exceptions.' +
            '\nNow it will change the parmaeter\'s type using class conversion, or removing it if conversion is impossible.');
        v.addbf('firefox', 'default style of vertex had transparent background.');
        v.addbf('Edges', 'Trying to delete the mandatory start and end-point of a edge would cause visual errors.');
        v.addbf('Edges', 'Edges changing his target by dragging where not following his new target vertex when dragged.');
        v = new VersionUpload(new Date('2020/10/26'), 'M2T groundwork, Type mapping improvement', '');
        v.addf('Type mapping', 'Accessible through the topbar, it allows now to define sets of typing aliases.\n' +
            'Once a set of aliases is created you can give it a name to switch between saved alias sets, changing multiple aliases with one action.');
        v.addf('M2T', 'Can be done in 2 ways.<br>' + '<ul>' +
            '<li>Through style editor: Code will be produced according to nodes content, node content can become shards of code through style editor.<br>' +
            'Combined style overriding it is extremely easy to customize code generation for specific cases or single classes / objects.<br>' +
            'The final output will be obtained through the "By text" predefined transformation.<br>' +
            'Users will be able to use pre-existing transformations by importing a viewpoint from the store.</li>' +
            '<li>In future through the MTL standard (not yet supported)<br>' +
            'Users will be able to create their own M2T transformation and share them on a public store.</li>' +
            '</ul>', null, true);
        v = new VersionUpload(new Date('2020/12/05'), 'Auto-layouting', '');
        v.addf('Auto-layout', 'Accessible through the style editor of a graph, guide on the <a href="https://github.com/DamianoNaraku/jjodel/wiki/Auto-Layout">wiki page</a>.', null, true);
        v.addbf('zoom & pan', 'Zoom and pan weren\'t combining well, panning with a zoom level used to cause calculation error leading to graphical mismatch.');
        v.addf('Import / Export / Reset of viewpoint and vertices positions', 'Accessible through the top-bar, can be used to share a viewpoint while waiting for the store.\n' +
            'Resetting the viewpoint might fix errors caused by a wrong customization of a viewpoint.', null, true);
        v = new VersionUpload(new Date('2021/01/23'), 'Hiding elements', '');
        v.addf('Hiding edges', 'Edges can now be hidden according to source and target vertexes and to edge type.\n' +
            'To hide all edges incoming/emitted by a vertex without questions, set keep-edges="false" on his root element.\n' +
            'Default value is false for "Object" vertex and true for every other vertex.\n' +
            'If keep-edges is true, you can hide a single kind of edge use one of show-<DIRECTION>-<KIND>-edges where <DIRECTION> is one of "in", "out" and <KIND> is one of "rel", "ext", "oth" ' +
            'where "rel" stands for relationships, "ext" stands for extends, "oth" stands for indirect, deducted edges and anything outside previous categories.\n' +
            'Values can be a boolean true evaluated to "+1", a boolean false evaluated to "-1" or directly any real number.' +
            'If there are conflicting instructions, like if start vertex is hiding emitted edges of that kind ("-1") and end vertex is showing incoming edges of that kind (+1), ' +
            'the conflicting values will be summed resulting in (-1 + 1 = 0) and the edge will be displayed if the result is strictly above 0.\n' +
            'By default those properties have a value of "+1".' +
            'GUI support will come at a later time.', null, false);
        v.addf('Hiding vertices', 'Vertices can now be hidden simply by deleting their root node inside style editor.', null, false);
        v.addb('Loading edges', 'Edges are loading on wrong position during initial render, it will be fixed by hovering on them or changing viewpoint.' +
            ' Looking for a solution.', null, false);
        v.addbf('Loading customized default style', 'Fixed a failure in loading a viewpoint with a <b>"customized default"</b> style (3° layer, last customizable priority level).', null, true);
        v = new VersionUpload(new Date('2021/04/26'), 'Color schemes & bug-fixing', 'The color scheme system allow to define multiple color schemes and manage activation context for them, overriding the default coloring of vertices, edges, or the entire app.');
        v.addf('Color scheme manager', 'Accessible through Graph\'s style editor or from Themes in top-bar. It can add, remove and modify existing color schemes. It also allows to choose the activation context of the color scheme (e.g.:whole app, only Attributes...).');
        v.addf('Style editor integration', 'Once a visual element is clicked, you can manually assign an existing color scheme to that element through the style editor');
        // v.addf('Style editor integration for edges', 'todo: All elements can have multiple color scheme enabled, but edges should always have multiple color schemes. It is suggested to use one for normal status, one for highlighted status and one for focused status');
        // v.addf('Color scheme and Views', 'todo: Color scheme are stored inside Views.');
        // v = new VersionUpload(new Date('2021/04/26'), 'Mostly bug-fixes', '');
        v.addbf('Class conversion', 'casting an object to a superclass was not removing properties for the subclass.');
        v.addb('usability', 'many interactions are not working on touchscreen devices, this is not a priority but is slowly going to be fixed.');
        v.addbf('usability', 'Inserted button-popups that can open the contextmenu without right-clicking (touch-friendly)');
        v.addbf('contextmenu', 'There was a severe bug with vertex contextmenu incorrectly disappearing over chrome+macOS.');
        v.addb('contextmenu', 'The newly introduced button to open the context-menù is not displaying the menù properly on firefox due to a <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1705916">svg-related bug recently discovered</a> and without known workarounds.\n' +
            '<p style="color: darkred">If the context-menù is accessed through right-click it is not affected by the bug, please use right-click on firefox until a workaround is discovered.</p>', null, true);
        // v.addbf('gui', 'minor gui issues (vertex overflow).');
        // v.addb('gui', 'opening contextmenu through left-clicking on the option hover is blurring the graph');
        v.addbf('color scheme', 'Minor fix over styles rarely applied to incorrect elements.');
        v.addbf('gui extend', 'Removing an extension relationship was not removing the edge (graphic only bug).');
        v.addbf('attribute upperbound', 'Attributes upperbound could not be changed.');
        v.addb('edges', 'Removing an edge not yet confirmed (preview while inserting) using DEL is causing invalid state, press ESC Instead for now.');
        v.addb('lowerbound', 'Currently ignored.');
        let searchterm = 'clog addbf';
        v = new VersionUpload(new Date('2021/05/20'), '', 'Mostly quality of life patch');
        v.addf('Vertex insertion', 'Vertices were inserted always at mid of current visible portion of graph, regardless of possible overlapping. Now they will search the closest empty spot following a spiral pattern starting from the center of visible screen.');
        v.addf('Graphical: Self reference edge', 'Looping edges without any customized middle point were not displayed. Now if there are customized middle point the behaviour is unchanged, but if there are not middle points, some middle points will be automatically inserted to make the loop visible.');
        v.addbf('Graphical: containment edge', 'Unsetting the containment property for a reference was not causing the diamond tail to be graphically removed from the edge.');
        ;
        v.addbf('Graphical: M1 reference type', 'When changing the name of a M2-Classifier the type name displayed in M1-references was not updated.');
        v.addf('containment semantic enforcements', '<ul>' +
            '<li>Models now cannot create a loop of containment where A contains B, B contains C, C contains A.</li>' +
            '<li>A modelling object cannot be contained in multiple containers.</li>' +
            '<li>The root object cannot be contained.</li>' +
            '</ul>Attempting to set an invalid relationship will emit an explaining popup', null, true);
        v.addbf('looping models', 'Models with reference loops (non-containing ones) are now supported');
        v.addbf('gui', '<ul>' +
            '<li>fixed the color of inheritance arrow</li>' +
            '<li>re-enabled the shadow on vertex default style</li>' +
            '</ul>', null, true);
        v.addbf('Style editor', 'template attributes of the root node weren\'t replaced as supposed', null, false);
        v.addf('M1 attribute - default style improvement', '&nbsp;\n' +
            'Now attributes will always show only a proper input type matching the correct type for that attribute, invalid input types will be hidden.\n' +
            'All HTML inputs (input, select, textarea) will be shown only if one of those combination occurs:\n' +
            '<table><tr><th>Attrib Type</th><th>&lt;input &gt;</th><th>&lt;select /&gt; or &lt;textarea /&gt; has attribute</th></tr>' +
            '<tr><td>EBoolean</td><td>radio, checkbox</td><td>[bool]</td><tr>' +
            '<tr><td>EDouble, EFloat, ELong, EInt, EShort, EByte</td><td>number, range</td><td>[number]</td><tr>' +
            '<tr><td>EDate</td><td>date, time, datetime-local, month, week</td><td>[date]</td><tr>' +
            '</table>\n' +
            'If the attribute type is EString or EChar, all HTML inputs not matching any row combination above are displayed and is not eligible to show in enumerations.\n' +
            'If the attribute have an enumeration type instead of a primitive, only HTML inputs with [enum] attributes are shown.\n' +
            'NB: those changes are not involving any hard-code, so they can be edited or reverted by changing the default style.', null, true);
        v.addf('Style editor - new reserved attribute', '<select> elements with [enum] attribute which are bound to an attribute with enumerative type will now automatically generate their <option>\'s content.', null, false);
        v.addf('date inputs', 'EDate type will now correctly display in inputs with type = date, datetime-local, time, month. And will export in ISO format' +
            '\n The week type have display issues but correctly accept inputs.', null, false);
        // todo: documenta api theia
        // v = new VersionUpload(new Date('2020/4/21'), 'faketitle', 'fakedescr.');
        // v.addf('fakegfeat', 'kkk');
        // v = new VersionUpload('v3'...);
    }
    static clog() { }
    static generate() {
        if (ChangelogRoot.popup)
            return;
        ChangelogRoot.popup = new _common_util__WEBPACK_IMPORTED_MODULE_1__["InputPopup"]();
        ChangelogRoot.popup.setText('Changelog', this.generateHtml(), '');
        ChangelogRoot.popup.onCloseButton([ChangelogRoot.acknowledgeOnClose]);
    }
    static show() {
        ChangelogRoot.generate();
        ChangelogRoot.popup.show();
    }
    static acknowledgeOnClose() { localStorage.setItem(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ReservedStorageKey"].versionAcknowledged, ChangelogRoot.latestVersion); }
    static CheckUpdates() {
        ChangelogRoot.generate();
        let acknowledgedVersion = localStorage.getItem(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ReservedStorageKey"].versionAcknowledged);
        if (acknowledgedVersion !== ChangelogRoot.latestVersion)
            ChangelogRoot.show();
    }
}
ChangelogRoot.latestVersion = null;


/***/ }),

/***/ "./src/guiElements/console/console.component.css":
/*!*******************************************************!*\
  !*** ./src/guiElements/console/console.component.css ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\n.consoleRoot{\r\n  color: var(--mainFontColor);\r\n  background-color: var(--mainBackgroundColor);\r\n  font-family: monospace,monospace;\r\n  position: relative;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n}\r\n.consoleContent{\r\n  width: 100%;\r\n}\r\n.inputLine{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-top: auto;\r\n}\r\n.inputEcho, .input, .output, .suggestion{\r\n  width: 100%;\r\n  /* padding: 16px 4px;*/\r\n  padding-top: 0.5em;\r\n  padding-bottom: 0.5em;\r\n  padding-left: 5em;\r\n  line-height: 1.5;\r\n}\r\n.input{\r\n  -webkit-box-flex: 0;\r\n          flex-grow: 0;\r\n  flex-shrink: 0;\r\n  width: auto;\r\n}\r\n.input:focus{\r\n  outline: none;\r\n}\r\n.suggestion{\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  width: auto;\r\n  padding-left: 0;\r\n  cursor: text;\r\n}\r\n.inputEcho{\r\n  font-style: italic;\r\n}\r\n.inputEcho:before, .input:before, .output:before{\r\n  content: '> ';\r\n  color: palevioletred;\r\n  vertical-align: top; }\r\n.input:before {\r\n  color: #FC3565;\r\n  margin-left: -1rem;\r\n  cursor: text;\r\n}\r\n.output:before {\r\n  color: #5F8787;\r\n  font-weight: 600 !important;\r\n}\r\n.suggestion{\r\n  color: gray;\r\n}\r\n.error {\r\n  color: palevioletred;\r\n}\r\n.console_error, .console_input{\r\n  display: inline-block;\r\n  color: red;\r\n}\r\n/*\r\n.output-cmd:before {\r\n  content: '> ';\r\n  color: #FC3565;\r\n  vertical-align: top;\r\n}*/\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9jb25zb2xlL2NvbnNvbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSwyQkFBMkI7RUFDM0IsNENBQTRDO0VBQzVDLGdDQUFnQztFQUNoQyxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBaUI7RUFBakIsNkJBQWlCO1VBQWpCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxtQkFBWTtVQUFaLFlBQVk7RUFDWixjQUFjO0VBQ2QsV0FBVztBQUNiO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLG1CQUFZO1VBQVosWUFBWTtFQUNaLFdBQVc7RUFDWCxlQUFlO0VBQ2YsWUFBWTtBQUNkO0FBQ0E7RUFDRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGFBQWE7RUFDYixvQkFBb0I7RUFDcEIsbUJBQW1CLEVBQUU7QUFDdkI7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFlBQVk7QUFDZDtBQUNBO0VBQ0UsY0FBYztFQUNkLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxvQkFBb0I7QUFDdEI7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixVQUFVO0FBQ1o7QUFDQTs7Ozs7RUFLRSIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvY29uc29sZS9jb25zb2xlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmNvbnNvbGVSb290e1xyXG4gIGNvbG9yOiB2YXIoLS1tYWluRm9udENvbG9yKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQmFja2dyb3VuZENvbG9yKTtcclxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLG1vbm9zcGFjZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1heC1oZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWZsb3c6IGNvbHVtbjtcclxufVxyXG4uY29uc29sZUNvbnRlbnR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmlucHV0TGluZXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi10b3A6IGF1dG87XHJcbn1cclxuLmlucHV0RWNobywgLmlucHV0LCAub3V0cHV0LCAuc3VnZ2VzdGlvbntcclxuICB3aWR0aDogMTAwJTtcclxuICAvKiBwYWRkaW5nOiAxNnB4IDRweDsqL1xyXG4gIHBhZGRpbmctdG9wOiAwLjVlbTtcclxuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XHJcbiAgcGFkZGluZy1sZWZ0OiA1ZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNTtcclxufVxyXG4uaW5wdXR7XHJcbiAgZmxleC1ncm93OiAwO1xyXG4gIGZsZXgtc2hyaW5rOiAwO1xyXG4gIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5pbnB1dDpmb2N1c3tcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcbi5zdWdnZXN0aW9ue1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICB3aWR0aDogYXV0bztcclxuICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgY3Vyc29yOiB0ZXh0O1xyXG59XHJcbi5pbnB1dEVjaG97XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcbi5pbnB1dEVjaG86YmVmb3JlLCAuaW5wdXQ6YmVmb3JlLCAub3V0cHV0OmJlZm9yZXtcclxuICBjb250ZW50OiAnPiAnO1xyXG4gIGNvbG9yOiBwYWxldmlvbGV0cmVkO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cclxuLmlucHV0OmJlZm9yZSB7XHJcbiAgY29sb3I6ICNGQzM1NjU7XHJcbiAgbWFyZ2luLWxlZnQ6IC0xcmVtO1xyXG4gIGN1cnNvcjogdGV4dDtcclxufVxyXG4ub3V0cHV0OmJlZm9yZSB7XHJcbiAgY29sb3I6ICM1Rjg3ODc7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMCAhaW1wb3J0YW50O1xyXG59XHJcbi5zdWdnZXN0aW9ue1xyXG4gIGNvbG9yOiBncmF5O1xyXG59XHJcbi5lcnJvciB7XHJcbiAgY29sb3I6IHBhbGV2aW9sZXRyZWQ7XHJcbn1cclxuXHJcbi5jb25zb2xlX2Vycm9yLCAuY29uc29sZV9pbnB1dHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4vKlxyXG4ub3V0cHV0LWNtZDpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6ICc+ICc7XHJcbiAgY29sb3I6ICNGQzM1NjU7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufSovXHJcbiJdfQ== */");

/***/ }),

/***/ "./src/guiElements/console/console.component.ts":
/*!******************************************************!*\
  !*** ./src/guiElements/console/console.component.ts ***!
  \******************************************************/
/*! exports provided: ConsoleComponent, MyConsole */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConsoleComponent", function() { return ConsoleComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyConsole", function() { return MyConsole; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! util */ "./node_modules/util/util.js");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_3__);




// @ts-ignore
let ConsoleComponent = class ConsoleComponent {
    constructor() { }
    ngOnInit() {
    }
};
ConsoleComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-console',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./console.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/console/console.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./console.component.css */ "./src/guiElements/console/console.component.css")).default]
    })
], ConsoleComponent);

class MyConsole {
    constructor() {
        this.container = null;
        this.content = null;
        this.inputLine = null;
        this.input = null;
        this.suggestion = null;
        this.commandindex = 0;
        this.commandHistory = [];
        this.newline = '<br/>';
        this.tab = '&nbsp;&nbsp;&nbsp;&nbsp;';
        /*
        * azioni:
        * arrowUp: history--
        * arrowDown: history++
        * enter: apply suggestion, if suggestion is empty executes the user input as command
        * escape: delete suggestion, if suggestion is empty deletes user input too
        * tab: iterate through suggestion list
        * */
        this.suggestionArray = [];
        this.suggestionIndex = -1;
        MyConsole.console = this;
        const $consoleRoot = $('.consoleRoot');
        const $inputLine = $consoleRoot.find('.inputLine');
        this.container = $consoleRoot[0];
        this.content = $consoleRoot.find('.consoleContent')[0];
        this.inputLine = $inputLine[0];
        this.input = $consoleRoot.find('span.input')[0];
        this.suggestion = $consoleRoot.find('.suggestion')[0];
        $inputLine.off('keydown.input').on('keydown.input', (e) => { this.onKeyDown(e); });
        $inputLine.off('keyup.input').on('keyup.input', (e) => { this.onKeyUp(e); });
        $(this.suggestion).off('mousedown.focus').on('mousedown.focus', (e) => {
            console.log(this.input, '.focus()');
            e.preventDefault();
            this.input.focus();
        });
    }
    onKeyUp(e) {
        switch (e.key) {
            default:
                this.scrollBottom();
                break;
            case 'ArrowUp':
            case 'Enter':
                this.scrollBottom();
                break;
        }
    }
    getText() { return (this.input.innerText + this.suggestion.innerText).trim(); }
    onKeyDown(e) {
        switch (e.key) {
            case 'Enter':
                this.position = 0;
                if (this.suggestion.innerText.length !== 0) {
                    this.input.innerText += this.suggestion.innerText;
                    this.suggestion.innerText = '';
                    this.suggestionArray = [];
                    break;
                }
                this.command(this.getText());
                return;
            case 'Backspace':
                if (this.position === 0) {
                    break;
                }
                this.generateSuggestion();
                break;
            case 'Escape':
                if (this.suggestion.innerText.length > 0) {
                    this.suggestion.innerText = '';
                    break;
                }
                this.input.innerText = '';
                break;
            case 'Tab':
                this.inputLine.focus();
                this.iterateNextSuggestion();
                break;
            case 'ArrowUp':
                e.preventDefault(); // avoid scroll.
                this.suggestionIndex = -1;
                this.suggestionArray = [];
                this.suggestion.innerText = '';
                if (--this.commandindex === -1) {
                    this.commandindex = this.commandHistory.length - 1;
                }
                this.commandindex = (this.commandindex % this.commandHistory.length);
                this.input.innerText = this.commandHistory[this.commandindex];
                this.position = this.input.innerText.length - 1;
                console.log('command[' + (this.commandindex) + '/' + this.commandHistory.length + '] = ' +
                    this.commandHistory[this.commandindex], 'arr:', this.commandHistory);
                break;
            case 'ArrowDown':
                e.preventDefault(); // avoid scroll.
                this.suggestionIndex = -1;
                this.suggestionArray = [];
                this.suggestion.innerText = '';
                this.commandindex = (++this.commandindex % this.commandHistory.length);
                this.input.innerText = this.commandHistory[this.commandindex];
                this.position = this.input.innerText.length - 1;
                console.log('command[' + (this.commandindex) + '/' + this.commandHistory.length + '] = ' +
                    this.commandHistory[this.commandindex], 'arr:', this.commandHistory);
                break;
            case 'ArrowRight':
                if (this.position !== this.input.innerText.length - 1 || this.suggestion.innerText.length === 0)
                    break;
                this.position++;
                this.input.innerText += this.suggestion.innerText.charAt(0);
                this.generateSuggestion();
                break;
            case 'ArrowLeft':
                this.position = Math.max(0, this.position - 1);
                this.suggestion.innerText = '';
                break;
            default:
                // this.input.innerHTML += e.key === ' ' ? '&nbsp;' : e.key;
                this.generateSuggestion();
                this.scrollBottom();
                break;
        }
    }
    scrollBottom() {
        console.log('scrollBottom()');
        // this.container.scrollTop = this.inputLine.offsetHeight;
        this.container.scrollTop = this.content.offsetHeight;
    } /*
    todo:
      comando "setcontext" stessi parametri di getinfo, imposta l'oggetto root.
      comando "getcontext" senza parametri, risponde con l'oggetto root, visualizzato come getinfo.*/
    command(str) {
        str = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(str, ' ', ' ').trim(); // &nbsp; with space
        console.log('myConsole.command(' + str + ')');
        this.commandHistory.push(str);
        // così quando fa keyUp si ritrova l'ultimo comando, se fa keyDown il 2°.
        // dovrei dargli il 1° ma servirebbe un bool o un valore decimale (.5) per metterlo in una posizione tra l'ultimo e il primo
        // invece di sovrapposto al primo o all'ultimo (ho scelto di sovrapporlo al primo).
        this.commandindex = 0;
        this.input.innerText = this.suggestion.innerText = '';
        this.appendInput(str);
        this.appendOutput(this.execCommand(str));
        this.scrollBottom();
    }
    appendInput(str, compoundCommandPart = false) {
        const input = document.createElement('div');
        input.setAttribute('tabindex', '-1');
        input.classList.add('inputEcho');
        if (compoundCommandPart) {
            input.classList.add('compoundCommandPart');
        }
        input.innerHTML = str;
        this.content.appendChild(input);
    }
    appendOutput(str, compoundCommandPart = false) {
        if (str === '') {
            return;
        } // CLS special rule
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!str, 'null output');
        const output = document.createElement('div');
        output.setAttribute('tabindex', '-1');
        output.classList.add('output');
        if (compoundCommandPart) {
            output.classList.add('compoundCommandPart');
        }
        output.innerHTML = str;
        this.content.appendChild(output);
    }
    exampleFormatting(s) {
        const es = '<b style="color: forestgreen;">&lt;';
        const ee = '&gt;</b>';
        return es + s + ee;
    }
    optionalFormatting(s) {
        const os = '<i style="color: cornflowerblue;">[';
        const oe = ']</i>';
        return os + s + oe;
    }
    commandFormatting(s) { return '&nbsp;&nbsp;○&nbsp;' + s + this.newline; }
    xmp(str) { return '<xmp style="display: inline;">' + str + '</xmp>'; }
    descriptionFormatting(s) { return this.tab + '<span style = "color: lightsteelblue;">' + s + '</span>' + this.newline; }
    help() {
        const nl = this.newline;
        const tab = this.tab;
        const desc = (s) => this.descriptionFormatting.call(this, s);
        const command = (s) => this.commandFormatting.call(this, s);
        const e = (s) => this.exampleFormatting.call(this, s);
        const o = (s) => this.optionalFormatting.call(this, s);
        return '' +
            'Available Commands:' + this.newline +
            'Normal text like this means literal constants.' + this.newline +
            e('Text like this') + ' are examples that should be replaced without brakets' + this.newline +
            o('Text like this') + ' are optional parameters' + this.newline +
            e('leftCommand') + '|' + e('rightCommand') + ' The vertical bar means "OR", you must choose to insert the left or the ' +
            'right command piece or argument.' + this.newline +
            // 'Non-underlined text is just comments and explanations.' + this.newline +
            'Commands executed without arguments or preceded by the "?" prefix will show the command guide.' + this.newline +
            // '••••'
            command('info ' + e('className') + o('.' + e('attributeName') + '|' + e('referenceName') + '|')) +
            desc('Visualizza informationi riguardo la classe, reference o attributo fornito dal parametro.') +
            command('cc ' + e('Comando Composito')) +
            desc('Consente di concatenare ed eseguire multipli comandi elementari in una sola linea di comando composita, ' +
                'di utilizzare l\'output di un comando come parte dei parametri input di altri comandi e di poter eseguire un qualsiasi ' +
                'codice javascript che interagisca con l\'output dei comandi console') +
            command('raw ' + e('ProssimoComando')) +
            desc('Esegue il prossimo comando mostrandone l\'output come testo grezzo invece che come html ' +
                'per individuare eventuali errori nell\'html impedendo che il browser esegua la correzione automatica, nascondendo il problema.') +
            command('cls') +
            desc(this.cls_Help());
    }
    execCommand(str) {
        str = str.trim();
        const pos = str.indexOf(' ');
        let command = (pos > 0 ? str.substring(0, pos) : str).toLowerCase();
        const params = str.substring(pos).trim();
        console.log('com: "' + command + '", par: "' + params + '"; pos:' + pos + '; str:' + str);
        if (params === '/?' || params === 'help') {
            command = '?' + command;
        }
        switch (command) {
            default:
                console.log(command, str, (command === 'help'), (str === 'help'));
                return 'unrecognized command: |' + this.errorFormatting(this.xmp(command))
                    + '| To see the full list of commands type "help".';
            case '?h':
            case '?help':
            case '?/?':
            case 'h':
            case 'help':
            case '/?': return this.help();
            case '?i':
            case '?info': return this.getModelPieceInfo_Help();
            case 'i':
            case 'info': return this.getModelPieceInfo(params);
            case '?cc':
            case '?compoundcommand': return this.compoundCommand_Help();
            case 'cc':
            case 'compoundcommand': return this.compoundCommand(params);
            case '?raw':
            case '?debug': return this.rawDebug_Help();
            case 'raw':
            case 'debug': return this.rawDebug(params);
            case '?cls': return this.cls_Help();
            case 'cls':
                this.cls();
                return '';
        }
    }
    compoundCommand_Help() {
        let ret;
        const nl = this.newline;
        ret = '' +
            'Consente di concatenare ed eseguire multipli comandi elementari in una sola linea di comando composita' +
            ', di utilizzare l\'output di un comando come parte dei parametri input di altri comandi' +
            ' e di poter eseguire un qualsiasi codice javascript che interagisca con l\'output dei comandi console.' + nl +
            'Il corpo del comando va scritto in codice javascript, all\'interno del quale è possibile eseguire comandi console ' + nl +
            'delimitati dal carattere "$" come prefisso e appendice al comando desiderato, l\'output di tale comando può essere utilizzato ' +
            'dal codice javascript come se fosse una variabile o una funzione che ritorna un oggetto.' + nl +
            'esempio 1:' + nl +
            'cc alert("L\'output del comando help è: " + $help$);' + nl +
            'È anche possibile utilizzare l\'output di un comando come parametro di un altro comando, ' +
            'aggiungendo un ulteriore delimitatore "$" per ogni livello di nesting dei comandi.' + nl +
            'Se ipotizziamo che il ' + nl +
            'esempio 2:' + nl +
            'cc alert($info $$comando2$$.name$);' + nl +
            'Se ad esempio l\'output di \"comando2\" è "Book", il comando diventerà "cc alert($info Book.name$);"' +
            ' e verrà poi eseguito come nell\'esempio 1.' + nl +
            'Terzo esempio ulteriormente compesso, con due compound command concatenati.' +
            'cc alert($info $$cc [altro codice js]$$$comando2$$$[altro codice js] $$.name$);';
        return ret;
    }
    compoundCommand(str, debug = true) {
        const prefix = '$';
        const fullPrefix = prefix + '';
        str = str.replace(/(^\$|(((?!\$).|^))[\$](?!\$))(.*?)(^\$|((?!\$).|^)[\$](?!\$))/gm, (match, capture) => {
            // console.log('matched:', match, 'capture: ', capture);
            if (match === '$') {
                return '';
            }
            // prefixError: un lieve fix manuale alla regexp non 100% esatta.
            let prefixError = '';
            if (match.charAt(0) !== '$') {
                prefixError = match.charAt(0);
                match = match.substring(1);
            }
            let subcommand = match.substring(fullPrefix.length, match.length - 1);
            // todo: max nesting attuale = 3. se faccio nesting 4 allora $$$$ ---> $$
            // per risolvere: sostituisci [not($)]$^n[not($)]  --->  [not($)]$^(n-1)[not($)] in pratica: riduci di una singola $.
            // oppure usa 2^n volte il $ al posto di solo n volte. es 4 nested: $$$$$$$$$$$$$$$$ ---> $$$$$$$$ -> $$$$ -> $$ -> $
            subcommand = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(subcommand, '$$', '$');
            const debugtext = subcommand + '(' + match + ')';
            const tmp = prefixError + '' + this.execCommand(subcommand);
            this.appendInput(subcommand, true);
            this.appendOutput(tmp, true);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'replaceSingleVar: ' + debugtext + ' --> ' + tmp);
            return tmp;
        });
        return this.execCommand(str);
    }
    rawDebug_Help() {
        let ret;
        const nl = this.newline;
        const e = this.exampleFormatting;
        ret = 'Sintassi: ' + nl + this.commandFormatting('raw' + e('Command'));
        this.descriptionFormatting('Esegue il prossimo comando mostrandone l\'output come testo grezzo invece che come html per individuare' +
            ' eventuali errori nell\'html impedendo che il browser esegua la correzione automatica, nascondendo il problema.');
        return ret;
    }
    cls_Help() {
        return 'Svuota la console cancellando tutti gli input e gli output dei comandi precedenti.';
    }
    cls() { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(this.content); }
    rawDebug(params) {
        let ret = this.execCommand(params);
        ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(ret, '<', '&lt;');
        ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(ret, '>', '&gt;');
        return '<xmp>' + (ret) + '</xmp>';
    }
    errorFormatting(s) { return '<div class="console_error">' + s + '</div>'; }
    getModelPieceInfo_Help() {
        const nl = this.newline;
        let ret;
        ret = '' +
            'Displays the available sub-fields of an object accessible through the \'.\' operator.' + nl +
            'If a name conflict arise with a childrenObject or instanceObject name, that name will be added with the \'_\' prefix.' + nl +
            'If a name conflict arise with a property only owned by a particular model piece type (es: reference target),' +
            ' that name will be added with the \'@\' prefix.';
        return ret;
    }
    getModelPieceInfo(name) {
        console.log('getModelPieceInfo:', name);
        if (name.indexOf(' ') !== -1) {
            return this.errorFormatting('Spaces are not allowed inside a class, attribute or reference name-path.');
        }
        const tokens = name.split('.');
        const modelPrio = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel();
        let info = this.getModelPieceInfoByModel(modelPrio, tokens);
        if (info) {
            return this.stringify(info);
        }
        // info = this.getModelPieceInfoByModel(modelPrio.isMM() ? Status.status.m : Status.status.mm, tokens);
        info = this.getModelPieceInfoByModel(modelPrio.isMM() ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm, tokens);
        if (info) {
            return this.stringify(info);
        }
        return this.errorFormatting('"' + name + '" is not matching any class, attribute or reference name-path.');
    }
    stringify(obj) {
        let str = util__WEBPACK_IMPORTED_MODULE_3__["inspect"](obj, false, 0, true);
        str = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ansiUp"].ansi_to_html(str);
        return str;
    }
    stringify_Old(obj) {
        const duplicateChecker = [];
        return JSON.stringify(obj, (key, value) => {
            if (!value) {
                return value;
            }
            if ($.isEmptyObject(value)) {
                return '{}';
            }
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isObject(value)) {
                return '{' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getTSClassName(value) + '(' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].fieldCount(value) + ' fields)}';
            }
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isArray(value)) {
                return '[Array(' + value.length + ')]';
            }
            if (duplicateChecker.indexOf(value) === -1) {
                return '{_CIRCULAR_REFERENCE_}';
            }
            duplicateChecker.push(value);
            return '' + value;
        });
    }
    getModelPieceInfoByModel(m, tokens, debug = true) {
        const toLower = true;
        const classes = m.getAllClasses();
        debug = true;
        let i = -1;
        if (toLower) {
            while (++i < tokens.length) {
                tokens[i] = toLower ? tokens[i].toLowerCase() : tokens[i];
            }
        }
        i = -1;
        let current = null;
        while (++i < classes.length) {
            const classe = classes[i];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!classe.name, 'err');
            if (!classe.name) {
                return null;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, tokens[0] + '===' + classe.name + ' ? ' + (classe.name.toLowerCase() === tokens[0]));
            if (classe.name.toLowerCase() === tokens[0]) {
                current = classe;
                break;
            }
        }
        let ret = current;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'tokens:', tokens);
        i = 0;
        while (++i < tokens.length) {
            const oldRet = ret;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'PRE_ret: ', oldRet, ' ---> ', ret, 'token[' + i + '/' + tokens.length + '] = |' + tokens[i] + '|, tok:', tokens);
            if (ret instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"]) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'Modelpiece');
                ret = ret.getInfo(toLower);
            }
            else {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'Terminale');
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'gotInfo:', ret);
            ret = ret[tokens[i]];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'POST_ret: ', oldRet, ' ---> ', ret, 'token[' + i + '] = |' + tokens[i] + '|');
        }
        if (ret instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"]) {
            return ret.getInfo();
        }
        return ret;
    }
    iteratePrevSuggestion() { this.iterateSuggestionDONOTUSEDirectly(-1); }
    iterateNextSuggestion() { this.iterateSuggestionDONOTUSEDirectly(+1); }
    iterateSuggestionDONOTUSEDirectly(offset) {
        if (!this.suggestionArray.length)
            return;
        this.suggestionIndex = Math.abs((this.suggestionIndex + offset) % this.suggestionArray.length);
        this.suggestion.innerText = this.suggestionArray[this.suggestionIndex];
    }
    generateSuggestion() {
        const oldSuggestion = this.suggestion.innerText;
        return;
        // NB: after the generation, if oldSuggestion is still viable, set that index, otherwise set this.suggestionArray[0];
        this.suggestion.innerText = '//GenerateSuggestion(): to do.';
    }
}


/***/ }),

/***/ "./src/guiElements/dam-context-menu/dam-context-menu.component.css":
/*!*************************************************************************!*\
  !*** ./src/guiElements/dam-context-menu/dam-context-menu.component.css ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/*#damContextMenuTemplateContainer{\r\n  position: absolute;\r\n  /*right: 20000px;\r\n  width: 2000px;\r\n  height: 2000px;\r\n  z-index: 1000;\r\n}\r\n#damContextMenuTemplateContainer::before{\r\n  content:'';\r\n  position: absolute;\r\n  right: 0;\r\n  width: 20px;\r\n  height: 20px;\r\n  background: red;\r\n}*/\r\n.overflowFix{\r\n  position: absolute;\r\n  top: -10000px;\r\n  left: -10000px;\r\n  width: 20000px;\r\n  height: 20000px;\r\n/*  opacity: 0.5;\r\n  background: red;*/\r\n  z-index: 1000;\r\n  pointer-events: none;\r\n}\r\n.overflowFixContent{\r\n  top: 0;\r\n  left: 0;\r\n  min-width: -webkit-max-content;\r\n  min-width: -moz-max-content;\r\n  min-width: max-content;\r\n  position: absolute;\r\n  display: inline-block;\r\n  max-height: 100vh;\r\n  max-width: 100vw;\r\n  overflow: visible;\r\n  pointer-events: all;\r\n}\r\n.popupRight{ display: none; }\r\n.popupRightParent.active > .popupRight,\r\n.popupRightParent:hover > .popupRight,\r\n.popupRightParent:focus-within > .popupRight {\r\n  display: block;\r\n}\r\n.popupRight {\r\n  white-space: nowrap;\r\n  flex-wrap: nowrap;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  padding-right: 10px; }\r\n.refli .firstempty{\r\n  width: 100%;\r\n}\r\n.refli button.byindex {\r\n  margin-left: 5px;\r\n}\r\n.popupRightParent{\r\n  position: relative;\r\n}\r\n.refli .index {\r\n  padding-left: 3px;\r\n  color: orange;\r\n}\r\n.refli .text{\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\nbutton.refli.delete{\r\n  padding: 0 4px;\r\n  margin-left: auto;\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n.popupRight {\r\n  display: none;\r\n  left: calc(100%);\r\n  position: absolute;\r\n  background: white;\r\n  border: 1px solid black;\r\n  border-left: none;\r\n  padding: 2px 5px;\r\n  padding-right: 0;\r\n  top: 0;\r\n  border-bottom-right-radius: 7px;\r\n  border-top-right-radius: 7px;\r\n}\r\nul.contextMenu{\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  border-radius: 7.5px;\r\n  padding: 10px 0;\r\n  /*padding: 10px 10px 10px 20px;*/\r\n}\r\nul.contextMenu li.popupRightParent{\r\n  cursor: not-allowed;\r\n}\r\nli:first-child{\r\n  padding-top: 0;\r\n}\r\nul.contextMenu li.separator{\r\n  margin-top: 2px;\r\n  height: 1px;\r\n  padding: 0;\r\n  background-color: gray;\r\n  opacity: 0.4;\r\n}\r\nli:last-child{\r\n  border-bottom: none;\r\n}\r\nspan[tabindex], li{\r\n\r\n  display: -webkit-box;\r\n\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n          align-items: center;\r\n}\r\nli{\r\n  cursor: pointer;\r\n  padding: 5px 20px;\r\n  font-size: 0.75rem;\r\n  color: var(--mainFontColor);\r\n}\r\nli:not(.unclickable):focus-within,\r\nli:not(.unclickable).active,\r\nli:not(.unclickable):hover{\r\n  padding-left: 25px;\r\n  padding-right: 15px;\r\n  color: var(--color-4);\r\n}\r\nli:focus-within li,\r\nli.active li,\r\nli:hover li{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  /*cursor: default;*/\r\n  font-size: 0.75rem;\r\n  padding-top: 4px;\r\n  pading-bottom: 4px;\r\n  padding-right: 15px;\r\n  padding-left: 0;\r\n  color: var(--mainFontColor); }\r\nli:focus-within li:not(.unclickable):focus-within,\r\nli:focus-within li:not(.unclickable):hover,\r\nli:focus-within li:not(.unclickable).active,\r\nli.active li:not(.unclickable).active,\r\nli:hover li:not(.unclickable).active,\r\nli.active li:not(.unclickable):hover,\r\nli:hover li:not(.unclickable):hover{\r\n  padding-left: 5px;\r\n  padding-right: 10px;\r\n  color: var(--color-4);\r\n}\r\n.typeli.dynamic, .refli.dynamic{\r\n  cursor: pointer;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9kYW0tY29udGV4dC1tZW51L2RhbS1jb250ZXh0LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7RUFjRTtBQUNGO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixjQUFjO0VBQ2QsY0FBYztFQUNkLGVBQWU7QUFDakI7bUJBQ21CO0VBQ2pCLGFBQWE7RUFDYixvQkFBb0I7QUFDdEI7QUFDQTtFQUNFLE1BQU07RUFDTixPQUFPO0VBQ1AsOEJBQXNCO0VBQXRCLDJCQUFzQjtFQUF0QixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixtQkFBbUI7QUFDckI7QUFFQSxhQUFhLGFBQWEsRUFBRTtBQUM1Qjs7O0VBR0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixvQkFBYTtFQUFiLGFBQWE7RUFDYixtQkFBbUIsRUFBRTtBQUV2QjtFQUNFLFdBQVc7QUFDYjtBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixhQUFhO0FBQ2Y7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsb0JBQWE7RUFBYixhQUFhO0FBQ2Y7QUFDQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQix1QkFBdUI7RUFDdkIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsTUFBTTtFQUNOLCtCQUErQjtFQUMvQiw0QkFBNEI7QUFDOUI7QUFDQTtFQUNFLHVCQUF1QjtFQUN2Qix1QkFBdUI7RUFDdkIsb0JBQW9CO0VBQ3BCLGVBQWU7RUFDZixnQ0FBZ0M7QUFDbEM7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7RUFDWCxVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLFlBQVk7QUFDZDtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBRUE7O0VBRUUsb0JBQWE7O0VBQWIsYUFBYTtFQUNiLHlCQUFtQjtVQUFuQixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLDJCQUEyQjtBQUM3QjtBQUVBOzs7RUFHRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLHFCQUFxQjtBQUN2QjtBQUNBOzs7RUFHRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiwyQkFBMkIsRUFBRTtBQUUvQjs7Ozs7OztFQU9FLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIscUJBQXFCO0FBQ3ZCO0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9ndWlFbGVtZW50cy9kYW0tY29udGV4dC1tZW51L2RhbS1jb250ZXh0LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qI2RhbUNvbnRleHRNZW51VGVtcGxhdGVDb250YWluZXJ7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIC8qcmlnaHQ6IDIwMDAwcHg7XHJcbiAgd2lkdGg6IDIwMDBweDtcclxuICBoZWlnaHQ6IDIwMDBweDtcclxuICB6LWluZGV4OiAxMDAwO1xyXG59XHJcbiNkYW1Db250ZXh0TWVudVRlbXBsYXRlQ29udGFpbmVyOjpiZWZvcmV7XHJcbiAgY29udGVudDonJztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgd2lkdGg6IDIwcHg7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6IHJlZDtcclxufSovXHJcbi5vdmVyZmxvd0ZpeHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAtMTAwMDBweDtcclxuICBsZWZ0OiAtMTAwMDBweDtcclxuICB3aWR0aDogMjAwMDBweDtcclxuICBoZWlnaHQ6IDIwMDAwcHg7XHJcbi8qICBvcGFjaXR5OiAwLjU7XHJcbiAgYmFja2dyb3VuZDogcmVkOyovXHJcbiAgei1pbmRleDogMTAwMDtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG4ub3ZlcmZsb3dGaXhDb250ZW50e1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIG1pbi13aWR0aDogbWF4LWNvbnRlbnQ7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBtYXgtaGVpZ2h0OiAxMDB2aDtcclxuICBtYXgtd2lkdGg6IDEwMHZ3O1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbn1cclxuXHJcbi5wb3B1cFJpZ2h0eyBkaXNwbGF5OiBub25lOyB9XHJcbi5wb3B1cFJpZ2h0UGFyZW50LmFjdGl2ZSA+IC5wb3B1cFJpZ2h0LFxyXG4ucG9wdXBSaWdodFBhcmVudDpob3ZlciA+IC5wb3B1cFJpZ2h0LFxyXG4ucG9wdXBSaWdodFBhcmVudDpmb2N1cy13aXRoaW4gPiAucG9wdXBSaWdodCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5wb3B1cFJpZ2h0IHtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIGZsZXgtd3JhcDogbm93cmFwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcGFkZGluZy1yaWdodDogMTBweDsgfVxyXG5cclxuLnJlZmxpIC5maXJzdGVtcHR5e1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ucmVmbGkgYnV0dG9uLmJ5aW5kZXgge1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuLnBvcHVwUmlnaHRQYXJlbnR7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcbi5yZWZsaSAuaW5kZXgge1xyXG4gIHBhZGRpbmctbGVmdDogM3B4O1xyXG4gIGNvbG9yOiBvcmFuZ2U7XHJcbn1cclxuLnJlZmxpIC50ZXh0e1xyXG4gIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcclxufVxyXG5idXR0b24ucmVmbGkuZGVsZXRle1xyXG4gIHBhZGRpbmc6IDAgNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLnBvcHVwUmlnaHQge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgbGVmdDogY2FsYygxMDAlKTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgcGFkZGluZzogMnB4IDVweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gIHRvcDogMDtcclxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogN3B4O1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA3cHg7XHJcbn1cclxudWwuY29udGV4dE1lbnV7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgYm9yZGVyLXJhZGl1czogNy41cHg7XHJcbiAgcGFkZGluZzogMTBweCAwO1xyXG4gIC8qcGFkZGluZzogMTBweCAxMHB4IDEwcHggMjBweDsqL1xyXG59XHJcbnVsLmNvbnRleHRNZW51IGxpLnBvcHVwUmlnaHRQYXJlbnR7XHJcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxufVxyXG5cclxubGk6Zmlyc3QtY2hpbGR7XHJcbiAgcGFkZGluZy10b3A6IDA7XHJcbn1cclxudWwuY29udGV4dE1lbnUgbGkuc2VwYXJhdG9ye1xyXG4gIG1hcmdpbi10b3A6IDJweDtcclxuICBoZWlnaHQ6IDFweDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbiAgb3BhY2l0eTogMC40O1xyXG59XHJcbmxpOmxhc3QtY2hpbGR7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxufVxyXG5cclxuc3Bhblt0YWJpbmRleF0sIGxpe1xyXG5cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxubGl7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHBhZGRpbmc6IDVweCAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcclxuICBjb2xvcjogdmFyKC0tbWFpbkZvbnRDb2xvcik7XHJcbn1cclxuXHJcbmxpOm5vdCgudW5jbGlja2FibGUpOmZvY3VzLXdpdGhpbixcclxubGk6bm90KC51bmNsaWNrYWJsZSkuYWN0aXZlLFxyXG5saTpub3QoLnVuY2xpY2thYmxlKTpob3ZlcntcclxuICBwYWRkaW5nLWxlZnQ6IDI1cHg7XHJcbiAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICBjb2xvcjogdmFyKC0tY29sb3ItNCk7XHJcbn1cclxubGk6Zm9jdXMtd2l0aGluIGxpLFxyXG5saS5hY3RpdmUgbGksXHJcbmxpOmhvdmVyIGxpe1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgLypjdXJzb3I6IGRlZmF1bHQ7Ki9cclxuICBmb250LXNpemU6IDAuNzVyZW07XHJcbiAgcGFkZGluZy10b3A6IDRweDtcclxuICBwYWRpbmctYm90dG9tOiA0cHg7XHJcbiAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgY29sb3I6IHZhcigtLW1haW5Gb250Q29sb3IpOyB9XHJcblxyXG5saTpmb2N1cy13aXRoaW4gbGk6bm90KC51bmNsaWNrYWJsZSk6Zm9jdXMtd2l0aGluLFxyXG5saTpmb2N1cy13aXRoaW4gbGk6bm90KC51bmNsaWNrYWJsZSk6aG92ZXIsXHJcbmxpOmZvY3VzLXdpdGhpbiBsaTpub3QoLnVuY2xpY2thYmxlKS5hY3RpdmUsXHJcbmxpLmFjdGl2ZSBsaTpub3QoLnVuY2xpY2thYmxlKS5hY3RpdmUsXHJcbmxpOmhvdmVyIGxpOm5vdCgudW5jbGlja2FibGUpLmFjdGl2ZSxcclxubGkuYWN0aXZlIGxpOm5vdCgudW5jbGlja2FibGUpOmhvdmVyLFxyXG5saTpob3ZlciBsaTpub3QoLnVuY2xpY2thYmxlKTpob3ZlcntcclxuICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gIGNvbG9yOiB2YXIoLS1jb2xvci00KTtcclxufVxyXG5cclxuLnR5cGVsaS5keW5hbWljLCAucmVmbGkuZHluYW1pY3tcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIl19 */");

/***/ }),

/***/ "./src/guiElements/dam-context-menu/dam-context-menu.component.ts":
/*!************************************************************************!*\
  !*** ./src/guiElements/dam-context-menu/dam-context-menu.component.ts ***!
  \************************************************************************/
/*! exports provided: DamContextMenuComponent, DamContextMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DamContextMenuComponent", function() { return DamContextMenuComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DamContextMenu", function() { return DamContextMenu; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



let DamContextMenuComponent = class DamContextMenuComponent {
};
DamContextMenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dam-context-menu',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./dam-context-menu.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/dam-context-menu/dam-context-menu.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./dam-context-menu.component.css */ "./src/guiElements/dam-context-menu/dam-context-menu.component.css")).default]
    })
], DamContextMenuComponent);

class DamContextMenu {
    constructor() {
        this.html = null;
        this.$html = null;
        this.shouldAppear = false;
        this.$html = $('#damContextMenuTemplateContainer');
        this.html = this.$html[0];
        // console.log('sinit contextmenu constructor', {$html: this.$html, html: this.html, thiss: this}, DamContextMenu.contextMenu);
        this.defaultContainer = this.html.parentElement;
        $(document).off('mouseup.hideContextMenu').on('mouseup.hideContextMenu', (e) => this.checkIfHide(e));
        this.$vertexcontext = this.$html.find('ul.vertex');
        this.$edgecontext = this.$html.find('ul.edge');
        this.$extedgecontext = this.$html.find('ul.extedge');
        this.vertexcontext = this.$vertexcontext[0];
        this.edgecontext = this.$edgecontext[0];
        this.extedgecontext = this.$extedgecontext[0];
        // no contextmenù allowed inside my contextmenù
        this.$html.on('contextmenu', (e) => {
            console.log('cannot open contextmenu nested in a contextmenu');
            e.preventDefault();
            e.stopPropagation();
            return false;
        });
        // viewpoints non va bene in quella posizione chiamalo layout (o syntax) layer non direttamente su canvas
    }
    static staticInit() {
        DamContextMenu.contextMenu = new DamContextMenu();
        console.log('sinit contextmenu', DamContextMenu.contextMenu);
        $(document).off('contextmenu')
            .on('contextmenu', (e) => { return DamContextMenu.contextMenu.onContextMenu(e); })
            .on('mouseup', (e) => { DamContextMenu.contextMenu.onMouseUp(e); });
    }
    onContextMenu(evt) {
        console.log('rx click contextmenu');
        const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isInput(evt.target, true, false);
        const isDragging = this.checkIfDraggingVertex(evt);
        if (isInput && !isDragging) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].startDragContext = null;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].selected = null;
            return true;
        }
        evt.preventDefault();
        return false;
    }
    checkIfDraggingVertex(evt) {
        const vertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getvertexByHtml(evt.target, false);
        const clickStartedOutsideVertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].startDragContext === null;
        // quando clickStartedOutsideVertex capita contextmenu dell'input senza che sia selezionato --> non triggerare contextmenu
        // quando contextmenù e gotSelectedNow fà il contextmenù personalizzato ma seleziona l'input --> non triggerare contextmenu
        // if (isInput && clickStartedOutsideVertex) evt.target.focus();
        // if (!isInput && gotSelectedNow) evt.target.blur();
        // happens when rightMouseDownClicked outside a vertex and rightMouseUpped inside a vertex.
        const pixelMoved = clickStartedOutsideVertex ? -1 : vertex && vertex.size.tl().subtract(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].startDragContext.size.tl(), false).absolute();
        return vertex && !clickStartedOutsideVertex && pixelMoved >= vertex.tolleranzaRightClickMove;
    }
    onMouseUp(evt) {
        console.log('rx mouseup contextmenu');
        if (evt.button !== _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].mouseRightButton)
            return;
        const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isInput(evt.target, true, false);
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].get(evt);
        if (!mp || mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IModel"])
            return;
        const isDragging = this.checkIfDraggingVertex(evt);
        if (isDragging || isInput)
            return;
        this.show(new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Point"](evt.pageX, evt.pageY), evt.target);
    }
    onContextMenuOld(evt) {
        console.log('rx click contextmenu');
        this.shouldAppear = false;
        // evt.preventDefault();
        // evt.stopPropagation();
        const vertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getvertexByHtml(evt.target, false);
        DamContextMenu.contextMenu.hide();
        // only if is focused input
        const lastSelected = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].focusHistoryEntries[_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].focusHistoryElements.length - 1];
        const gotSelectedNow = false; // lastSelected && U.isParentOf(lastSelected.element, evt.target) && (new Date().valueOf() - lastSelected.time.valueOf() < 0.3 * 1000);
        const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isInput(evt.target, true, false) && !gotSelectedNow;
        const clickStartedOutsideVertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].startDragContext === null;
        // quando clickStartedOutsideVertex capita contextmenu dell'input senza che sia selezionato --> non triggerare contextmenu
        // quando contextmenù e gotSelectedNow fà il contextmenù personalizzato ma seleziona l'input --> non triggerare contextmenu
        // if (isInput && clickStartedOutsideVertex) evt.target.focus();
        // if (!isInput && gotSelectedNow) evt.target.blur();
        // happens when rightMouseDownClicked outside a vertex and rightMouseUpped inside a vertex.
        const pixelMoved = !clickStartedOutsideVertex ? 0 : vertex && vertex.size.tl().subtract(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].startDragContext.size.tl(), false).absolute();
        const gotMoved = vertex && !clickStartedOutsideVertex && pixelMoved >= vertex.tolleranzaRightClickMove;
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].get(evt);
        let ret;
        // evt['passedThroughVertex'] = ret;
        console.log('ret:', ret, 'mp:', mp, 'moved:', gotMoved, 'isInput:', isInput);
        const afterContextMenu = () => {
            console.log('rx mouseup');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].startDragContext = null;
        };
        afterContextMenu();
        if (isInput)
            return true;
        else {
            ret = false;
            evt.preventDefault();
        }
        if (gotMoved) {
            return ret;
        }
        if (!mp || isInput && !gotMoved)
            return ret;
        this.shouldAppear = true;
        return ret;
    }
    setActiveAllAncestors(element, stopElement) {
        while (element !== stopElement && element && element.classList) {
            if (element.hasAttribute('tabIndex'))
                element.classList.add('active');
            element = element.parentElement;
        }
    }
    unsetActiveAllAncestors(element, stopElement) {
        while (element !== stopElement && element && element.classList) {
            if (element.hasAttribute('tabIndex'))
                element.classList.remove('active');
            element = element.parentElement;
        }
    }
    checkIfHide(e, debug = false) {
        // do not hide if click on non-terminal options (but do on terminals)
        debug && console.trace('contextMenuCheckHide()', { e, etarget: e.target, thishtml: this.html });
        if (e && _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isParentOf(this.html, e.target)) {
            const vertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getvertexByHtml(e.target, false);
            const $ancestors = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ancestorFilter('button, .terminal', e.target, this.html);
            if (!$ancestors.length && vertex) { /*vertex.fixFirefoxOverflowBug();*/
                return;
            }
            // this.setActiveAllAncestors(e.target, this.html);
            debug && console.log('contextMenuCheckHide: hidden for click on .terminal or button element', e.target, this.html);
            this.hide();
            return;
        }
        this.$html.find('.active').removeClass('active');
        // hide if tap again on the sam openOption button
        const openOptions = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].findFirstAncestor(e.target, node => node.classList && node.classList.contains('open-options'));
        if (openOptions) {
            this.hide();
            if (this.isShowingInside(openOptions)) {
                debug && console.log('contextMenuCheckHide-button-option: hidden for double-tap on same option button');
                return;
            }
            debug && console.log('contextMenuCheckHide-button-option show for tap on option button');
            this.show(new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Point"](e.pageX, e.pageY), openOptions, openOptions);
            return;
        }
        const originalTarget = e.target;
        const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isInput(originalTarget, true);
        const isDisabled = originalTarget.disabled;
        const focused = this.html.contains(document.activeElement);
        const isButton = (originalTarget.tagName.toLowerCase() === 'button')
            && !originalTarget.disabled
            && originalTarget === document.activeElement; // se la selezione non è sul bottone, per me non l'ho premuto,
        // magari era un mousedown di selezione su un input terminato con mouseup su un button
        const clickedOutside = !_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isParentOf(this.html, originalTarget);
        // clicking on a submenu header should not cause it to disappear making the user incorrectly believe they triggered an action
        /*if (!clickedOutside && originalTarget.classList.contains('popupRightParent')) {
          debug&&console.log('contextMenuCheckHide keep-visible because clicked on non-terminal entry inside the menu');
          return;
        }*/
        // console.log('isInput:', isInput, 'isButton:', isButton, 'clickedOutside:', clickedOutside, '!focused:', !focused, originalTarget, document.activeElement, e);
        if (isButton || clickedOutside || !isInput && !isDisabled && !focused) {
            debug && console.log('contextMenuCheckHide hidden because:', { isButton, clickedOutside, isInput, isDisabled, focused,
                condition: 'isButton || clickedOutside || !isInput && !isDisabled && !focused' });
            this.hide();
        }
    }
    computePosition(location, appendTo = null) {
        const templateSize = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].sizeof(this.html.firstElementChild);
        const viewPortSize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Size"](0, 0, window.innerWidth, window.innerHeight);
        location.x = Math.max(0, location.x);
        location.y = Math.max(0, location.y);
        location.x = Math.min(viewPortSize.w - (templateSize.w), location.x);
        // console.log('contextmenu compute position:', {viewPortSize, templateSize, location, thishtml: this.html});
        location.y = Math.min(viewPortSize.h - (templateSize.h), location.y);
        if (appendTo) {
            let size = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].sizeof(appendTo);
            console.log('sizeof', appendTo, size);
            this.html.firstElementChild.style.left = 10000 - 2 + 'px';
            this.html.firstElementChild.style.top = 10000 + size.h - 2 + 'px';
            return;
        }
        this.html.firstElementChild.style.left = 10000 + location.x + 'px';
        this.html.firstElementChild.style.top = 10000 + location.y + 'px';
    }
    show(location, target, appendTo = null) {
        console.log('contextmenu show()');
        DamContextMenu.contextMenu.html.style.display = 'none';
        const vertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getvertexByHtml(appendTo);
        appendTo = appendTo || this.defaultContainer;
        if (this.html.parentElement !== appendTo) {
            appendTo.appendChild(this.html);
        }
        if (appendTo === this.defaultContainer)
            appendTo = null;
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getLogic(target);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!target, 'target is null.');
        if (!mp)
            return;
        mp.linkToLogic(this.html, false);
        console.log('contextmenu target:', this.clickTarget, 'this.html:', this.html);
        const model = mp.getModelRoot();
        if (model.isM3()) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pw(true, 'No context-menu is currently available for M3 elements');
            return;
        }
        this.clickTarget = target;
        this.html.style.display = 'none'; // if was already displaying, start the scrollDown animation without doing the scrollUp()
        // const vertex: IVertex = IVertex.getvertexByHtml(target);
        let edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IEdge"].getByHtml(target);
        let extedge = null;
        if (edge instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ExtEdge"]) {
            extedge = edge;
            edge = null;
        }
        this.extedgecontext.style.display = 'none';
        this.edgecontext.style.display = 'none';
        this.vertexcontext.style.display = 'none';
        this.edgecontext.style.display = edge ? '' : 'none';
        this.extedgecontext.style.display = extedge ? '' : 'none';
        this.vertexcontext.style.display = !edge && !extedge ? '' : 'none';
        // this.$vertexcontext.find('.Reference').hide();
        this.$vertexcontext.find('.refli.dynamic').remove();
        this.$vertexcontext.find('.typeli.dynamic').remove();
        let i;
        //   if (vertex) {
        /*
        if (model.isM1()) {
          this.$vertexcontext.find('.m1hide').hide();
          this.$vertexcontext.find('.m2hide').show(); }
        else {
          this.$vertexcontext.find('.m1hide').show();
          this.$vertexcontext.find('.m2hide').hide(); }*/
        if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClassifier"]) {
            const lishow = ($jq) => $jq.each((i, e) => { e.style.display = ''; });
            // this.$vertexcontext.find('.Feature').hide();
            // this.$vertexcontext.find('.Vertex').show();
            if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"]) {
                this.fillTypeLi(mp, lishow);
            }
        }
        else {
            if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MReference"]) {
                const $refli = this.$vertexcontext.find('.refli.template');
                for (i = 0; i < mp.mtarget.length; i++) {
                    const target = mp.mtarget[i];
                    const li = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($refli[0], true);
                    li.classList.remove('template');
                    li.classList.add('dynamic');
                    li.dataset.index = '' + i;
                    const $li = $(li);
                    $li.find('.index').text('' + i);
                    $li.find('.text').text(target ? target.printableNameshort() : 'Empty');
                    $refli[0].parentNode.appendChild(li);
                }
                // this.$vertexcontext.find('.Reference').show();
            }
            /*this.$vertexcontext.find('.Feature').show();
            this.$vertexcontext.find('.Vertex').hide();*/
        }
        const mr = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MReference"] ? mp : null;
        const $indexinput = this.$vertexcontext.find('input.byindex');
        const upperbound = mr ? mr.metaParent.upperbound : null;
        if (mr) {
            if (upperbound === -1)
                $indexinput[0].removeAttribute('max');
            else
                $indexinput[0].setAttribute('max', '' + upperbound);
        }
        else
            $indexinput[0].setAttribute('max', '-999');
        //
        /*
        if (model.isM1()) {
          this.$html.find('.m1hide').hide();
          this.$html.find('.m2hide').show();
        }
        else {
          this.$html.find('.m1hide').show();
          this.$html.find('.m2hide').hide();
        }*/
        let dic = {};
        dic['m1'] = model.isM1();
        dic['m2'] = model.isM2();
        dic['class'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"];
        dic['enum'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EEnum"];
        dic['classifier'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClassifier"];
        dic['feature'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IFeature"];
        dic['attribute'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IAttribute"];
        dic['reference'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IReference"];
        dic['operation'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EOperation"];
        dic['parameter'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EParameter"];
        dic['annotation'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EAnnotation"];
        dic['literal'] = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ELiteral"];
        dic['edge'] = !!edge;
        dic['extedge'] = !!extedge;
        dic['ongraph'] = !!_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isParentOf(model.graph.container, target);
        let ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].computeConditionalHides(this.$html, dic);
        if (ret.show.length + ret.inaltered.length === 0)
            return;
        this.addEventListeners(location, mp, vertex, edge, extedge);
        this.computePosition(location, appendTo);
        // computePosition() needs to be after deciding sub-elements visibility and before sliding down, because needs to compute
        // the final height with correct children display and without slideDown temporary height hard-limiter with inline css.
        if (vertex) {
            vertex.htmlg.style.transform = 'translateZ(1px)';
            vertex.htmlg.dataset.oldindex = '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getIndex(vertex.htmlg);
            // vertex.htmlg.style.transform = 'translateZ(1px) scale(2, 2)'; zoom = 0.5
        }
        this.$html.slideDown();
        /*
        let $expansibleElements = this.$html.find('[tabindex]');
        $expansibleElements.addClass('active');
        this.$html.show(); // slideDown();*/
        if (appendTo && _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.isFirefox) {
            this.setActiveAllAncestors(appendTo, vertex.getHtmlRawForeign());
            vertex.fixFirefoxOverflowBug();
        }
        console.log('endShow', { html: this.html, parent: this.html.parentElement });
        /*
        $expansibleElements.removeClass('active');*/
    }
    hide() {
        // double tap on "..." su firefox non nasconde (ri-esegue show() e riattiva l'overflow bug7')
        const parent = this.html.parentNode;
        if (!parent)
            return;
        const vertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getvertexByHtml(parent);
        if (vertex) {
            this.unsetActiveAllAncestors(parent, vertex.getHtmlRawForeign());
            vertex.htmlg.style.removeProperty('transform');
        }
        this.$html.hide(); // slideUp('fast', null);
    }
    fillTypeLi(mp, lishow) {
        let i;
        const $typeli = this.$vertexcontext.find('.typeli.template');
        const $fallback = this.$vertexcontext.find('.typeli.fallback').hide();
        const containerli = $typeli[0].parentElement;
        const isM2 = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["M2Class"];
        const m2Class = (isM2 ? mp : mp.metaParent);
        if (isM2 && mp.instances.length === 0) {
            $(containerli).find('.typeli').hide();
            lishow($fallback.text("This class does not have any instances to convert."));
            return;
        }
        const separator = $(containerli).find('.separator')[0];
        const arr = m2Class.getTypeConversionScores(true, true);
        if (arr.length === 0) {
            $(containerli).find('.typeli').hide();
            lishow($fallback.text("This class does not have any super or subclass available for conversion."));
            return;
        }
        else if (arr.length === 1) {
            lishow($(containerli).find('.typeli'));
            $(containerli).find('.typeli.description, .typeli.separator').hide();
        }
        else
            lishow($(containerli).find('.typeli'));
        $fallback.hide();
        for (i = 0; i < arr.length; i++) {
            const li = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($typeli[0], true);
            const element = arr[i];
            const popuptxt = "Features: " + (element.features >= 0 ? "+" : "") + element.features +
                "; Operations: " + (element.operations >= 0 ? "+" : "") + element.operations +
                "; Annotations: " + (element.annotations >= 0 ? "+" : "") + element.annotations + ";";
            li.classList.remove('template');
            li.classList.add('dynamic');
            li.setAttribute("title", popuptxt);
            li.dataset.index = '' + i;
            li.dataset.classID = '' + element.class.getID();
            const $li = $(li);
            // $li.find('.index').text('' + i);
            $li.find('.text').text(element.class.printableNameshort());
            if (i === 0)
                containerli.insertBefore(li, separator);
            else
                containerli.appendChild(li);
        }
    }
    addEventListeners(location, m, vertex, edge, extedge) {
        const graphLocation = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().graph.toGraphCoord(location);
        const html = this.html;
        const $html = this.$html;
        // const v: IVertex = IVertex.getvertexByHtml(this.clickTarget);
        // const m: ModelPiece = ModelPiece.getLogic(this.clickTarget);
        console.log('contextMenu target:', this.clickTarget, 'modelPiece:', m);
        const mr = m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MReference"] ? m : null;
        const $indexinput = $html.find('input.byindex');
        const upperbound = mr ? mr.getUpperbound() : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!m, 'mp null:', m, this.clickTarget);
        const $firstempty = $html.find('.refli .firstempty');
        let $byindexInputAndButton = $html.find('.refli .byindex');
        console.log($byindexInputAndButton);
        $byindexInputAndButton.each((index, el) => { el.disabled = mr && upperbound === 0; });
        $firstempty[0].disabled = mr && upperbound === 0;
        $html.find('.refli .firstempty').off('click.setref').on('click.setref', (e) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].linkVertexMouseDown(e, null, graphLocation);
        });
        $html.find('.refli button.byindex').off('click.setref').on('click.setref', (e) => {
            let index = +$indexinput[0].value;
            if (index < 0 || (upperbound > 0 && index >= upperbound)) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pw(true, 'invalid reference index. It must be a value inside the [0,' + upperbound + '] interval.');
                return;
            }
            const edge = mr.edges[index] ? mr.edges[index] : new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IEdge"](mr, index, m.getVertex(), null, null);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].linkVertexMouseDown(null, edge, graphLocation);
        });
        console.log('refli dynamic setup', $html.find('li.refli.dynamic').length);
        $html.find('li.refli.dynamic').off('click.setref').on('click.setref', (e) => {
            const index = +e.currentTarget.dataset.index;
            console.log('refli dynamic click');
            console.log('setting reference[' + index + '] = ', mr.mtarget[index], mr);
            const edge = mr.edges[index] ? mr.edges[index] : new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IEdge"](mr, index, m.getVertex(), null, null);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].linkVertexMouseDown(null, edge, graphLocation);
        });
        $html.find('li.typeli.dynamic').off('click.changetype').on('click.changetype', (e) => {
            const newType = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getByID(+e.currentTarget.dataset.classID);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!(m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"]), "tryed to change type of non-class element.", m, e);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!(newType instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["M2Class"]), "tryed to change type into non-class element.", newType, e);
            console.log('typeli dynamic click, changing type of: ', m, ' into: ', newType, this);
            if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["M2Class"])
                m.convertInstancesTo(newType);
            if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MClass"])
                m.convertTo(newType);
        });
        // U.pe(true, $html.find('li.refli.dynamic'), $html);
        $html.find('button.refli.delete').off('click.setref').on('click.setref', (e) => {
            e.preventDefault();
            e.stopPropagation(); // impedisco di nascondere il contextmenù per tanto poco
            const li = e.currentTarget.parentNode;
            const index = li.dataset.index;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!index || _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isNumber(index), 'failed to get index.');
            mr.setTarget(index, null);
            $(li).find('.text').text('Empty');
        });
        $html.find('.Vertex.duplicate').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.duplicate('_Copy', m.parent); });
        $html.find('.Vertex.delete').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.delete(true); });
        $html.find('.Vertex.minimize').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.getVertex().minimize(); });
        $html.find('.Vertex.extend').off('click.ctxMenu').on('click.ctxMenu', (e) => {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ExtEdge"](m, m.getVertex(), null, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["GraphPoint"].fromEvent(e));
        });
        $html.find('.Vertex.up').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushDown(true); m.getModelRoot().refreshGUI_Alone(); }); // must be the opposite of the text
        $html.find('.Vertex.down').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushUp(true); m.getModelRoot().refreshGUI_Alone(); }); // must be the opposite of the text
        $html.find('.Vertex.editStyle').off('click.ctxMenu').on('click.ctxMenu', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pw(true, 'deprecato'); /*StyleEditor.editor.show(m);*/ });
        //// feature options
        $html.find('.Feature.autofix').off('click.ctxMenu').on('click.ctxMenu', (e) => { alert('autofix conformity: todo.'); });
        $html.find('.Feature.autofixinstances').off('click.ctxMenu').on('click.ctxMenu', (e) => { alert('autofix instances: todo.'); });
        $html.find('.Feature.duplicate').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.duplicate('_Copy', m.parent); m.refreshGUI(); });
        $html.find('.Feature.delete').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.delete(true); });
        $html.find('.Feature.minimize').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.getVertex().minimize(); });
        $html.find('.Feature.up').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushUp(false); m.refreshGUI(); });
        $html.find('.Feature.down').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.pushDown(false); m.refreshGUI(); });
        $html.find('.terminal.insert.attribute').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.addAttribute(); });
        $html.find('.terminal.insert.reference').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.addReference(); });
        $html.find('.terminal.insert.operation').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.addOperation(); });
        $html.find('.terminal.insert.literal').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.addLiteral(); });
        $html.find('.terminal.insert.parameter').off('click.ctxMenu').on('click.ctxMenu', (e) => { m.addParameter(); });
        $html.find('.terminal.insert.annotation').off('click.ctxMenu').on('click.ctxMenu', (e) => { (m).addAnnotation(); });
        //// edge options
        $html.find('.edge.delete').off('click.ctxMenu').on('click.ctxMenu', (e) => { edge.remove(); });
    }
    isOpened() { return this.html.style.display !== 'none'; }
    isShowingInside(target) { return this.isOpened() && _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isParentOf(target, this.html); }
    // problema: windows exegue contextmenu dopo il mouseup, mac lo esegue prima (e non esegue mai il mouseup se triggera contextmenu)
    // fix compatibilità: prevengo il contextmenu nativo e ne lo emulo dopo il mouseup per garantire consistenza.
    emulateContextMenuAfterMouseUp(evt) {
        if (!this.shouldAppear)
            return;
        this.shouldAppear = false;
        this.show(new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Point"](evt.pageX, evt.pageY), evt.target);
    }
}
DamContextMenu.contextMenu = null;


/***/ }),

/***/ "./src/guiElements/graph-tab-html/graph-tab-html.component.css":
/*!*********************************************************************!*\
  !*** ./src/guiElements/graph-tab-html/graph-tab-html.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".RatioBox{\r\n  position: relative;\r\n  width: 50%;\t\t/* desired width */\r\n}\r\n.RatioBox:before{\r\n  content: \"\";\r\n  display: block;\r\n  padding-top: 100%; \t/* initial ratio of 1:1*/\r\n}\r\n.RatioContent{\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n.sidebarClassContainer{\r\n  padding-top: 16px;\r\n  padding-left: 10px;\r\n  padding-right: 5px;\r\n}\r\n.sidebarNode{\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n.sidebarNodeName{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto;\r\n}\r\n.modelTab{\r\n  background-color: var(--mainBackgroundColor);\r\n  margin-top: -11px;\r\n}\r\n.mat-tab-label{\r\n  border-top-left-radius: 20px;\r\n  border-top-right-radius: 20px;\r\n  border: var(--mainBorder);\r\n  border-bottom: unset;\r\n  opacity: 1 !important;\r\n  width: 160px !important;\r\n}\r\n.mat-tab-label.mat-tab-label-active{\r\n  background-color: var(--mainBorderColor);}\r\n.mat-tab-label{\r\n  background-color: var(--mainBackgroundColor);}\r\n.mat-tab-label-container{\r\n  background-color: var(--mainBackgroundColor);\r\n  border-bottom: var(--mainBorder);\r\n}\r\n/* property bar raws */\r\n.propertyTab{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  height: 40px;\r\n}\r\nh2.rawTitle{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n.rawecore{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex:1;\r\n          flex-grow:1;\r\n  flex-shrink:1;\r\n}\r\n/*\r\n\r\n.tablist{\r\n  display: inline-block;\r\n  padding: 0px;\r\n  margin: 0px;\r\n}\r\n.tabButton{\r\n  cursor: default;\r\n  display: inline-block;\r\n  background-color: var(--mainBackgroundColor);\r\n  border: var(--mainBorder);\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  padding: 3px 15px;\r\n\r\n}\r\n.tabButton[data-tabselected=\"true\"]{\r\n  background-color: var(--mainBorderColor); }\r\n#editorTabContainer{\r\n  display: inline-block;\r\n  width: 100vw;\r\n  background-color: var(--mainBackgroundColor);\r\n  border-bottom: var(--mainBorder);\r\n  top: calc(var(--topbarH));\r\n  height: var(--tabH);\r\n}*/\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9ncmFwaC10YWItaHRtbC9ncmFwaC10YWItaHRtbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVUsR0FBRyxrQkFBa0I7QUFDakM7QUFDQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsaUJBQWlCLEdBQUcsd0JBQXdCO0FBQzlDO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxTQUFTO0VBQ1QsUUFBUTtBQUNWO0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsWUFBWTtBQUNkO0FBQ0E7RUFDRSw0Q0FBNEM7RUFDNUMsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0Usd0NBQXdDLENBQUM7QUFDM0M7RUFDRSw0Q0FBNEMsQ0FBQztBQUMvQztFQUNFLDRDQUE0QztFQUM1QyxnQ0FBZ0M7QUFDbEM7QUFDQSxzQkFBc0I7QUFDdEI7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixZQUFZO0FBQ2Q7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGtCQUFXO1VBQVgsV0FBVztFQUNYLGFBQWE7QUFDZjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTBCRSIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvZ3JhcGgtdGFiLWh0bWwvZ3JhcGgtdGFiLWh0bWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5SYXRpb0JveHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDUwJTtcdFx0LyogZGVzaXJlZCB3aWR0aCAqL1xyXG59XHJcbi5SYXRpb0JveDpiZWZvcmV7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwYWRkaW5nLXRvcDogMTAwJTsgXHQvKiBpbml0aWFsIHJhdGlvIG9mIDE6MSovXHJcbn1cclxuLlJhdGlvQ29udGVudHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG59XHJcblxyXG4uc2lkZWJhckNsYXNzQ29udGFpbmVye1xyXG4gIHBhZGRpbmctdG9wOiAxNnB4O1xyXG4gIHBhZGRpbmctbGVmdDogMTBweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbn1cclxuLnNpZGViYXJOb2Rle1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbi5zaWRlYmFyTm9kZU5hbWV7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuLm1vZGVsVGFie1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CYWNrZ3JvdW5kQ29sb3IpO1xyXG4gIG1hcmdpbi10b3A6IC0xMXB4O1xyXG59XHJcbi5tYXQtdGFiLWxhYmVse1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDIwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDIwcHg7XHJcbiAgYm9yZGVyOiB2YXIoLS1tYWluQm9yZGVyKTtcclxuICBib3JkZXItYm90dG9tOiB1bnNldDtcclxuICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDE2MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbC1hY3RpdmV7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJvcmRlckNvbG9yKTt9XHJcbi5tYXQtdGFiLWxhYmVse1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CYWNrZ3JvdW5kQ29sb3IpO31cclxuLm1hdC10YWItbGFiZWwtY29udGFpbmVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5CYWNrZ3JvdW5kQ29sb3IpO1xyXG4gIGJvcmRlci1ib3R0b206IHZhcigtLW1haW5Cb3JkZXIpO1xyXG59XHJcbi8qIHByb3BlcnR5IGJhciByYXdzICovXHJcbi5wcm9wZXJ0eVRhYntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogNDBweDtcclxufVxyXG5oMi5yYXdUaXRsZXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG4ucmF3ZWNvcmV7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWdyb3c6MTtcclxuICBmbGV4LXNocmluazoxO1xyXG59XHJcbi8qXHJcblxyXG4udGFibGlzdHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcGFkZGluZzogMHB4O1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcbi50YWJCdXR0b257XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQmFja2dyb3VuZENvbG9yKTtcclxuICBib3JkZXI6IHZhcigtLW1haW5Cb3JkZXIpO1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XHJcbiAgcGFkZGluZzogM3B4IDE1cHg7XHJcblxyXG59XHJcbi50YWJCdXR0b25bZGF0YS10YWJzZWxlY3RlZD1cInRydWVcIl17XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJvcmRlckNvbG9yKTsgfVxyXG4jZWRpdG9yVGFiQ29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB3aWR0aDogMTAwdnc7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbkJhY2tncm91bmRDb2xvcik7XHJcbiAgYm9yZGVyLWJvdHRvbTogdmFyKC0tbWFpbkJvcmRlcik7XHJcbiAgdG9wOiBjYWxjKHZhcigtLXRvcGJhckgpKTtcclxuICBoZWlnaHQ6IHZhcigtLXRhYkgpO1xyXG59Ki9cclxuIl19 */");

/***/ }),

/***/ "./src/guiElements/graph-tab-html/graph-tab-html.component.ts":
/*!********************************************************************!*\
  !*** ./src/guiElements/graph-tab-html/graph-tab-html.component.ts ***!
  \********************************************************************/
/*! exports provided: GraphTabHtmlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraphTabHtmlComponent", function() { return GraphTabHtmlComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let GraphTabHtmlComponent = class GraphTabHtmlComponent {
    // static matTabModel: MatTabGroup = null;
    // private static timesCanFailDuringInit = 1;
    //private selectedTab = 0;
    // @ViewChild('tabs') tabGroup: MatTabGroup;
    constructor() {
    }
    ngOnInit() {
        // this.selectModelTabOnInit(0);
    }
};
GraphTabHtmlComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].None,
        selector: 'app-graph-tab-html',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./graph-tab-html.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/graph-tab-html/graph-tab-html.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./graph-tab-html.component.css */ "./src/guiElements/graph-tab-html/graph-tab-html.component.css")).default]
    })
], GraphTabHtmlComponent);



/***/ }),

/***/ "./src/guiElements/isidebar/isidebar.component.css":
/*!*********************************************************!*\
  !*** ./src/guiElements/isidebar/isidebar.component.css ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvaXNpZGViYXIvaXNpZGViYXIuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/guiElements/isidebar/isidebar.component.ts":
/*!********************************************************!*\
  !*** ./src/guiElements/isidebar/isidebar.component.ts ***!
  \********************************************************/
/*! exports provided: IsidebarComponent, ISidebar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsidebarComponent", function() { return IsidebarComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISidebar", function() { return ISidebar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



let IsidebarComponent = class IsidebarComponent {
    constructor() { }
    ngOnInit() {
    }
};
IsidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-isidebar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./isidebar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/isidebar/isidebar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./isidebar.component.css */ "./src/guiElements/isidebar/isidebar.component.css")).default]
    })
], IsidebarComponent);

class ISidebar {
    // htmls: Dictionary<string /*ModelPiece.fullname*/, HTMLElement | SVGGElement> = null;
    // nodeContainer: HTMLDivElement = null;
    constructor(model, container) {
        this.container = null;
        this.packageContainer = null;
        this.classContainer = null;
        this.model = model;
        // this.mm = (model instanceof MetaModel);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mmm === this.model) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.sidebar = this;
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.sidebar = this;
        }
        this.container = container;
        this.packageContainer = document.createElement('div');
        this.packageContainer.classList.add('sidebarPackageContainer');
        this.classContainer = document.createElement('div');
        this.classContainer.classList.add('sidebarClassContainer');
        this.container.appendChild(this.packageContainer);
        this.container.appendChild(this.classContainer);
        this.updateAll();
        // this.htmls = this.loadDefaultHtmls();
    }
    /*
      loadDefaultHtmls(): Dictionary<string, HTMLElement | SVGGElement> /*
        console.log('refresh left iSidebar');
        // bug: todo: not refreshing quando cambio il nome di un m2class. però i classSelector si aggiornano.
        this.clear();
        let arr: IClassifier[];
        let i;
        // this.htmls = {};
        /*if (false && false) {
          arr = this.model.childrens;
          for (i = 0; i < arr.length; i++) { this.htmls[arr[i].fullname()] = IPackage.defaultSidebarHtml(); } } * /
        // arr = this.model.getAllClasses();
        // if (this.model.isM3()) Array.prototype.push.apply(arr, this.model.getAllEnums());
        // for (i = 0; i < arr.length; i++) { this.htmls[arr[i].fullname()] = arr[i].getSidebarHtml();  }
        this.updateAll();
        return this.htmls; */
    clear() {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(this.packageContainer);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(this.classContainer);
    }
    updateAll() {
        this.clear();
        let i;
        let cla = this.model.getAllClasses();
        if (this.model.isM2()) {
            cla = cla.filter((c) => !c.getAbstract() && !c.getInterface());
        }
        const enu = this.model.isM2() ? [] : this.model.getAllEnums();
        for (i = 0; i < cla.length; i++) {
            this.updateNode(cla[i], this.classContainer);
        }
        for (i = 0; i < enu.length; i++) {
            this.updateNode(enu[i], this.classContainer);
        }
    }
    addEventListeners(html) {
        const $html = $(html);
        $html.off('click.sidebarNode').on('click.sidebarNode', (e) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().sidebar.sidebarNodeClick(e);
        });
    }
    sidebarNodeClick(e) {
        console.log('sidebarNodeClick()', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel() === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel());
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().isMM()) {
            this.sidebarNodeClick0(e);
        }
        else {
            this.sidebarNodeClick0(e);
        }
    }
    sidebarNodeClick0(e) {
        console.log('sidebarNodeClick()');
        let html = e.currentTarget;
        while (!html.dataset.modelpieceid) {
            html = html.parentElement;
        }
        const metaParent = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getLogic(html);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!metaParent, 'the id does not match any class or package', e);
        const modelOfSidebar = metaParent.getModelRoot();
        const modelOfGraph = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel();
        const graph = modelOfGraph.graph; /*m2*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!graph, 'invalid graph of model:', modelOfGraph);
        const pkg = modelOfGraph.getDefaultPackage();
        if (metaParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"] /*m3*/) {
            pkg.addEmptyClass(metaParent);
        }
        else if (metaParent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EEnum"] /*m3*/) {
            pkg.addEmptyEnum();
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unxpected class type of metaparent:', metaParent);
        }
        console.log('addSidebarNodeClick done');
    }
    updateNode(piece, containerr) {
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceVars(piece, piece.getSidebarHtml());
        piece.linkToLogic(html);
        this.addEventListeners(html);
        containerr.appendChild(html);
    }
}


/***/ }),

/***/ "./src/guiElements/m-graph-html/m-graph-html.component.css":
/*!*****************************************************************!*\
  !*** ./src/guiElements/m-graph-html/m-graph-html.component.css ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/************************************************** statici */\r\n\r\n.template, .MDefaultStyles{\r\n  display: none;\r\n}\r\n\r\n.tabContent{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-flow: nowrap;/*?*/\r\n  /*margin-top: calc( var(--mainBorderWidth) * 2 );*/\r\n}\r\n\r\n/*olds*/\r\n\r\n#defaultMGraphHtmlVertex, #defaultMSidebarHtmlVertex, replace{\r\n  display:none;\r\n}\r\n\r\n.HiddenStructures > *{\r\n  display: none;\r\n}\r\n\r\n#mproperty_sidebar, .sidebarShell, .editorShell, .propertyBarContainer{\r\n  flex-basis: 0;/* calc(var(--sidebarW));*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  background-color: var(--mainBackgroundColor);\r\n  /*border-right: var(--mainBorder);*/\r\n  width: calc(var(--sidebarW));\r\n  /*height: calc(100vh - (var(--topbarH) + var(--tabH)));*/\r\n  overflow: hidden;\r\n  /*flex-wrap: wrap;\r\n  margin-top: 5px;\r\n  border-top: var(--mainBorder);*/\r\n}\r\n\r\n.sidebarShell{\r\n  border-right: var(--mainBorder);\r\n}\r\n\r\n.propertyBarContainer{\r\n  border-left: var(--mainBorder);\r\n}\r\n\r\n.editorShell{\r\n  -webkit-box-flex: 3;\r\n          flex-grow: 3;\r\n}\r\n\r\n/*#sidebar, */\r\n\r\n#metamodel_sidebar, #model_sidebar, .property_sidebar{\r\n                -webkit-box-orient: horizontal;\r\n                -webkit-box-direction: normal;\r\n                        flex-direction: row;\r\n                flex-wrap: wrap;\r\n                -webkit-box-pack: justify;\r\n                        justify-content: space-between;/*si attiva solo se entra tutto in una riga e avanza pure spazio*/\r\n                -webkit-box-align: start;\r\n                        align-items: flex-start;\r\n                align-content: flex-start;/*accatasta tutto verticalmente verso la cima invece di spaziarli.*/\r\n                padding-right:5px;\r\n              }\r\n\r\n#msidebar>*:first-child, #metamodel_sidebar>*:first-child, #model_sidebar>*:first-child{\r\n  background-color: var(--mainBorderColor);\r\n  width: var(--mainBorderWidth);\r\n  right: 0px;\r\n}\r\n\r\n#msidebar>*:not(:first-child), #metamodel_sidebar>*:not(:first-child), #model_sidebar>*:not(:first-child){\r\n  padding: 2px;\r\n  max-width: 200px;\r\n  min-width: 75px;\r\n  flex-basis: 75px;/*should === min-width per mantenere l'effetto.*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-shrink: 1;\r\n}\r\n\r\n.sidebarVertex:hover{\r\n  background-color: var(--mainBorderColor);\r\n  border: 2px solid var(--secondaryBorderColor);\r\n  padding: 0px;\r\n}\r\n\r\n.sidebarVertex{\r\n  min-width: 50px;\r\n  min-height: 50px;\r\n  flex-basis:50px;\r\n}\r\n\r\n@media all and (min-width: 200px) {\r\n  .sidebarVertex {\r\n    -webkit-box-flex: 0;\r\n            flex-grow: 0; }\r\n}\r\n\r\n#metamodel_editor, #model_editor{\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.rawContainer{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  height: 100%;\r\n}\r\n\r\nh2.rawTitle{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.rawecore{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex:1;\r\n          flex-grow:1;\r\n  flex-shrink:1;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9tLWdyYXBoLWh0bWwvbS1ncmFwaC1odG1sLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEOztBQUU3RDtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLGlCQUFpQixDQUFDLElBQUk7RUFDdEIsa0RBQWtEO0FBQ3BEOztBQUVBLE9BQU87O0FBR1A7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhLENBQUMsMEJBQTBCO0VBQ3hDLG1CQUFZO1VBQVosWUFBWTtFQUNaLDRDQUE0QztFQUM1QyxtQ0FBbUM7RUFDbkMsNEJBQTRCO0VBQzVCLHdEQUF3RDtFQUN4RCxnQkFBZ0I7RUFDaEI7O2lDQUUrQjtBQUNqQzs7QUFDQTtFQUNFLCtCQUErQjtBQUNqQzs7QUFDQTtFQUNFLDhCQUE4QjtBQUNoQzs7QUFDQTtFQUNFLG1CQUFZO1VBQVosWUFBWTtBQUNkOztBQUNBLGFBQWE7O0FBQUM7Z0JBQ0UsOEJBQW1CO2dCQUFuQiw2QkFBbUI7d0JBQW5CLG1CQUFtQjtnQkFDbkIsZUFBZTtnQkFDZix5QkFBOEI7d0JBQTlCLDhCQUE4QixDQUFDLGlFQUFpRTtnQkFDaEcsd0JBQXVCO3dCQUF2Qix1QkFBdUI7Z0JBQ3ZCLHlCQUF5QixDQUFDLG1FQUFtRTtnQkFDN0YsaUJBQWlCO2NBQ25COztBQUVkO0VBQ0Usd0NBQXdDO0VBQ3hDLDZCQUE2QjtFQUM3QixVQUFVO0FBQ1o7O0FBQ0E7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0IsQ0FBQyxnREFBZ0Q7RUFDakUsbUJBQVk7VUFBWixZQUFZO0VBQ1osY0FBYztBQUNoQjs7QUFDQTtFQUNFLHdDQUF3QztFQUN4Qyw2Q0FBNkM7RUFDN0MsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0U7SUFDRSxtQkFBWTtZQUFaLFlBQVksRUFBRTtBQUNsQjs7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBR0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBaUI7RUFBakIsNkJBQWlCO1VBQWpCLGlCQUFpQjtFQUNqQixZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2Isa0JBQVc7VUFBWCxXQUFXO0VBQ1gsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9ndWlFbGVtZW50cy9tLWdyYXBoLWh0bWwvbS1ncmFwaC1odG1sLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogc3RhdGljaSAqL1xyXG5cclxuLnRlbXBsYXRlLCAuTURlZmF1bHRTdHlsZXN7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnRhYkNvbnRlbnR7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWZsb3c6IG5vd3JhcDsvKj8qL1xyXG4gIC8qbWFyZ2luLXRvcDogY2FsYyggdmFyKC0tbWFpbkJvcmRlcldpZHRoKSAqIDIgKTsqL1xyXG59XHJcblxyXG4vKm9sZHMqL1xyXG5cclxuXHJcbiNkZWZhdWx0TUdyYXBoSHRtbFZlcnRleCwgI2RlZmF1bHRNU2lkZWJhckh0bWxWZXJ0ZXgsIHJlcGxhY2V7XHJcbiAgZGlzcGxheTpub25lO1xyXG59XHJcblxyXG4uSGlkZGVuU3RydWN0dXJlcyA+ICp7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuI21wcm9wZXJ0eV9zaWRlYmFyLCAuc2lkZWJhclNoZWxsLCAuZWRpdG9yU2hlbGwsIC5wcm9wZXJ0eUJhckNvbnRhaW5lcntcclxuICBmbGV4LWJhc2lzOiAwOy8qIGNhbGModmFyKC0tc2lkZWJhclcpKTsqL1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQmFja2dyb3VuZENvbG9yKTtcclxuICAvKmJvcmRlci1yaWdodDogdmFyKC0tbWFpbkJvcmRlcik7Ki9cclxuICB3aWR0aDogY2FsYyh2YXIoLS1zaWRlYmFyVykpO1xyXG4gIC8qaGVpZ2h0OiBjYWxjKDEwMHZoIC0gKHZhcigtLXRvcGJhckgpICsgdmFyKC0tdGFiSCkpKTsqL1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgLypmbGV4LXdyYXA6IHdyYXA7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIGJvcmRlci10b3A6IHZhcigtLW1haW5Cb3JkZXIpOyovXHJcbn1cclxuLnNpZGViYXJTaGVsbHtcclxuICBib3JkZXItcmlnaHQ6IHZhcigtLW1haW5Cb3JkZXIpO1xyXG59XHJcbi5wcm9wZXJ0eUJhckNvbnRhaW5lcntcclxuICBib3JkZXItbGVmdDogdmFyKC0tbWFpbkJvcmRlcik7XHJcbn1cclxuLmVkaXRvclNoZWxse1xyXG4gIGZsZXgtZ3JvdzogMztcclxufVxyXG4vKiNzaWRlYmFyLCAqLyNtZXRhbW9kZWxfc2lkZWJhciwgI21vZGVsX3NpZGViYXIsIC5wcm9wZXJ0eV9zaWRlYmFye1xyXG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsvKnNpIGF0dGl2YSBzb2xvIHNlIGVudHJhIHR1dHRvIGluIHVuYSByaWdhIGUgYXZhbnphIHB1cmUgc3BhemlvKi9cclxuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgICAgICAgICAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDsvKmFjY2F0YXN0YSB0dXR0byB2ZXJ0aWNhbG1lbnRlIHZlcnNvIGxhIGNpbWEgaW52ZWNlIGRpIHNwYXppYXJsaS4qL1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDo1cHg7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuI21zaWRlYmFyPio6Zmlyc3QtY2hpbGQsICNtZXRhbW9kZWxfc2lkZWJhcj4qOmZpcnN0LWNoaWxkLCAjbW9kZWxfc2lkZWJhcj4qOmZpcnN0LWNoaWxke1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW5Cb3JkZXJDb2xvcik7XHJcbiAgd2lkdGg6IHZhcigtLW1haW5Cb3JkZXJXaWR0aCk7XHJcbiAgcmlnaHQ6IDBweDtcclxufVxyXG4jbXNpZGViYXI+Kjpub3QoOmZpcnN0LWNoaWxkKSwgI21ldGFtb2RlbF9zaWRlYmFyPio6bm90KDpmaXJzdC1jaGlsZCksICNtb2RlbF9zaWRlYmFyPio6bm90KDpmaXJzdC1jaGlsZCl7XHJcbiAgcGFkZGluZzogMnB4O1xyXG4gIG1heC13aWR0aDogMjAwcHg7XHJcbiAgbWluLXdpZHRoOiA3NXB4O1xyXG4gIGZsZXgtYmFzaXM6IDc1cHg7LypzaG91bGQgPT09IG1pbi13aWR0aCBwZXIgbWFudGVuZXJlIGwnZWZmZXR0by4qL1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICBmbGV4LXNocmluazogMTtcclxufVxyXG4uc2lkZWJhclZlcnRleDpob3ZlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluQm9yZGVyQ29sb3IpO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXNlY29uZGFyeUJvcmRlckNvbG9yKTtcclxuICBwYWRkaW5nOiAwcHg7XHJcbn1cclxuXHJcbi5zaWRlYmFyVmVydGV4e1xyXG4gIG1pbi13aWR0aDogNTBweDtcclxuICBtaW4taGVpZ2h0OiA1MHB4O1xyXG4gIGZsZXgtYmFzaXM6NTBweDtcclxufVxyXG5cclxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMjAwcHgpIHtcclxuICAuc2lkZWJhclZlcnRleCB7XHJcbiAgICBmbGV4LWdyb3c6IDA7IH1cclxufVxyXG4jbWV0YW1vZGVsX2VkaXRvciwgI21vZGVsX2VkaXRvcntcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4ucmF3Q29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1mbG93OiBjb2x1bW47XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbmgyLnJhd1RpdGxle1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcbi5yYXdlY29yZXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZ3JvdzoxO1xyXG4gIGZsZXgtc2hyaW5rOjE7XHJcbn1cclxuIl19 */");

/***/ }),

/***/ "./src/guiElements/m-graph-html/m-graph-html.component.ts":
/*!****************************************************************!*\
  !*** ./src/guiElements/m-graph-html/m-graph-html.component.ts ***!
  \****************************************************************/
/*! exports provided: MGraphHtmlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MGraphHtmlComponent", function() { return MGraphHtmlComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MGraphHtmlComponent = class MGraphHtmlComponent {
    constructor() { }
    ngOnInit() {
    }
};
MGraphHtmlComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-m-graph-html',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./m-graph-html.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/m-graph-html/m-graph-html.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./m-graph-html.component.css */ "./src/guiElements/m-graph-html/m-graph-html.component.css")).default]
    })
], MGraphHtmlComponent);



/***/ }),

/***/ "./src/guiElements/mGraph/Edge/EdgePoint.ts":
/*!**************************************************!*\
  !*** ./src/guiElements/mGraph/Edge/EdgePoint.ts ***!
  \**************************************************/
/*! exports provided: EdgePointFittizio, EdgePoint, CursorFollowerEP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePointFittizio", function() { return EdgePointFittizio; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePoint", function() { return EdgePoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CursorFollowerEP", function() { return CursorFollowerEP; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class EdgePointFittizio {
    constructor(pos, realPoint = null) {
        this.pos = null;
        this.realPoint = null;
        this.pos = pos;
        this.realPoint = realPoint;
    }
    link(realPoint) { this.realPoint = realPoint; }
    getPreviousRealPt(fittizi, includeMySelf = true) {
        let index = fittizi.indexOf(this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index < 0, 'the element must be inside the array. this:', this, ', arr:', fittizi, ', index:', index);
        index += (includeMySelf ? 1 : 0);
        while (--index >= 0) {
            if (fittizi[index].realPoint) {
                return fittizi[index].realPoint;
            }
        }
        return null;
    }
    getNextRealPt(fittizi, includeMySelf = true, debug = false) {
        let index = fittizi.indexOf(this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index < 0, 'the element must be inside the array');
        index -= (includeMySelf ? 1 : 0);
        while (++index < fittizi.length) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, index + '/' + fittizi.length + ']', fittizi[index], 'fittiziAll:', fittizi);
            if (fittizi[index].realPoint) {
                return fittizi[index].realPoint;
            }
        }
        return null;
    }
}
class EdgePoint {
    constructor(e, pos, endPointOfVertex = null, isPersistent = true) {
        this.id = null;
        this.pos = null;
        this.html = null;
        this.edge = null;
        this.endPointOfVertex = null;
        this.isSelected = null;
        this.isHighlighted = null;
        this.edge = e;
        this.endPointOfVertex = endPointOfVertex;
        // edge = null is ok, è il cursorfollower statico.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.edge === undefined, 'edge === undefined on EdgePoint constructor.');
        this.html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('circle');
        this.id = EdgePoint.ID++;
        if (e) {
            e.logic.linkToLogic(this.html);
        }
        EdgePoint.all[this.id] = this;
        this.html.dataset.EdgePointID = '' + this.id;
        this.pos = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        this.isSelected = false;
        this.isHighlighted = false;
        this.isPersistent = isPersistent;
        this.refreshGUI();
        this.moveTo(pos, false);
        this.addEventListeners();
    }
    static getFromHtml(html) { return EdgePoint.getByID(+html.dataset.EdgePointID); }
    static getByID(id) { return EdgePoint.all[id]; }
    follow(e = null) {
        CursorFollowerEP.activeEP = this;
        const edge = this.edge;
        if (this !== CursorFollowerEP.cursorFollower && this === edge.endNode) {
            CursorFollowerEP.activeEP = null;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].linkVertexMouseDown(e, edge);
        }
    }
    unfollow() {
        CursorFollowerEP.activeEP = null;
    }
    addEventListeners() {
        const $html = $(this.html);
        // $html.off('click.ep').on('click.ep', (e: ClickEvent) => { EdgePoint.getFromHtml(e.currentTarget).onClick(e); });
        $html.off('mousedown.ep').on('mousedown.ep', (e) => { EdgePoint.getFromHtml(e.currentTarget).onMouseDown(e); });
        // $html.off('mousemove.ep').on('mousemove.ep', (e: MouseMoveEvent) => { EdgePoint.getFromHtml(e.currentTarget).onMouseMove(e); });
        $html.off('mouseup.ep').on('mouseup.ep', (e) => { EdgePoint.getFromHtml(e.currentTarget).onMouseUp(e); });
        $html.off('mouseenter.ep').on('mouseenter.ep', (e) => { EdgePoint.getFromHtml(e.currentTarget).onMouseEnter(e); });
        $html.off('mouseleave.ep').on('mouseleave.ep', (ee) => { EdgePoint.getFromHtml(ee.currentTarget).onMouseLeave(ee); });
        // $html.off('mouseover.ep').on('mouseover.ep', (e: MouseLeaveEvent) => { EdgePoint.getFromHtml(e.currentTarget).onMouseOver(e); });
        $html.off('contextmenu.deleteEdgePoint').on('contextmenu.deleteEdgePoint', (e) => { this.detach(); return false; });
    }
    isAttached() { return this.edge !== null; }
    detach(refreshGUI = true) {
        //    big: quando attacco un extend, l'endVertex non ha la reference all'edge input,
        //      quindi se muovo l'endVertex, l'ìedge non si muove.
        if (!this.isAttached()) {
            return;
        }
        if (this.edge && this.edge.startNode == this || this.edge.endNode === this)
            return;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.edge.midNodes, this);
        if (this.html && this.html.parentNode) {
            this.html.parentNode.removeChild(this.html);
        }
        if (refreshGUI) {
            this.edge.refreshGui();
        }
        this.edge = null;
        this.unfollow();
    }
    onClick(e) { }
    onMouseEnter(e) {
        // console.log('enter');
        this.refreshGUI(null, true);
    }
    onMouseLeave(e) {
        // console.log('leave');
        // if (this.isMoving) { this.onMouseMove(e); }
        this.refreshGUI(null, false);
    }
    onMouseDown(e) {
        this.refreshGUI(true);
        // console.log('leave');
        this.follow(e);
        e.preventDefault();
        e.stopPropagation();
    }
    // onMouseOver(e: MouseOverEvent): void { e.preventDefault(); e.stopPropagation(); }
    /* onMouseMoveOld(e: MouseMoveEvent | MouseLeaveEvent): void {
      if (!this.isMoving) { return; }
      const screenPt: Point = new Point(e.pageX, e.pageY);
      const graphPt: GraphPoint = this.edge.owner.toGraphCoord(screenPt);
      this.moveTo(graphPt, true); }*/
    onMouseUp(e) {
        this.refreshGUI(false);
        e.stopPropagation();
        // console.log('up');
        this.unfollow();
    }
    getCenter(fitHorizontal = false, fitVertical = false) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging)
            return this.pos.duplicate();
        return this.edge.owner.fitToGrid(this.pos, true, false, fitHorizontal, fitVertical);
    }
    getStartPoint(fitHorizontal = true, fitVertical = true) {
        return this.getCenter(fitHorizontal, fitVertical);
    }
    getEndPoint(fitHorizontal = true, fitVertical = true) {
        return this.getCenter(fitHorizontal, fitVertical);
    }
    moveTo(pos, refresh, centra = true) {
        if (!this.edge) {
            return;
        }
        const r = centra ? 0 : (isNaN(-this.html.r) ? 0 : -this.html.r);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.pos || this.pos.x === null || this.pos.x === undefined, 'this.pos.x undefined', this.pos);
        //U.pe(!pos || pos.x === null || pos.x === undefined, 'pos.x undefined', pos); sometime happens at start of new ExtEdge setup and it's better if it fails silently throwing error
        this.pos.x = (pos.x + r);
        this.pos.y = (pos.y + r);
        this.html.setAttribute('cx', '' + this.pos.x);
        this.html.setAttribute('cy', '' + this.pos.y);
        this.show();
        if (refresh) {
            this.edge.refreshGui();
        }
    }
    show(debug = false) {
        if (!this.isPersistent)
            return;
        const oldParent = this.html.parentElement;
        if (oldParent) {
            oldParent.removeChild(this.html);
        }
        this.edge.shell.appendChild(this.html);
        this.html.style.display = 'block';
        this.refreshGUI(null, null, debug);
    }
    hide() { this.html.style.display = 'none'; }
    refreshGUI(select = null, highlight = null, debug = false) {
        if (select !== null) {
            this.isSelected = select;
        }
        if (highlight !== null) {
            this.isHighlighted = highlight;
        }
        this.applyStyle(false);
    }
    getCurrentStyle() {
        if (this.isSelected) {
            return this.edge.logic.edgeStyleSelected.edgePointStyle;
        }
        if (this.isHighlighted) {
            return this.edge.logic.edgeStyleHighlight.edgePointStyle;
        }
        return this.edge.logic.edgeStyleCommon.edgePointStyle;
    }
    applyStyle(debug = false) {
        if (!this.isAttached()) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'called EdgePoint.applyStyle() while not attached', this);
            return;
        }
        const eps = this.getCurrentStyle();
        if (debug) {
            this.html.setAttributeNS(null, 'debug', 'styleCommon');
        }
        this.html.setAttributeNS(null, 'r', '' + eps.radius);
        this.html.setAttributeNS(null, 'stroke-width', '' + eps.strokeWidth);
        this.html.setAttributeNS(null, 'stroke', eps.strokeColor);
        this.html.setAttributeNS(null, 'fill', eps.fillColor);
    }
    getSize() {
        const style = this.getCurrentStyle();
        let radius = style.radius + style.strokeWidth;
        return new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](this.pos.x, this.pos.y, radius * 2, radius * 2);
    }
}
EdgePoint.ID = 0;
EdgePoint.all = {};
class CursorFollowerEP extends EdgePoint {
    constructor() {
        super(null, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0));
        this.endPointOfVertex = undefined;
        this.html.setAttributeNS(null, 'fill', 'purple');
        this.html.setAttributeNS(null, 'stroke', 'purple');
        this.html.setAttributeNS(null, 'r', '5');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].eventiDaAggiungereAlBody('cursor follower');
        const $b = $(document.body);
        $b.off('mousemove.cursorFollowerEdgePoint_Move').on('mousemove.cursorFollowerEdgePoint_Move', (e) => {
            const debug =  false && false;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'mousemove.cursorFollowerEdgePoint_Move()');
            const f = CursorFollowerEP.activeEP;
            if (!f || !f.isAttached()) {
                return;
            }
            const graph = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph;
            f.moveTo(graph.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY)), true);
            f.edge.refreshGui(true);
            /// here bug edge
        });
        $b.off('click.cursorFollowerEdgePoint_Detach').on('click.cursorFollowerEdgePoint_Detach', (e) => {
            const f = CursorFollowerEP.get();
            f.detach();
        });
        this.addEventListeners();
    }
    static get() {
        if (!this.cursorFollower) {
            this.cursorFollower = new CursorFollowerEP();
        }
        return this.cursorFollower;
    }
    /*
      cursorFollowerClick(e: ClickEvent) {
        const coord: GraphPoint = this.getCenter();
        this.detach();
        const useless = new EdgePoint(this.edge, coord);
        this.attach(this.edge, null);
      }*/
    onMouseUp(e) { if (this.isAttached()) {
        this.edge.onMouseUp(e);
    } }
    moveTo(pos, refresh, centra = true) {
        super.moveTo(pos, refresh, centra);
        if (!this.isAttached()) {
            return;
        }
        if (refresh) {
            this.edge.refreshGui();
        }
    }
    isAttached() { return this.edge !== null; }
    attach(edge, position, index = Number.POSITIVE_INFINITY) {
        this.detach();
        edge.logic.linkToLogic(this.html);
        this.graph = edge.owner;
        if (index < 0) {
            index = -1;
        }
        if (index === null || index === Number.POSITIVE_INFINITY) {
            index = this.edge.midNodes.length;
        }
        // console.log('CursorFollower.Attach()');
        this.edge = edge;
        this.html.dataset.modelpieceid = '' + this.edge.logic.id;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].insertAt(this.edge.midNodes, index + 1, this);
        if (position) {
            this.moveTo(position, false);
        }
        this.graph.container.appendChild(this.html);
        this.follow();
        this.refreshGUI(true);
    }
    addEventListeners() {
        super.addEventListeners();
        /*$(this.html).off('click.makeEdgePoint').on('click.makeEdgePoint',
          (e: ClickEvent) => { CursorFollowerEP.cursorFollower.cursorFollowerClick(e); });*/
        $(this.html).off('mouseup.makeEdgePoint').on('mouseup.makeEdgePoint', (e) => { CursorFollowerEP.get().onMouseUp(e); });
    }
}
CursorFollowerEP.cursorFollower = null;
CursorFollowerEP.activeEP = null;


/***/ }),

/***/ "./src/guiElements/mGraph/Edge/ExtEdge.ts":
/*!************************************************!*\
  !*** ./src/guiElements/mGraph/Edge/ExtEdge.ts ***!
  \************************************************/
/*! exports provided: ExtEdge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtEdge", function() { return ExtEdge; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class ExtEdge extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"] {
    constructor(logic, startv, end, tmpend) { super(logic, null, startv, end, tmpend); }
    canBeLinkedTo(target0, print = true) {
        let out = { reason: '', indirectExtendChain: null };
        if (!this.logic.canExtend(target0, out)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(print, out.reason);
            return false;
        }
        return true;
    }
    addEventListeners(foredge, forheadtail) {
        super.addEventListeners(foredge, forheadtail);
        const $edgetail = forheadtail ? $(this.headShell).add(this.tailShell) : $();
        const $shell = foredge ? $(this.shell) : $();
        $edgetail.off('keydown.delete').on('keydown.delete', (e) => this.keydown(e));
        $shell.off('keydown.delete').on('keydown.delete', (e) => this.keydown(e));
    }
    getContainedArray() { return this.logic.extendEdges; }
    remove() {
        console.log('delete extedge:', this);
        if (this.end)
            this.logic.unsetExtends(this.end.logic(), false);
        super.remove();
    }
}


/***/ }),

/***/ "./src/guiElements/mGraph/Edge/edgeStyle.ts":
/*!**************************************************!*\
  !*** ./src/guiElements/mGraph/Edge/edgeStyle.ts ***!
  \**************************************************/
/*! exports provided: EdgePointStyle, EdgeHeadStyle, EdgeStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgePointStyle", function() { return EdgePointStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeHeadStyle", function() { return EdgeHeadStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeStyle", function() { return EdgeStyle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class EdgePointStyle {
    constructor(radius = null, strokeWidth = null, strokeColor = null, fillColor = null) {
        this.radius = null;
        this.strokeWidth = null;
        this.strokeColor = null;
        this.fillColor = null;
        this.radius = radius;
        this.strokeColor = strokeColor;
        this.strokeWidth = strokeWidth;
        this.fillColor = fillColor;
    }
    static duplicate(json) { const ret = new EdgePointStyle(); ret.clone(json); return ret; }
    duplicate() { return EdgePointStyle.duplicate(this); }
    clone(json) {
        this.radius = json.radius;
        this.strokeWidth = json.strokeWidth;
        this.strokeColor = json.strokeColor;
        this.fillColor = json.fillColor;
    }
}
class EdgeHeadStyle {
    constructor(width = null, height = null, fill = null, stroke = null) {
        this.width = width;
        this.height = height;
        this.fill = fill;
        this.stroke = stroke;
    }
    static duplicate(json) { const ret = new EdgeHeadStyle(); ret.clone(json); return ret; }
    duplicate() { return EdgeHeadStyle.duplicate(this); }
    clone(json) {
        this.width = json.width;
        this.height = json.height;
        this.fill = json.fill;
        this.stroke = json.stroke;
    }
}
class EdgeStyle {
    constructor(style = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, width = 2, color = '#ffffff', edgePointStyle = null, edgeHeadStyle = null) {
        this.style = null;
        this.width = null;
        this.color = null;
        this.edgePointStyle = edgePointStyle;
        this.edgeHeadStyle = edgeHeadStyle;
        this.style = style;
        this.width = width;
        this.color = color;
    }
    static duplicate(json) { const ret = new EdgeStyle(); ret.clone(json); return ret; }
    duplicate() { return EdgeStyle.duplicate(this); }
    clone(json) {
        this.style = json.style;
        this.width = json.width;
        this.color = json.color;
        this.edgePointStyle = EdgePointStyle.duplicate(json.edgePointStyle);
        this.edgeHeadStyle = EdgeHeadStyle.duplicate(json.edgeHeadStyle);
    }
}


/***/ }),

/***/ "./src/guiElements/mGraph/Edge/iEdge.ts":
/*!**********************************************!*\
  !*** ./src/guiElements/mGraph/Edge/iEdge.ts ***!
  \**********************************************/
/*! exports provided: EdgeModes, IEdge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeModes", function() { return EdgeModes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IEdge", function() { return IEdge; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/util */ "./src/common/util.ts");



var EdgeDecoratorType;
(function (EdgeDecoratorType) {
    EdgeDecoratorType["containment"] = "containment";
    EdgeDecoratorType["generalization"] = "generalization";
    EdgeDecoratorType["simple"] = "simple";
})(EdgeDecoratorType || (EdgeDecoratorType = {}));
var EdgeModes;
(function (EdgeModes) {
    EdgeModes["straight"] = "straight";
    EdgeModes["angular2"] = "angular con 2 segmenti.";
    EdgeModes["angular3"] = "angular con 3 segmenti (un break centrale)";
    EdgeModes["angular23Auto"] = "angular 2 o angular 3 automatico";
})(EdgeModes || (EdgeModes = {}));
class IEdge {
    constructor(logic, index, startv, end, tmpend) {
        this.headtype = EdgeDecoratorType.simple;
        this.tailtype = EdgeDecoratorType.simple;
        // private static tempMidPoint_Clicked: GraphPoint = null;
        // private static tempMidPoint_ModelPiece: ModelPiece = null;
        this.owner = null;
        this.start = null;
        this.end = null;
        this.midNodes = null;
        this.shell = null;
        this.html = null;
        this.shadow = null;
        this.logic = null;
        this.isSelected = null;
        this.isHighlighted = null;
        // mode: EdgeModes = null;
        this.edgeHead = null;
        this.edgeTail = null;
        this.headShell = null;
        this.tailShell = null;
        this.tmpEnd = null;
        this.tmpEndVertex = null;
        this.useMidNodes =  true || false;
        this.useRealEndVertex =  true || false;
        this.id = null;
        this.isDeleted = 0;
        this.tmpEnd = tmpend;
        if (!startv) {
            if (logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
                startv = logic.getVertex();
            }
            if (logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
                startv = logic.getVertex();
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!startv, 'startVertex missing');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!logic || !startv, 'new Edge() invalid parameters. logic:', logic, 'start:', startv, 'end:', end);
        if (!end) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!IEdge.edgeChanging, 'cannot create a pending edge (without target) while there are other pending edges.');
            IEdge.edgeChanging = this;
        }
        IEdge.all.push(this);
        this.id = IEdge.edgeCount++;
        IEdge.idToEdge[this.id] = this;
        this.logic = logic;
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"])) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index === null || index === undefined, 'index must be set.');
            this.getContainedArray()[index] = this;
        }
        this.shell = document.createElementNS('http://www.w3.org/2000/svg', 'g'); // U.newSvg<SVGGElement>('g');
        this.html = document.createElementNS('http://www.w3.org/2000/svg', 'path'); // U.newSvg<SVGPathElement>('Path');
        this.shadow = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('path');
        this.shell.appendChild(this.html);
        this.shell.appendChild(this.shadow);
        this.shadow.dataset.edgeid = this.shell.dataset.edgeid = this.html.dataset.edgeid = '' + this.id;
        this.start = startv;
        this.start.edgesStart.push(this);
        this.setTarget(end);
        this.startNode = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0), this.start);
        this.midNodes = [];
        this.endNode = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0), this.end);
        this.owner = this.start.owner;
        this.isSelected = !!tmpend; // if created with no target, it will be selected and follow cursor.
        this.isHighlighted = false;
        this.edgeHead = null;
        this.edgeTail = null;
        this.headShell = null;
        this.tailShell = null;
        this.pathLetter = 'L';
        this.owner.edgeContainer.append(this.shell);
        this.shell.classList.add('EdgeShell');
        this.html.classList.add('Edge');
        this.shadow.classList.add('Edge', 'Shadow');
        this.shell.dataset.modelpieceid = '' + this.logic.id;
        this.html.dataset.modelpieceid = '' + this.logic.id;
        this.shadow.dataset.modelpieceid = '' + this.logic.id;
        this.html.setAttribute('fill', 'none');
        this.shadow.setAttribute('fill', 'none');
        this.shadow.setAttribute('stroke', 'none');
        this.shadow.setAttribute('visibility', 'hidden');
        this.shadow.setAttribute('pointer-events', 'stroke');
        this.addEventListeners(true, false);
        this.refreshGui();
    }
    static staticInit() {
        IEdge.all = [];
        IEdge.selecteds = [];
        // todo: prevent propagation on click on edges.
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].eventiDaAggiungereAlBody('trigger onBlur of all IEdge.selecteds.');
        $(document.body).off('click.blurEdgeSelection').on('click.blurEdgeSelection', (ee) => {
        });
        $(document.body).off('keydown.deletethings').on('keydown.deletethings', (evt) => {
            let i;
            const target = document.activeElement; // evt.target;
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isChildrenOf(target, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.container))
                return;
            const tag = target.tagName.toLowerCase();
            const isInput = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isInput(target, true);
            if (isInput)
                return;
            const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel();
            const mp = model.graph.propertyBar.selectedModelPiece;
            const ism2 = mp && model.isM2();
            if (mp === model)
                return;
            const v = mp.getVertex(); // IVertex.getvertexByHtml(target);
            const e = []; //U.shallowArrayCopy(IEdge.selecteds);// IEdge.getByHtml(target);
            console.log('document.keydown.deletethings: ', evt, e, v, mp);
            if (v) {
                switch (evt.key.toLowerCase()) {
                    default: break;
                    case 'd':
                        if (!evt.ctrlKey || !ism2)
                            return;
                        if (mp === model)
                            return;
                        mp.duplicate();
                        break;
                    case 'delete': // case 'Backspace':
                        // if (isInput) return; was only here, moved to everyone
                        if (mp === model)
                            return;
                        if (ism2)
                            mp.delete(true);
                        else {
                            if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"])
                                mp.setValues(null);
                            else if (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"])
                                mp.clearTargets();
                        }
                        break;
                }
            }
        });
        return IEdge.all;
    }
    static get(e) {
        // return ModelPiece.getLogic(e.classType).edge;
        return IEdge.getByHtml(e.target);
    }
    static getByHtml(html0, debug = true) {
        if (!html0) {
            return null;
        }
        let html = html0;
        while (html && (!html.dataset || !html.dataset.edgeid)) {
            html = html.parentElement;
        }
        const ret = html ? IEdge.getByID(+html.dataset.edgeid) : null;
        // U.pe(debug && !ret, 'failed to find edge. html0:', html0, 'html:', html, 'map:', IEdge.idToEdge);
        return ret;
    }
    static getByID(id) { return IEdge.idToEdge[id]; }
    generateAggregationHead(style) { return null; }
    generateCompositionHead(style) { return this.generateAggregationHead(style); }
    generateCompositionTail(style) { return this.generateAggregationTail(style, style.stroke); }
    generateAggregationTail(style, fill = '#ffffff') {
        let svg;
        let path;
        const bugfigo = false;
        // if (this instanceof ExtEdge) svg = this.edgeTail = this.edgeHead || U.newSvg('svg');
        if (bugfigo || this.edgeTail && this.tailtype === EdgeDecoratorType.containment) {
            svg = this.edgeTail;
            // U.clear(svg);
            path = svg.firstChild;
        }
        else {
            svg = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('svg');
            path = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('path');
            svg.appendChild(path);
            path.setAttributeNS(null, 'd', 'M100 0 L200 100 L100 200 L0 100 Z');
        }
        this.tailtype = EdgeDecoratorType.containment;
        svg.setAttributeNS(null, 'width', '' + style.width);
        svg.setAttributeNS(null, 'height', '' + style.width);
        svg.setAttributeNS(null, 'viewBox', (-style.width) + ' ' + (-style.width) + ' ' + (200 + style.width * 2) + ' ' + (200 + style.width * 2));
        path.setAttributeNS(null, 'fill', fill); // style.fill);
        path.setAttributeNS(null, 'stroke', style.stroke);
        path.setAttributeNS(null, 'stroke-width', '' + style.width);
        return svg;
    }
    generateGeneralizationHead(style) {
        let svg;
        let path;
        const bugfigo = false;
        if (bugfigo || this.edgeHead && this.headtype === EdgeDecoratorType.generalization) {
            svg = this.edgeHead;
            // U.clear(svg);
            path = svg.firstChild;
        }
        else {
            svg = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('svg');
            path = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('path');
            svg.appendChild(path);
            let heightForEquilateral = Math.sqrt(200 * 200 - 100 * 100); // 100^2+x^2=200^2   --->  x = sqrt( 200^2 - 100^2 )
            path.setAttributeNS(null, 'd', 'M100 0 L200 ' + heightForEquilateral + ' L000 ' + heightForEquilateral + ' Z');
        }
        this.headtype = EdgeDecoratorType.generalization;
        svg.setAttributeNS(null, 'width', '' + style.width);
        svg.setAttributeNS(null, 'height', '' + style.width);
        svg.setAttributeNS(null, 'viewBox', (-style.width) + ' ' + (-style.width) + ' ' + (200 + style.width * 2) + ' ' + (200 + style.width * 2));
        path.setAttributeNS(null, 'fill', style.fill);
        path.setAttributeNS(null, 'stroke', style.stroke);
        path.setAttributeNS(null, 'stroke-width', '' + style.width);
        return svg;
    }
    generateGeneralizationTail(style) { return null; }
    static makePathSegment(prevPt, nextPt, mode0, angularFavDirectionIsHorizontal = null, prevVertexSize, nextVertexSize, type = ' L', debug = false) {
        // todo old: devi rifare totalmente la parte di "angularFavDirection" basandoti su se cade perpendicolare sul vertice e devi usare
        // 2 variabili, forzando la direzione ad essere per forza perpendicolare sul lato su cui risiede il vertex.startPt o .endPt
        // poi: se le direzioni forzate coincidono, allora è un angular3, se sono vertical+horizontal, allora è un angular2.
        // nb: in prevVertexSize e nextVertexSize la favDirection viene calcolata uguale, ma l'assenamento prevVertexSize = nextVertexSize;
        // poi deve sparire perchè devo generare 2 diverse favDirection e non una sola.
        let m;
        let pathStr = '';
        const pt1IsOnHorizontalSide = !prevVertexSize ? null : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(prevPt, prevVertexSize);
        const pt2IsOnHorizontalSide = !nextVertexSize ? null : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(nextPt, nextVertexSize);
        debug = false;
        // if (prevVertexSize) { prevPt = prevVertexSize} //IVertex.closestIntersection(); }
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markg(prevPt, true, 'green');
            if (prevVertexSize) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markgS(prevVertexSize, false, 'green');
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markg(nextPt, false, 'blue');
            if (nextVertexSize) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.markgS(nextVertexSize, false, 'blue');
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'prev:' + (pt1IsOnHorizontalSide) + ', next:' + (pt2IsOnHorizontalSide), 'm0:' + mode0 + ' --> ' + mode0 + ', favDirection' + angularFavDirectionIsHorizontal);
        // return '';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'directions:', pt1IsOnHorizontalSide, pt2IsOnHorizontalSide);
        if (prevVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(prevPt, prevVertexSize)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'prev not on border', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge, prevPt, prevVertexSize);
            // può succedere quando cambi viewpoint in m2 che causa redraw e ridimensionamento in m1 mentre non è visibile.
            // return '';  può causare path di un solo punto (origine)
        }
        if (nextVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(nextPt, nextVertexSize)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'next not on border', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge, nextPt, nextVertexSize);
            // return '';  può causare path di un solo punto (origine)
        }
        // U.pe(prevVertexSize && !U.isOnEdge(prevPt, prevVertexSize) || nextVertexSize && !U.isOnEdge(nextPt, nextVertexSize), 'not on border');
        if (debug && (prevVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(prevPt, prevVertexSize) || nextVertexSize && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(nextPt, nextVertexSize))) {
            const g = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph;
            g.markg(prevPt, true, 'green');
            g.markgS(prevVertexSize, false, 'green');
            g.markg(prevPt, false);
            g.markgS(prevVertexSize, false);
        }
        let mode = mode0;
        if (prevVertexSize && nextVertexSize) {
            // mode = (pt1IsOnHorizontalSide && pt2IsOnHorizontalSide) ? EdgeModes.angular3 : EdgeModes.angular2;
        }
        // if (mode === EdgeModes.angular23Auto) { mode = EdgeModes.angular3; }
        /*
        if (prevVertexSize && mode === EdgeModes.angular23Auto) {
          // U.pe(angularFavDirectionIsHorizontal === null, 'preferred direction is useless with prevVertexSize');
          U.pif(debug, 'favdirection pre:', angularFavDirectionIsHorizontal,
            'isOnVerticalEdge:', U.isOnVerticalEdges(prevPt, prevVertexSize),
            'isOnHorizontalEdge:', U.isOnHorizontalEdges(prevPt, prevVertexSize), 'prevPt:', prevPt, 'prevSize:', prevVertexSize);
          if (angularFavDirectionIsHorizontal === false && U.isOnVerticalEdges(prevPt, prevVertexSize)) {
            mode = EdgeModes.angular2; angularFavDirectionIsHorizontal = true; }
          if (angularFavDirectionIsHorizontal === true && U.isOnHorizontalEdges(prevPt, prevVertexSize)) {
            mode = EdgeModes.angular2; angularFavDirectionIsHorizontal = false; }
          U.pif(debug, 'favdirection post:', angularFavDirectionIsHorizontal);
        } */
        /* compute last favorite direction * /
    let lastIsHorizontalSide: boolean = null;
    const endPt: GraphPoint = allRealPt[allRealPt.length - 1].pos;
    const penultimoPt: GraphPoint = allRealPt[allRealPt.length - 2].getStartPoint();
    console.log('endVertex:', endVertex, 'endPt:', endPt, '; useRealEnd ? ', useRealEndVertex, ' = ', this.tmpEnd, this.tmpEndVertex);
    if (!endVertex) { lastIsHorizontalSide = Math.abs(GraphPoint.getM(penultimoPt, endPt)) < 1; } else
    if (endPt.x === endVertexSize.x) {                   /*from Left* /   lastIsHorizontalSide = true; } else
    if (endPt.x === endVertexSize.x + endVertexSize.w) { /*from Right* /  lastIsHorizontalSide = true; } else
    if (endPt.y === endVertexSize.y) {                   /*from Top* /    lastIsHorizontalSide = false; } else
    if (endPt.y === endVertexSize.y + endVertexSize.h) { /*from Bottom* / lastIsHorizontalSide = false;
    } else { lastIsHorizontalSide = null; }
    U.pe(lastIsHorizontalSide === null, 'endpoint is not on the boundary of vertex.',
      ' Vertex.endpoint:', endPt, '; vertexSize:', endVertexSize);*/
        /* done setting realpoints.pos, now draw path */
        let oldPathStr = pathStr;
        if (mode === EdgeModes.angular23Auto) {
            mode = mode0 = EdgeModes.angular3;
        }
        const angular23 = EdgeModes.angular3;
        // if (mode0 === angular23 && prevVertexSize && !pt1IsOnHorizontalSide && nextVertexSize && pt2IsOnHorizontalSide) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, mode0 === angular23, !!prevVertexSize, pt1IsOnHorizontalSide);
        if (mode0 === angular23 && prevVertexSize && pt1IsOnHorizontalSide) {
            angularFavDirectionIsHorizontal = false;
            mode = EdgeModes.angular3;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fixed');
        }
        // if (prevVertexSize) { angularFavDirectionIsHorizontal = pt1IsOnHorizontalSide; }
        // if (nextVertexSize) { angularFavDirectionIsHorizontal = !pt2IsOnHorizontalSide; }
        // if (mode === angular23 && prev)
        switch (mode) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected EdgeMode:', mode);
                break;
            case EdgeModes.angular2:
                m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].getM(prevPt, nextPt); // coefficiente angolare della prossima linea disegnata (come se fosse dritta)
                if (angularFavDirectionIsHorizontal === null) {
                    angularFavDirectionIsHorizontal = Math.abs(m) <= 1;
                } // angolo <= abs(45°)
                if (angularFavDirectionIsHorizontal) {
                    // qui resizer orizzontale
                    oldPathStr = pathStr;
                    pathStr += type + (nextPt.x) + ' ' + (prevPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; ang2 favdirectionHorizontal');
                }
                else {
                    // qui resizer verticale.
                    oldPathStr = pathStr;
                    pathStr += type + (prevPt.x) + ' ' + (nextPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; ang2 favdirectionVertical');
                }
                // qui resizer opposto al precedente.
                // oldPathStr = pathStr;
                // pathStr += type + (nextPt.x) + ' ' + (nextPt.y);
                // U.pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; ang2 end ridondante?');
                break;
            case EdgeModes.angular23Auto + '':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'mode.angular23Auto should be replaced before entering here');
                break;
            case EdgeModes.angular3:
                m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].getM(prevPt, nextPt); // coefficiente angolare della prossima linea disegnata (come se fosse dritta)
                if (angularFavDirectionIsHorizontal === null) {
                    angularFavDirectionIsHorizontal = Math.abs(m) <= 1;
                } // angolo <= abs(45°)
                if (angularFavDirectionIsHorizontal) {
                    const midX = (nextPt.x + prevPt.x) / 2;
                    // todo: e qui dovrei appendere un path invisibile che cambia cursore in HorizontalResizer intercettare gli eventi edge.
                    oldPathStr = pathStr;
                    pathStr += type + (midX) + ' ' + (prevPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 orizzontale: orizzontale big');
                    // qui invece uno piccolino verticale
                    oldPathStr = pathStr;
                    pathStr += type + (midX) + ' ' + (nextPt.y);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 orizzontale: verticale small');
                }
                else {
                    const midY = (nextPt.y + prevPt.y) / 2;
                    // todo: qui resizer verticale.
                    oldPathStr = pathStr;
                    pathStr += type + prevPt.x + ' ' + (midY);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 verticale: verticale big');
                    // qui invece uno piccolino orizzontale
                    oldPathStr = pathStr;
                    pathStr += type + nextPt.x + ' ' + (midY);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; angular3 verticale: orizzontale small');
                }
                // todo: qui resizer opposto al precedente.
                break;
            case EdgeModes.straight: /* nessun punto fittizio di mezzo */ break;
        }
        oldPathStr = pathStr;
        pathStr += type + (nextPt.x) + ' ' + (nextPt.y);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ', oldPathStr, ' --> ', pathStr, '; lastPt comune a tutti.');
        return pathStr;
    }
    /*private static midPointMouseDown(e: JQuery.MouseDownEvent) {
      IEdge.tempMidPoint_ModelPiece = ModelPiece.getLogic(e.currentTarget);
      IEdge.tempMidPoint_Clicked = Status.status.getActiveModel().graph.toGraphCoord( new Point(e.pageX, e.pageY) );
    }*/ /*
    private static midPointMouseMove(e: JQuery.MouseMoveEvent) {
      const p: GraphPoint = Status.status.getActiveModel().graph.toGraphCoord( new Point(e.pageX, e.pageY) );
  
    }
    private static midPointMouseUp(e: JQuery.MouseUpEvent) { }*/
    canBeLinkedTo(target) { return this.logic.canBeLinkedTo(target); }
    refreshGui(debug = false, useRealEndVertex = null, usemidnodes = null) {
        debug = false;
        let debugi = window['' + 'debug'];
        if (debugi === 1)
            return;
        // || this.start.size.isinside(this.end.size) ||  this.end.size.isinside(this.start.size
        // quando startpoint o endpoint sono dentro un vertex size
        if (this.start && !this.start.isAllowingEdge(this)
            || this.end && !this.end.isAllowingEdge(this)) { //this.start.size.intersection(this.end.size))) {
            $(this.shell).hide();
            return;
        }
        else
            $(this.shell).show();
        // remove non-persistant edgepoints (feature da rimuovere quando faccio gli edgepoint con posizionamento relativo, questo è un fallback dove li rigenero.)
        let midNodesTmp = [...this.midNodes];
        for (let midnode of midNodesTmp) {
            if (!midnode.isPersistent)
                midnode.detach(false);
        }
        // self loop
        if (!this.midNodes.length && this.start && (this.start === this.end)) {
            let vsize = this.start.getSize();
            this.midNodes.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](vsize.x + vsize.w * 3 / 4, vsize.y), null, false));
            this.midNodes.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](vsize.x + vsize.w * 3 / 4, vsize.y + vsize.h * -1 / 3), null, false));
            this.midNodes.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](vsize.x + vsize.w * 5 / 4, vsize.y + vsize.h * -1 / 3), null, false));
            this.midNodes.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](vsize.x + vsize.w * 5 / 4, vsize.y + vsize.h * +1 / 3), null, false));
            this.midNodes.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](vsize.x + vsize.w, vsize.y + vsize.h * +1 / 3), null, false));
            this.pathLetter = 'L'; // todo: path letter dovrebbe essere vincolato agli edgepoint, così posso avere una linea mista curva-dritta, ma con un valore didefault personalizzabile se non è stato specificato su ogni singolo edgepoint.
        }
        else
            this.pathLetter = 'L';
        // if (this.tmpEnd && !this.end) { this.shell.focus(); }
        this.isSelected = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].hasFocusWithin(this.shell);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.logic, 'IEdge.logic is null:', this);
        if (useRealEndVertex === null) {
            useRealEndVertex = this.useRealEndVertex;
        }
        if (usemidnodes === null) {
            usemidnodes = this.useMidNodes;
        }
        /* setup variables */
        const startVertex = this.start;
        const startVertexSize = this.start.getSize();
        let endVertex = null;
        let endVertexSize = null;
        let allRealPt = this.getAllRealMidPoints();
        if (!usemidnodes) {
            allRealPt = [allRealPt[0], allRealPt[allRealPt.length - 1]];
        }
        if (useRealEndVertex && this.end) {
            endVertex = this.end;
            endVertexSize = endVertex.getSize();
            this.startNode.moveTo(startVertex.getStartPoint(allRealPt[1].getEndPoint()), false);
            this.endNode.moveTo(endVertex.getEndPoint(allRealPt[allRealPt.length - 2].getStartPoint()), false);
        }
        else {
            endVertex = this.tmpEndVertex;
            endVertexSize = endVertex ? endVertex.getSize() : null;
            this.startNode.moveTo(startVertex.getStartPoint(allRealPt[1].getEndPoint()), false);
            // console.log('3x moveto() endvertex:', endVertex, 'endvertexpos:',
            // endVertex && endVertex.getEndPoint(allRealPt[allRealPt.length - 2].getStartPoint()).duplicate(),  'tmpend:', this.tmpEnd);
            const endpos = endVertex ? endVertex.getEndPoint(allRealPt[allRealPt.length - 2].getStartPoint()) : this.tmpEnd;
            if (endpos)
                this.endNode.moveTo(endpos, false);
        }
        if (debugi === 2)
            return;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'allRealPt:', allRealPt);
        let i;
        let pathStr; // 'M' + (allRealPt[0].getStartPoint().x) + ' ' + (allRealPt[0].getStartPoint().y);
        let oldpathStr;
        const graph = this.logic.getModelRoot().graph;
        if (debugi === 3)
            return;
        if (debug) {
            // U.cclear();
            if (startVertexSize) {
                graph.markgS(startVertexSize, true, 'blue');
            }
            if (endVertexSize) {
                graph.markgS(endVertexSize, false);
            }
        }
        for (i = 1; i < allRealPt.length; i++) { // escludo il primo punto dal loop.
            const curr = allRealPt[i];
            const prev = allRealPt[i - 1];
            const favdirection = null; // i === allRealPt.length - 1 ? lastdirectionIsHorizontal : null;
            const prevVertexSize = i === 1 ? startVertexSize : null;
            const nextVertexSize = i === allRealPt.length - 1 ? endVertexSize : null;
            const prevPt = prev.getStartPoint(!prevVertexSize, !prevVertexSize);
            const currPt = curr.getEndPoint(!nextVertexSize, !nextVertexSize);
            // console.log(prevVertexSize, new GraphSize());
            const intersection = nextVertexSize && prevVertexSize ? nextVertexSize.intersection(prevVertexSize) : null;
            if (debug && false) {
                if (intersection)
                    console.log('midenodes.length:', !this.midNodes.length, '&&', prevPt, currPt, ' contained in ', intersection, intersection.contains(prevPt), intersection.contains(currPt));
                if (intersection)
                    this.owner.markgS(intersection, true, 'black');
                this.owner.markg(prevPt, true, 'orange');
                this.owner.markg(currPt, false, 'yellow');
                if (prevVertexSize) {
                    graph.markgS(prevVertexSize, false, 'blue');
                }
                if (nextVertexSize) {
                    graph.markgS(nextVertexSize, false);
                }
            }
            if (!this.midNodes.length && intersection && (intersection.contains(prevPt) || intersection.contains(currPt))) {
                $(this.shell).hide();
                return;
            }
            // if (i === 1) { pt1.moveOnNearestBorder(startVertexSize, false); }
            // if (i === allRealPt.length - 1) { pt2.moveOnNearestBorder(endVertexSize, false); }
            if (i === 1) {
                pathStr = 'M' + prevPt.x + ' ' + prevPt.y;
            }
            oldpathStr = pathStr;
            pathStr += IEdge.makePathSegment(prevPt, currPt, this.getEdgeMode(), favdirection, prevVertexSize, nextVertexSize);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: RealPts:' + '[' + i + '] = ' + currPt.toString() + '; prev:' + prevPt.toString());
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr[' + (i) + '/' + allRealPt.length + ']: ' + oldpathStr + ' --> ' + pathStr);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(pathStr.lastIndexOf(this.pathLetter) === -1, '0: the pathString have no L (but should have at least 2 points)', pathStr, allRealPt, this);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(pathStr.lastIndexOf(this.pathLetter) === -1, 'the pathString have no L (but should have at least 2 points)', pathStr, allRealPt, this);
        if (debugi === 3)
            return;
        this.setPath(pathStr, debug);
        if (debugi === 4)
            return;
        this.getEdgeHead();
        this.getEdgeTail();
        if (debugi === 5)
            return;
        this.appendTailHead(true, pathStr);
        this.appendTailHead(false, pathStr);
        if (debugi === 6)
            return;
        // this.addEventListeners(true, false);
    }
    getEdgeMode() {
        let tmp = this.logic.edgeStyleCommon.style;
        return tmp ? tmp : this.logic.edgeStyleCommon.style = EdgeModes.straight;
    }
    getStyle() {
        if (this.isSelected) {
            return this.logic.edgeStyleSelected;
        }
        if (this.isHighlighted) {
            return this.logic.edgeStyleHighlight;
        }
        else {
            return this.logic.edgeStyleCommon;
        }
    }
    setPath(pathStr, debug = false) {
        let style = this.getStyle();
        /* update style */
        this.html.setAttribute('stroke', style.color);
        this.html.setAttribute('stroke-width', '' + style.width);
        this.shadow.setAttribute('stroke-width', '' + (style.width + IEdge.shadowWidthIncrease));
        // U.clear(this.shell);
        this.shell.insertBefore(this.html, this.shell.firstChild);
        this.shell.insertBefore(this.shadow, this.shell.firstChild);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'edgeHead:', this.edgeHead, 'tail:', this.edgeTail);
        this.html.setAttributeNS(null, 'd', pathStr);
        this.shadow.setAttributeNS(null, 'd', pathStr);
        let i;
        if (this.isSelected) {
            this.startNode.show();
            for (i = 0; i < this.midNodes.length; i++) {
                this.midNodes[i].show();
            }
            this.endNode.show();
        }
        else if (this.isHighlighted) {
            this.startNode.hide();
            for (i = 0; i < this.midNodes.length; i++) {
                this.midNodes[i].show();
            }
            this.endNode.hide();
        }
        else {
            this.startNode.hide();
            for (i = 0; i < this.midNodes.length; i++) {
                this.midNodes[i].hide();
            }
            this.endNode.hide();
        }
    }
    addEventListeners(foredge, forheadtail) {
        const $edgetail = forheadtail ? $(this.headShell).add(this.tailShell) : $();
        const $shell = foredge ? $(this.shell) : $();
        const $edgeparts = $(this.shell); // .find('>*');
        // $edgetail.attr('tabindex', '-1');
        $shell.attr('tabindex', '-1');
        // U.pe(!$shell.length, 'html+', $htmlplus, 'html', $html, 'tailhead', $edgetail);
        //  U.pe(!$edgetail.length, 'html+', $htmlplus, 'html', $html, 'tailhead', $edgetail, 'head-tail:', this.edgeHead, this.edgeTail);
        // $shell.off('click.pbar').on('click.pbar', (e: ClickEvent) => IVertex.ChangePropertyBarContentClick(e, this) );
        /*$html.off('mousedown.showStyle').on('mousedown.showStyle',
          (e: MouseDownEvent) => { Status.status.getActiveModel().graph.propertyBar.styleEditor.showE(this.logic); });*/
        $shell.off('mousedown.startSetMidPoint').on('mousedown.startSetMidPoint', (e) => {
            // const ownermp: M2Class | IReference = ModelPiece.getLogic(e.currentTarget) as M2Class | IReference;
            // U.pe( ownermp === null || ownermp === undefined, 'unable to get logic of:', e.currentTarget);
            const edge = IEdge.get(e);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!e, 'unable to get edge of:', e.currentTarget);
            edge.onMouseDown(e);
        });
        $shell.off('mousemove.startSetMidPoint').on('mousemove.startSetMidPoint', (e) => {
            // const ownermp: M2Class | IReference = ModelPiece.getLogic(e.currentTarget) as M2Class | IReference;
            // U.pe( ownermp === null || ownermp === undefined, 'unable to get logic of:', e.currentTarget);
            const edge = IEdge.getByHtml(e.target, true);
            edge.onMouseMove(e);
        });
        // $shell.off('click.addEdgePoint').on('click.addEdgePoint', (e: ClickEvent) => { IEdge.get(e).onClick(e); });
        $edgeparts.off('mouseover.cursor').on('mouseover.cursor', (e) => { IEdge.get(e).onMouseOver(e); });
        $edgeparts.off('mouseenter.cursor').on('mouseenter.cursor', (e) => { IEdge.get(e).onMouseEnter(e); });
        $edgeparts.off('mouseleave.cursor').on('mouseleave.cursor', (e) => { IEdge.get(e).onMouseLeave(e); });
        $edgeparts.off('keydown.delete').on('keydown.delete', (e) => this.keydown(e));
        $shell.off('blur').on('blur', (e) => { this.onBlur(e); });
        $shell.off('focus').on('focus', (e) => { this.onFocus(e); });
    }
    keydown(e) {
        e.stopPropagation();
        console.log('keydown:', e.key);
        if (e.key == _common_util__WEBPACK_IMPORTED_MODULE_2__["Keystrokes"].escape) {
            // console.log('focused0:', document.activeElement);
            // if (U.isFunction((document.activeElement as any).blur)) this.shell.blur();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.edgeChangingAbort(e);
        }
        console.log('edge: evt.key.toLowerCase() = ', e.key.toLowerCase());
        let i;
        const ext = [];
        const edges = [];
        const elogic = [];
        const extlogic = [];
        for (i = 0; i < IEdge.selecteds.length; i++) {
            const elem = IEdge.selecteds[i];
            if (elem instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
                ext.push(elem);
                extlogic.push(elem.logic);
            }
            else {
                edges.push(elem);
                elogic.push(elem.logic);
            }
        }
        switch (e.key.toLowerCase()) {
            default: break;
            case 'delete':
                for (let e of edges) {
                    e.remove();
                }
                for (let extedge of ext) {
                    extedge.remove();
                }
                break;
        }
    }
    onBlur(e = null) {
        if (this.isDeleted)
            return; // check dopo aver fatto edgeabort se continua a dare errore quando deselezioni premendo altrove.
        // this.isSelected = false;
        // this.html.classList.remove('selected_debug');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(IEdge.selecteds, this);
        let i;
        for (i = 0; i < this.midNodes; i++) {
            this.midNodes[i].hide();
        }
        this.refreshGui();
    }
    getAllRealMidPoints() {
        const allNodes = [];
        allNodes.push(this.startNode);
        let i = 0;
        while (i < this.midNodes.length) {
            allNodes.push(this.midNodes[i++]);
        }
        allNodes.push(this.endNode);
        return allNodes;
    }
    getAllFakePoints(debug = false) {
        // if (!this.html) { return null; }
        const d = this.html.getAttributeNS(null, 'd'); // .replace('M', this.pathLetter);
        // let dArr: string[] = d.split(this.pathLetter); /// consider instead: U.parseSvgPath(pathStr).pts;
        // if (dArr.length === 1) { dArr = [dArr[0], dArr[0]]; }
        let i;
        const realMidPoints = this.getAllRealMidPoints();
        const nodiFittizi = [];
        let realNodeIndex = 0;
        let puntiReali = 0;
        const parsedpts = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].parseSvgPath(d);
        for (i = 0; i < parsedpts.pts.length; i++) {
            const pt = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](parsedpts.pts[i].x, parsedpts.pts[i].y);
            let target = null;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'getAllFakePoints() d:', d, 'pt', pt, 'realMidPoints:', realMidPoints, 'index:', realNodeIndex, 'match?', realNodeIndex >= realMidPoints.length ? 'overflow' : realMidPoints[realNodeIndex].pos.equals(pt));
            let fitHorizontal;
            let fitVertical;
            if (i !== 0 && i !== parsedpts.pts.length - 1) {
                fitHorizontal = fitVertical = true;
            }
            if (i === 0 && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.start.getSize())) {
                fitHorizontal = false;
                fitVertical = true;
            }
            if (i === 0 && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.start.getSize())) {
                fitHorizontal = true;
                fitVertical = false;
            }
            if (i === parsedpts.pts.length - 1 && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.end.getSize())) {
                fitHorizontal = false;
                fitVertical = true;
            }
            if (i === parsedpts.pts.length - 1 && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnHorizontalEdges(pt, this.end.getSize())) {
                fitHorizontal = true;
                fitVertical = false;
            }
            // fitHorizontal = (i === 0 && U.isOnHorizontalEdges(pt, this.start.getSize()));
            const midPoint = realMidPoints[realNodeIndex].getStartPoint(fitHorizontal, fitVertical);
            // todo: se cambi endpoint !== startpoint, devi fare due check.
            // const prevPt: GraphPoint = allNodes[realNodeIndex].getStartPoint(!!prevVertexSize, !!prevVertexSize);
            // const currPt: GraphPoint = curr.getEndPoint(!!nextVertexSize, !!nextVertexSize);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, pt, ' =?= ', midPoint, pt.equals(midPoint));
            if (pt.equals(midPoint)) {
                puntiReali++;
                target = realMidPoints[realNodeIndex++];
            }
            nodiFittizi.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointFittizio"](pt, target));
        }
        if (puntiReali < 2 || puntiReali < realMidPoints.length) {
            const prettyFittizi = [];
            const prettyRealMidPoints = [];
            i = -1;
            while (++i < nodiFittizi.length) {
                prettyFittizi.push(nodiFittizi[i].pos.toString());
            }
            i = -1;
            while (++i < realMidPoints.length) {
                prettyRealMidPoints.push(realMidPoints[i].pos.toString());
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug, 'fallimento nell\'assegnare fakepoints ai punti reali. Assegnati:' + puntiReali + ' / ' + prettyRealMidPoints.length
                + '; fittizi trovati:', prettyFittizi, ' reali:', prettyRealMidPoints, ', parsedpts:', parsedpts, ', path:', d);
        }
        return nodiFittizi;
    }
    getBoundingMidPoints(e, style = null, canFail = false, arrFittizi = null) {
        const fittizi = arrFittizi ? arrFittizi : this.getAllFakePoints();
        const tmp = this.getBoundingMidPointsFake(e, style, canFail, fittizi);
        return { prev: tmp[0].getPreviousRealPt(fittizi), next: tmp[1].getNextRealPt(fittizi) };
    }
    getBoundingMidPointsFake(e, style = null, canFail = false, arrFittizi = null) {
        // if (style.style === EdgeModes.straight) { return this.getBoundingMidPointsStraight(e, canFail); }
        // const edge: IEdge = ModelPiece.getLogic(e.classType).edge;
        const clickedPt = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(e);
        const lineWidth = +this.shadow.getAttributeNS(null, 'stroke-width');
        const allNodes = this.getAllRealMidPoints();
        const fittizi = arrFittizi ? arrFittizi : this.getAllFakePoints();
        let i;
        let closestPrev = null;
        let closestNext = null;
        let closestDistance = Number.POSITIVE_INFINITY;
        if (fittizi.length < 2)
            return null;
        for (i = 1; i < fittizi.length; i++) {
            const prev = fittizi[i - 1];
            const next = fittizi[i];
            const currentDistance = clickedPt.distanceFromLine(prev.pos, next.pos);
            /*if (clickedPt.isInTheMiddleOf(prev.pos, next.pos, lineWidth)) { return [prev, next]; }*/
            if (currentDistance < closestDistance) {
                closestPrev = prev;
                closestNext = next;
                closestDistance = currentDistance;
            }
        }
        return [closestPrev, closestNext];
    }
    getBoundingMidPointsStraight_OLD(e, canFail = false) {
        const edge = null; // ModelPiece.getLogic(e.classType).edge;
        const clickedPt = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(e);
        const first = this.startNode;
        const second = (this.midNodes.length === 0 ? this.endNode : this.midNodes[0]);
        const penultimo = (this.midNodes.length === 0 ? this.startNode : this.midNodes[this.midNodes.length - 1]);
        const last = this.endNode;
        const lineWidth = +this.shadow.getAttributeNS(null, 'stroke-width');
        if (clickedPt.isInTheMiddleOf(first.pos, second.pos, lineWidth)) {
            /*console.log('bounding (first[' + edge.midNodes.indexOf(second)
              + '] && second[' + + edge.midNodes.indexOf(penultimo) + ']); e:', edge);*/
            return [first, second];
        }
        /* if (penultimo !== first && second !== penultimo && clickedPt.isInTheMiddleOf(second.pos, penultimo.pos, lineWidth)) {
          console.log('bounding (second[' + edge.midNodes.indexOf(second)
            + '] && penultimo[' + + edge.midNodes.indexOf(penultimo) + ']), e:', edge);
          U.pe(edge.midNodes.indexOf(second) + 1 !== edge.midNodes.indexOf(penultimo), 'non conseguenti');
          return [second, penultimo]; } */
        if (last !== second && clickedPt.isInTheMiddleOf(penultimo.pos, last.pos, lineWidth)) {
            /*console.log('bounding (penultimo[' + edge.midNodes.indexOf(penultimo)
              + '] && ultimo[' + + edge.midNodes.indexOf(last) + ']); e:', edge);*/
            return [penultimo, last];
        }
        let i;
        for (i = 0; i < this.midNodes.length; i++) { // ottimizzazione: può partire da 1 e terminare 1 prima (penultimo)
            const pre = i === 0 ? first : this.midNodes[i - 1];
            const now = this.midNodes[i];
            if (clickedPt.isInTheMiddleOf(pre.pos, now.pos, lineWidth)) {
                /*console.log('bounding (pre[' + edge.midNodes.indexOf(pre)
                  + '] && now[' + + edge.midNodes.indexOf(now) + ']), e:', edge);*/
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(edge.midNodes.indexOf(pre) + 1 !== edge.midNodes.indexOf(now), 'non consecutivi.');
                return [pre, now];
            }
        }
        console.log('clickedPt:', clickedPt, ', start:', this.startNode.pos, ', mids:', this.midNodes, ', end:', this.endNode.pos);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!canFail, 'bounding points not found:', e, this, 'edge:', IEdge.get(e));
        return null;
    }
    onMouseLeave(e) {
        this.isHighlighted = false;
        this.startNode.refreshGUI(null, false);
        this.endNode.refreshGUI(null, false);
        let i;
        for (i = 0; i < this.midNodes.length; i++) {
            this.midNodes[i].refreshGUI(null, false);
        }
        this.refreshGui();
    }
    onMouseEnter(e) {
        this.onMouseLeave(null);
        this.isHighlighted = true;
        this.refreshGui(true);
    }
    onMouseMove(e) { this.onMouseOver(e, false); }
    onMouseOver(e, canFail = false, debug = false) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().isAttached() || IEdge.edgeChanging) {
            return;
        }
        const fakePoints = this.getAllFakePoints();
        const tmp = this.getBoundingMidPointsFake(e, null, canFail, fakePoints);
        if (!tmp || tmp.length < 2) {
            return;
        }
        const preFake = tmp[0];
        const nextFake = tmp[1];
        const pre = preFake.getPreviousRealPt(fakePoints);
        const next = nextFake.getNextRealPt(fakePoints);
        if (!pre || !next)
            return; // for some reason it does not detect start and endpoint, but it's fine ignoring them here.
        // U.pe(!pre, 'failed to get previousRealPt of point:', preFake, ', all fakePoints:', fakePoints);
        // U.pe(!next, 'failed to get nextRealPt of point:', nextFake, ', all fakePoints:', fakePoints);
        let i = -1;
        this.startNode.refreshGUI(null, false);
        this.endNode.refreshGUI(null, false);
        let cursor;
        switch (this.getEdgeMode()) {
            default:
                cursor = 'help';
                break;
            case EdgeModes.straight:
                cursor = 'select';
                break;
            case EdgeModes.angular2:
            case EdgeModes.angular3:
            case EdgeModes.angular23Auto:
                if (preFake.pos.x === nextFake.pos.x) {
                    cursor = 'col-resize';
                }
                else if (preFake.pos.y === nextFake.pos.y) {
                    cursor = 'row-resize';
                }
                else {
                    cursor = 'no-drop';
                }
                break;
        }
        this.shadow.style.cursor = this.html.style.cursor = cursor;
        while (++i < this.midNodes.length) {
            this.midNodes[i].refreshGUI(null, false);
        }
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fake     pre: ', preFake, ', next:', nextFake);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'real     pre: ', pre, ', next:', next);
        pre.refreshGUI(null, true);
        next.refreshGUI(null, true);
    }
    onFocus(e = null) {
        this.isSelected = true;
        IEdge.selecteds.push(this);
        this.refreshGui();
    }
    onMouseDown(e) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].ChangePropertyBarContentClick(e, this);
        e.stopPropagation();
        // attach midpoint mouse follower
        if (!this.isSelected) {
            return;
        }
        const tmp = this.getBoundingMidPoints(e);
        const pos = this.owner.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().attach(this, pos, this.midNodes.indexOf(tmp.prev));
    }
    onMouseUp(e) {
        const len0 = this.midNodes.length;
        const index = this.midNodes.indexOf(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get());
        if (!this.isSelected) {
            return;
        }
        // console.log('point inserted Pre', this.midNodes, ' [0]:', this.midNodes[0], this.midNodes[1]);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().detach(false);
        const len1 = this.midNodes.length;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].insertAt(this.midNodes, index, new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePoint"](this, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CursorFollowerEP"].get().pos));
        const len2 = this.midNodes.length;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(len0 !== this.midNodes.length, 'size varied: ' + len0 + ' --> ' + len1 + ' --> ' + len2 + ' --> ' + this.midNodes.length);
        // console.log('point inserted Post:', this.midNodes,  len0 + ' --> ' + this.midNodes.length);
        this.refreshGui();
    }
    remove() {
        console.log('edge.remove()');
        this.isDeleted++;
        if (this.isDeleted > 1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'edge removed ' + this.isDeleted + ' times.', this);
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.start.edgesStart, this);
        if (this.end)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.end.edgesEnd, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(IEdge.all, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(IEdge.selecteds, this);
        const index = this.getIndex();
        this.getContainedArray()[index] = null;
        if (this.logic && this.logic.edges)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.logic.edges, this);
        console.log('edge.remove()', { thiss: this, logic: this.logic, index });
        if (this.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            this.logic.setTarget(index, null);
        }
        if (this.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            this.logic.delete(true, null, null);
        }
        this.shell.parentNode.removeChild(this.shell);
        // gc helper
        this.end = null;
        this.logic = null;
        this.tmpEnd = null;
        this.tmpEndVertex = null;
        this.endNode = null;
        this.midNodes = null;
        this.owner = null;
        this.start = null;
        this.startNode = null;
    }
    unsetTarget() {
        const v = this.end;
        if (!v) {
            return null;
        }
        this.end = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(v.edgesEnd, this);
        return v;
    }
    setTarget(v) {
        this.unsetTarget();
        this.end = v;
        if (v) {
            v.edgesEnd.push(this);
        }
    }
    mark(markb, key = 'errorGeneric', color = 'red') {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'IEdge.mark() todo.');
    }
    getEdgeHead() { return this.getEdgeHeadTail(true); }
    getEdgeTail() { return this.getEdgeHeadTail(false); }
    // bug: https://bugzilla.mozilla.org/show_bug.cgi?id=577785#c2
    getEdgeHeadTail(isHead, debug = false) {
        if (isHead) {
            this.edgeHead && this.edgeHead.parentElement.removeChild(this.edgeHead);
        }
        else {
            this.edgeTail && this.edgeTail.parentElement.removeChild(this.edgeTail);
        }
        const logic = this.logic;
        const logicref = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] ? logic : null;
        const logicclass = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] ? logic : null;
        let html = null;
        let debugi;
        let edgeTailHeadSVG = isHead ? this.edgeHead : this.edgeTail;
        if (debug) {
            console.trace();
            console.log('getEdge' + (isHead ? 'Head' : 'Tail') + '(), ', this.getStyle().edgeHeadStyle, this.isHighlighted);
            debugi = window['' + 'debug'];
            if (debugi === 4.1)
                return (edgeTailHeadSVG ? edgeTailHeadSVG : html);
        }
        if (isHead) {
            if (logicref && logicref.isContainment()) {
                html = this.generateAggregationHead(this.getStyle().edgeHeadStyle);
            }
            if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
                html = this.generateGeneralizationHead(this.getStyle().edgeHeadStyle);
            }
        }
        else {
            if (logicref && logicref.isContainment()) {
                html = this.generateAggregationTail(this.getStyle().edgeHeadStyle);
            }
            if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
                html = this.generateGeneralizationTail(this.getStyle().edgeHeadStyle);
            }
        }
        // U.pe(this instanceof ExtEdge && !html, 'cannot return null on extedge:', html, this);
        if (debug && debugi === 4.2)
            return edgeTailHeadSVG ? edgeTailHeadSVG : html;
        if (!html) {
            if (isHead)
                this.edgeHead = null;
            else
                this.edgeTail = null;
            return null;
        }
        if (isHead) {
            if (html === this.edgeHead)
                return html;
            if (!html)
                return this.edgeHead = null;
            this.edgeHead = html;
            html.classList.add('Edge', 'EdgeHead');
            if (this.headShell)
                this.headShell.appendChild(html);
        }
        else {
            if (html === this.edgeTail)
                return html;
            if (!html)
                return this.edgeTail = null;
            this.edgeTail = html;
            html.classList.add('Edge', 'EdgeTail');
            if (this.tailShell)
                this.tailShell.appendChild(html);
        }
        return html;
    }
    appendTailHead(tail, pathStr, debug = false) {
        const svg = tail ? this.edgeTail : this.edgeHead;
        const shell = tail ? this.tailShell : this.headShell;
        if (!svg) {
            return;
        }
        // debug = true;
        if (debug)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
        const oldPathStr = pathStr;
        let startsub;
        let endsub;
        // filtro il pathStr estraendo solo i primi 2 o gli ultimi 2 punti. (migliora performance su edge pieni di edgepoints)
        let pt1;
        let pt2;
        if (!tail) {
            endsub = pathStr.length;
            startsub = pathStr.lastIndexOf(this.pathLetter);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(startsub === -1, 'the pathString have no L (but should have at least 2 points)', pathStr);
            startsub = pathStr.lastIndexOf(this.pathLetter, startsub - 1);
            if (startsub === -1) {
                startsub = 0;
            }
        }
        else {
            startsub = 0;
            endsub = pathStr.indexOf(this.pathLetter);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(endsub === -1, 'the pathString have no L (but should have at least 2 points)');
            endsub = pathStr.indexOf(this.pathLetter, endsub + 1);
            if (endsub === -1) {
                endsub = pathStr.length;
            }
        }
        pathStr = pathStr.substring(startsub, endsub);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'pathStr: ' + oldPathStr + ' --> ' + pathStr, 'onEnd ? ', !tail);
        const points = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].parseSvgPath(pathStr).pts;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(points.length !== 2, 'expected exactly 2 points, the pathStr got substringed for that.', points);
        if (!tail) {
            pt1 = points[1];
            pt2 = points[0];
        }
        else {
            pt1 = points[0];
            pt2 = points[1];
        }
        if (debug) {
            this.owner.markg(pt1, true, 'red');
            this.owner.markg(pt2, false, 'blue');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'size of head: ', svg, 'pt1:', pt1, 'pt2:', pt2, ', pts:', points, pathStr, oldPathStr);
        this.appendTailHead2(tail, pt1, pt2);
    }
    appendTailHead2(tail, pt1, pt2real, debug = false) {
        const m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].getM(pt1, pt2real);
        const svg = tail ? this.edgeTail : this.edgeHead;
        let shell = tail ? this.tailShell : this.headShell;
        const HeadSize = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getSvgSize(svg);
        const firstEdgePointHtml = this.html.nextElementSibling;
        if (!shell) {
            shell = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g');
            if (tail) {
                this.tailShell = shell;
            }
            else {
                this.headShell = shell;
            }
            if (false) {}
            else {
                this.shell.appendChild(shell);
            }
            this.addEventListeners(false, true);
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(shell);
        }
        shell.appendChild(svg);
        if (debug) {
            this.owner.markg(pt1, true, 'red');
            this.owner.markg(pt2real, false, 'green');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'size of head: ', HeadSize, 'pt1:', pt1, 'pt2:', pt2real, 'm:', m);
        const degreeRad = pt1.degreeWith(pt2real, true); // U.TanToDegree(m);
        const center = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        const pt2 = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        //todo: perchè zindex e position?
        // svg.style.zIndex = '' + 100;
        // svg.style.position = 'absolute';
        pt2.x = pt1.x - HeadSize.w * Math.cos(degreeRad);
        pt2.y = pt1.y - HeadSize.h * Math.sin(degreeRad);
        center.x = (pt1.x + pt2.x) / 2;
        center.y = (pt1.y + pt2.y) / 2;
        const degree = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].RadToDegree(degreeRad) + 90; // uso riferimento con 0 = top invece di 0 = right
        if (debug) {
            this.owner.markg(pt2, false, 'blue');
        }
        shell.setAttributeNS(null, 'transform', 'rotate(' + degree + ' ' + center.x + ' ' + center.y + ')');
        (svg).setAttributeNS(null, 'x', '' + (center.x - HeadSize.w / 2));
        (svg).setAttributeNS(null, 'y', '' + (center.y - HeadSize.h / 2));
    }
    getContainedArray() { return this.logic.edges; }
    getIndex() { return this.getContainedArray().indexOf(this); }
}
IEdge.selecteds = [];
IEdge.all = null;
IEdge.shadowWidthIncrease = 7;
IEdge.edgeChangingStopTime = Date.now();
IEdge.idToEdge = {};
IEdge.edgeCount =  false || 0;


/***/ }),

/***/ "./src/guiElements/mGraph/Field/iField.ts":
/*!************************************************!*\
  !*** ./src/guiElements/mGraph/Field/iField.ts ***!
  \************************************************/
/*! exports provided: IField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IField", function() { return IField; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class IField {
    constructor(logic) { this.logic = logic; }
    getHtml() { return this.html; }
    // refreshGUI(debug: boolean = true): void { }
    remove() {
        if (this.html && this.html.parentNode) {
            this.html.parentNode.removeChild(this.html);
        }
        this.logic.field = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.owner.fields, this);
    }
}


/***/ }),

/***/ "./src/guiElements/mGraph/Layouting.ts":
/*!*********************************************!*\
  !*** ./src/guiElements/mGraph/Layouting.ts ***!
  \*********************************************/
/*! exports provided: Layouting */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Layouting", function() { return Layouting; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vis_network__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vis-network */ "./node_modules/vis-network/peer/umd/vis-network.min.js");
/* harmony import */ var vis_network__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vis_network__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



class Layouting {
    constructor(graph) {
        this.isRunning = false;
        this.id = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getID();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].setID(this.id, this);
        this.graph = graph;
        this.stabilizationSteps = 10;
        this.data = {
            nodes: [],
            edges: []
        };
        this.myOptions = {
            edgePointMode: 'vertex'
        };
        this.optionsDefault = {
            layout: {
                randomSeed: undefined,
                improvedLayout: true,
                clusterThreshold: 1,
                // clusterThreshold: 150 è il limite default per applicare improvedLayout
                // (pre-algoritmo per trovare un buon punto di partenza da cui uscirà un miglior minimo locale)
                hierarchical: {
                    enabled: false,
                    levelSeparation: 150,
                    nodeSpacing: 100,
                    treeSpacing: 200,
                    blockShifting: true,
                    edgeMinimization: true,
                    parentCentralization: true,
                    direction: 'UD',
                    sortMethod: 'hubsize',
                    shakeTowards: 'leaves'
                }
            },
            interaction: {
                dragNodes: true,
                dragView: true,
                hideEdgesOnDrag: false,
                hideEdgesOnZoom: false,
                hideNodesOnDrag: false,
                hover: false,
                hoverConnectedEdges: true,
                keyboard: {
                    enabled: false,
                    speed: { x: 10, y: 10, zoom: 0.02 },
                    bindToWindow: true
                },
                multiselect: false,
                navigationButtons: false,
                selectable: true,
                selectConnectedEdges: true,
                tooltipDelay: 300,
                zoomView: true
            },
            manipulation: {
                enabled: false,
                initiallyActive: false,
                addNode: true,
                addEdge: true,
                editNode: undefined,
                editEdge: true,
                deleteNode: true,
                deleteEdge: true,
                controlNodeStyle: {
                // all node options are valid (WTF THAT MEANS???)
                }
            },
            physics: {
                enabled: true,
                barnesHut: {
                    theta: 0.5,
                    gravitationalConstant: -1,
                    centralGravity: 1000,
                    springLength: 10,
                    springConstant: 0.04,
                    damping: 0.2,
                    avoidOverlap: 1
                },
                forceAtlas2Based: {
                    theta: 0.5,
                    gravitationalConstant: -100,
                    centralGravity: 0.01,
                    springConstant: 0.08,
                    springLength: 100,
                    damping: 0.4,
                    avoidOverlap: 0
                },
                repulsion: {
                    centralGravity: 0.2,
                    springLength: 200,
                    springConstant: 0.05,
                    nodeDistance: 100,
                    damping: 0.09
                },
                hierarchicalRepulsion: {
                    centralGravity: 0.0,
                    springLength: 100,
                    springConstant: 0.01,
                    nodeDistance: 120,
                    damping: 100,
                    avoidOverlap: 0
                },
                maxVelocity: 0.001,
                minVelocity: 0.0001,
                solver: 'forceAtlas2Based',
                stabilization: {
                    enabled: true,
                    iterations: Number.MAX_SAFE_INTEGER,
                    updateInterval: 15,
                    onlyDynamicEdges: false,
                    fit: true
                },
                timestep: 0.5,
                adaptiveTimestep: true,
                wind: { x: 0, y: 0 }
            },
        };
        delete this.optionsDefault.manipulation; // editNode is giving problems
        this.optionsDefault.configure = {
            filter: function (option, path) {
                if (path.indexOf("physics") !== -1)
                    return true;
                if (path.indexOf("smooth") !== -1 || option === "smooth")
                    return true;
                return false;
            },
            container: $('#visOptions')[0],
        };
        const container = this.htmlg = $('#' + this.graph.model.getPrefix() + '_visGraph')[0];
        this.net = new vis_network__WEBPACK_IMPORTED_MODULE_1__["Network"](container, {}, {});
        this.net.on('stabilized', () => { this.onLayoutEnd(); });
        // this.net.on('stabilizationIterationsDone', () => { this.onStabilizationStep(); } );
        this.net.on('stabilizationProgress', () => { this.onStabilizationStep(); });
        /*
        this.net.startSimulation();
        this.net.stopSimulation();// ferma senza stabilizzare?, ma chiama l'evento stabilized.
        this.net.stabilize(); // stabilizza entro N iterazioni
        */
    }
    setStyleEditorBackEvents(styleEditorOnLayoutStart, styleEditorOnLayoutEnd) {
        this.styleEditorOnLayoutStart = styleEditorOnLayoutStart;
        this.styleEditorOnLayoutEnd = styleEditorOnLayoutEnd;
    }
    onLayoutEnd() {
        const positions = this.onStabilizationStep();
        const manualStop = !this.isRunning;
        if (!manualStop)
            return;
        if (this.styleEditorOnLayoutEnd)
            this.styleEditorOnLayoutEnd();
        console.log('vis layout stopped:', positions);
    }
    positionScaleFactor(p, clone = false) {
        p = clone ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneObj(p) : p;
        p.x = p.x * Layouting.scaleFactor;
        p.y = p.y * Layouting.scaleFactor;
        return p;
    }
    onStabilizationStep() {
        //    console.log('vis stabilization step');
        let positions = this.net.getPositions();
        let key;
        for (key in positions) {
            const vertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].getByID(+key);
            let position = positions[key];
            position = this.positionScaleFactor(position);
            const ep = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgePoint"].getByID(+key);
            const newPos = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["GraphPoint"](position.x, position.y);
            // U.pe ( !!(ep && vertex), 'duplicate id', key, ep, vertex);
            // U.pe (!ep && !vertex, 'invalid id', key);
            /// todo: digli che l'evento viene da autolayout e setta onvertexmove se non viene da autolayout
            if (vertex)
                vertex.moveTo(newPos, false, false, true);
            if (!vertex && ep)
                ep.moveTo(newPos, false, true);
        }
        // todo: springlength e grav constant devi precompilarle in base alla size del grafo.
        // poi devi capire se cresce lineare, al quadrato, o come...
        return positions;
    }
    onVertexMove(v) {
        // todo: che devo fare con edge che creano nuovi edgepoint dopo set data? mi sa che devo settare gli edge dinamicamente e tenermi i vertici selezionati al momento dello start
        if (!this.isRunning)
            return;
        const node = this.vertexToVis(v);
        if (!node)
            return;
        this.stop();
        this.start();
        return;
        const size = v.getSize();
        node.size = (size.w * size.h === 0) ? 0 : size.w; // Math.max(size.w, size.h);
        node['heightConstraint'] = size.h;
        node.x = size.x;
        node.y = size.y;
    }
    prepareStartData() {
        let vertexes = this.graph.getVertexSelection();
        if (!vertexes || !vertexes.length)
            vertexes = this.graph.getAllVertex();
        this.clearLayout();
        this.addToLayout(vertexes, false);
        this.data.edges = this.prepareEdgeData(); // setta edge ed edgepoint nel data.nodes
        this.data = this.applyScaleFactor(Layouting.scaleFactor, false);
    }
    linkVisVertex(v, node) { this.vertexMap[v.id] = { vertex: v, visNode: node }; }
    vertexToVis(v) { return this.vertexMap[v.id] && this.vertexMap[v.id].visNode; }
    visToVertex(v) { return this.vertexMap[v.id] && this.vertexMap[v.id].vertex; }
    clearLayout() {
        this.vertexMap = {};
        this.data.nodes = [];
    }
    addToLayout(vertexes, restart) {
        if (restart)
            return this.restart();
        for (const v of vertexes) {
            if (!v.autoLayout)
                continue;
            let node = this.vertexToVis(v);
            if (node)
                return; // already exists
            node = {};
            node.id = v.id;
            this.linkVisVertex(v, node);
            const size = v.getSize();
            // https://almende.github.io/vis/docs/network/nodes.html deprecated, but best documentation
            node.label = v.logic().name; // v.logic().printableNameshort(10);
            node.shape = 'square'; // esiste anche "box" ma solo con label inside, e prende la size dalla label...
            node.size = (size.w * size.h === 0) ? 0 : size.w; // Math.max(size.w, size.h);
            node['heightConstraint'] = size.h;
            node.x = size.x;
            node.y = size.y;
            node.font = {};
            node.font.size = 100;
            node.font.face = 'arial';
            node.font.color = '#000000';
            this.data.nodes.push(node);
        }
        this.prepareEdgeData();
    }
    restart() {
        this.start();
        this.stop();
    }
    removeFromLayout(vertexes, restart) {
        if (restart)
            return this.restart();
        for (const v of vertexes) {
            if (v.autoLayout)
                continue;
            const node = this.vertexToVis(v);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(this.data.nodes, node);
            delete this.vertexMap[v.id];
        }
        this.prepareEdgeData();
    }
    getCurrentVertexes() {
        let v = [];
        for (let id in this.vertexMap) {
            v.push(this.vertexMap[id].vertex);
        }
        return v;
    }
    applyScaleFactor(factor, clone = false) {
        const data = clone ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneObj(this.data) : this.data;
        for (let node of data.nodes) {
            console.log('vis node loop', node, data);
            // node.scaling ??
            node.x = node.x && node.x / factor;
            node.y = node.y && node.y / factor;
            node.size = node.size && node.size / factor;
            node['heightConstraint'] = node['heightConstraint'] && node['heightConstraint'] / factor;
            if (node.font) {
                node.font['size'] = node.font['size'] && node.font['size'] / factor;
            }
        }
        for (let edge of data.edges) {
            edge.length = edge.length && edge.length / factor;
            edge.width = edge.width && edge.width / factor;
            edge.hoverWidth = edge.hoverWidth && edge.hoverWidth / factor;
            edge.selectionWidth = edge.selectionWidth && edge.selectionWidth / factor;
        }
        return data;
    }
    prepareEdgeData() {
        let visedges;
        const vertexes = this.getCurrentVertexes();
        let edgesArr = null; // this.graph.getEdgeSelection();
        if (!edgesArr || !edgesArr.length) {
            const edgeset = new Set();
            vertexes.forEach((v) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].SetMerge(true, edgeset, v.edgesEnd, v.edgesStart); });
            edgesArr = [...edgeset];
        }
        // accetto solo edge che hanno start ed end nella selezione, e che NON hanno length 0 (start = end senza midpoint forzati)
        edgesArr = edgesArr.filter((e) => { return this.vertexMap[e.start.id] && this.vertexMap[e.end.id] && !(e.midNodes.length === 0 && e.start === e.end); });
        visedges = edgesArr.map((e) => { return { from: e.start.id, to: e.end.id, id: e.id }; });
        switch (this.myOptions.edgePointMode) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unexpected switch layouting.edgepointMode:', this.myOptions.edgePointMode);
                break;
            case 'ignore':
            case 'relative': break;
            case 'vertex':
                const midPoints = [];
                edgesArr.forEach((e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ArrayMerge(midPoints, e.midNodes); });
                const midPointsvis = midPoints.map((ep) => {
                    const node = {};
                    const size = ep.getSize();
                    // https://almende.github.io/vis/docs/network/nodes.html deprecated, but best documentation
                    node.id = ep.id;
                    node.shape = 'square'; // esiste anche "box" ma solo con label inside, e prende la size dalla label...
                    node.label = '°';
                    node.size = (size.w * size.h === 0) ? 0 : size.w; // Math.max(size.w, size.h);
                    node['heightConstraint'] = size.h;
                    node.x = size.x;
                    node.y = size.y;
                    return node;
                });
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ArrayMerge(this.data.nodes, midPointsvis);
                break;
            case 'delete':
                Object.values(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgePoint"].all).forEach((ep) => { ep.detach(); });
                break;
        }
        return visedges;
    }
    start() {
        this.prepareStartData();
        // this.nodeExampleCompiler.shape;
        // this.nodeExampleCompiler.shapeProperties.
        this.net.setOptions(this.optionsDefault);
        console.log('vis.data:', this.data);
        this.net.setData(this.data);
        this.isRunning = true;
        if (this.styleEditorOnLayoutStart)
            this.styleEditorOnLayoutStart();
        // this.net.startSimulation();
    }
    stop() {
        this.net.stopSimulation();
    }
    stabilize(steps = null, renewData = true) {
        if (renewData) {
            this.net.setOptions(this.optionsDefault);
            this.prepareStartData();
            this.net.setData(this.data);
        }
        this.net.stabilize(steps === null ? steps : this.stabilizationSteps);
    }
    setOption(key, value) {
        const keypath = key.split('.');
        let opt = this.optionsDefault;
        switch (key) {
            default:
                for (let i = 0; i < keypath.length - 1; i++) {
                    opt = opt[keypath[i]];
                    console.log('key2 subpart: ', keypath[i], '->', opt);
                }
                opt[keypath[keypath.length - 1]] = value;
                console.log('key2 END: setting ', keypath[keypath.length - 1], '->', value);
                break;
        }
    }
    getOption(key) {
        const keypath = key.split('.');
        let opt = this.optionsDefault;
        let ret;
        switch (key) {
            default:
                for (let i = 0; i < keypath.length - 1; i++) {
                    opt = opt[keypath[i]];
                    // console.log('key2 subpart: ', keypath[i], '->', opt);
                }
                ret = opt[keypath[keypath.length - 1]];
                //console.log('key2 END: ', keypath[keypath.length - 1], '->', ret);
                break;
        }
        return ret;
    }
}
Layouting.maxID = 1;
Layouting.scaleFactor = 1;


/***/ }),

/***/ "./src/guiElements/mGraph/Vertex/Mark.ts":
/*!***********************************************!*\
  !*** ./src/guiElements/mGraph/Vertex/Mark.ts ***!
  \***********************************************/
/*! exports provided: MarkStyle, ColorCycle, Mark */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MarkStyle", function() { return MarkStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorCycle", function() { return ColorCycle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mark", function() { return Mark; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class MarkStyle {
    constructor(color = null, radiusX = 10, radiusY = 10, width = 5, backColor = 'transparent', extraOffset = null) {
        this.color = 'red';
        this.radiusX = 10;
        this.radiusY = 10;
        this.width = 5;
        this.backColor = 'none';
        this.extraOffset = null;
        // if (color === null) { color = 'yellow'; }
        if (radiusX === null) {
            radiusX = 10;
        }
        if (radiusY === null) {
            radiusY = 10;
        }
        if (backColor === null) {
            backColor = 'transparent';
        }
        if (width === null) {
            width = 5;
        }
        if (!extraOffset) {
            const same = -width;
            extraOffset = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](same, same, same, same);
        }
        this.color = color;
        this.radiusX = radiusX;
        this.radiusY = radiusY;
        this.width = width;
        this.backColor = backColor;
        this.extraOffset = extraOffset;
    }
}
class ColorCycle {
    constructor(colors) {
        this.index = -1;
        this.colors = colors;
    }
    get() {
        this.incrementIndex(1);
        return this.colors[this.index];
    }
    getindex(i) {
        this.index = i % this.colors.length;
        return this.colors[this.index];
    }
    incrementIndex(amount = 1) { this.index = (this.index + amount) % this.colors.length; }
    IUsedThisColor(color) {
        let index = this.colors.indexOf(color);
        if (index >= 0)
            this.index = index;
    }
}
class Mark {
    constructor(mp, paired, key, color = null, radiusX = 10, radiusY = 10, width = 5, backColor = 'transparent', extraOffset = null) {
        if (!Mark.colorCycle)
            this.staticinit();
        this.id = Mark.maxID++;
        this.mp1 = mp;
        this.mp2 = paired;
        this.key = key || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].genID();
        if (!Mark.markingByKey[key])
            Mark.markingByKey[key] = [];
        Mark.markingByKey[key].push(this);
        this.style = new MarkStyle(color, radiusX, radiusY, width, backColor, extraOffset);
    }
    static removeByKey(key) {
        let mark;
        for (mark of Mark.markingByKey[key])
            mark.mark(false);
        return Mark.markingByKey[key];
    }
    staticinit() {
        Mark.colorCycle = new ColorCycle(['red', 'blue', 'gray', 'green', 'yellow', 'purple', 'orange', 'brown']);
    }
    isApplied() {
        // return !!mp.Vmarks[this.key];
        return !!this.css1 || !!this.css2;
    }
    setHtml(markhtml, mp, css, markb) {
        if (this.style.color === null) {
            this.style.color = Mark.colorCycle.get();
        }
        let html = this.mp1.getHtmlOnGraph();
        let i;
        /*if (this.key === 'refhover') { // crosshair (+), alias (default+link), cell (excel)ù
          const $inputs = $(html).find('input, textarea, select, button');
          let cursor: string = null;
          if (markb) {
            html.style.cursor = cursor = (this.style.color === 'red' ? 'no-drop' : 'crosshair');
          } else { html.style.removeProperty('cursor'); }
          for (i = 0; i < $inputs.length; i++) {
            if (cursor) { $inputs[i].style.cursor = cursor; }
            else { $inputs[i].style.removeProperty('cursor'); }
          }
        }*/
        // mark off
        if (!markb) { // se non deve essere marchiato
            if (this.isApplied()) { // ma lo è attualmente
                if (markhtml.parentNode) {
                    markhtml.parentNode.removeChild(markhtml);
                }
                delete mp.Vmarks[this.key];
                delete _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].allmarks[mp.id + this.key];
                html.classList.remove('.marked_' + this.id);
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].remove(css);
            return;
        }
        // mark on
        mp.Vmarks[this.key] = this;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].allmarks[mp.id + this.key] = this;
        // html.classList.add('marked_' + this.id);
        // const model = mp.getModelRoot();
        // const size: GraphSize = model.graph.toGraphCoordS(U.sizeof(html));
        // U.setSvgSize(markhtml, size, null);
        let stylestr = '' +
            (this.style.backColor ? '    background-color:' + this.style.backColor + ' !important;\n' : '') +
            '    outline: ' + this.style.width + 'px solid ' + this.style.color + ' !important;\n' +
            (this.key === 'refhover' ? '    pointer: ' + (this.style.color === 'red' ? +'no-drop' : 'crosshair') + ' !important;' : '') +
            '    outline-offset: ' + this.style.extraOffset.x + 'px !important;';
        css.innerHTML += '[data-modelpieceid="' + mp.id + '"]' + '{' + stylestr + '}\n';
        document.body.append(css);
        /*+'[data-modelpieceid="' + mp.id + '"]:before{' +
        '    content: \'\';' +
        '    width: 100%;\n' +
        '    height: 100%;\n' +
        '    clear: both;\n' +
        '    display: table;\n' +
        stylestr +
        '    outline-offset: ' + -this.style.extraOffset.x + 'px !important;' +
        '    outline-offset: 10px;\n}'*/
        /*
        markhtml.setAttributeNS(null, 'rx', '' + (this.style.radiusX));
        markhtml.setAttributeNS(null, 'ry', '' + (this.style.radiusY));
        markhtml.setAttributeNS(null, 'stroke', '' + (this.style.color));
        markhtml.setAttributeNS(null, 'stroke-width', '' + (this.style.width));
        markhtml.setAttributeNS(null, 'fill', '' + (this.style.backColor));
        if ((markhtml as HTMLElement).style) (markhtml as HTMLElement).style.pointerEvents = 'none';
        model.graph.vertexContainer.append(markhtml);
        */
    }
    mark(set = true) {
        // console.log((set ? '' : 'un') + 'mark: 2x ', this.key, set);
        if (set === this.isApplied())
            return;
        if (set && (this.mp1 && this.mp1.Vmarks[this.key] || this.mp2 && this.mp2.Vmarks[this.key])) {
            return;
        }
        if (this.style.color === null) {
            this.style.color = Mark.colorCycle.get();
        }
        if (this.mp1 && !this.html1) {
            this.html1 = document.createElement('div');
        }
        if (this.mp2 && !this.html2) {
            this.html2 = document.createElement('div');
        }
        if (this.mp1 && !this.css1) {
            this.css1 = document.createElement('style');
        }
        if (this.mp2 && !this.css2) {
            this.css2 = document.createElement('style');
        }
        if (this.mp1 && this.mp1.getVertex(false))
            this.setHtml(this.html1, this.mp1, this.css1, set);
        if (this.mp2 && this.mp2.getVertex(false))
            this.setHtml(this.html2, this.mp2, this.css2, set);
    }
}
Mark.colorCycle = null;
Mark.maxID = 0;
Mark.markingByKey = {};


/***/ }),

/***/ "./src/guiElements/mGraph/Vertex/iVertex.ts":
/*!**************************************************!*\
  !*** ./src/guiElements/mGraph/Vertex/iVertex.ts ***!
  \**************************************************/
/*! exports provided: StartDragContext, IVertex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StartDragContext", function() { return StartDragContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IVertex", function() { return IVertex; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _common_measurable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/measurable */ "./src/common/measurable.ts");



class StartDragContext {
    // time: Date;
    // grid: GraphPoint;
    constructor(v) {
        this.size = v.size.duplicate();
        this.vertex = v;
        // this.time = new Date();
        // this.grid = v.owner.grid.duplicate();
    }
}
class IVertex {
    constructor(logical, size = null) {
        this.tolleranzaRightClickMove = 5;
        this.fields = [];
        this.edgesStart = [];
        this.edgesEnd = [];
        this.Vmarks = {};
        this.autoLayout = true;
        if (!logical)
            return;
        this.id = IVertex.ID++;
        const graph = logical.getModelRoot().graph;
        this.logic(logical);
        if (graph) {
            graph.addVertex(this);
        }
        this.contains = [];
        this.fields = [];
        this.edgesStart = [];
        this.edgesEnd = [];
        this.classe = logical;
        this.classe.vertex = this;
        this.setGraph(logical.getModelRoot().graph);
        if (!size) {
            const gsize = this.owner.getVisibleGSize();
            const centered = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](this.owner.scroll.x + (gsize.w - IVertex.defaultSize.w) / 2, this.owner.scroll.y + (gsize.h - IVertex.defaultSize.y) / 2, IVertex.defaultSize.w, IVertex.defaultSize.h);
            // console.log('centering vertex', {gsize, centered, scroll:this.owner.scroll, defSize: IVertex.defaultSize});
            const allSizes = Object.values(IVertex.all).map((e) => e.size);
            let offset = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](Math.max(IVertex.defaultSize.w + 80, this.owner.grid.x * 2), Math.max(IVertex.defaultSize.h + 100, this.owner.grid.y * 2));
            let distanceMagnitude = 1;
            // a distanza 0 è il centro, a distanza 1 sono le 8 "megacelle" adiacenti, a distanza 2 sono 3*4+4 = 16,
            // a distanza i sono (i*2-1)*4+4, a distanza 10 sono 80 celle escluse le interne e (i*2-1)^2 = 361 includendole
            let maxlooping = 10000;
            let looping = 0;
            if (!centered.isOverlappingAnyOf(allSizes)) {
                size = centered;
            }
            else {
                size = centered.duplicate();
                foundNonOverlapping: {
                    for (let distanceMagnitude = 1; distanceMagnitude <= 10; distanceMagnitude++) {
                        const squareSide = 1 + distanceMagnitude * 2;
                        const halfside = Math.floor(squareSide / 2);
                        let row, column;
                        // check only top row entirely except for top-left corner
                        column = 0;
                        size.y = centered.y + (column - halfside) * offset.y;
                        for (row = 1; row < squareSide; row++) {
                            size.x = centered.x + (row - halfside) * offset.x;
                            if (looping++ > maxlooping) {
                                console.error('maxloop', { column, row, squareSide, distanceMagnitude });
                                break foundNonOverlapping;
                            }
                            if (!size.isOverlappingAnyOf(allSizes)) {
                                break foundNonOverlapping;
                            }
                        }
                        // console.error("looping:", distanceMagnitude, maxlooping);
                        // check rightmost column except for corners
                        row = squareSide - 1;
                        size.x = centered.x + (row - halfside) * offset.x;
                        for (column = 1; column < squareSide - 1; column++) {
                            size.y = centered.y + (column - halfside) * offset.y;
                            if (!size.isOverlappingAnyOf(allSizes)) {
                                break foundNonOverlapping;
                            }
                        }
                        // check only bottom row in reverse
                        column = squareSide - 1;
                        size.y = centered.y + (column - halfside) * offset.y;
                        for (row = squareSide - 1; row >= 0; row--) {
                            size.x = centered.x + (row - halfside) * offset.x;
                            if (looping++ > maxlooping) {
                                console.error('maxloop', { column, row, squareSide, distanceMagnitude });
                                break foundNonOverlapping;
                            }
                            if (!size.isOverlappingAnyOf(allSizes)) {
                                break foundNonOverlapping;
                            }
                        }
                        // check leftmost column except for bottom-left corner in reverse
                        row = 0;
                        size.x = centered.x + (row - halfside) * offset.x;
                        for (column = squareSide - 2; column >= 0; column--) {
                            size.y = centered.y + (column - halfside) * offset.y;
                            if (!size.isOverlappingAnyOf(allSizes)) {
                                break foundNonOverlapping;
                            }
                        }
                    }
                    // not found empty space in any cell, i'll just allow overlap
                    size = centered;
                }
            }
        }
        IVertex.all[this.id] = this;
        this.size = size;
        this.refreshGUI();
        // this.refreshGUI(); // need both refresh
    }
    static staticinit() {
        const g = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        g.x = 'prevent_doublemousedowncheck';
        g.y = 'prevent_doublemousedowncheck';
        IVertex.minSize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](null, null, 0, 0);
        IVertex.defaultSize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](0, 0, 201, 41);
        return IVertex.selectedGridWasOn = g;
    }
    /*
      static linkVertexMouseDownButton(e: MouseDownEvent): void {
        const ref: IReference = ModelPiece.get(e) as IReference;
        U.pe(!(ref instanceof IReference), 'linkVertexButtons are currently only allowed on IReferences.');
        const edges: IEdge[] = ref.getEdges();
        U.pe(!edges, 'ref.edges === null', ref);
        let edge: IEdge;
        let index: number;
        if (ref.getModelRoot().isMM()) { edge = edges[index = 0]; } else
        if (ref.upperbound > 0 && edges.length >= ref.upperbound) { edge = edges[index = ref.upperbound - 1]; }
        else { edge = new IEdge(ref); index = edges.length - 1; }
        if (!edge) edge = new IEdge(ref);
        IVertex.linkVertexMouseDown(e, edge); }*/
    static linkVertexMouseUpOnSelf(e) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            // IEdge.edgeChanging.owner.edgeChangingAbort(e);
            // e.stopPropagation();
        }
    }
    static linkVertexMouseDown(e, edge = null, location = null, delayed = false) {
        console.log('linkVertexMousedown:', e);
        if (e && e.button === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseRightButton)
            return;
        if (e) {
            e.stopPropagation();
        }
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging && e && e.target.classList.contains('LinkVertex')) {
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging.start.htmlg, e.target)) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging.owner.edgeChangingAbort(e);
                return;
            }
            if (delayed) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'cannot start defining a new edge without confirming the previous');
                return;
            }
            // hack per fare in modo che questo venga eseguito dopo il mouseup nel caso sia stato premuto su un .linkVertex (confermo e avvio un nuovo edge)
            setTimeout(() => IVertex.linkVertexMouseDown(e, edge, location, true), 200);
            return;
        }
        // console.log('shouldstop?', {edge: IEdge.edgeChanging, target: e.target, e, thiss:this});
        location = location || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(e); //Status.status.getActiveModel().graph.toGraphCoord(new Point(e.pageX, e.pageY));
        if (!edge) {
            const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(e.target);
            const mr = mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"] ? mp : null;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!mr, 'button.linkVertex should only be inserted inside M1-references', mp, e);
            let index = mr.getfirstEmptyTarget();
            if (index === -1) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'This reference is already filled to his upperbound.');
                e.preventDefault();
                e.stopPropagation();
                return;
            }
            const upperbound = mr.getUpperbound();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(upperbound === 0, 'Before setting a reference change set an Upperbound != 0 for his m2 counterpart.');
            if (upperbound === 0)
                return;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!mr.edges[index], "dev error, was trying to overwrite an existing edge");
            edge = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"](mr, index, mp.getVertex(), null, location);
        }
        // edge = edge ? edge : IEdge.get(e);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!edge, 'IVertex.linkVertexMouseDown() failed to get edge:', e);
        const logic = edge.logic;
        const classe = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] ? logic : null;
        const ref = logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] ? logic : null;
        // U.pe( !ref, 'The .LinkVertex element must be inserted only inside a reference field.');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging = edge;
        edge.useRealEndVertex = false;
        edge.useMidNodes = true;
        edge.tmpEnd = location ? location : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(e);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!edge.tmpEnd, 'failed to get coordinates from event:', e);
        edge.tmpEndVertex = null;
        // edge.tmpEndVertex = ref.parent.getVertex();
        edge.refreshGui();
    }
    static getvertex(e, canUseMp = true) {
        return IVertex.getvertexByHtml(e.currentTarget, canUseMp);
    }
    static getvertexByHtml(node0, canUseMp = true) {
        if (canUseMp) {
            const logic = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(node0);
            return logic && logic.getVertex(false);
        }
        let node = node0;
        while (node) {
            if (node.dataset && node.dataset.vertexID)
                return IVertex.getByID(+node.dataset.vertexID);
            node = node.parentNode;
        }
        return null;
    }
    /*let node: HTMLElement = node0 as HTMLElement
    U.pe(!node, 'getVertexByHtml: parameter is not a DOM node:', node);
    while (node && node.dataset && !node.dataset.vertexID) { node = node.parentElement; }
    // console.log('getVertex by id:' + node.dataset.vertexID, 'all:', IVertex.all);
    return node && node.dataset ? IVertex.getByID(+(node.dataset.vertexID)) : null; }*/
    static getByID(id) { return IVertex.all[id]; }
    static FieldNameChanged(e) {
        const html = e.currentTarget;
        const modelPiece = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(html);
        modelPiece.fieldChanged(e);
        modelPiece.getModelRoot().graph.propertyBar.show(null, html, null, true);
        // $(html).trigger('click'); // updates the propertyBar
        // const m: IModel = modelPiece.getModelRoot();
        const mm = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm;
        const m = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m;
        setTimeout(() => {
            modelPiece.refreshGUI();
            // mm.refreshGUI();
            // m.refreshGUI();
        }, 1);
    }
    static ChangePropertyBarContentClick(e, isEdge = null) {
        const html = e.target; // todo: approfondisci i vari tipi di classType (current, orginal...)
        const modelPiece = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(html);
        const model = modelPiece.getModelRoot();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!modelPiece, 'failed to get modelPiece from html:', html);
        const pbar = model.graph.propertyBar;
        pbar.show(modelPiece, html, isEdge, false);
        return modelPiece;
    }
    static GetMarkedWith(markKey, colorFilter = null) {
        const ret = [];
        for (const id in IVertex.all) {
            if (!IVertex.all[id]) {
                continue;
            }
            const vertex = IVertex.all[id];
            if (vertex.isMarkedWith('refhover', colorFilter)) {
                ret.push(vertex);
            }
        }
        return ret;
    }
    isAllowingEdge(edge) {
        const start = edge.start;
        const end = edge.end;
        const startSvgForeign = start && start.getHtmlRawForeign();
        const endSvgForeign = end && end.getHtmlRawForeign();
        const debug = false;
        // start: null true true , end: null true false
        debug && console.log('isAllowingEdge pre-check keep-edges ', start && start.logic() && start.logic().name, ' - ', end && end.logic() && end.logic().name, ' start:', startSvgForeign && startSvgForeign.getAttribute('keep-edges'), start.logic() !== _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject, startSvgForeign && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(startSvgForeign.getAttribute('keep-edges'), start.logic() !== _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject), ', end:', endSvgForeign && endSvgForeign.getAttribute('keep-edges'), end && end.logic() !== _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject, endSvgForeign && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(endSvgForeign.getAttribute('keep-edges'), end.logic() !== _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject));
        if (startSvgForeign && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(startSvgForeign.getAttribute('keep-edges'), start.logic() !== _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject))
            return false;
        if (endSvgForeign && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(endSvgForeign.getAttribute('keep-edges'), end.logic() !== _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject))
            return false;
        let kind;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"])
            kind = "ext";
        // if (this instanceof IndirectEdge) kind = "oth";
        else
            kind = "rel";
        const conditionStart = start && IVertex.isAllowingEdges(startSvgForeign, ["out"], [kind]);
        const conditionEnd = end && IVertex.isAllowingEdges(startSvgForeign, ["in"], [kind]);
        debug && console.log("isAllowingEdge(", edge, conditionStart, conditionEnd);
        return (start ? conditionStart["out"][kind] : 0) + (end ? conditionEnd["in"][kind] : 0) > 0;
    }
    static isAllowingEdges(svgForeign, directions = ["in", "out"], kinds = ["rel", "ext", "oth"]) {
        const ret = { in: {}, out: {} };
        let defaultValues = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ParseNumberOrBooleanOptions"]();
        defaultValues.defaultValue = 1;
        defaultValues.trueValue = 1;
        defaultValues.falseValue = -1;
        for (let direction of directions) {
            for (let kind of kinds) {
                ret[direction][kind] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].parseNumberOrBoolean(svgForeign.getAttribute('show-' + direction + '-' + kind + '-edges'), defaultValues);
            }
        }
        return ret;
    }
    mark(markb, key, color = 'red', radiusX = 10, radiusY = 10, width = 5, backColor = 'none', extraOffset = null) {
        if (!this.isDrawn()) {
            return;
        }
        if (color === null) {
            color = 'yellow';
        }
        if (radiusX === null) {
            radiusX = 10;
        }
        if (radiusY === null) {
            radiusY = 10;
        }
        if (backColor === null) {
            backColor = 'none';
        }
        if (width === null) {
            width = 5;
        }
        let mark = this.Vmarks[key];
        if (key === 'refhover') { // crosshair (+), alias (default+link), cell (excel)
            const vertexRoot = this.htmlForeign;
            const $inputs = $(vertexRoot).find('input, textarea, select, button');
            let cursor = null;
            // console.log('markedHover', markb, vertexRoot, $inputs);
            if (markb) {
                vertexRoot.style.cursor = cursor = (color === 'red' ? 'no-drop' : 'crosshair'); // NO important, bugga e non setta il campo.
            }
            else {
                vertexRoot.style.removeProperty('cursor');
            }
            let i;
            for (i = 0; i < $inputs.length; i++) {
                if (!cursor) {
                    $inputs[i].style.removeProperty('cursor');
                }
                else {
                    $inputs[i].style.cursor = cursor;
                }
            }
        }
        // mark off
        if (!markb) { // se non deve essere marchiato
            if (mark) { // ma lo è attualmente
                if (mark.parentNode) {
                    mark.parentNode.removeChild(mark);
                }
                delete this.Vmarks[key];
            }
            return;
        }
        // mark on
        if (!extraOffset) {
            const same = 5;
            extraOffset = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](same, same, same, same);
        }
        mark = this.Vmarks[key] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('rect');
        const size = this.getSize();
        // console.log('extraoffset:', extraOffset, 'size:', size);
        size.x -= extraOffset.x;
        size.y -= extraOffset.y;
        size.w += extraOffset.x + extraOffset.w;
        size.h += extraOffset.y + extraOffset.h;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].setSvgSize(mark, size, null);
        mark.setAttributeNS(null, 'rx', '' + (radiusX));
        mark.setAttributeNS(null, 'ry', '' + (radiusY));
        mark.setAttributeNS(null, 'stroke', '' + (color));
        mark.setAttributeNS(null, 'stroke-width', '' + (width));
        mark.setAttributeNS(null, 'fill', '' + (backColor));
        this.logic().getModelRoot().graph.vertexContainer.prepend(mark);
    }
    getStartPoint(nextPt = null) { return this.getMidPoint(nextPt); }
    getEndPoint(nextPt = null) { return this.getMidPoint(nextPt); }
    getMidPoint(prevPt = null) {
        // NB: MAI fare sizeof() di un SVGForeignObjectElement, ridà valori sballati. fallo ai suoi childs.
        const html = this.getHtmlFirstChild();
        const $htmlEP = $(html).find('.EndPoint');
        let htmlEP;
        let endPointSize;
        let pt;
        if ($htmlEP.length === 0) {
            htmlEP = html;
        }
        else {
            htmlEP = $htmlEP[0];
        }
        endPointSize = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(htmlEP);
        // console.log('htmlsize:', htmlSize, 'childSize:', U.sizeof(html.firstChild as HTMLElement));
        // console.log('real size(', htmlSize, ') vs graphSize(', this.toGraphCoordS(htmlSize), '), html:', html);
        const endPointGSize = this.owner.toGraphCoordS(endPointSize);
        const vertexGSize = this.getSize();
        pt = endPointGSize.tl();
        pt.x += endPointGSize.w / 2;
        pt.y += endPointGSize.h / 2;
        if (!prevPt) {
            return pt;
        }
        pt = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"].closestIntersection(vertexGSize, prevPt, pt, this.owner.grid);
        // U.pe(!U.isOnEdge(pt, vertexGSize), 'not on Vertex edge.');
        const debug = false;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(debug && !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isOnEdge(pt, vertexGSize), 'not on Vertex edge.');
        return pt;
    }
    setSize(size, refreshVertex = false, refreshEdge = true, trigger = null && false) {
        const htmlForeign = this.getHtmlRawForeign();
        if (!trigger && (!size || this.getSize().equals(size))) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].setSvgSize(htmlForeign, this.size, IVertex.defaultSize);
            return;
        }
        /*
        if(window['debug'] === 1) for (let key in IVertex.all) {
          let v2 = (IVertex.all[key] as IVertex);
          U.pe(v2 !== this && v2.size.equals(size), 'err:', this.getSize(), '->', size);
        }*/
        const oldsize = this.size.duplicate();
        this.size.x = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.x)) ? +size.x : this.size.x;
        this.size.y = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.y)) ? +size.y : this.size.y;
        this.size.w = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.w)) ? +size.w : this.size.w;
        this.size.h = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(size.h)) ? +size.h : this.size.h;
        // console.log('oldSize:', oldsize, 'new size candidate:', size, 'result:', this.size);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].setSvgSize(htmlForeign, this.size, IVertex.defaultSize);
        const pbar = this.owner.propertyBar;
        if (pbar && pbar.selectedModelPiece === this.logic() && pbar.styleEditor.isLoaded() && pbar.styleEditor.sizeInputx) {
            const se = pbar.styleEditor;
            se.sizeInputx.value = '' + this.size.x;
            se.sizeInputy.value = '' + this.size.y;
            se.sizeInputw.value = '' + this.size.w;
            se.sizeInputh.value = '' + this.size.h;
        }
        // todo: cerca tutti gli as string, non è un vero cast ma solo un cambiotipo senza trasformazione, crea errori.
        // const spostamento: GraphPoint = this.size.tl().subtract(oldSize.tl(), true);
        // todo: cambia struttura interna size in tl+br, controlla tutti i riferimenti a tl(newinstnce = false) e considera di cambiarli a true.
        if (refreshVertex) {
            this.refreshGUI();
        }
        if (refreshEdge) {
            this.refreshEdgesGUI();
        }
        if (trigger) {
            // todo: problema: un solo measurable node può eseguire gli eventi "on...." (il foreignObject)
            const measnode = this.getMeasurableNode();
            // todo: problema 2: i trigger possono eseguire solo comandi dello stesso nodo che contiene il trigger.
            // todo problema 3: se imposto on onmove -> move linked object(follow me) && onmove->constraint e sposto in modo da violare il constraint:
            //  siccome il constraint viene eseguito dopo, il linked object segue il mouse ma non l'oggetto che rimane fisso per il constraint.
            //  non è un bug, va benissimo e deve funzionare così, però devo anche prevedere un assegnamento di ordine dei comandi
            //  - fix lessicografico con prefix number: poco user friendly e costringe i nomi
            //  - fix con pulsanti "sposta regola" su o giù e segui ordine di html (ordine attributi sul nodo in grafo == ordine esecuzione == ordine visualizzazione style editor)
            if (measnode.classList.contains('measurable'))
                this.measuringEventTrigger(null, null, trigger, measnode);
        }
    }
    draw() {
        console.trace('vdraw' + this.id);
        // return this.draw0();
        try {
            this.draw0();
        }
        catch (e) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to draw vertex of "' + this.logic().printableNameshort() + '".', e);
        }
    }
    isAutosize() {
        const html = this.getHtmlFirstChild();
        const autosizey = html.dataset.autosizey;
        const autosizex = html.dataset.autosizex;
        const ret = { x: true, y: true, atLeastOne: null };
        const admittedStyles = ['auto', 'min-content', 'max-content'];
        const admittedDisplays = ['inline', 'inline-block', 'inline-flex'];
        if (autosizey !== '1' && autosizey !== 't' && autosizey !== 'true') {
            ret.y = false;
        }
        else if (admittedStyles.indexOf(html.style.height) === -1) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].oneTime('autosize1key' + this.id, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw, true, 'To use autosize the root node must have "height: ' + admittedStyles.join('|') + ';", this has been automatically solved with "auto". was:' + html.style.height);
            html.style.height = 'auto';
        }
        if (autosizex !== '1' && autosizex !== 't' && autosizex !== 'true') {
            ret.x = false;
        }
        else {
            if (admittedStyles.indexOf(html.style.width) === -1) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].oneTime('autosize1key' + this.id, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw, true, 'To use autosize the root node must have "width: ' + admittedStyles.join('|') + ';", this has been automatically solved with "auto". was:' + html.style.width);
                html.style.width = 'auto';
            }
            if (admittedDisplays.indexOf(html.style.display) === -1) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].oneTime('autosize2key' + this.id, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw, true, 'To use autosizeWidth the root node must have "display: ' + admittedDisplays.join('|') + ';", this has been automatically solved with "inline-block". was:' + html.style.display);
                html.style.display = 'inline-block';
            }
        }
        ret.atLeastOne = ret.x || ret.y;
        return ret;
    }
    draw0() {
        /*const htmlRaw: SVGForeignObjectElement = U.newSvg('foreignObject');
        htmlRaw.appendChild(this.classe.getStyleObj().html);*/
        const style = this.classe.getStyle();
        const htmlRaw0 = style.html;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.classe || !(htmlRaw0 instanceof Element), 'class null?', this, htmlRaw0);
        const htmlRaw = this.setHtmls(this.classe, htmlRaw0);
        if (this.classe instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"])
            this.drawC(this.classe);
        if (this.classe instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"])
            this.drawE(this.classe);
        this.addEventListeners();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fixHtmlSelected($(htmlRaw));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors($(this.getHtmlFirstChild()));
        // let onrefresh: string = this.htmlForeign.getAttribute('onrefreshgui');
        const $htmlraw = $(htmlRaw);
        let i;
        const parenttmp = htmlRaw.parentNode;
        const next = htmlRaw.nextSibling;
        if (parenttmp)
            parenttmp.removeChild(htmlRaw);
        // duplicate id removal. TODO: non funziona, forse rileva ancora gli id del vecchio html generato e risultano già inseriti on refresh.
        /*const idarr = $htmlraw.find('[id]').addBack('[id]');
        for (i = 0; i < idarr.length; i++) {
          if (!document.getElementById(idarr[i].id)) { continue; }
          idarr[i].innerHTML = '';
          U.clearAttributes(idarr[i]);
          idarr[i].style.display = 'none';
        }*/
        // because input value cannot accept full iso string... anyone wants a different segment/format
        // 'input[type="date"], input[type="time"], input[type="datetime-local"], input[type="month"], input[type="week"]') as any;
        if (parenttmp) {
            if (next)
                parenttmp.insertBefore(htmlRaw, next);
            else
                parenttmp.appendChild(htmlRaw);
        }
        if (this.isAutosize().atLeastOne)
            this.autosizeNew(false, false);
        this.fixDateInputs(); // setTimeout(() => this.fixDateInputs(), 7000);
        this.runUserScripts();
    }
    runUserScripts() {
        const scripts = $(this.getHtmlRawForeign()).find('script');
        for (let i = 0; i < scripts.length; i++) {
            // clone the script, empty it while keeping (to keep same indexedPath structure as the template), execute id
            // todo: problema: tutti i successivi elementi con id statici verranno rimossi e avranno struttura template != struttura ongraph
            //  e falliranno a mostrare il clicked fragment nello styleeditor.
            // non va bene: se cambio lo stile quello script appeso al body rimane e devo aggiornare la pagina.
            // since newlines are replaced with spaces, scripts inline // comments are not allowed. use /*comments*/
            // const oldid = scripts[i].id;
            // delete scripts[i].id;
            //console.log('script:', scripts[i], 'length:', scripts[i].innerHTML.length, scripts[i].innerText.length);
            if (!scripts[i].innerHTML.length) {
                continue;
            } // "deleted" empty element
            const cloned = scripts[i];
            /*const cloned: HTMLScriptElement = U.cloneHtml(scripts[i]); bug: probably getbyid is working on detached elements too.
            it is altering the ViewRule.
            cloned.id = oldid;
            scripts[i].innerHTML = '';
            document.body.appendChild(cloned);*/
            // console.log('eval:', cloned.innerHTML);
            try {
                eval(cloned.innerHTML);
            }
            catch (e) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'error in user script of "' + this.logic().printableName() + '":', e, 'script:', cloned);
            }
        }
    }
    fixDateInputs() {
        const $dates = $(this.getHtmlRawForeign()).find('input');
        const debug = false;
        $dates.each((i, di) => {
            let adddate = false;
            let addtime = false;
            let addmsec = false;
            switch (di.type) {
                default: return;
                case 'date':
                    adddate = true;
                    break;
                case 'time':
                    addtime = addmsec = true;
                    break;
                case 'datetime-local':
                    adddate = addtime = addmsec = true;
                    break;
                case 'month': break;
                case 'week':
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, '&lt;input&gt;\'s with [type="week"] are currently not supported'); // fa errore qui quando tento di aggiustare il formato che mando nell'attributo value
                    break;
            }
            if (debug)
                console.trace('vdu', 'to replicate', i, window['tempv1'] = this);
            const oldVal = di.getAttribute('value'); // nb: do no use .value because if it's invalid for the current input type it will emit "invalid date" and i cannot adjust the format.
            if (!oldVal || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(oldVal)) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'vdu', 'wrong input val:', { oldVal, di, type: di.type, outerHTML: di.outerHTML });
                return;
            }
            let d = new Date(oldVal); // add yyyy-mm-dd to parse from "time" format
            if (isNaN(d) && oldVal.indexOf(':') > 0)
                d = new Date('1970-01-01 ' + oldVal);
            if (isNaN(d)) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'vdu', 'cannot parse date:', { oldVal, di, type: di.type, outerHTML: di.outerHTML });
                return;
            }
            switch (di.type) {
                default:
                    let val = '';
                    if (adddate) {
                        val += ('' + d.getFullYear()).padStart(4, '0')
                            + '-' + ('' + (1 + d.getMonth())).padStart(2, '0')
                            + '-' + ('' + d.getDate()).padStart(2, '0');
                    }
                    if (addtime) {
                        if (val)
                            val += 'T';
                        val += ('' + d.getHours()).padStart(2, '0')
                            + ':' + ('' + d.getMinutes()).padStart(2, '0')
                            + ':' + ('' + d.getSeconds()).padStart(2, '0');
                        if (addmsec)
                            val += '.' + ('' + d.getMilliseconds()).padStart(3, '0');
                    }
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'vdu', 'setting date:', { date: d, oldVal, type: di.type, val });
                    // di.setAttribute('value', val);
                    di.value = val;
                    return;
                case 'month':
                    di.value = ('' + d.getFullYear()).padStart(4, '0') +
                        '-' + ('' + (1 + d.getMonth())).padStart(2, '0');
                    return;
                case 'week':
                    di.value = ('' + d.getFullYear()).padStart(4, '0') +
                        '-W' + ('' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getWeekNumber(d)).padStart(2, '0');
                    return;
            }
        });
    }
    autosizeNew(refreshVertex = false, refreshEdge = true, trigger = null, autosizeobj = null) {
        if (!autosizeobj)
            autosizeobj = this.isAutosize();
        if (!autosizeobj.atLeastOne)
            return this;
        let html = this.getMeasurableNode();
        if (html.tagName.toLowerCase() === 'foreignobject')
            html = html.children[0];
        const actualSize = this.owner.toGraphCoordS(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(html));
        actualSize.x = null;
        actualSize.y = null;
        if (!autosizeobj.x)
            actualSize.w = null;
        if (!autosizeobj.y)
            actualSize.h = null;
        // console.log('setSize:', actualSize, this.size, autosizeobj, html, U.sizeof(html));
        this.setSize(actualSize, refreshVertex, refreshEdge, trigger);
        return this;
    }
    drawE(data, canfail = true) {
        try {
            this.drawE0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : (style.isGlobalhtml ? 'native' : 'user-made') + ' default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of enum "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            if (style.isCustomGlobalhtml)
                style.view.unsetDefault();
            this.htmlForeign = null;
            this.drawE(data, false);
        }
    }
    drawC(data, canfail = true) {
        try {
            this.drawC0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : (style.isGlobalhtml ? 'native' : 'user-made') + ' default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + (m.isM() ? 'm1-object' : 'class') + ' "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            if (style.isCustomGlobalhtml)
                style.view.unsetDefault();
            this.htmlForeign = null;
            this.drawC(data, false);
        }
    }
    drawO(data, canfail = true) {
        try {
            return this.drawO0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : (style.isGlobalhtml ? 'native' : 'user-made') + ' default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + m.getPrefix() + '-operation "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            if (style.isCustomGlobalhtml)
                style.view.unsetDefault();
            return this.drawO(data, false);
        }
    }
    drawParam(data, canfail = true) {
        try {
            return this.drawParam0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : (style.isGlobalhtml ? 'native' : 'user-made') + ' default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + m.getPrefix() + '-parameter "' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            if (style.isCustomGlobalhtml)
                style.view.unsetDefault();
            return this.drawParam(data, false);
        }
    }
    drawL(data) { return this.drawTerminal(data); }
    drawA(data) { return this.drawTerminal(data); }
    drawR(data) { return this.drawTerminal(data); }
    drawTerminal(data, canfail = true) {
        try {
            return this.drawTerminal0(data);
        }
        catch (e) {
            if (!canfail) {
                throw e;
            }
            const m = data.getModelRoot();
            const style = data.getStyle();
            const styletype = style.isinstanceshtml ? 'inherited' : (style.isownhtml ? 'personal' : (style.isGlobalhtml ? 'native' : 'user-made') + ' default');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'failed to draw ' + styletype + ' style of ' + m.getPrefix() + '"' + data.printableNameshort() + '", his style will be resetted.', e);
            if (style.isinstanceshtml)
                style.view.htmli = null;
            if (style.isownhtml)
                style.view.htmlo = null;
            if (style.isCustomGlobalhtml)
                style.view.unsetDefault();
            return this.drawTerminal(data, false);
        }
    }
    drawE0(logic) {
        if (!this.htmlForeign) {
            const style = this.classe.getStyle();
            this.htmlForeign = style.html;
        }
        const html = this.htmlForeign;
        /// append childrens:
        const $eContainer = $(html).find('.LiteralContainer');
        let i;
        for (i = 0; i < logic.childrens.length; i++) {
            const field = this.drawL(logic.childrens[i]);
            $eContainer.append(field);
        }
    }
    drawC0(data) {
        // console.log('drawC()');
        if (!this.htmlForeign) {
            const style = this.classe.getStyle();
            this.htmlForeign = style.html;
        }
        const html = this.htmlForeign;
        /// append childrens:
        const $childContainer = $(html).find('.ChildrenContainer, .ChildContainer, .AttributeContainer, .ReferenceContainer, .OperationContainer, .ParameterContainer');
        const debug = false;
        // U.pe($attContainer.length !== 1, 'there must be exactly one element with class "AttributeContainer".', $attContainer);
        // U.pe($refContainer.length !== 1, 'there must be exactly one element with class "ReferenceContainer".', $refContainer);
        // U.pe($opContainer.length !== 1, 'there must be exactly one element with class "OperationContainer".', $opContainer);
        // const attContainer = $attContainer[0];
        // const refContainer = $refContainer[0];
        // const opContainer = $opContainer[0];
        let i;
        let j;
        const childs = data.getAllChildrens(true, true, true, true, null);
        let validator;
        let getValidator = (container) => {
            let validatorStr = container && container.getAttribute('filter');
            let validator0;
            try {
                validator0 = eval(validatorStr);
                if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isFunction(validator0))
                    throw new Error();
            }
            catch (e) {
                validator0 = () => true;
            }
            return validator0;
        };
        for (j = 0; j < $childContainer.length; j++) {
            let childContainer = $childContainer[j];
            validator = getValidator(childContainer);
            let specific = !childContainer.classList.contains('ChildrenContainer') && !childContainer.classList.contains('ChildContainer');
            let allowAttributes = childContainer.classList.contains('AttributeContainer') || !specific && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('attributes'), true);
            let allowReferences = childContainer.classList.contains('ReferenceContainer') || !specific && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('references'), true);
            let allowOperations = childContainer.classList.contains('OperationContainer') || !specific && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('operations'), true);
            let allowParameters = childContainer.classList.contains('ParameterContainer') || !specific && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('parameters'), true);
            let allowLiterals = childContainer.classList.contains('LiteralContainer') || !specific && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('literals'), true);
            let allowAnnotations = childContainer.classList.contains('AnnotationContainer') || !specific && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('annotations'), true);
            let allowInheritance = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('inherited'), data.getModelRoot().isM1());
            let allowOnlyShadowed = childContainer.hasAttribute('shadowed') && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(childContainer.getAttribute('shadowed'), false, true);
            // U.pe(allowShadowed === false, childContainer.getAttribute('shadowed'), U.fromBoolString(childContainer.getAttribute('shadowed'), false, true));
            for (i = 0; i < childs.length; i++) {
                debug && console.log('mx ' + data.id + ' filtering children [' + i + " / " + childs.length + ']', childs);
                let child = childs[i];
                let field;
                if (validator && !validator(childs[i], i, childs))
                    continue;
                debug && console.log('mx ' + data.id + ' validator ok ');
                if (!allowInheritance && child.parent !== data)
                    continue;
                debug && console.log('mx ' + data.id + ' allowInheritance ok ');
                if (child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"]) {
                    // error: when i delete extedge shadowed attr will disappear
                    debug && console.log('allowShadowed:', allowOnlyShadowed, child.isShadowed(data), child);
                    debug && console.log('shadowed mx ' + data.id + '? ', allowOnlyShadowed, child.isShadowed(data), child, data);
                    if (allowOnlyShadowed !== null && child.isShadowed(data) !== allowOnlyShadowed)
                        continue;
                    debug && console.log('mx ' + data.id + ' shadowed ok');
                    if (allowAttributes && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"])
                        field = this.drawA(child);
                    else if (allowReferences && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"])
                        field = this.drawR(child);
                    else
                        continue;
                }
                else if (allowOperations && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"])
                    field = this.drawO(child);
                else if (allowLiterals && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"])
                    field = this.drawL(child);
                else if (allowParameters && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"])
                    field = this.drawParam(child);
                else if (allowAnnotations && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EAnnotation"])
                    field = this.drawAnnotation(child);
                else
                    continue;
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!field, 'failed to get html of:', child);
                // field.id = 'ID' + childs[i].id;
                childContainer.append(field);
            }
        }
    }
    getStartPointHtml() {
        const html = this.getHtmlFirstChild();
        const $start = $(html).find('.StartPoint');
        if ($start.length > 0) {
            return $start[0];
        }
        else {
            return html;
        }
    }
    getEndPointHtml() {
        const html = this.getHtmlFirstChild();
        const $start = $(html).find('.EndPoint');
        if ($start.length > 0) {
            return $start[0];
        }
        return (html.tagName.toLowerCase() === 'foreignobject') ? html.firstChild : html;
    }
    getMeasurableNode() { return this.htmlForeign; }
    setHtmls(data, htmlRaw) {
        // console.log('drawCV()');
        if (!this.htmlg) {
            this.owner.vertexContainer.appendChild(this.htmlg = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g'));
            data.linkToLogic(this.htmlg);
            this.addRootEventListeners();
        }
        else
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(this.htmlg);
        let i;
        const graphHtml = this.owner.vertexContainer;
        const $graphHtml = $(graphHtml);
        // console.log('drawing Vertex[' + data.name + '] with style:', htmlRaw, 'logic:', data);
        // console.log('drawVertex: template:', htmlRaw);
        const foreign = this.htmlForeign = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].textToSvg(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVars(data, htmlRaw).outerHTML);
        // this.htmlForeign.classList.add(ReservedClasses.vertexRoot);
        const $foreign = $(foreign);
        data.linkToLogic(foreign);
        const $elementWithID = $foreign.find('[id]');
        // duplicate prevention.
        for (i = 0; i < $elementWithID.length; i++) {
            const elem = $elementWithID[i];
            const id = '#' + elem.id;
            const $duplicate = $graphHtml.find(id);
            if ($duplicate.length) {
                $foreign.remove(id);
            }
        }
        this.htmlg.appendChild(foreign);
        foreign.id = 'ID' + data.id;
        foreign.dataset.vertexID = '' + this.id;
        if (!this.size) {
            this.size = this.getSize();
        }
        else {
            this.setSize(this.size, false, false);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.htmlForeign.tagName.toLowerCase() !== 'foreignobject', 'The custom style root must be a foreignObject node.', this.htmlForeign);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.htmlForeign.childNodes.length !== 1, 'The custom style must have a single child node,' +
            ' without spaces between <foreignObject> and the next tag. found ' + this.htmlForeign.childNodes.length + ' childrens.', this.htmlForeign, this.htmlForeign.childNodes);
        // this.html = this.htmlForeign.firstChild as HTMLElement;
        return foreign;
    }
    drawO0(data) {
        const html = this.drawTerminal(data);
        const $html = $(html);
        const $signature = $html.find('.signature');
        let i;
        for (i = 0; i < $signature.length; i++) {
            const htmldataset = $signature[0];
            data.setSignatureHtml(htmldataset, ', ', +htmldataset.dataset.maxargumentchars, +htmldataset.dataset.maxarguments);
        }
        const $detailHtml = $html.find('.operationDetail');
        $signature.off('click.show').on('click.show', (e) => {
            const target = e.target;
            let avoidToggle;
            switch (target.tagName.toLowerCase()) {
                case 'input':
                case 'textarea':
                case 'select':
                    avoidToggle = true;
                    break;
                default:
                    avoidToggle = ((target instanceof HTMLElement) && target.isContentEditable);
                    break;
            }
            if (avoidToggle) {
                return;
            }
            data.detailIsOpened = !data.detailIsOpened;
            data.detailIsOpened ? $detailHtml.show() : $detailHtml.hide();
            this.autosizeNew(false, true);
        });
        data.detailIsOpened ? $detailHtml.show() : $detailHtml.hide();
        $html.find('input.name').val(data.name);
        const $parameterList = $detailHtml.find('.parameterList');
        let j;
        for (j = 0; j < $parameterList.length; j++) {
            const parameterList = $parameterList[j];
            // U.clear(parameterList);
            const lastChild = parameterList.childNodes[parameterList.childNodes.length - 1];
            for (i = 0; i < data.childrens.length; i++) {
                const field = this.drawParam(data.childrens[i]);
                parameterList.insertBefore(field, lastChild);
            }
            // for (i = oldChilds.length; i > 0; i--) { parameterList.prepend(oldChilds.item(i)); }
        }
        const $addParamButton = $html.find('.addParameterButton');
        // $addParamButton.html('<button style="width: 100%; height: 100%;">+</button>');
        $addParamButton.off('click.add').on('click.add', (e) => { data.addParameter(); this.refreshGUI(); });
        return html;
    }
    drawParam0(data) {
        let i;
        const html = this.drawTerminal(data);
        const $html = $(html);
        // const $typeHtml: JQuery<HTMLSelectElement> = $html.find('select.fullType') as JQuery<HTMLSelectElement>;
        const $nameHtml = $html.find('input.name');
        $nameHtml.val(data.name);
        return html;
    }
    drawAnnotation(data) {
        return null;
    }
    drawTerminal0(data) {
        data.replaceVarsSetup();
        const style = data.getStyle();
        const htmlRaw = style.html;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!htmlRaw, 'failed to get attribute style:', data);
        // todo: sposta l'opearzione nei Graph.Field
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVars(data, htmlRaw);
        data.linkToLogic(html);
        if (data.getType().enumType)
            $(html).find('select[enum]').append(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml('<optgroup label="' + data.getType().printablename + '">'
                + data.getType().enumType.childrens.map((literal) => '<option value="' + literal.name + '"' + (literal.name === data.valuesStr ? 'selected' : '') + '>' + literal.name + '</option>').join('')
                + '</optgroup>'));
        // todo: devo fare selected pure per boolen perchè select[valkue]non và e poi css per nascondere gli input e select non conformi al tipo
        return html;
    }
    toEdge(start, end) {
        // todo
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'vertexToEdge() todo.');
        return null;
    }
    addRootEventListeners() {
        const $html = $(this.htmlg);
        $html.off('mousedown.vertex').on('mousedown.vertex', (e) => { this.onMouseDown(e); });
        $html.off('mouseup.vertex').on('mouseup.vertex', (e) => { this.onMouseUp(e); });
        $html.off('mousemove.vertex').on('mousemove.vertex', (e) => { this.onMouseMove(e); });
        $html.off('mouseenter.vertex').on('mouseenter.vertex', (e) => { this.onMouseEnter(e); });
        $html.off('mouseleave.vertex').on('mouseleave.vertex', (e) => { this.onMouseLeave(e); });
        $html.off('click').on('click', (e) => { this.onClick(e); });
        // $html.off('contextmenu').on('contextmenu', (e: ContextMenuEvent): boolean => { return DamContextMenu.contextMenu.onContextMenu(e); });
        // const $addFieldButtonContainer: JQuery<HTMLElement> = $html.find('.addFieldButtonContainer') as any as JQuery<HTMLElement>;
        // this.setAddButtonContainer($addFieldButtonContainer[0]);
    }
    addEventListeners() {
        let i;
        const $html = $(this.htmlg);
        //    $html.find('.Attribute, .Reference, .ELiteral, .Operation, .Parameter').off('contextmenu').on('contextmenu',
        //      (e: ContextMenuEvent): boolean => { return this.featureContextMenu(e); });
        $html.find('.delete').off('click.delete').on('click.delete', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].get(e).delete(true); });
        $html.find('.addFieldButton').off('click.addField').on('click.addField', (e) => { this.addFieldClick(e); });
        $html.find('.AddFieldSelect').off('change.addField').on('change.addField', (e) => { this.addFieldClick(e); });
        $html.find('input, select, textarea').off('change.fieldchange').on('change.fieldchange', (e) => IVertex.FieldNameChanged(e));
        // todo: viene chiamato 1 volta per ogni elementNode con modelID, ma io eseguo tutto dalla radice.
        // quindi viene eseguito N +1 volte per ogni vertice dove N sono i suoi (attributes + references)
        // console.log(html.tagName, html.dataset.modelpieceid);
        // if (html.tagName.toLowerCase() === 'foreignobject' && html.dataset.modelpieceid )
        //   { html = html.firstChild as Element; }
        // while (!(html.classList.contains('Vertex'))) { console.log(html); html = html.parentNode as Element; }
        $html.find('.LinkVertex').off('mousedown.setReference').on('mousedown.setReference', IVertex.linkVertexMouseDown);
        // $html.find('.LinkVertex').off('mouseup.notImmediatelySetOnSelf').on('mousedown.notImmediatelySetOnSelf', IVertex.linkVertexMouseUpOnSelf);
        const defaultResizeConfig = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ResizableOptionsImpl"]();
        const defaultDragConfig = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["DraggableOptionsImpl"]();
        const defaultRotConfig = new _common_measurable__WEBPACK_IMPORTED_MODULE_2__["RotatableOptions"]();
        // NB: do not delete the apparantly useless dynamic functions.
        // jqueryui is binding this to e.currentTarget and e.currentTarget to document.body, the dynamic function makes this instanceof iVertex again.
        // defaultResizeConfig.create = (e: Event, ui: ResizableUIParams) => this.measuringTrigger(ui, e, measurableRules.onRefresh);
        defaultResizeConfig.start = (e, ui) => {
            const target = e.target;
            const v = IVertex.getvertexByHtml(target);
            if (v.getMeasurableNode() === target) {
                // const gsize: GraphPoint = v.owner.toGraphCoord(new GraphPoint(Number.parseFloat(target.getAttribute('width')), Number.parseFloat(target.getAttribute('height'))));
                // v.setSize(new GraphSize(null, null, gsize.x, gsize.y));
            }
            this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onResizeStart);
        };
        defaultResizeConfig.resize = (e, ui) => {
            this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileResizing);
            const target = e.target;
            const v = IVertex.getvertexByHtml(target);
            if (v.getMeasurableNode() === target) {
                const gsize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](null, null, Number.parseFloat(target.style.width) / this.owner.zoom.x, Number.parseFloat(target.style.height) / this.owner.zoom.y);
                v.setSize(gsize);
            }
        };
        defaultResizeConfig.stop = (e, ui) => {
            this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onResizeEnd);
            const target = e.target;
            const v = IVertex.getvertexByHtml(target);
            if (v.getMeasurableNode() === target) {
                console.log('mres', {
                    htmlcoord: new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](Number.parseFloat(target.style.width) / this.owner.zoom.x, Number.parseFloat(target.style.height) / this.owner.zoom.y),
                });
                const gsize = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](null, null, Number.parseFloat(target.style.width) / this.owner.zoom.x, Number.parseFloat(target.style.height) / this.owner.zoom.y);
                v.setSize(gsize);
            }
        };
        // defaultDragConfig.create = (e: Event, ui: DraggableEventUIParams) => this.measuringTrigger(ui, e, measurableRules.onRefresh);
        defaultDragConfig.start = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onDragStart);
        defaultDragConfig.drag = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileDragging);
        defaultDragConfig.stop = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onDragEnd);
        defaultRotConfig.start = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRotationStart);
        defaultRotConfig.rotate = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileRotating);
        defaultRotConfig.stop = (e, ui) => this.measuringEventTrigger(ui, e, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRotationEnd);
        this.dragConfig = null;
        //     console.log('measurableElementSetup:', defaultResizeConfig, defaultDragConfig);
        // todo: sta cosa potrei eliminarla se uso jqui.create oppure li cerco mentre creo il $(node).resizable(resConfig);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Measurable"].measurableElementSetup($html, defaultResizeConfig, defaultRotConfig, defaultDragConfig, this);
        const $elementsWithRefreshTrigger = $html.find('.measurable'); // + ReservedClasses.onRefresh);
        for (i = 0; i < $elementsWithRefreshTrigger.length; i++) {
            const elem = $elementsWithRefreshTrigger[i];
            this.measuringEventTrigger(null, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onRefresh, elem);
        }
    }
    measuringEventTrigger(uiseless = null, e = null, prefix, html = null) {
        if (!html)
            html = e.target;
        if (!html.classList.contains('measurable'))
            return;
        // console.log('measuringEventTrigger:', prefix); // , html, e);
        if (!html.attributes)
            return;
        let i;
        for (i = 0; i < html.attributes.length; i++) {
            const a = html.attributes[i];
            if (a.name.indexOf(prefix.toLowerCase()) !== 0)
                continue;
            // console.error('triggering rule:', a);
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MeasurableRuleParts"](a, prefix).process(false, this, this.owner);
        }
    }
    /*
      measuringInit(ui: ResizableUIParams | DraggableEventUIParams, e: Event): void {
        const m = U.measurableGetArrays(null, e);
        console.log('measuringInit:', ui, e, m);
        let i: number;
        const size: Size = U.sizeof(m.html);
        const absTargetSize: Size = this.owner.getSize();
        const logic: IClassifier = this.logic();
        for (i = 0; i < m.variables.length; i++) { U.processMeasurableVariable(m.variables[i], logic, m.html, size, absTargetSize); }
        for (i = 0; i < m.dstyle.length; i++) { U.processMeasurableDstyle(m.dstyle[i], logic, m.html, null, absTargetSize); }
        for (i = 0; i < m.imports.length; i++) { U.processMeasurableImport(m.imports[i], logic, m.html, null, absTargetSize); }
      }
  
      measuringChanging(ui: ResizableUIParams | DraggableEventUIParams, e: Event, measurHtml: Element = null): void {
        const m: MeasurableArrays = U.measurableGetArrays(measurHtml, e);
        console.log('Changing.measurableHtml parsed special attributes:', m);
        m.imports = [];
        m.chainFinal = [];
        // m.dstyle = [];
        // m.rules = [];
        // m.variables = [];
        U.processMeasuring(this.logic(), m, ui);
      }
  
      measuringChanged(ui: ResizableUIParams | DraggableEventUIParams, e: Event, measurHtml: Element = null): void {
        const m = U.measurableGetArrays(measurHtml, e);
        console.log('Changed.measurableHtml parsed special attributes:', m);
        m.chain = [];
        m.imports = [];
        U.processMeasuring(this.logic(), m, ui);
      }*/
    clickSetReference(e, debug = true) {
        if (e) {
            // undo se premo sullo stesso linkVertex che ha iniziato tutto, proseguo se ho premuto su un altro linkVertex
            if (e.target.classList.contains('LinkVertex') && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging.start.htmlg, e.target))
                return;
            e.stopPropagation();
            e.preventDefault();
        }
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        if (!edge) {
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'setreferenceClick success!');
        const newTargetVertex = this;
        const oldTargetVertex = edge.end;
        const newTargetLogic = newTargetVertex.logic();
        const oldTargetLogic = oldTargetVertex && oldTargetVertex.logic();
        if (!(newTargetLogic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]))
            return;
        if (!edge.canBeLinkedTo(newTargetLogic)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'edge ', edge.logic, 'cannot be linked to ', newTargetLogic, 'hoveringvertex:', newTargetVertex);
            return;
        }
        if (edge.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"])
            edge.logic.linkClass(newTargetLogic, edge.getIndex(), true);
        if (edge.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"])
            edge.logic.setType(newTargetLogic.getEcoreTypeName());
        if (edge instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"]) {
            if (edge.end && oldTargetLogic)
                edge.logic.unsetExtends(oldTargetLogic, false); // unset old extend without removing this vertex
            edge.logic.setExtends(this.logic(), true, false, true); // extend the newly clicked vertex (this)
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(edge.logic instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"], 'cst: class edges are currently not supported');
        }
        if (oldTargetVertex)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldTargetVertex.edgesEnd, edge);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(newTargetVertex.edgesEnd, edge);
        this.mark(false, 'refhover');
        // altrimenti parte l'onClick su AddFieldButton quando fissi la reference.
        // setTimeout( () => { IEdge.edgeChanging = null; }, 1);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChangingStopTime = Date.now();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging = null;
        edge.tmpEnd = null;
        edge.useMidNodes = true;
        edge.useRealEndVertex = true;
        edge.end = this;
        edge.refreshGui();
    }
    onClick(e) {
        // IVertex.ChangePropertyBarContentClick(e);
    }
    onMouseDown(e) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            this.clickSetReference(e);
            return;
        }
        let target = e.target;
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isChildrenOf(target, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().graph.container))
            return;
        // console.log(e.button, e.buttons, e);
        const parentLine = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getParentLine(target, this.getMeasurableNode(), true, false, true);
        const measurables = $(parentLine).filter('.measurable');
        const clickedOnMeasurableChildren = !!measurables.length && target !== this.getMeasurableNode();
        console.log('resizingg', { e, target: e.target, condition: e.target.classList.contains('ui-resizable-handle') });
        if (e.target.classList.contains('ui-resizable-handle'))
            return;
        if (e.button !== _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseLeftButton && (clickedOnMeasurableChildren)) {
            e.stopPropagation();
        }
        if (e.button === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseLeftButton && (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isInput(target, true) || clickedOnMeasurableChildren)) {
            return;
        }
        if (e.button === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseWheelButton) {
            this.owner.onMouseDown(e, true);
            return;
        }
        IVertex.selected = this;
        IVertex.startDragContext = new StartDragContext(this);
        console.log('rx mousedown');
        if (IVertex.selectedGridWasOn.x === 'prevent_doublemousedowncheck') {
            IVertex.selectedGridWasOn.x = IVertex.selected.owner.grid.x;
        }
        if (IVertex.selectedGridWasOn.y === 'prevent_doublemousedowncheck') {
            IVertex.selectedGridWasOn.y = IVertex.selected.owner.grid.y;
        }
        IVertex.selected.owner.grid.x = null;
        IVertex.selected.owner.grid.y = null;
        IVertex.selectedStartPt = this.owner.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY));
        IVertex.selectedStartPt.subtract(this.size.tl(), false);
    }
    onMouseUp(e) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            this.clickSetReference(e);
            return;
        }
    }
    onMouseMove(e) { }
    onMouseEnter(e) { this.mouseEnterLinkPreview(e); }
    onMouseLeave(e) { this.mouseLeaveLinkPreview(e); }
    mouseEnterLinkPreview(e) {
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        if (!edge) {
            return;
        }
        const ref = edge.logic;
        /*const edges: IEdge[] = ref.getEdges();
        U.pe(!edges, 'ref.edges === null', ref);
        let edge: IEdge;
        if (ref.upperbound > 0 && edges.length - 1 >= ref.upperbound) { edge = edges[edges.length - 1]; } else { edge = new IEdge(ref); }*/
        const html2 = e.currentTarget;
        // while (html2 && html2.classList && !html2.classList.contains('vertexShell')) { html2 = html2.parentNode as Element;}
        let hoveringTarget = html2 ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(html2) : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!hoveringTarget || !(hoveringTarget instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"]), 'the currentTarget should point to the vertex root, only classifier should be retrieved.', hoveringTarget, e, html2);
        console.log('linkable ? ', hoveringTarget, edge, edge.canBeLinkedTo(hoveringTarget));
        const linkable = hoveringTarget instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] ? edge.canBeLinkedTo(hoveringTarget) : false;
        const size = hoveringTarget.getVertex().getSize();
        const width = 3;
        const pad = 5 + width;
        const padding = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](pad, pad, pad, pad);
        const vertex = hoveringTarget.getVertex();
        // const oldHoverVertex: IVertex = window.oldEdgeLink_HoveringVertex;
        // if (oldHoverVertex) { vertex.mark(false, 'refhover'); }
        // window.oldEdgeLink_HoveringVertex = vertex;
        vertex.mark(true, 'refhover', linkable ? 'green' : 'red', (size.w + padding.x + padding.w) / 10, (size.h + padding.y + padding.h) / 10, width, null, padding);
        edge.tmpEndVertex = hoveringTarget.getVertex();
        // NB: serve farlo 2 volte, alla prima ripristina il targetEnd ma non corregge lo startingpoint adattandolo alla nuova destinazione.
        edge.refreshGui(null, false);
        edge.refreshGui(null, false);
    }
    mouseLeaveLinkPreview(evt, debug = true) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging) {
            return;
        }
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'vertexLeave()');
        edge.tmpEndVertex = null;
        edge.tmpEnd = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(evt);
        this.mark(false, 'refhover');
    }
    addFieldClick(e) {
        // impedisco che un click mentre fisso un edge triggeri altre cose, 100ms di "cooldown"
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging || Date.now() - _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChangingStopTime < 100) {
            return;
        }
        const modelPiece = this.logic();
        const classe = modelPiece instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"] ? modelPiece : null;
        const enumm = modelPiece instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] ? modelPiece : null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!enumm && !classe, 'AddFieldClick should only be allowed on M2-Classes or enumerations.');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.classe, 'called addFieldClick on a package');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.debug = true;
        const html = this.getHtmlFirstChild();
        let select;
        // const debugOldJson = U.cloneObj(modelPiece.generateModel({}));
        select = $(html).find('.AddFieldSelect')[0];
        switch (select.value.toLowerCase()) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected select value for addField:' + select.value + ' allowed values are: ["Reference", "Attribute", "Operation", "Literal"]');
                break;
            case 'reference':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!classe, '"Reference" as .AddFieldSelect value is only allowed on M2-classes');
                classe.addReference();
                break;
            case 'attribute':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!classe, '"Attribute" as .AddFieldSelect value is only allowed on M2-classes');
                classe.addAttribute();
                break;
            case 'operation':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!classe, '"Operation" as .AddFieldSelect value is only allowed on M2-classes');
                classe.addOperation();
                break;
            case 'literal':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!enumm, '"Literal" as .AddFieldSelect value is only allowed on Enumerations');
                enumm.addLiteral();
                break;
        }
    }
    /*
      setAddButtonContainer(container: HTMLElement): void {
        U.toHtml('<span style="display:flex; margin:auto;">Add&nbsp;</span>' +
          '<select class="AddFieldSelect" style="display:flex; margin:auto;"><optgroup label="FeatureType">' +
          '<option value="Attribute" selected="">Attribute</option>' +
          '<option value="Reference">Reference</option>' +
          '<option value="Operation">Operation</option>' +
          '</optgroup></select>' +
          '<span style="display:flex; margin:auto;">&nbsp;field</span>\n' +
          '<button>Go</button>', container); }
    */
    setFields(f) {
        this.fields = f;
    }
    setGraph(graph) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!graph, 'Vertex should only be created after Graph initialization.');
        this.owner = graph;
    }
    refreshGUI(plusEdges = true) {
        // this.shouldRefresh = true;
        this.doRefreshGUI();
        if (plusEdges)
            this.refreshEdgesGUI();
    }
    doRefreshGUI() {
        this.draw();
    }
    refreshEdgesGUI() {
        const refEnd = this.edgesEnd; // this.getReferencesEnd();
        const refStart = this.edgesStart; // this.getReferencesStart();
        let i;
        for (i = 0; i < refEnd.length; i++) {
            if (refEnd[i]) {
                refEnd[i].refreshGui();
            }
        }
        for (i = 0; i < refStart.length; i++) {
            if (refStart[i]) {
                refStart[i].refreshGui();
            }
        }
    }
    moveTo(graphPoint, gridIgnore = false, center = false, fromAutoLayouting = false) {
        // console.log('moveTo(', graphPoint, '), gridIgnore:', gridIgnore, ', grid:');
        // const oldsize: GraphSize = this.size; // U.getSvgSize(this.logic().html as SVGForeignObjectElement);
        if (center) {
            const size = this.getSize();
            graphPoint.x -= size.w / 2;
            graphPoint.y += size.h / 2;
        }
        if (!gridIgnore) {
            graphPoint = this.owner.fitToGrid(graphPoint);
        }
        if (!fromAutoLayouting) {
            this.owner.layouting.onVertexMove(this);
        }
        this.setSize(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](graphPoint.x, graphPoint.y, null, null), false, true, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].whileDragging);
    }
    logic(set = null) {
        if (set) {
            return this.classe = set;
        }
        return this.classe;
    }
    // todo: elimina differenze html e htmlforeign o almeno controlla e riorganizza
    getHtmlRawForeign() { return this.htmlForeign; }
    getHtmlFirstChild() { return this.htmlForeign.firstChild; }
    minimize() {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'minimize() to do.');
    }
    isDrawn() { return !!(this.htmlForeign && this.htmlForeign.parentNode); }
    /*pushDown(): void {
      if (!this.isDrawn()) { return; }
      const html = this.htmlForeign;
      const parent = html.parentNode;
      parent.removeChild(html);
      parent.appendChild(html); }
  
    pushUp(): void {
      if (!this.isDrawn()) { return; }
      const html = this.htmlForeign;
      const parent = html.parentNode;
      parent.removeChild(html);
      parent.prepend(html); }*/
    remove() {
        console.log('IVertex.delete();');
        let i;
        // for (i = 0; i < this.edgesStart.length; i++) {}
        let arr;
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.edgesStart, false);
        for (i = 0; i < arr.length; i++) {
            arr[i].remove();
        }
        arr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.edgesEnd, false);
        for (i = 0; i < arr.length; i++) {
            arr[i].remove();
        }
        const html = this.htmlForeign;
        html.parentNode.removeChild(html);
        delete IVertex.all[this.id];
        for (const key in this.Vmarks) {
            if (this.Vmarks[key]) {
                continue;
            }
            const mark = this.Vmarks[key];
            if (mark.parentNode) {
                mark.parentNode.removeChild(mark);
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.owner.vertex, this);
        this.classe.vertex = null;
        const fields = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.fields, false);
        for (i = 0; i < fields.length; i++) {
            fields[i].remove();
        }
        // gc helper
        this.owner = null;
        this.size = null;
        this.edgesStart = null;
        this.edgesEnd = null;
    }
    getSize(debug = false) {
        const html0 = this.htmlForeign;
        let sizeOld;
        if (debug) {
            sizeOld = this.size ? this.size.duplicate() : null;
            if (this.size) {
                this.owner.markgS(this.size, true, 'blue');
            }
        }
        const size = this.size = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getSvgSize(html0, IVertex.minSize);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(debug && !sizeOld.equals(size), 'Wrong size. this:', this);
        return this.size;
    }
    /// end of IVertex
    isMarkedWith(markKey, colorFilter = null) {
        if (!this.Vmarks.hasOwnProperty(markKey)) {
            return false;
        }
        if (!colorFilter) {
            return true;
        }
        const markRect = this.Vmarks[markKey];
        return (markRect.getAttributeNS(null, 'stroke') === colorFilter);
    }
    setAutolayout(checked) {
        this.autoLayout = checked;
        if (this.autoLayout) {
            this.owner.layouting.addToLayout([this], true);
        }
        else {
            this.owner.layouting.removeFromLayout([this], true);
        }
    }
    // bug description: ogni volta che un elemento va in overflow è necessario re-inserire il foreignObject altrimenti si bugga,
    // questo tristemente include gli elementi che si espandono con :hover
    // quindi ho dovuto trasformare molti :hover in .hover aggiungendo a mano la classe, perchè se reinserisco il vertice perdo l' :hover.
    fixFirefoxOverflowBug() {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.isFirefox || !this.htmlg || !this.htmlg.parentElement)
            return;
        console.warn('firefox overflow bugfix');
        // firefox bug fixer for overflowing elements https://bugzilla.mozilla.org/show_bug.cgi?id=1705916
        const parent = this.htmlg.parentElement;
        let nextSibling = this.htmlg.nextSibling;
        parent.removeChild(this.htmlg);
        parent.insertBefore(this.htmlg, nextSibling);
    }
}
IVertex.all = {};
IVertex.ID = 0;
IVertex.selected = null; // todo: da cancellare in favore di IVertex.startDragContext?
IVertex.selectedGridWasOn = null;
IVertex.selectedStartPt = null;
IVertex.minSize = null;
IVertex.defaultSize = null;


/***/ }),

/***/ "./src/guiElements/mGraph/iGraph.ts":
/*!******************************************!*\
  !*** ./src/guiElements/mGraph/iGraph.ts ***!
  \******************************************/
/*! exports provided: ViewPointShell, IGraph */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewPointShell", function() { return ViewPointShell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IGraph", function() { return IGraph; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _Layouting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Layouting */ "./src/guiElements/mGraph/Layouting.ts");
/* harmony import */ var _common_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/util */ "./src/common/util.ts");




class ViewPointShell {
    constructor(g) {
        this.lastVP = null; // se ne sono attivi multipli e modifichi lo stile di qualcosa, questo sarà quello che viene aggiornato.
        this.getViewpointGUI = {};
        this.graph = g;
        this.model = g.model;
        this.$html = $(g.container.parentElement).find('.viewpointShell');
        this.html = this.$html[0];
        this.$template = this.$html.find('li.viewpointrow.template');
        this.template = this.$template[0];
        const $checkboxlidefault = this.$html.find('li.viewpointrow.default');
        const $defaultCheckbox = $checkboxlidefault.find('input[type="radio"]');
        this.defaultCheckbox = $defaultCheckbox[0];
        this.checkboxes = [];
        this.getViewpointGUI = {};
        let i;
        // this.ignoreEvents = false;
        $defaultCheckbox.on('click', (e) => { this.undoAll(true); });
        $checkboxlidefault.find('button.duplicate').on('click', (e) => this.duplicateEvent(e, null, this.defaultCheckbox));
    }
    /*undoAllOld(model :IModel): void {
      let i1: number;
      let i2: number;
      let i3: number;
      let i4: number;
      model.graph.gridDisplay = IGraph.defaultGridDisplay;
      model.graph.scroll = new GraphPoint(0, 0);
      model.graph.setZoom(IGraph.defaultZoom);
      model.graph.setGrid(IGraph.defaultGrid);
      const undostyle = (m: ModelPiece) => { m.resetViews(); };
      for (i1 = 0; i1 < model.childrens.length; i1++) {
        const pkg: IPackage = model.childrens[i1];
        undostyle(pkg);
        for (i2 = 0; i2 < pkg.childrens.length; i2++) {
          const c: IClass = pkg.childrens[i2];
          undostyle(c);
          c.shouldBeDisplayedAsEdge(false);
          for (i3 = 0; i3 < c.attributes.length; i3++) {
            const a: IAttribute = c.attributes[i3];
            undostyle(a); }
          for (i3 = 0; i3 < c.references.length; i3++) {
            const r: IReference = c.references[i3];
            undostyle(r); }
          const operations = c.getOperations();
          for (i3 = 0; i3 < operations.length; i3++) {
            const o: EOperation = operations[i3];
            undostyle(o);
            for (i4 = 0; i4 < o.childrens.length; i4++) {
              const p: EParameter = o.childrens[i4];
              undostyle(p); }
          }
        }
      }
      model.refreshGUI_Alone();
    }*/
    undoAll(changingGuiChecked) {
        let i;
        // de-apply all
        for (i = 0; i < this.model.viewpoints.length; i++) {
            this.model.viewpoints[i].detach();
        }
        // update gui
        this.ignoreEvents = true;
        if (changingGuiChecked) {
            for (i = 0; i < this.checkboxes.length; i++) {
                this.checkboxes[i].checked = false;
            }
            // this.graph.model.refreshGUI_Alone();
        }
        const defaultradio = this.$html.find('input[type="radio"]')[0];
        defaultradio.checked = true;
        this.ignoreEvents = false;
        this.refreshApplied();
    }
    refreshApplied() {
        // this.undoAll(false);
        let i;
        let stylecustomized = false;
        const makeSureAllCheckboxesAreProcessed = this.checkboxes.slice();
        this.graph.propertyBar.styleEditor.hide();
        for (i = this.model.viewpoints.length; --i >= 0;) {
            const vp = this.model.viewpoints[i];
            const checkbox = this.getCheckbox(vp);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!checkbox, 'failed to get checkbox of:', vp, this);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(makeSureAllCheckboxesAreProcessed, checkbox);
            stylecustomized = stylecustomized || checkbox.checked;
            vp.apply();
            vp.isApplied = checkbox.checked;
            // if (vp.isApplied === checkbox.checked) { continue; }
            // if (vp.isApplied) { vp.detach(); } else { vp.apply(); } // just used to set isapplied
        }
        const defaultradio = this.$html.find('input[type="radio"]')[0];
        defaultradio.checked = !stylecustomized;
        this.updatelastvp();
        const isM2 = true; // this.graph.model.isM2(); per qualche motivo è false se cambio una checkbox in m2, ha collegato modello sbagliato?
        console.error('refresh vp applied:', { stylecustomized, isM2 });
        if (true) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.refreshGUI();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.refreshGUI();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph.propertyBar.styleEditor.show();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.styleEditor.show();
        }
        // old
        if (stylecustomized) {
            this.graph.model.refreshGUI();
            if (isM2)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.refreshGUI();
            this.graph.propertyBar.styleEditor.show();
            if (isM2) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.styleEditor.show();
            }
        }
        else {
            try {
                this.graph.model.refreshGUI_Alone();
            }
            catch (e) {
                console.error('error while disabling all vp(0):', e);
                this.graph.propertyBar.styleEditor.hide();
            }
        }
        setTimeout(() => {
            if (isM2)
                try {
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.refreshGUI();
                }
                catch (e) {
                    console.error('error while disabling all vp(1):', e);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.styleEditor.hide();
                }
            this.graph.propertyBar.styleEditor.show();
            if (isM2)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.styleEditor.show();
        }, 10);
        /*let v: IVertex = Object.values(IVertex.all)[0];
        setTimeout(() => {
          console.error('triggering refreshes');
          const vertexes: IVertex[] = Object.values(IVertex.all);// + ReservedClasses.onRefresh);
          for (i = 0; i < vertexes.length; i++) {
            const elem: Element = vertexes[i].getMeasurableNode();
            vertexes[i].measuringEventTrigger(null, null, measurableRules.onRefresh, elem);
            vertexes[i].measuringEventTrigger(null, null, measurableRules.constraint, elem);
          }
        }, 3000);*/
    }
    duplicateEvent(e, oldvp, oldvpCheckbox, debug = false) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'duplicate(' + (oldvp ? oldvp.name : null) + ') Start:', this.model.viewpoints);
        // const vp: ViewPoint = ViewPoint.get($input[0].value);
        let newvp = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ViewPoint"](this.model, oldvp ? oldvp.name : null);
        if (oldvp) {
            newvp.clone(oldvp);
            newvp.updateTarget(this.model);
        }
        this.ignoreEvents = true;
        this.add(newvp, false);
        if (oldvpCheckbox) {
            oldvpCheckbox.checked = false;
        }
        this.ignoreEvents = false;
        this.refreshApplied();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'duplicate() End:', this.model.viewpoints);
    }
    add(v, allowApply) {
        const $li = this.$template.clone();
        const li = $li[0];
        const $checkbox = $li.find('input[type="checkbox"]');
        const checkbox = $checkbox[0];
        this.checkboxes.push(checkbox);
        this.getViewpointGUI[v.id] = li;
        const $input = $li.find('input.name');
        const input = $input[0];
        const $duplicate = $li.find('button.duplicate');
        const $delete = $li.find('button.remove');
        const $rename = $li.find('button.edit');
        $duplicate.on('click', (e) => this.duplicateEvent(e, v, checkbox));
        $delete.on('click', (e) => {
            this.html.removeChild(li);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.checkboxes, checkbox);
            delete this.getViewpointGUI[v.id];
            v.delete();
        });
        $rename.on('click', (e) => {
            input.readOnly = false;
            input.focus();
            //
            //
            // $rename.hide(); $delete.hide(); $duplicate.hide();
        });
        const inputConfirm = (key) => {
            console.log('vprename ?', key);
            switch (key) {
                default: return;
                case _common_util__WEBPACK_IMPORTED_MODULE_3__["Keystrokes"].numpadEnter:
                case _common_util__WEBPACK_IMPORTED_MODULE_3__["Keystrokes"].enter:
                    v.setname(input.value);
                    break;
                case _common_util__WEBPACK_IMPORTED_MODULE_3__["Keystrokes"].escape: break;
            }
            let oldVal = input.value;
            input.value = v.name;
            input.readOnly = true;
            console.log('vprename ok:', v.name, input.value, oldVal);
        };
        $input.on('keydown', (e) => { inputConfirm(e.key); });
        $input.on('blur', (e) => { inputConfirm(_common_util__WEBPACK_IMPORTED_MODULE_3__["Keystrokes"].enter); });
        $input.on('click', (e) => {
            // todo: se non lo fa già di suo: (per triggerare default.click() = this.undoAll();
            // if (input.readOnly) { this.undoAll(true); }
        });
        checkbox.dataset.vpid = '' + v.id;
        input.value = v.name;
        checkbox.checked = v.isApplied;
        $checkbox.on('change', (e) => {
            const checkbox = e.currentTarget;
            const vp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ViewPoint"].getByID(+checkbox.dataset.vpid);
            vp.runtimeorder = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ViewPoint"].LAST_ORDER++;
            console.log('changed cbox:', checkbox);
            if (this.ignoreEvents) {
                e.preventDefault();
                return false;
            }
            setTimeout(() => this.refreshApplied(), 1); // devo dare tempo alla checkbox di settarsi
            return true;
        });
        if (allowApply && v.isApplied) {
            $checkbox.trigger('change');
        }
        li.classList.remove('template');
        li.classList.add("linkedToModel_" + this.model.getPrefix());
        this.html.appendChild(li);
    }
    updatelastvp() {
        this.$html.find('li[islastvp]').removeAttr('islastvp');
        const vp = this.model.getForemostView();
        console.log('updatelastvp() ', this.model.viewpoints, this.getViewpointGUI, this);
        if (!vp)
            return;
        this.lastVP = vp;
        const li = this.getViewpointGUI[vp.id];
        li.setAttribute('islastvp', 'true');
    }
    getCheckbox(vp) {
        let i;
        for (i = 0; i < this.checkboxes.length; i++) {
            const cbox = this.checkboxes[i];
            if (cbox.dataset.vpid === '' + vp.id)
                return cbox;
        }
        return null;
    }
}
var CursorAction;
(function (CursorAction) {
    CursorAction[CursorAction["drag"] = 0] = "drag";
    CursorAction[CursorAction["select"] = 1] = "select";
    CursorAction[CursorAction["multiselect"] = 2] = "multiselect";
})(CursorAction || (CursorAction = {}));
class IGraph {
    constructor(model, container) {
        this.id = null;
        this.container = null;
        this.model = null;
        this.vertex = null;
        this.edges = null;
        this.scroll = null;
        this.propertyBar = null;
        this.zoom = null;
        this.grid = null;
        this.gridDisplay =  false && false;
        this.gridColor1 = '#808080';
        this.gridColor2 = '#808080';
        // campi per robe di debug
        this.allMarkgp = [];
        this.useGrid = true;
        this.oldGridX = null;
        this.oldGridY = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!container, 'graph container is null. model:', model);
        this.id = IGraph.ID++;
        IGraph.all[this.id + ''] = this;
        this.model = model;
        this.layouting = new _Layouting__WEBPACK_IMPORTED_MODULE_2__["Layouting"](this);
        this.model.graph = this;
        this.container = container;
        this.container.dataset.graphID = '' + this.id;
        this.edgeContainer = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g');
        this.edgeContainer.classList.add('allEdgeContainer');
        this.vertexContainer = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('g');
        this.vertexContainer.classList.add('allVertexContainer');
        this.container.appendChild(this.edgeContainer);
        this.container.appendChild(this.vertexContainer);
        this.gridDefsHtml = $(this.container).find('g.gridContainer>defs')[0];
        this.gridHtml = $(this.container).find('g.gridContainer>rect.grid')[0];
        this.gridHtml.setAttributeNS(null, 'fill', 'url(#grid_' + this.id + ')');
        this.isMoving = null;
        this.clickedScroll = null;
        this.cursorAction = CursorAction.select;
        // this.svg = $(this.container).find('svg.graph')[0] as unknown as SVGElement;
        this.vertex = [];
        this.edges = [];
        this.zoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](1, 1);
        this.scroll = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](0, 0);
        this.grid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](20, 20);
        this.gridPos = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](0, 0);
        this.gridDisplay = true;
        let i;
        let j;
        const earr = this.model.getAllEnums();
        for (i = 0; i < earr.length; i++) {
            earr[i].generateVertex();
        }
        const classArr = this.model.getAllClasses();
        const classEdges = [];
        for (i = 0; i < classArr.length; i++) {
            if (classArr[i].shouldBeDisplayedAsEdge()) {
                classEdges.push(classArr[i]);
                continue;
            }
            classArr[i].generateVertex();
        }
        // vertex disegnati, ora disegno gli edges.
        // Class-extends-edges
        if (this.model.isM2()) {
            for (i = 0; i < classArr.length; i++) {
                const classe = classArr[i];
                for (j = 0; j < classe.extends.length; j++) {
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.edges, classe.makeExtendEdge(classe.extends[j]));
                }
            }
        }
        // Class-edges
        for (i = 0; i < classEdges.length; i++) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(this.edges, classEdges[i].generateEdge());
        }
        // Reference-edges
        const arrReferences = this.model.getAllReferences();
        for (i = 0; i < arrReferences.length; i++) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(this.edges, arrReferences[i].generateEdges());
        }
        this.propertyBar = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["PropertyBarr"](this.model);
        this.viewPointShell = new ViewPointShell(this);
        this.addGraphEventListeners();
        this.refreshGridGUI();
    }
    static getByID(id) { return IGraph.all[id]; }
    static getByHtml(html) {
        for (const id in IGraph.all) {
            if (!IGraph.all.hasOwnProperty(id)) {
                continue;
            }
            const graph = IGraph.all[id];
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(graph.container, html)) {
                return graph;
            }
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'failed to find parent graph of:', html);
        return null;
    }
    fitToGrid(pt0, clone = true, debug = false, fitHorizontal = true, fitVertical = true) {
        if (!this.useGrid)
            return pt0;
        const pt = clone ? pt0.duplicate() : pt0;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.grid, 'grid not initialized.');
        if (fitHorizontal && !isNaN(this.grid.x) && this.grid.x > 0) {
            pt.x = Math.round(pt.x / this.grid.x) * this.grid.x;
        }
        if (fitVertical && !isNaN(this.grid.y) && this.grid.y > 0) {
            pt.y = Math.round(pt.y / this.grid.y) * this.grid.y;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fitToGrid(', pt0, '); this.grid:', this.grid, ' = ', pt);
        return pt;
    }
    fitToGridS(pt0, clone = true, debug = false, fitHorizontal = true, fitVertical = true) {
        if (!this.useGrid)
            return pt0;
        const pt = clone ? pt0.duplicate() : pt0;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.grid, 'grid not initialized.');
        if (fitHorizontal && !isNaN(this.grid.x) && this.grid.x > 0) {
            pt.x = Math.round(pt.x / this.grid.x) * this.grid.x;
        }
        if (fitVertical && !isNaN(this.grid.y) && this.grid.y > 0) {
            pt.y = Math.round(pt.y / this.grid.y) * this.grid.y;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fitToGrid(', pt0, '); this.grid:', this.grid, ' = ', pt);
        return pt;
    }
    /*
      graphContextMenu(e: ContextMenuEvent): boolean {
        // console.log('passedThroughVertex', e, e['passedThroughVertex']);
        // if (e['passedThroughVertex'] !== undefined) return e['passedThroughVertex'];
        e.preventDefault();
        e.stopPropagation();
        return false; }
    */
    addGraphEventListeners() {
        const $graph = $(this.container);
        const thiss = this;
        this.model.linkToLogic(this.container);
        // $graph.off('mousedown.graph').on('mousedown.graph', (evt: MouseDownEvent) => { thiss.onMouseDown(evt); });
        // $graph.off('mouseup.graph').on('mouseup.graph', (evt: MouseUpEvent) => { thiss.onMouseUp(evt); });
        $graph.off('mousemove.graph').on('mousemove.graph', (evt) => { this.onMouseMove(evt); });
        // $graph.off('keydown.graph').on('keydown.graph', (evt: KeyDownEvent) => { thiss.onKeyDown(evt); }); non triggerabile, non ha focus.
        // $graph.off('click.mark').on('click.mark', (e: ClickEvent) => { thiss.markClick(e, true); } );
        $graph.off('mousedown.move').on('mousedown.move', (e) => this.onMouseDown(e, false));
        $graph.off('mouseup.move').on('mouseup.move', (e) => this.onMouseUp(e));
        // $graph.off('contextmenu').on('contextmenu', (e: ContextMenuEvent): boolean => { return this.graphContextMenu(e); });
        // @ts-ignore
        if (!!ResizeObserver) { // not supported by edge, android firefox.
            if (!window['' + 'resizeobservers'])
                window['' + 'resizeobservers'] = [];
            // @ts-ignore
            const tmp = new ResizeObserver((entryes, observer) => { this.onResize(); });
            window['' + 'resizeobservers'] = tmp;
            tmp.observe(this.container.parentElement);
        }
        // @ts-ignore
        if (!ResizeObserver) {
            let oldSize = null;
            setInterval(() => {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(true, 'setinterval graphsize checker');
                const size = this.getSize();
                if (!size.equals(oldSize))
                    this.onResize(size);
            }, 100);
        }
        // altre opzioni:
        // 1) MutationObserver (detect dom changes (attributes like "style" too)),
        // 2) http://marcj.github.io/css-element-queries/ : sembra simile a mutationObserver, no timers, funziona su flexbox che non cambiano
        // direttamente valori. non ho capito perchè parsa tutti i file css.
        // 3) "Use a combination of mousedown, mousemove and/or mouseup to tell whether the div is being / has been resized.
        // If you want really fine-grained control you can check in every mousemove event how much / if the div has been resized. If you don't need that,
        // you can simply not use mousemove at all and just measure the div in mousedown and mouseup and figure out if it was resized in the latter."
        // PROBLEMA: potrebbe avvenire un resize dovuto a serverEvents, keyboardEvents, timers.
    }
    printClickedMP(e) {
        let mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].get(e);
        let name = mp.printableName(20, true);
        console.log('clicked mp:', mp.id, name, mp);
        console.info('clicked mp:', mp.id, name, mp);
    }
    onMouseDown(evt, isTrigger) {
        // console.log('graphONMouseDown', evt);
        isTrigger = isTrigger || !evt || evt['' + 'isTrigger'] || !evt.originalEvent;
        console.log('GraphMouseDown:', evt, evt.button, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseWheelButton);
        if (evt && evt.button === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].mouseWheelButton) {
            evt.preventDefault();
            evt.target.blur();
        }
        switch (this.cursorAction) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected cursorAction:', this.cursorAction);
                break;
            case CursorAction.drag:
            case CursorAction.select:
                let e = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].get(evt);
                if (e instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"])
                    e = null;
                const mp = isTrigger ? null : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].ChangePropertyBarContentClick(evt, e);
                // console.log('graphONMouseDown', isTrigger, mp instanceof IModel);
                if (!(isTrigger || (mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"])))
                    return;
                this.isMoving = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"].fromEvent(evt);
                this.clickedScroll = this.scroll.duplicate();
                break;
            case CursorAction.multiselect: break;
        }
    }
    onMouseUp(evt) {
        if (this.isMoving) {
            this.isMoving = this.clickedScroll = null;
        }
        const v = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selected;
        const vcontext = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].startDragContext;
        if (!v)
            return;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selected = null;
        v.owner.grid.x = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selectedGridWasOn.x;
        v.owner.grid.y = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selectedGridWasOn.y;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selectedGridWasOn.x = 'prevent_doublemousedowncheck';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selectedGridWasOn.y = 'prevent_doublemousedowncheck';
        // const afterContextMenuTimeout = () => setTimeout(afterContextMenu, 0);
        // afterContextMenuTimeout(); // do it regardless of moved or not.
        // const gotMoved = !vcontext.size.tl().equals(v.size.tl(), 0);
        // if (!gotMoved) { return; }
        v.owner.fitToGridS(v.size, false);
        v.setSize(v.size, false, true, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onDragEnd);
        //NB: Ivertex.selected va cancellato per forza prima di gotMoved e setSize, perchè crea casini con dragEnd.
        // Dopo il contextmenù deve tornare nonsettato. se potessi spotare il tempo di esecuzione di contextmenù risolverei tutto... ma è impossibile.
    }
    onMouseMoveSetReference(evt, edge) {
        // console.log('graph.movereference()', edge, edge ? edge.tmpEndVertex : null);
        if (!edge || edge.tmpEndVertex) {
            return;
        }
        // const ref: IReference | IClass = edge.logic;
        edge.tmpEnd = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"].fromEvent(evt);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!edge.tmpEnd, 'failed to get coordinates from event:', evt);
        // console.log('graph.movereference: success!', edge.tmpEnd);
        edge.refreshGui(null, false);
    }
    onMouseMoveVertexMove(evt, v) {
        if (!v) {
            return;
        }
        // if (U.vertexOldPos === 1) U.vertexOldPos = 2;
        //     console.log('onMouseMoveVertexMove:', v.logic().name, evt, v);
        const currentMousePos = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](evt.pageX, evt.pageY);
        // console.log('evt:', evt);
        let currentGraphCoord = this.toGraphCoord(currentMousePos);
        currentGraphCoord = currentGraphCoord.subtract(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selectedStartPt, false);
        const axis = v.dragConfig && v.dragConfig.axis;
        const isMeasurable = v.dragConfig;
        //NB: axis null = both. axis undefined or empty string = no-one.
        if (isMeasurable) {
            if (axis === undefined || axis !== null && axis.indexOf('x') === -1)
                currentGraphCoord.x = null;
            if (axis === undefined || axis !== null && axis.indexOf('y') === -1)
                currentGraphCoord.y = null;
        }
        // console.log('onMouseMoveVertexMove:', v.logic().name, 'vertex:', v, 'coord:', currentGraphCoord, 'ismeasurable:', isMeasurable);
        v.moveTo(currentGraphCoord);
    }
    onMouseMoveDrag(e) {
        if (!this.isMoving)
            return;
        const offset = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"].fromEvent(e);
        offset.subtract(this.isMoving, false);
        this.scroll.x = this.clickedScroll.x - offset.x;
        this.scroll.y = this.clickedScroll.y - offset.y;
        this.setGridPos();
        // console.log('scroll:', this.scroll, 'offset:', offset, ' scroll0: ', this.clickedScroll, ' currentCursor:', this.isMoving);
        this.updateViewbox();
    }
    onMouseMove(evt) {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging)
            return this.onMouseMoveSetReference(evt, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selected)
            return this.onMouseMoveVertexMove(evt, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].selected);
        if (this.isMoving)
            return this.onMouseMoveDrag(evt);
    }
    edgeChangingAbort(e) {
        const edge = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging;
        if (!edge) {
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"].edgeChanging = null;
        edge.shell.blur();
        edge.isSelected = false;
        // unmark hovering vertex
        const hoveringVertex = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"].GetMarkedWith('refhover');
        let i;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(hoveringVertex.length > 1, 'hovering on more than one target at the same time should be impossible.', hoveringVertex);
        for (i = 0; i < hoveringVertex.length; i++) {
            hoveringVertex[i].mark(false, 'refhover');
        }
        // restore previous endTarget or delete edge.
        console.log('edgeChange abort', edge);
        if (!edge.end) {
            edge.remove();
            return;
        }
        edge.useMidNodes = true;
        edge.useRealEndVertex = true;
        edge.tmpEnd = null;
        edge.onBlur(); // will refreshgui too
        edge.refreshGui();
        // double refresh on purpose, to fix imprecision on huge sudden movement possibly caused by blur (startpoint must keep up)
        // todo: aggiusta dentro refreshgui e reitera solo quella parte interna così posso chiamarlo 1 volta e stare safe e ottimizzato
    }
    toGraphCoordS(s) {
        const tl = this.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](s.x, s.y));
        const br = this.toGraphCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](s.x + s.w, s.y + s.h));
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](tl.x, tl.y, br.x - tl.x, br.y - tl.y);
        return ret;
    }
    computeSize() { this.size = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].sizeof(this.container); }
    getSize() {
        if (!this.size)
            this.computeSize();
        return this.size;
    }
    getGSize() {
        throw new Error("getGSize() todo: should show the size of the whole graph visible and hidden that contain something (bounding rectangle of content)");
    }
    getVisibleGSize() {
        let size = this.getSize();
        // console.log('gsize', {size, ggsize: new GraphSize(size.x, size.y, size.w, size.h), zoom: this.zoom, ret: new GraphSize(size.x, size.y, size.w, size.h).multiplyPoint(this.zoom, false)});
        return new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphSize"](size.x, size.y, size.w, size.h).dividePoint(this.zoom, false);
    }
    toGraphCoord(p) {
        const graphSize = this.getSize();
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](p.x, p.y);
        const debug = true;
        ret.x -= graphSize.x;
        ret.y -= graphSize.y;
        ret.x /= this.zoom.x;
        ret.y /= this.zoom.y;
        ret.x += this.scroll.x;
        ret.y += this.scroll.y;
        // console.log('toGraph()  - graphSize:', graphSize, ' + scroll: ', this.scroll, ' / zoom', this.zoom);
        if (debug) {
            const ver = this.toHtmlCoord(ret);
            let tolerance = 0.001;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(Math.abs(ver.x - p.x) > tolerance || Math.abs(ver.y - p.y) > tolerance, 'error in toGraphCoord or toHtmlCoord: inputPt:', p, ', result: ', ret, 'verify:', ver, 'point:', p, 'scroll:', this.scroll, 'zoom:', this.zoom, 'GraphHtmlSize:', graphSize);
        }
        return ret;
    }
    toHtmlCoordS(s) {
        if (s === null) {
            return null;
        }
        const tl = this.toHtmlCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](s.x, s.y));
        const br = this.toHtmlCoord(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](s.x + s.w, s.y + s.h));
        return new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Size"](tl.x, tl.y, br.x - tl.x, br.y - tl.y);
    }
    toHtmlCoord(p) {
        const graphSize = this.getSize();
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](p.x, p.y);
        // console.log('toHtml()', ' * zoom', this.zoom, ' - scroll: ', this.scroll, ' + graphSize:', graphSize);
        ret.x -= this.scroll.x;
        ret.y -= this.scroll.y;
        ret.x *= this.zoom.x;
        ret.y *= this.zoom.y;
        ret.x += graphSize.x;
        ret.y += graphSize.y;
        return ret;
    }
    getAllVertex() { return [...this.model.getAllClasses(), ...this.model.getAllEnums()].map((c) => c.getVertex(false)); }
    getAllVertexIsBroke() { return this.vertex; }
    markClick(e, clean = true) { return this.mark(new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](e.pageX, e.pageY), clean); }
    markg(gp, clean = false, colorTop = 'red') {
        return this.mark(this.toHtmlCoord(gp), clean, colorTop);
    }
    markgS(gs, clean = false, colorTop = 'red', colorBot = null) {
        /*if (!colorBot) { colorBot = colorTop; }
        this.markg(gs.tl(), clean, colorTop);
        this.markg(gs.tr(), false, colorTop);
        this.markg(gs.bl(), false, colorBot);
        this.markg(gs.br(), false, colorBot);*/
        // const htmls: Size = this.owner.toHtmlCoordS(size0);
        return this.markS(this.toHtmlCoordS(gs), clean, colorTop, colorBot);
    }
    markS(s, clean = false, colorTop = 'red', colorBot = null) {
        if (!colorBot) {
            colorBot = colorTop;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!s, 'size cannot be null.');
        this.mark(s.tl(), clean, colorTop);
        // color = 'white';
        this.mark(s.tr(), false, colorTop);
        // color = 'purple';
        this.mark(s.bl(), false, colorBot);
        // color = 'orange';
        this.mark(s.br(), false, colorBot);
    }
    mark(p, clean = false, color = 'red') {
        const gp = this.toGraphCoord(p);
        if (clean) {
            let i;
            for (i = 0; i < this.allMarkgp.length; i++) {
                const node = this.allMarkgp[i];
                if (this.container.contains(node)) {
                    this.container.removeChild(node);
                }
            }
            for (i = 0; i < IGraph.allMarkp.length; i++) {
                const node = IGraph.allMarkp[i];
                if (document.body.contains(node)) {
                    document.body.removeChild(node);
                }
            }
        }
        // console.log('mark:', p, gp);
        this.markp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml('<div style="width:10px; height:10px; top:' + (p.y - 5) + 'px; left:' + (p.x - 5) + 'px;' +
            ' position: absolute; border: 1px solid ' + color + '; z-index:1;">');
        this.markgp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].newSvg('circle');
        this.markgp.setAttribute('cx', '' + gp.x);
        this.markgp.setAttribute('cy', '' + gp.y);
        this.markgp.setAttribute('r', '' + 1);
        this.markgp.setAttribute('stroke', color);
        this.allMarkgp.push(this.markgp);
        IGraph.allMarkp.push(this.markp);
        document.body.appendChild(this.markp);
        this.container.appendChild(this.markgp);
    }
    setGrid(x = null, y = null, checked = null) {
        if (x !== null)
            this.grid.x = x;
        if (y !== null)
            this.grid.y = y;
        if (checked !== null)
            this.gridDisplay = checked;
        this.refreshGridGUI();
    }
    setUseGrid(b) {
        if (this.useGrid === b)
            return;
        this.useGrid = b;
        this.fitVertexToGrid(false);
    }
    setScroll(x, y) {
        const old = this.scroll.duplicate();
        if (x !== null)
            this.scroll.x = x;
        if (y !== null)
            this.scroll.y = y;
        console.log('SetScroll(', x, y, '): ', old.x, old.y, ' -> ', this.scroll.x, this.scroll.y);
        this.refreshGridGUI(); // error here
        this.updateViewbox();
    }
    setZoom(x, y) {
        const oldZoom = this.zoom.duplicate();
        y = x;
        this.zoom.x = !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumber(x) || x === 0 ? this.zoom.x : +x;
        this.zoom.y = !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumber(y) || y === 0 ? this.zoom.y : +y;
        console.log('zoomOld:', oldZoom, 'x:', x, 'y:', y, ' zoom:', this.zoom);
        this.updateViewbox();
    }
    onResize(currSize = null) {
        if (currSize)
            this.size = currSize;
        else
            this.computeSize();
        this.updateViewbox();
    }
    updateViewbox() {
        const vbox = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getViewBox(this.container);
        vbox.w = this.size.w / this.zoom.x;
        vbox.h = this.size.h / this.zoom.y;
        vbox.x = this.scroll.x;
        vbox.y = this.scroll.y;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].setViewBox(this.container, vbox);
    }
    setGridPos() {
        const biggerSquareX = this.grid.x * 10;
        const biggerSquareY = this.grid.y * 10;
        const safetySquares = 1;
        if (this.grid.x > 0 && !isNaN(this.scroll.x + this.grid.x))
            this.gridHtml.setAttributeNS(null, 'x', '' + ((this.scroll.x - this.scroll.x % biggerSquareX) - biggerSquareX * safetySquares));
        if (this.grid.y > 0 && !isNaN(this.scroll.y + this.grid.y))
            this.gridHtml.setAttributeNS(null, 'y', '' + ((this.scroll.y - this.scroll.y % biggerSquareY) - biggerSquareY * safetySquares));
        const size = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Size"](0, 0, window.screen.width, window.screen.height);
        size.w = Math.max(size.w, window.outerWidth);
        size.h = Math.max(size.h, window.outerHeight);
        if (!isNaN(this.grid.x + this.zoom.x))
            this.gridHtml.setAttributeNS(null, 'width', ((size.w + biggerSquareX * safetySquares * 2) / this.zoom.x) + '');
        if (!isNaN(this.grid.y + this.zoom.y))
            this.gridHtml.setAttributeNS(null, 'height', ((size.h + biggerSquareY * safetySquares * 2) / this.zoom.y) + '');
    }
    refreshGridGUI() {
        const debug = false;
        // if (this.grid.x === null) this.grid.x = this.oldGridX; crea un bug che mette i vertici trascinati che triggerano una rule (anche senza effetto o event senza targets) in vertexPos.y = 0;
        // if (this.grid.y === null) this.grid.y = this.oldGridY; forse perchè null è un valore valido che dice "non usare la griglia", almeno mentre trascini
        if (this.grid.x !== null)
            this.oldGridX = this.grid.x;
        if (this.grid.y !== null)
            this.oldGridY = this.grid.y;
        const maxSquareSize = 1000; // Number.MAX_SAFE_INTEGER sarebbe meglio maxint, ma temo per il consumo di memoria.
        const x = isNaN(this.grid.x) || this.grid.x === null ? this.oldGridX : this.grid.x <= 0 ? maxSquareSize : this.grid.x; // if the size of squares in grid is zero or negative, i just use a big number.
        const y = isNaN(this.grid.y) || this.grid.y === null ? this.oldGridX : this.grid.y <= 0 ? maxSquareSize : this.grid.y;
        // NB: x è "displayed grid", grid.x è actual grid. se grid.x = null lo snap è disattivato ma continuo a mostrare old grid.
        debug && console.log('oldGridX:' + this.oldGridX, this.grid.x, x, this.gridDisplay);
        debug && console.log('oldGridY:' + this.oldGridY, this.grid.y, y);
        if (x === null || y === null) /*todo: x = getOldX;*/
            return;
        let drawx = this.grid.x === null || !(isNaN(this.grid.x) || this.grid.x <= 0 || this.grid.x >= maxSquareSize);
        let drawy = this.grid.x === null || !(isNaN(this.grid.y) || this.grid.y <= 0 || this.grid.x >= maxSquareSize);
        this.gridDefsHtml.innerHTML =
            '<pattern id="smallGrid_' + this.id + '" width="' + x + '" height="' + y + '" patternUnits="userSpaceOnUse">\n' +
                (!drawx && !drawy ? '<!-- no grid -->' :
                    '  <path d="m 0 0' + (drawy ? ' l' : ' m') + (x) + ' 0' + (drawx ? ' l' : ' m') + ' 0 ' + (y) + '" fill="none" stroke="' + this.gridColor1 + '" stroke-width="0.5"/>\n') +
                '</pattern>\n' +
                '<pattern id="grid_' + this.id + '" width="' + (x * 10) + '" height="' + (y * 10) + '" patternUnits="userSpaceOnUse">\n' +
                (!drawx && !drawy ? '<!-- no grid -->' :
                    '  <rect width="' + (x * 10) + '" height="' + (y * 10) + '" fill="url(#smallGrid_' + this.id + ')"/>\n' +
                        '  <path d="m 0 0' + (drawy ? ' l' : ' m') + (x * 10) + ' 0' + (drawx ? ' l' : ' m') + ' 0 ' + (y * 10) + '" fill="none" stroke="' + this.gridColor2 + '" stroke-width="1"/>\n') +
                '</pattern>';
        this.setGridPos();
        // $grid[0].setAttributeNS(null, 'justForRefreshingIt', 'true');
        // $grid.x
        if (this.gridDisplay) {
            $(this.gridHtml).show();
        }
        else {
            $(this.gridHtml).hide();
        }
    }
    addVertex(v) {
        v.owner = this;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.vertex, v);
        // todo: aggiungi edges tra i vertici. in matrix edgeMatrix[vertex][vertex] = edge
    }
    /*
      setGrid(grid: GraphPoint): void {
        this.grid = grid;
        this.model.refreshGUI_Alone(); // reallinea tutti i vertici.
      }*/
    getVertexSelection() {
        return [];
    }
    getEdgeSelection() {
        return [];
    }
    getSelection() {
        return [];
    }
    fitVertexToGrid(force = false) {
        const vertexes = this.getAllVertex();
        vertexes.forEach((v, i) => {
            v.setSize(this.fitToGridS(v.getSize()), false, true, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["measurableRules"].onDragEnd);
        });
    }
}
// todo: this.vertex non è mai aggiornato reealmente.
IGraph.all = {};
IGraph.ID = 0;
IGraph.allMarkp = []; // campo per robe di debug
IGraph.defaultGridDisplay = true;
IGraph.defaultGrid = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["GraphPoint"](20, 20);
IGraph.defaultZoom = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Point"](1, 1);


/***/ }),

/***/ "./src/guiElements/mm-graph-html/mm-graph-html.component.css":
/*!*******************************************************************!*\
  !*** ./src/guiElements/mm-graph-html/mm-graph-html.component.css ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\n/*::ng-deep foreignObject.Class *{\r\n  cursor: default;\r\n}\r\n::ng-deep foreignObject.Class input, foreignObject.Class *[contenteditable=\"true\"], foreignObject.Class textarea{\r\n  cursor: text;\r\n} ::ng-deep foreignObject.Class select{ cursor: pointer; }*/\r\n\r\n/* viewpoint */\r\n\r\n::ng-deep .viewpointShell{\r\n  max-width: 107px;\r\n  overflow: visible;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px; }\r\n\r\n::ng-deep .viewpointrow.template { display: none; }\r\n\r\n::ng-deep .viewpointrow button {\r\n  display: none;\r\n  height: 21px;\r\n  width: 21px;\r\n  min-width: 21px;\r\n  float: right;\r\n  margin-left: 5px; }\r\n\r\n::ng-deep .viewpointrow:hover button { display: inline-block; }\r\n\r\n::ng-deep .viewpointrow{ background-color: transparent; display: -webkit-box; display: flex; position: relative; }\r\n\r\n/*::ng-deep .viewpointrow .buttons{ display: none }*/\r\n\r\n::ng-deep .viewpointrow:hover .buttons{\r\n  z-index: 1;\r\n  position: absolute;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  top: 100%;\r\n  right: 0; }\r\n\r\n::ng-deep .viewpointrow > label{\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  margin: auto;\r\n  margin-left: 0; }\r\n\r\n::ng-deep .viewpointrow > label.checkbox{ }\r\n\r\n::ng-deep .viewpointrow > label.name{\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n  min-width: 0;\r\n}\r\n\r\n::ng-deep .viewpointrow input[type=\"text\"]{ min-width: 0; height: 21px; background: transparent; border: none; }\r\n\r\n/* ::ng-deep .viewpointrow:hover input[type=\"text\"]{ box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25); }*/\r\n\r\n::ng-deep .viewpointrow input[type='checkbox'], ::ng-deep .viewpointrow input[type='radio']{\r\n  width: 17px;\r\n  min-width: 17px;\r\n  height: 17px;\r\n  margin: 0;\r\n}\r\n\r\n::ng-deep .viewpointrow button{ margin: auto; background-color: transparent }\r\n\r\n::ng-deep .viewpointrow input[readonly]{ background-color: transparent; border: none; }\r\n\r\n::ng-deep .viewpointrow input.name{ opacity: 0.75; }\r\n\r\n::ng-deep .viewpointrow[islastvp='true'] input.name{ opacity: 1; }\r\n\r\n/************************************************** statici */\r\n\r\n.template, .MMDefaultStyles{\r\n  display: none;\r\n}\r\n\r\n.tabContent{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-flow: nowrap;/*?*/\r\n  /*margin-top: calc( var(--mainBorderWidth) * 2 );*/\r\n}\r\n\r\n/*olds*/\r\n\r\n.HiddenStructures > *{\r\n  display: none;\r\n}\r\n\r\n.property_sidebar, .editorShell, .propertyBarContainer{/*.sidebarShell,*/\r\n  flex-basis: 0;/* calc(var(--sidebarW));*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  background-color: var(--mainBackgroundColor);\r\n  /*border-right: var(--mainBorder);*/\r\n  width: calc(var(--sidebarW));\r\n  /*height: calc(100vh - (var(--topbarH) + var(--tabH)));*/\r\n  overflow: hidden;\r\n  /*flex-wrap: wrap;\r\n  margin-top: 5px;\r\n  border-top: var(--mainBorder);*/\r\n}\r\n\r\n.sidebarShell{ border-right: var(--mainBorder); }\r\n\r\n.propertyBarContainer{ border-left: var(--mainBorder); }\r\n\r\n.editorShell{\r\n  -webkit-box-flex: 3;\r\n          flex-grow: 3;\r\n}\r\n\r\n/*#sidebar, */\r\n\r\n#metamodel_sidebar, #model_sidebar, .property_sidebar{\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-direction: row;\r\n  flex-wrap: wrap;\r\n  -webkit-box-pack: justify;\r\n          justify-content: space-between;/*si attiva solo se entra tutto in una riga e avanza pure spazio*/\r\n  -webkit-box-align: start;\r\n          align-items: flex-start;\r\n  align-content: flex-start;/*accatasta tutto verticalmente verso la cima invece di spaziarli.*/\r\n  padding-right:5px;\r\n}\r\n\r\n/*\r\n#sidebarResizer, .sidebarResizer{\r\n    margin: 0px;\r\n    padding: 0px;\r\n    width: var(--mainBorderWidth);\r\n    cursor: ew-resize;\r\n    background-color: var(--mainBorderColor);\r\n    user-drag: none;\r\n    user-select: none;\r\n    -moz-user-select: none;\r\n    -webkit-user-drag: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n}*/\r\n\r\n#sidebar>*:first-child, #metamodel_sidebar>*:first-child, #model_sidebar>*:first-child{\r\n  background-color: var(--mainBorderColor);\r\n  width: var(--mainBorderWidth);\r\n  right: 0px;\r\n}\r\n\r\n#sidebar>*:not(:first-child), #metamodel_sidebar>*:not(:first-child), #model_sidebar>*:not(:first-child){\r\n  padding: 2px;\r\n  max-width: 200px;\r\n  min-width: 75px;\r\n  flex-basis: 75px;/*should === min-width per mantenere l'effetto.*/\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-shrink: 1;\r\n}\r\n\r\n.sidebarVertex:hover{\r\n  background-color: var(--mainBorderColor);\r\n  border: 2px solid var(--secondaryBorderColor);\r\n  padding: 0px;\r\n}\r\n\r\n.sidebarVertex{\r\n  min-width: 50px;\r\n  min-height: 50px;\r\n  flex-basis:50px;\r\n}\r\n\r\n@media all and (min-width: 200px) {\r\n  .sidebarVertex {\r\n    -webkit-box-flex: 0;\r\n            flex-grow: 0; }\r\n}\r\n\r\n#metamodel_editor, #model_editor{\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* property bar raws */\r\n\r\n::ng-deep .propertyBarContainer .mat-tab-label{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  height: 20px;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n  min-width: 0 !important;\r\n  /*width: auto !important;*/\r\n  max-width: 50% !important\r\n}\r\n\r\n::ng-deep .propertyBarContainer .mat-tab-header-pagination{\r\n  display: none !important;\r\n}\r\n\r\n.rawContainer{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  height: 100%;\r\n}\r\n\r\nh2.rawTitle{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.rawecore{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex:1;\r\n          flex-grow:1;\r\n  flex-shrink:1;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/guiElements/mm-graph-html/mm-graph-html.component.ts":
/*!******************************************************************!*\
  !*** ./src/guiElements/mm-graph-html/mm-graph-html.component.ts ***!
  \******************************************************************/
/*! exports provided: MmGraphHtmlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MmGraphHtmlComponent", function() { return MmGraphHtmlComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
var MmGraphHtmlComponent_1;



let MmGraphHtmlComponent = MmGraphHtmlComponent_1 = class MmGraphHtmlComponent {
    constructor() { }
    static graphMain() {
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status === null) {
            setTimeout(MmGraphHtmlComponent_1.graphMain, 1000);
            return;
        }
        // real main can start
    }
    ngOnInit() {
        MmGraphHtmlComponent_1.graphMain();
    }
};
MmGraphHtmlComponent = MmGraphHtmlComponent_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mm-graph-html',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./mm-graph-html.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mm-graph-html/mm-graph-html.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./mm-graph-html.component.css */ "./src/guiElements/mm-graph-html/mm-graph-html.component.css")).default]
    })
], MmGraphHtmlComponent);



/***/ }),

/***/ "./src/guiElements/mminput/mminput.component.css":
/*!*******************************************************!*\
  !*** ./src/guiElements/mminput/mminput.component.css ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("#MM_INPUT{\r\n  width: 100vw;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9tbWlucHV0L21taW5wdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvbW1pbnB1dC9tbWlucHV0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjTU1fSU5QVVR7XHJcbiAgd2lkdGg6IDEwMHZ3O1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "./src/guiElements/mminput/mminput.component.ts":
/*!******************************************************!*\
  !*** ./src/guiElements/mminput/mminput.component.ts ***!
  \******************************************************/
/*! exports provided: MminputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MminputComponent", function() { return MminputComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MminputComponent = class MminputComponent {
    constructor() { }
    ngOnInit() {
    }
};
MminputComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mminput',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./mminput.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mminput/mminput.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./mminput.component.css */ "./src/guiElements/mminput/mminput.component.css")).default]
    })
], MminputComponent);



/***/ }),

/***/ "./src/guiElements/mmsidebar/mmsidebar.component.css":
/*!***********************************************************!*\
  !*** ./src/guiElements/mmsidebar/mmsidebar.component.css ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvbW1zaWRlYmFyL21tc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "./src/guiElements/mmsidebar/mmsidebar.component.ts":
/*!**********************************************************!*\
  !*** ./src/guiElements/mmsidebar/mmsidebar.component.ts ***!
  \**********************************************************/
/*! exports provided: MmsidebarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MmsidebarComponent", function() { return MmsidebarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MmsidebarComponent = class MmsidebarComponent {
    constructor() { }
    ngOnInit() {
    }
};
MmsidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mmsidebar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./mmsidebar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/mmsidebar/mmsidebar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./mmsidebar.component.css */ "./src/guiElements/mmsidebar/mmsidebar.component.css")).default]
    })
], MmsidebarComponent);



/***/ }),

/***/ "./src/guiElements/msidebar/msidebar.component.css":
/*!*********************************************************!*\
  !*** ./src/guiElements/msidebar/msidebar.component.css ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvbXNpZGViYXIvbXNpZGViYXIuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/guiElements/msidebar/msidebar.component.ts":
/*!********************************************************!*\
  !*** ./src/guiElements/msidebar/msidebar.component.ts ***!
  \********************************************************/
/*! exports provided: MsidebarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MsidebarComponent", function() { return MsidebarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MsidebarComponent = class MsidebarComponent {
    constructor() { }
    ngOnInit() {
    }
};
MsidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-msidebar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./msidebar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/msidebar/msidebar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./msidebar.component.css */ "./src/guiElements/msidebar/msidebar.component.css")).default]
    })
], MsidebarComponent);



/***/ }),

/***/ "./src/guiElements/property-barr/property-barr.component.css":
/*!*******************************************************************!*\
  !*** ./src/guiElements/property-barr/property-barr.component.css ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\ninput, select {\r\n  height: 21px;\r\n  border-radius: 5px;\r\n  border-bottom-right-radius: 12px; }\r\ninput:hover, select:hover, input:focus, select:focus {\r\n  outline: none;\r\n  border: 2px solid var(--color-4);\r\n  height: 22px;\r\n}\r\n/* label > input[type='checkbox']{ height: 21px; } */\r\n/* input[type='checkbox']:hover, input[type='checkbox']:focus { height: 23px; }*/\r\ninput[disabled]:hover, select[disabled]:hover{\r\n  outline: none;\r\n  border: 2px solid gray;\r\n  /* height: auto; */\r\n}\r\n/*propertyBar*/\r\n#modelTemplate, #packageTemplate, #classTemplate, #attributeTemplate, #referenceTemplate{\r\n  width: 100%;\r\n}\r\n.propertySidebarTemplates{\r\n  display: none;\r\n}\r\n.wastemplate {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.wastemplate > * {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n.wastemplate > *{\r\n  width: 100%;\r\n}\r\n.minimizer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  border-left: 2px dashed var(--color-4);\r\n  border-bottom: 2px dashed var(--color-4);\r\n  min-width: 8px !important;\r\n  height: auto;\r\n  width: 8px !important;\r\n}\r\n.wastemplate.minimized > *{\r\n  display: none;\r\n}\r\n.wastemplate.minimized:hover {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  border-color: var(--secondary);\r\n}\r\n.wastemplate.minimized:before {\r\n  color: var(--color-4);\r\n  content: '+';\r\n  font-size: 20px;\r\n  margin: auto;\r\n  line-height: 0;\r\n}\r\n.wastemplate.minimized:hover:before {\r\n  color: var(--secondary);\r\n}\r\n.minimizer:hover, .attributeMinimizer:hover{\r\n  border-left: 2px dashed var(--secondary);\r\n  border-bottom: 2px dashed var(--secondary);\r\n}\r\n.wastemplate.minimized{\r\n  border: 2px solid var(--color-4);\r\n  height: 20px;\r\n  margin-bottom: 8px;\r\n}\r\n.wastemplate.minimized.list{\r\n  border-style: dashed;\r\n}\r\n.minimizer.single {\r\n  border-style: solid;\r\n  border-right: none;\r\n  border-top: none;\r\n}\r\n.content {\r\n  margin-left: 8px;\r\n  width: 100%;\r\n  height: -webkit-min-content;\r\n  height: -moz-min-content;\r\n  height: min-content;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  /*width: calc(100% - 16px);*/\r\n\r\n}\r\nlabel{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 24px;\r\n  line-height: 24px;\r\n  white-space: nowrap;\r\n}\r\nlabel > input:not([type]), label > input[type=\"\"], label > input[type=\"text\"], label > input[type=\"number\"],\r\nlabel > input[type=\"checkbox\"], label > select{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto;\r\n  margin-right: 0;\r\n  margin-left: 20px;\r\n  width: inherit;\r\n  min-width: 60px;\r\n}\r\nlabel > input[type=\"checkbox\"]{\r\n  width: auto;\r\n  min-width: 21px; }\r\nlabel > input[type=\"checkbox\"]{\r\n  box-shadow: none;\r\n}\r\n/*\r\nlabel > input[type=\"checkbox\"]{\r\n   display: flex;\r\n   margin: auto;\r\n   margin-left: 0;\r\n   margin-right: 20px;\r\n   min-width: 20px;\r\n }*/\r\nlabel > input[type=\"number\"] {\r\n  min-width: 30px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ndWlFbGVtZW50cy9wcm9wZXJ0eS1iYXJyL3Byb3BlcnR5LWJhcnIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGdDQUFnQyxFQUFFO0FBQ3BDO0VBQ0UsYUFBYTtFQUNiLGdDQUFnQztFQUNoQyxZQUFZO0FBQ2Q7QUFFQSxvREFBb0Q7QUFFcEQsZ0ZBQWdGO0FBQ2hGO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7QUFDQSxjQUFjO0FBQ2Q7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsV0FBVztFQUNYLFlBQVk7QUFDZDtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2Isa0JBQWtCO0FBQ3BCO0FBRUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLHNDQUFzQztFQUN0Qyx3Q0FBd0M7RUFDeEMseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixxQkFBcUI7QUFDdkI7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtFQUNaLGVBQWU7RUFDZixZQUFZO0VBQ1osY0FBYztBQUNoQjtBQUNBO0VBQ0UsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSx3Q0FBd0M7RUFDeEMsMENBQTBDO0FBQzVDO0FBQ0E7RUFDRSxnQ0FBZ0M7RUFDaEMsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usb0JBQW9CO0FBQ3RCO0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCwyQkFBbUI7RUFBbkIsd0JBQW1CO0VBQW5CLG1CQUFtQjtFQUNuQiw0QkFBaUI7RUFBakIsNkJBQWlCO1VBQWpCLGlCQUFpQjtFQUNqQiw0QkFBNEI7O0FBRTlCO0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixtQkFBbUI7QUFDckI7QUFDQTs7RUFFRSxvQkFBYTtFQUFiLGFBQWE7RUFDYixZQUFZO0VBQ1osZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsV0FBVztFQUNYLGVBQWUsRUFBRTtBQUNuQjtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBOzs7Ozs7O0dBT0c7QUFDSDtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2d1aUVsZW1lbnRzL3Byb3BlcnR5LWJhcnIvcHJvcGVydHktYmFyci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmlucHV0LCBzZWxlY3Qge1xyXG4gIGhlaWdodDogMjFweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEycHg7IH1cclxuaW5wdXQ6aG92ZXIsIHNlbGVjdDpob3ZlciwgaW5wdXQ6Zm9jdXMsIHNlbGVjdDpmb2N1cyB7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jb2xvci00KTtcclxuICBoZWlnaHQ6IDIycHg7XHJcbn1cclxuXHJcbi8qIGxhYmVsID4gaW5wdXRbdHlwZT0nY2hlY2tib3gnXXsgaGVpZ2h0OiAyMXB4OyB9ICovXHJcblxyXG4vKiBpbnB1dFt0eXBlPSdjaGVja2JveCddOmhvdmVyLCBpbnB1dFt0eXBlPSdjaGVja2JveCddOmZvY3VzIHsgaGVpZ2h0OiAyM3B4OyB9Ki9cclxuaW5wdXRbZGlzYWJsZWRdOmhvdmVyLCBzZWxlY3RbZGlzYWJsZWRdOmhvdmVye1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxuICAvKiBoZWlnaHQ6IGF1dG87ICovXHJcbn1cclxuLypwcm9wZXJ0eUJhciovXHJcbiNtb2RlbFRlbXBsYXRlLCAjcGFja2FnZVRlbXBsYXRlLCAjY2xhc3NUZW1wbGF0ZSwgI2F0dHJpYnV0ZVRlbXBsYXRlLCAjcmVmZXJlbmNlVGVtcGxhdGV7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnByb3BlcnR5U2lkZWJhclRlbXBsYXRlc3tcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi53YXN0ZW1wbGF0ZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuLndhc3RlbXBsYXRlID4gKiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbn1cclxuXHJcbi53YXN0ZW1wbGF0ZSA+ICp7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLm1pbmltaXplciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBib3JkZXItbGVmdDogMnB4IGRhc2hlZCB2YXIoLS1jb2xvci00KTtcclxuICBib3JkZXItYm90dG9tOiAycHggZGFzaGVkIHZhcigtLWNvbG9yLTQpO1xyXG4gIG1pbi13aWR0aDogOHB4ICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHdpZHRoOiA4cHggIWltcG9ydGFudDtcclxufVxyXG4ud2FzdGVtcGxhdGUubWluaW1pemVkID4gKntcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi53YXN0ZW1wbGF0ZS5taW5pbWl6ZWQ6aG92ZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1zZWNvbmRhcnkpO1xyXG59XHJcbi53YXN0ZW1wbGF0ZS5taW5pbWl6ZWQ6YmVmb3JlIHtcclxuICBjb2xvcjogdmFyKC0tY29sb3ItNCk7XHJcbiAgY29udGVudDogJysnO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbn1cclxuLndhc3RlbXBsYXRlLm1pbmltaXplZDpob3ZlcjpiZWZvcmUge1xyXG4gIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnkpO1xyXG59XHJcbi5taW5pbWl6ZXI6aG92ZXIsIC5hdHRyaWJ1dGVNaW5pbWl6ZXI6aG92ZXJ7XHJcbiAgYm9yZGVyLWxlZnQ6IDJweCBkYXNoZWQgdmFyKC0tc2Vjb25kYXJ5KTtcclxuICBib3JkZXItYm90dG9tOiAycHggZGFzaGVkIHZhcigtLXNlY29uZGFyeSk7XHJcbn1cclxuLndhc3RlbXBsYXRlLm1pbmltaXplZHtcclxuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jb2xvci00KTtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG59XHJcbi53YXN0ZW1wbGF0ZS5taW5pbWl6ZWQubGlzdHtcclxuICBib3JkZXItc3R5bGU6IGRhc2hlZDtcclxufVxyXG4ubWluaW1pemVyLnNpbmdsZSB7XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgYm9yZGVyLXRvcDogbm9uZTtcclxufVxyXG4uY29udGVudCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IG1pbi1jb250ZW50O1xyXG4gIGZsZXgtZmxvdzogY29sdW1uO1xyXG4gIC8qd2lkdGg6IGNhbGMoMTAwJSAtIDE2cHgpOyovXHJcblxyXG59XHJcbmxhYmVse1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAyNHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbn1cclxubGFiZWwgPiBpbnB1dDpub3QoW3R5cGVdKSwgbGFiZWwgPiBpbnB1dFt0eXBlPVwiXCJdLCBsYWJlbCA+IGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCBsYWJlbCA+IGlucHV0W3R5cGU9XCJudW1iZXJcIl0sXHJcbmxhYmVsID4gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLCBsYWJlbCA+IHNlbGVjdHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgd2lkdGg6IGluaGVyaXQ7XHJcbiAgbWluLXdpZHRoOiA2MHB4O1xyXG59XHJcbmxhYmVsID4gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJde1xyXG4gIHdpZHRoOiBhdXRvO1xyXG4gIG1pbi13aWR0aDogMjFweDsgfVxyXG5sYWJlbCA+IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXXtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG59XHJcbi8qXHJcbmxhYmVsID4gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJde1xyXG4gICBkaXNwbGF5OiBmbGV4O1xyXG4gICBtYXJnaW46IGF1dG87XHJcbiAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgIG1pbi13aWR0aDogMjBweDtcclxuIH0qL1xyXG5sYWJlbCA+IGlucHV0W3R5cGU9XCJudW1iZXJcIl0ge1xyXG4gIG1pbi13aWR0aDogMzBweDtcclxufVxyXG4iXX0= */");

/***/ }),

/***/ "./src/guiElements/property-barr/property-barr.component.ts":
/*!******************************************************************!*\
  !*** ./src/guiElements/property-barr/property-barr.component.ts ***!
  \******************************************************************/
/*! exports provided: PropertyBarrComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyBarrComponent", function() { return PropertyBarrComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let PropertyBarrComponent = class PropertyBarrComponent {
    constructor() { }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PropertyBarrComponent.prototype, "isM2", void 0);
PropertyBarrComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-property-barr',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./property-barr.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/property-barr/property-barr.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./property-barr.component.css */ "./src/guiElements/property-barr/property-barr.component.css")).default]
    })
], PropertyBarrComponent);



/***/ }),

/***/ "./src/guiElements/propertyBar/propertyBar.ts":
/*!****************************************************!*\
  !*** ./src/guiElements/propertyBar/propertyBar.ts ***!
  \****************************************************/
/*! exports provided: PropertyBarTabs, PropertyBarr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyBarTabs", function() { return PropertyBarTabs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyBarr", function() { return PropertyBarr; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


var PropertyBarTabs;
(function (PropertyBarTabs) {
    PropertyBarTabs["style"] = "Style";
    PropertyBarTabs["structured"] = "Structured";
    PropertyBarTabs["raw"] = "Raw";
})(PropertyBarTabs || (PropertyBarTabs = {}));
class PropertyBarr {
    constructor(model) {
        this.model = null;
        this.styleEditor = null;
        this.model = model;
        this.selectedModelPiece = null;
        const $root = this.get$root();
        this.container = $root.find('.propertySidebarCurrentContent')[0];
        this.templateContainer = $root.find('.propertySidebarTemplates')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.container, 'property bar shell not found in: ', $root);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.templateContainer, 'property bar template shell not found in: ', $root);
        this.styleEditor = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["StyleEditor"](this, $root);
    }
    static getActiveTab() {
        return $('app-' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel().getPrefix() + '-graph-html .propertyBarContainer .UtabHeader[selected="true"]')[0].innerText;
    }
    static isTabVisible(model, tab) { return model === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.getActiveModel() && PropertyBarr.getActiveTab() === tab; }
    templateMinimizerClick(e) {
        const minimizer = e.currentTarget;
        let templatee = minimizer;
        while (!templatee.classList.contains('wastemplate')) {
            templatee = templatee.parentNode;
        }
        templatee.classList.add('minimized');
        $(templatee).off('click.maximizeTemplate').on('click.maximizeTemplate', (ee) => { PropertyBarr.templateMaximizerClick(ee); }).on('contextmenu', (e) => { this.subTemplateShow(e); });
        e.stopImmediatePropagation();
        e.stopPropagation();
        e.preventDefault();
    }
    static templateMaximizerClick(e) {
        const template = e.currentTarget;
        template.classList.remove('minimized');
    }
    static makeVisibilitySelector(selectHtml, visibility) {
        if (selectHtml === null) {
            selectHtml = document.createElement('select');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(selectHtml);
        const optgrp = document.createElement('optgroup');
        optgrp.label = 'Access Modifier';
        selectHtml.appendChild(optgrp);
        let optionFound = false;
        for (const key in _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AccessModifier"]) {
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AccessModifier"][key]) {
                continue;
            }
            const access = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AccessModifier"][key];
            const opt = document.createElement('option');
            opt.value = access;
            opt.innerHTML = access;
            if (visibility === access) {
                opt.selected = true;
                optionFound = true;
            }
            optgrp.appendChild(opt);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(visibility && !optionFound, 'OperationVisibility selected option not found; optgrp:', optgrp, 'OperationVisibility:', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AccessModifier"], ', searchedVal:', visibility);
        return selectHtml;
    }
    subTemplateShow(e) {
        const target = e.currentTarget;
        e.preventDefault();
        e.stopPropagation();
        if (target.classList.contains('list'))
            return false;
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(target);
        this.show(mp, mp.getHtmlOnGraph(), null);
        return false;
    }
    removeOthers($html, keep) {
        const toremove = '.model, .package, .class, .enum, .attribute, .reference, .operation, .parameter, .literal';
        // ['.model', '.package', '.class', '.enum', '.attribute', '.reference', '.operation', '.parameter', '.literal'];
        const index = toremove.indexOf(keep);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(index === -1, 'invalid selector to keep:', keep, toremove);
        // toremove = toremove.substr(0, index - 1) + toremove.substr(index + keep.length);
        $html.find(toremove).not(keep).remove();
    }
    getTemplate(o, selector = 'propertySidebarTemplates', root = null) {
        // selector = '.propertySidebarTemplates';
        // if (!root) { root = this.templateContainer; }
        // const $html = $(U.cloneHtml<HTMLElement>($(root).find(selector)[0]));
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneHtml(this.templateContainer);
        o.linkToLogic(html);
        html.classList.add('linkedWith_' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(o));
        html.classList.remove('propertySidebarTemplates');
        html.classList.remove('template');
        html.classList.add('wastemplate');
        const $html = $(html);
        $html.find('.replaceVarOn').each((ii, elem) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVarsInnerOnly(o, elem, false); });
        let namestr;
        const model = o.getModelRoot();
        if (!(o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"] || model.isMM())) {
            namestr = o.metaParent.name;
        }
        else {
            namestr = o.name;
        }
        $html.find('input.name').val(namestr)
            .off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            console.log('value:', input.value, 'inputHtml:', input, 'evt:', evt);
            input.value = o.setName(input.value, true);
        });
        $html.find('.replaceVarOn').each((i, elem) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceVarsInnerOnly(o, elem, false); });
        // console.log('7x', $html, $html.find('.m1disable'), model.isM(), (model.isM() ? '.m1' : '.m2') + 'disable', $html.find((model.isM() ? '.m1' : '.m2') + 'disable'));
        $html.find((model.isM() ? '.m1' : '.m2') + 'disable').attr('disabled', 'true');
        $html.find((model.isM() ? '.m1' : '.m2') + 'hide').remove();
        return $html;
    }
    get$root() {
        let TabRootHtml = this.model.graph.container;
        // console.log('TabRootHtml:', TabRootHtml);
        while (!TabRootHtml.classList.contains('UtabContent')) {
            TabRootHtml = TabRootHtml.parentNode;
        }
        const $ret = $(TabRootHtml).find('.propertyBarContainer');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe($ret.length !== 1, 'pbar container not found:', $ret);
        return $ret;
    }
    updateRaw(o = null) {
        // o = o || this.selectedModelPiece;
        // if (!o) { return; }
        const $root = this.get$root();
        const textArea = this.rawTextArea = $root.find('.rawecore')[0];
        if (!textArea) {
            return;
        }
        textArea.value = o.generateModelString();
    }
    show(o = null, clickedLevel = null, isEdge = null, forceRefresh = true) {
        const oldClickedLevel = this.clickedLevel;
        const oldMP = this.selectedModelPiece;
        const oldisEdge = this.selectedModelPieceIsEdge;
        this.selectedModelPiece = o = (o || this.selectedModelPiece);
        this.clickedLevel = clickedLevel = (clickedLevel || this.clickedLevel);
        this.selectedModelPieceIsEdge = isEdge; // = (isEdge || this.selectedModelPieceIsEdge);
        if (!forceRefresh && oldMP === this.selectedModelPiece && oldisEdge === this.selectedModelPieceIsEdge) {
            if (oldClickedLevel === this.clickedLevel) {
                return;
            }
            if (isEdge) {
                this.styleEditor.showE(o, isEdge);
            }
            else {
                this.styleEditor.show(o, clickedLevel);
            }
            return;
        }
        if (isEdge) {
            this.styleEditor.showE(o, isEdge);
        }
        else {
            this.styleEditor.show(o, clickedLevel);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!(o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"]), 'invalid parameter type:', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(o), o);
        if (!o) {
            return;
        }
        // console.log('PropertyBar.show: ', o);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(this.container);
        if (false) {}
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IModel"]) {
            this.container.append(this.getM_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IPackage"]) {
            this.container.append(this.getP_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
            this.container.append(this.getC_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
            this.container.append(this.getE_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
            this.container.append(this.getA_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
            this.container.append(this.getR_I(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            this.container.append(this.getO(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            this.container.append(this.getParam(o));
        }
        else if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            this.container.append(this.getEL(o));
        }
        else {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'invalid ModelPiece type instance: ', o);
        }
        this.updateRaw(o);
        const $container = $(this.container);
        // $container.find('.template').addClass('.wastemplate').removeClass('template');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors($container);
        $container.find('.minimizer').off('click.minimizeTemplate').on('click.minimizeTemplate', (e) => { this.templateMinimizerClick(e); });
        /// ottimizzazioni di stile.
        while ($container.find('.wastemplate:has(>.content:not(:has(*)))').remove().length) { } // remove empty minimizer-content.
        // rimuove template.minimizer nested con un solo child che è un altro template+minimizer.
        // tipo:  ((1, 2)) --> (1, 2); sopravvive invece: (1, (2)) -> (1, (2));
        const monoChildReplacer = (i, h) => {
            /*
              '<template_1>' +
                '<content_1>' +
                  '<template_2>' +
                    '<content_2>' +
                    '</content_2>' +
                  '</template_2>' +
                '</content_1>' +
              '</template_1>';*/
            const content1 = h;
            const template1 = h.parentElement;
            const template2 = content1.firstChild;
            const content2 = $(template2).find('>.content')[0];
            const parent = template1.parentElement;
            parent.insertBefore(template2, template1);
            parent.removeChild(template1);
            // template1.insertBefore(content2, content1);
            // template1.removeChild(content1);
        };
        // while ($container.find('.content:has(>.wastemplate:only-child)').each(monoChildReplacer).length) {}
        while ($container.find('.content:has(>.wastemplate:only-child)').each(monoChildReplacer).length) { }
        // rimuove il template.minimizer alla radice, non ha senso chiudere tutto e rimanere con la pbar vuota.
        $container.find('.minimizer.single').on('contextmenu', (e) => { this.subTemplateShow(e); });
        const contentRoot = $container.find('>.wastemplate>.content')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(this.container);
        while (contentRoot.firstChild) {
            this.container.append(contentRoot.firstChild);
        }
        o.linkToLogic(this.container);
    }
    getM_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.model'); // $html.find('.model').show();
        const nsHtml = $html.find('input.namespace')[0];
        const uriHtml = $html.find('input.uri')[0];
        nsHtml.value = o.namespace();
        uriHtml.value = o.uri();
        $(uriHtml).off('change.pbar').on('change.pbar', (e) => { o.uri(uriHtml.value); });
        $(nsHtml).off('change.pbar').on('change.pbar', (e) => { o.namespace(nsHtml.value); });
        const pkgListHtml = ($html.find('.packageList')[0]);
        let i;
        for (i = 0; i < o.childrens.length; i++) {
            pkgListHtml.appendChild(this.getP_I(o.childrens[i]));
        }
        return $html[0];
    }
    getP_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.package'); // $html.find('.package').show();
        const classListHtml = $html.find('.classList')[0];
        const enumListHtml = $html.find('.enumList')[0];
        let i;
        for (i = 0; i < o.classes.length; i++) {
            classListHtml.appendChild(this.getC_I(o.classes[i]));
        }
        for (i = 0; i < o.enums.length; i++) {
            enumListHtml.appendChild(this.getE_I(o.enums[i]));
        }
        // package own properties (sembra ci sia solo il name)
        return $html[0];
    }
    getC_I(o) {
        const $html = this.getTemplate(o);
        let model = o.getModelRoot();
        this.removeOthers($html, '.class');
        const m1class = model.isM1() ? o : null;
        const m2class = model.isM2() ? o : null;
        // $html.find('.class').show();
        let i;
        const attribListHtml = ($html.find('.attributeList')[0]);
        const refListHtml = ($html.find('.referenceList')[0]);
        const opListHtml = ($html.find('.operationList')[0]);
        const attributes = [...o.getAllChildrens(false, false, true, false, false)];
        for (i = 0; i < attributes.length; i++) {
            attribListHtml.appendChild(this.getA_I(attributes[i]));
        }
        const references = [...o.getAllChildrens(false, false, false, true, false)];
        for (i = 0; i < references.length; i++) {
            refListHtml.appendChild(this.getR_I(references[i]));
        }
        const operations = [...o.getAllChildrens(true, false, false, false)];
        for (i = 0; i < operations.length; i++) {
            opListHtml.appendChild(this.getO(operations[i]));
        }
        $html.find('.attributeCount')[0].innerHTML = '' + attributes.length;
        $html.find('.referenceCount')[0].innerHTML = '' + references.length;
        $html.find('.operationCount')[0].innerHTML = '' + operations.length;
        let stopPropagation = (e) => { e.stopPropagation(); };
        if (m2class) {
            const $interfaceCheckbox = $html.find('input.isinterface');
            const interfaceCheckbox = $interfaceCheckbox[0];
            const $abstractCheckbox = $html.find('input.isabstract');
            const abstractCheckbox = $abstractCheckbox[0];
            const $accessModifierHtml = $html.find('select.accessModifier');
            const accessModifierHtml = $accessModifierHtml[0];
            abstractCheckbox.checked = m2class.getAbstract();
            interfaceCheckbox.checked = m2class.getInterface();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].$makeSelect($accessModifierHtml, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AccessModifier"], 'Access modifier', m2class.visibility.toString());
            $accessModifierHtml.on('change', (e) => {
                m2class.setAccessModifier(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getEnumValByVal(accessModifierHtml.value, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AccessModifier"]));
            });
            $abstractCheckbox.on('click', stopPropagation).on('mousedown', stopPropagation).on('mouseup', stopPropagation)
                .on('change', (e) => {
                m2class.setAbstract(abstractCheckbox.checked, true);
                abstractCheckbox.checked = m2class.getAbstract(); // they are linked, editing abstract could unset interface
                interfaceCheckbox.checked = m2class.getInterface();
            });
            $interfaceCheckbox.on('click', stopPropagation).on('mousedown', stopPropagation).on('mouseup', stopPropagation)
                .on('change', (e) => {
                m2class.setInterface(interfaceCheckbox.checked, true);
                abstractCheckbox.checked = m2class.getAbstract(); // setting interface could remove abstract
                interfaceCheckbox.checked = m2class.getInterface();
            });
        }
        if (!m1class) {
            return $html[0];
        }
        /// Se MClass
        const isRoot = ($html.find('input.isRoot')[0]);
        isRoot.disabled = isRoot.checked = m1class.isRoot();
        $(isRoot).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            if (!input.checked) {
                input.checked = true;
                return $html[0];
            }
            m1class.setRoot(input.checked);
            m1class.refreshGUI();
            this.refreshGUI();
        });
        return $html[0];
    }
    getE_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.enum'); //$html.find('.enum').show();
        let i;
        const literalsHtml = ($html.find('.literalList')[0]);
        for (i = 0; i < o.childrens.length; i++) {
            literalsHtml.appendChild(this.getEL(o.childrens[i]));
        }
        return $html[0];
    }
    setClassChild(o, $html) {
        let upperbound = o.getUpperbound();
        let lowerbound = o.getLowerbound();
        const htmlUpperBound = $html.find('input.upperbound')[0];
        const htmlLowerBound = $html.find('input.lowerbound')[0];
        if (!htmlUpperBound || !htmlLowerBound)
            return;
        if (upperbound === null) {
            htmlUpperBound.placeholder = '1';
        }
        else {
            htmlUpperBound.value = '' + upperbound;
        }
        if (lowerbound === null) {
            htmlLowerBound.placeholder = '1';
        }
        else {
            htmlLowerBound.value = '' + lowerbound;
        }
        $(htmlUpperBound).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            o.setUpperbound(+target.value);
            o.refreshGUI();
        });
        $(htmlLowerBound).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            o.setLowerbound(+target.value);
            o.refreshGUI();
        });
    }
    getR_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.reference'); // $html.find('.reference').show();
        this.setClassChild(o, $html);
        const htmlContainment = $html.find('input.referenceContainment')[0];
        htmlContainment.checked = o.isContainment();
        const selectType = $html.find('select')[0];
        if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return $html[0];
        }
        const ref = o;
        $(selectType).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            ref.type.changeType(target.value);
        });
        $(htmlContainment).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            ref.setContainment(target.checked, false);
            ref.refreshGUI();
        });
        return $html[0];
    }
    getA_I(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.attribute');
        // $html.find('.attribute').show();
        this.setClassChild(o, $html);
        // const typeHtml: HTMLSelectElement = ($html.find('select.attributeType')[0] as HTMLSelectElement);
        // Type.makeTypeSelector(typeHtml, o.getType(), true, true, false, false);
        /* $(typeHtml).off('change.pbar').on('change.pbar',
          (evt: Event) => {
            const target: HTMLSelectElement = (evt.currentTarget as HTMLSelectElement);
            o.setType(target.value, null, true);} );*/
        if (o instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            return $html[0];
        }
        // Se MAttribute
        const attr = o;
        $html.find('.attributeValue').val(attr.getValueStr()).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            attr.setValueStr(input.value);
            attr.refreshGUI();
        });
        return $html[0];
    }
    getO(o) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.operation'); // $html.find('.operation').show();
        this.setClassChild(o, $html);
        let i;
        const paramListHtml = ($html.find('.parameterList')[0]);
        const visibilityHtml = ($html.find('.visibilitySelector')[0]);
        PropertyBarr.makeVisibilitySelector(visibilityHtml, o.visibility);
        let paramHtml = this.getParam(o, true);
        const returnName = $(paramHtml).find('input.name')[0];
        returnName.placeholder = 'Return type.';
        returnName.disabled = true;
        returnName.value = '';
        const templateContainingParamList = paramListHtml;
        // while (!templateContainingParamList.classList.contains('replaceVarOn')) { templateContainingParamList = templateContainingParamList.parentElement; }
        templateContainingParamList.prepend(paramHtml);
        for (i = 0; i < o.childrens.length; i++) {
            paramHtml = this.getParam(o.childrens[i], false);
            paramListHtml.appendChild(paramHtml);
        }
        $html.find('input.exceptions').val(o.exceptionsStr).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            input.value = o.exceptionsStr = input.value;
        });
        return $html[0];
    }
    getEL(eLiteral) {
        const $html = this.getTemplate(eLiteral);
        this.removeOthers($html, '.literal'); // $html.find('.literal').show();
        this.setClassChild(eLiteral, $html);
        $html.find('.value').val(eLiteral.ordinal).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            eLiteral.ordinal = +input.value;
            eLiteral.refreshGUI();
        });
        $html.find('input.literal').val(eLiteral.literal).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            eLiteral.setLiteral(input.value);
            eLiteral.refreshGUI();
        });
        $html.find('.name').val(eLiteral.name).off('change.pbar').on('change.pbar', (evt) => {
            const input = evt.currentTarget;
            eLiteral.setName(input.value);
            eLiteral.refreshGUI();
        });
        return $html[0];
    }
    refreshGUI() { this.show(this.selectedModelPiece, this.clickedLevel, this.selectedModelPieceIsEdge, true); }
    getParam(o, asReturnType = false) {
        const $html = this.getTemplate(o);
        this.removeOthers($html, '.parameter'); // $html.find('.parameter').show();
        this.setClassChild(o, $html);
        const typeHtml = $html.find('select')[0];
        typeHtml.dataset.void = asReturnType ? "true" : "false";
        const ordered = $html.find('input.ordered')[0];
        const unique = $html.find('input.unique')[0];
        ordered.checked = o.ordered;
        unique.checked = o.unique;
        $(typeHtml).off('change.pbar').on('change.pbar', (evt) => {
            const target = evt.currentTarget;
            o.setType(target.value, null, true);
        }); // .trigger('change');
        return $html[0];
    }
    onShow(isRaw = false) { this.styleEditor.onHide(); }
    onHide() { }
    static staticinit() {
        $('app-mm-graph-html .propertyBarContainer .UtabHeader').on('click', (e) => {
            switch (e.currentTarget.innerText) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized right-side tab:', e.currentTarget);
                    break;
                case PropertyBarTabs.style:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph.propertyBar.styleEditor.onShow();
                    break;
                case PropertyBarTabs.structured:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph.propertyBar.onShow();
                    break;
                case PropertyBarTabs.raw:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.graph.propertyBar.onShow(true);
                    break;
            }
        });
        $('app-m-graph-html .propertyBarContainer .UtabHeader').on('click', (e) => {
            switch (e.currentTarget.innerText) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized right-side tab:', e.currentTarget);
                    break;
                case PropertyBarTabs.style:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.styleEditor.onShow();
                    break;
                case PropertyBarTabs.structured:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.onShow();
                    break;
                case PropertyBarTabs.raw:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.graph.propertyBar.onShow(true);
                    break;
            }
        });
    }
}


/***/ }),

/***/ "./src/guiElements/style-editor/csseditor/CssEditor.ts":
/*!*************************************************************!*\
  !*** ./src/guiElements/style-editor/csseditor/CssEditor.ts ***!
  \*************************************************************/
/*! exports provided: CSSEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CSSEditor", function() { return CSSEditor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class CSSEditor {
    static updateGUI(se, $html, mp, context) {
        if (!CSSEditor.editor) {
            CSSEditor.editor = new CSSEditor();
            CSSEditor.staticInit();
        }
        return CSSEditor.editor.updateGUI(se, $html, mp, context);
    }
    static makeColorBlockReadonly(color) {
        const el = document.createElement('div');
        el.classList.add('colorblock');
        el.style.backgroundColor = color;
        return el;
    }
    static fillColorSchemeHtml($option, colorscheme) {
        $option[0].classList.remove('template');
        $option[0].dataset.csname = colorscheme.name;
        $option.find('[value1]')[0].innerHTML = colorscheme.name;
        const colorcontainer = $option.find('[value2]')[0];
        colorcontainer.dataset.colors = colorscheme.colors.join(', ');
        for (let color of colorscheme.colors) {
            colorcontainer.appendChild(CSSEditor.makeColorBlockReadonly(color));
        }
    }
    fillSelectorSuggestionDatalist(templateLevelRoot) {
        const repeatedClasses = $(templateLevelRoot).find('[class]').addBack('[class]').toArray()['flatMap'](e => e.className.toString().split(/\s+/));
        const set = new Set();
        repeatedClasses.forEach(c => c && set.add(c));
        const uniqueClasses = [...set].sort();
        const suggestSelectorsDataList = $('#currentNodeClassList')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(suggestSelectorsDataList);
        const makeOption = (classname) => {
            const opt = document.createElement('option');
            opt.value = classname;
            return opt;
        };
        const options = uniqueClasses.map((classname) => {
            return makeOption('.' + classname);
        });
        options.push(makeOption('input'));
        options.push(makeOption('textarea'));
        options.push(makeOption('select'));
        options.push(makeOption('h1, h2, h3, h4, h5, h6'));
        // console.log('dsa', suggestSelectorsDataList, options, uniqueClasses, templateLevelRoot);
        /*window['CSSParser'] = CSSParser;
        console.log("CSSParser", CSSParser);*/
        suggestSelectorsDataList.append(...options);
    }
    fillInheritedColorSchemeDropdown(se, $html, mp, context, csTemplates) {
        const ancestorLine = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ancestorArray(context.graphLevel, null, false);
        const $ancestorLine = $(ancestorLine);
        const allColorSchemeSelectors = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ColorSchemeComponent"].getAllSelectors();
        const inheritingLine = new Map();
        let $results;
        for (let selector in allColorSchemeSelectors) {
            try {
                $results = $ancestorLine.filter(selector);
                if (!$results)
                    continue;
                for (let result of $results) {
                    const oldArr = inheritingLine.get(result) || [];
                    oldArr.push(...allColorSchemeSelectors[selector]);
                    inheritingLine.set(result, oldArr);
                }
            }
            catch (e) {
                ;
            }
        }
        // dati presi, ora riempio la lista cs ereditati
        let i;
        // ritorna un singolo cs option template con lista colori
        const fillListWithCs = ($element, arr) => {
            for (let cs of arr) {
                $element.append(csTemplates.getCsOptionEntry(cs));
            }
        };
        const $inerhitingColorSchemeList = $html.find('.inheriting-color-scheme-list'); // todo direttamente dentro style editor, contiene niente e viene riempito dinamicamente.
        const container = $inerhitingColorSchemeList.find('.dropdownmenu')[0];
        for (i = 0; i < ancestorLine.length; i++) {
            const ancestor = ancestorLine[i];
            const csarr = inheritingLine.get(ancestor);
            if (!csarr || !csarr.length)
                continue;
            const goUpCount = i + 1;
            const option = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneHtml(csTemplates.csList);
            const $option = $(option);
            $option.find('.cs.level').text('' + goUpCount);
            $option.find('.cs.tag').text('' + ancestor.tagName + (ancestor.id ? '#' + ancestor.id : ''));
            const $csList = $option.find('.cs.list');
            fillListWithCs($csList, csarr);
            container.append(option);
        }
    }
    fillOwnColorSchemeDropDown(se, $html, mp, context, csTemplates) {
        const $ownCsSelect = $html.find('.own-color-scheme-list');
        const container = $ownCsSelect.find('.dropdownmenu')[0];
        const colorSchemeAttrContent = context.templateLevel.getAttribute('color-scheme');
        const currentCsIDList = colorSchemeAttrContent && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(colorSchemeAttrContent, 'CS-', '').split('|') || [];
        let currentCSList = currentCsIDList.filter((e) => !!e).map((e) => _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ColorScheme2"].get(+e));
        //console.log('csl attrcontent', colorSchemeAttrContent, 'idlist', currentCsIDList, ' list', currentCSList);
        const debug = false;
        const applyCsList = (list) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'focusout');
            const strArr = list.map((e) => "CS-" + e.id + "|");
            context.templateLevel.setAttribute('color-scheme', strArr.sort().join(''));
        };
        const onFocusLost = () => {
            if (colorSchemeAttrContent !== context.templateLevel.getAttribute('color-scheme'))
                context.applyNodeChangesToInput();
        };
        const toggleCsSelected = (option, cs) => {
            const isSelected = !option.classList.contains('selected');
            if (isSelected) {
                option.classList.add('selected');
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(currentCSList, cs);
            }
            else {
                option.classList.remove('selected');
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(currentCSList, cs);
            }
            applyCsList(currentCSList);
        };
        for (let cs of _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ColorScheme2"].getAll()) {
            const option = csTemplates.getCsOptionEntry(cs);
            if (currentCSList.indexOf(cs) >= 0) {
                option.classList.add('selected');
            }
            $(option).on('click', (e) => toggleCsSelected(option, cs));
            container.append(option);
        }
        $ownCsSelect.on('focusout', onFocusLost).on('blur', () => { console.log('evt blur'); }).on('focus', () => { console.log('evt blur'); });
    }
    updateGUI(se, $html, mp, context) {
        let tmp; /*
        ///////////////////////////////////////// setup dropdown with color scheme
        const optiontemplate = $html.find('.dropdown-item.template')[0];
        const optioncontainer = $html.find('.dropdown-menu')[0];
        for (let colorscheme of CSSEditor.defaultColorSchemes) {
          const $option: JQuery<HTMLElement> = $(U.cloneHtml(optiontemplate));
          CSSEditor.fillColorSchemeHtml($option, colorscheme);
          optioncontainer.appendChild($option[0]);
        }
        const $fillwithval1 = $html.find('[fillwithvalue1]');
        const $fillwithval2 = $html.find('[fillwithvalue2]');
        // NB: must be click, custom emulated select doesn't have 'change' or 'input' events.
        let selectedcolorscheme = CSSEditor.defaultColorSchemes[0]; // todo: find initial color scheme analizing html. save it as root template dataset.
        $html.find('.dropdown-item').on('click',(e: ClickEvent) => {
          const $option = $(e.currentTarget);
          const val1node = $option.find('[value1]')[0];
          const val2node = $option.find('[value2]')[0];
          $fillwithval1.html(val1node.innerHTML);
          $fillwithval2.html(val2node.innerHTML);
          selectedcolorscheme = null;
          for (let cs of CSSEditor.defaultColorSchemes) {
            console.log('hide detail:', cs.name !== val1node.innerHTML, ' === ', cs.name, val1node.innerHTML);
            if (cs.name !== val1node.innerHTML) continue;
            selectedcolorscheme = cs;
            break;
          }
          tmp = U.computeConditionalHides($html, { isCustomized: !selectedcolorscheme} as Dictionary, false);
          console.log('hide detail:', tmp);
        });*/
        /////// css editor
        // fill used classes
        let templateLevelRoot = context.templateLevel;
        while (templateLevelRoot.parentElement)
            templateLevelRoot = templateLevelRoot.parentElement;
        this.fillSelectorSuggestionDatalist(templateLevelRoot);
        CSSEditor.setupCssRuleBlocks($html, context);
        ////// data presi, ora riempio la lista di cs ereditati
        /*
            let sortedInheritanceListodes: Element[] = [...inheritingLine.keys()].sort(
              (e, e2) => { return ancestorLine.indexOf(e) - ancestorLine.indexOf(e2);
              });*/
        // ritorna il template di livello nodo + contenitore lista nomi dei color schemes
        const $cstemplates = $html.find('.cstemplates.template');
        const csTemplates = {};
        csTemplates.csList = $cstemplates.find('.cslistreadonly')[0];
        csTemplates.csOption = $cstemplates.find('.csoption')[0];
        csTemplates.getCsOptionEntry = (cs) => {
            const template = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneHtml(csTemplates.csOption); // todo: devi settargli-rimuovergli la classe selected (in questo preciso elemento) quando opportuno
            const $template = $(template);
            $template.find('.name').text(cs.name);
            const $colorContainer = $template.find('.colors');
            for (const color of cs.foreColors) {
                $colorContainer.append(CSSEditor.makeColorBlockReadonly(color));
            }
            return template;
        };
        this.fillInheritedColorSchemeDropdown(se, $html, mp, context, csTemplates);
        this.fillOwnColorSchemeDropDown(se, $html, mp, context, csTemplates);
        const debug = true;
        if (debug)
            return;
        // adesso faccio il dropdown personal con multiselect editabile
        ////////////////////////////////////////////////// roba vecchia
        /*
        // colori attuali (con null = "custom" -> effettivamente colorato)
        const cssElement: HTMLStyleElement = CSSEditor.getCustomCssElement($templateLevelRoot, context, true);
        const inputColorScheme: ColorScheme = CSSEditor.getCurrentColorScheme(cssElement);
        const mappedColorScheme: ColorScheme = CSSEditor.mapColorSchemeToPredefined(inputColorScheme); // null if custom
        const $customOption: JQuery<HTMLElement> = $html.find('.dropdown.cscheme .dropdown-item[data-csname="custom"]');
        const isCustom: boolean = true;
        if (isCustom) {
          inputColorScheme.name = 'custom';
          CSSEditor.fillColorSchemeHtml($customOption, inputColorScheme);
        }
        const $selectedOption: JQuery<HTMLElement> = isCustom ? $customOption : $html.find('.dropdown.cscheme .dropdown-item[data-csname="' + mappedColorScheme.name + '"]');
        optioncontainer.innerHTML = $selectedOption[0].outerHTML;
        $selectedOption[0].classList.add('selected');
        /// add rule button start
    
        const $csseditor: JQuery<HTMLElement> = $html.find('.css_editor');
        // const $addselector: JQuery<HTMLElement> = $csseditor.find('.addselector');
        const $addcssProp: JQuery<HTMLElement> = $csseditor.find('.addcssprop');
        const ruletemplate: Element = $('.cssprop.template')[0];
        const addRuleHtml = (key: string, value: string): void => {
          const rulehtml = U.cloneHtml(ruletemplate);
          const $rulehtml = $(rulehtml);
          $rulehtml.find('.delcssprop').on('click', () => { U.remove(rulehtml); });
          const $rulekey: JQuery<HTMLInputElement> = $rulehtml.find('.cssprop') as JQuery<HTMLInputElement>;
          const $ruleval: JQuery<HTMLInputElement> = $rulehtml.find('.cssval') as JQuery<HTMLInputElement>;
          const onRuleChange = () => {
            context.templateLevel.setAttribute("style", context.templateLevel.getAttribute("style") + $rulekey[0].value + ':' + $ruleval[0].value + '; ');
            context.applyNodeChangesToInput();
          };
          $rulekey[0].value = key;
          $ruleval[0].value = value;
          $rulekey.on('change', onRuleChange);
          $ruleval.on('change', onRuleChange);
          ruletemplate.parentElement.append(rulehtml);
        };
        $addcssProp.on('click', (e: ClickEvent) => { addRuleHtml('', ''); });
        const actualInlineStyles: string[][] = U.getActualInlineStyles(context.templateLevel as HTMLElement);
        for (let pair of actualInlineStyles) { addRuleHtml(pair[0], pair[1]); }
      */
        /*
            todo: actually flip this shit and just make css rule editor con il color picker come primo row obbligatorio.
            e il primo css rule editor è "this"
            e il secondo obbligatorio contiene la singola css rule obbligatoria/autogenerata con tutte le variabili.
              devo ripensarla quella rule obbligatoria e come collegarlo al dropwodn select con i colori
            un secondo dropdown che contiene una lista di N classi?
              a cui posso aggiungerne e incremento la size N del color picker
            e ogni selector ti dà in suggerimento autocompletamento gli id e le classi esistenti nel vertice.
        
              |dropdown|
        
            |.vertex| (colorato con primo colore)
            color picker .vertex
              altre rule .vertex
          |.Attribute| (colorato con secondo colore)
            color picker .Attribute
            altre rule .Attribute
            |.type| (colorato con terzo colore)
            color picker .type
            altre rule .type*/
        ///end
        // U.computeConditionalHides($html, { isCustomized: !selectedcolorscheme} as Dictionary, false);
    }
    static setupCssRuleBlocks($html, context) {
        return;
        const $container = $html.find('.cssBlocksContainer');
        const container = $container[0];
        const $template = $container.find('.cssblock.template');
        // todo: dovrei aggiungere dal css tutte le variabili assegnate a colori o che iniziano con "color" o roba simile --colorPrimary...
        const targetEntryArray = ["this", ".Vertex", ".type", ".Feature", "input", "headings (rimappato a h1, h2, ...h6"];
        for (let target of targetEntryArray) {
            let rowhtml = CSSEditor.cloneTemplate($template, container);
            let $rowhtml = $(rowhtml);
            CSSEditor.setupCssRuleBlock($html, $rowhtml, context, context.templateLevel, target, undefined);
            // CSSEditor.setupColorRow($rowhtml, context, context.templateLevel, target, undefined, undefined);
        }
    }
    static setupCssRuleBlock($root, $cssBlock, context, targetNode, targetStr, targetStyle) {
        const $colorPickerRow = $cssBlock.find('.colorPicker'); /*
        const $container = $html.find('.csspropcontainer');
        const container = $container[0];
        const $template = $html.find('.template.cssprop');*/
        let title = $cssBlock.find(".title.selector")[0];
        title.innerText = targetStr;
        let style = CSSEditor.getCustomCssElement($(context.templateRoot), context, true);
        const cssParsed = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["CSS"].toJSON(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(style.innerText, '#$##id$', ''));
        console.log("cssParsed", cssParsed);
        CSSEditor.setupColorRow($colorPickerRow, context, context.graphLevel, targetStr, undefined, undefined);
        CSSEditor.setupCssRows($root, $cssBlock, context, context.templateLevel, undefined, undefined);
    }
    static cloneTemplate($template, container = null) {
        const template = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneHtml($template[0]);
        template.classList.remove('template');
        if (container)
            container.append(template);
        return template;
    }
    static setupCssRows($root, $cssBlock, context, targetNode, selector, style) {
        console.log("csspropcontainer", $root, $cssBlock);
        const $container = $cssBlock.find('.csspropcontainer');
        const container = $container[0];
        const $template = $root.find('.template.cssprop');
        const template = CSSEditor.cloneTemplate($template, container);
    }
    static setupCssRow($html, context, targetNode, targetStr, targetStyle) {
    }
    /*
    private static setupColorRows($html: JQuery<Element>, context: EditorContext): void {
      const $container = $html.find('.customColorsContainer'); nope, noty anymore
      const container = $container[0];
      const $template = $container.find('.template');
      const template = $template[0];
  
  
    }*/
    static setupColorRow($html, context, targetNode, targetStr, targetStyle, cssentry) {
        if (targetStr !== "this") {
            targetNode = null;
        }
        const $toColor = $html.find('.c');
        console.log("setupColorRow $html", $html);
        const $fontinput = $html.find('.fontstyle .fc input[type="color"]');
        const $backinput = $html.find('.backstyle .bc input[type="color"]');
        const $fonttransp = $html.find('.fontstyle .fc .opacity');
        const $backtransp = $html.find('.backstyle .bc .opacity');
        let fontColor = '';
        let backColor = '';
        let fontOpacity = 255;
        let backOpacity = 255;
        let updateFontColor = () => {
            // $.css('color') non funziona perchè setta RGB ignorando l'opacity
            $toColor.each((i, e) => { e.style.color = fontColor + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(fontOpacity, 2); });
        };
        let updateBackColor = () => {
            $toColor.each((i, e) => { e.style.backgroundColor = backColor + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(backOpacity, 2); });
        };
        $fontinput.on('input', (e) => {
            fontColor = $fontinput[0].value;
            updateFontColor();
        });
        $backinput.on('input', (e) => {
            backColor = $backinput[0].value;
            updateBackColor();
        });
        $fonttransp.on('input', (e) => {
            fontOpacity = Math.floor(255 * +$fonttransp[0].value);
            console.log('xopacity font:', fontOpacity, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(fontOpacity, 2), fontColor + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(fontOpacity, 2));
            updateFontColor();
        });
        $backtransp.on('input', (e) => {
            backOpacity = Math.floor(255 * +$backtransp[0].value);
            console.log('xopacity back:', backOpacity, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(backOpacity, 2), backColor + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(backOpacity, 2));
            updateBackColor();
        });
        let saveColors = (e) => {
            let fontfinal = fontColor + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(fontOpacity, 2), backfinal = backColor + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(backOpacity, 2);
            console.log("x fontfinal:", fontfinal, ' backfinal:', backfinal, 'opacities:', fontOpacity, backOpacity);
            if (targetNode) {
                targetNode.style.color = fontfinal;
                targetNode.style.backgroundColor = backfinal;
                context.applyNodeChangesToInput();
            }
            else {
                // todo: come setto la ccs variabile nello stylesheet?
                context.applyRootChangesToInput();
                // todo: come salvo la css var? basta fare applyRootChangesToInput() ?
            }
        };
        $fonttransp.on('change', saveColors);
        $backtransp.on('change', saveColors);
        $backinput.on('change', saveColors);
        $fontinput.on('change', saveColors);
        // setting current color
        // const oldParent = context.graphRoot.parentElement;
        // const graphHtml = se.propertyBar.model.graph.container;
        // graphHtml.append(context.graphRoot);
        const computedStyle = targetNode ? window.getComputedStyle(targetNode) : targetStyle; // todo get css rule from css-var in stylesheet, ma come??';
        // if (oldParent) oldParent.append(context.graphRoot); else graphHtml.removeChild(context.graphRoot);
        const fontColorObj = targetNode ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].RGBAToHexObj(computedStyle.color, '#', '') : null; // todo: nodeComputer ritorna "rgb(x,y,z,w)", css parser potrebbe ritornare #hexcolor, variabili...-
        const backColorObj = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].RGBAToHexObj(computedStyle.backgroundColor, '#', '');
        fontColor = fontColorObj.rgbhex;
        fontOpacity = fontColorObj.a;
        backColor = backColorObj.rgbhex;
        backOpacity = backColorObj.a;
        $fontinput[0].value = fontColor;
        $backinput[0].value = backColor;
        $fonttransp[0].value = '' + fontOpacity / 255;
        $backtransp[0].value = '' + backOpacity / 255;
        updateFontColor();
        updateBackColor();
        console.log('aa set colors:', fontColorObj, backColorObj);
        console.log("aa set colors:", computedStyle.color, computedStyle.backgroundColor, context.templateLevel, context.graphLevel, $fontinput[0]);
    }
    static staticInit() {
        const cssrules = $('#cssrules')[0];
    }
    static generateCssVarFromColorScheme(cs) {
        const str = [('--colorSchemeName') + ':' + ('\'' + cs.name + '\'')];
        for (let i = 0; i < cs.colors.length; i++) {
            str.push(('--color' + (i)) + ':' + ('\'' + cs.colors[i] + '\''));
        }
        return str;
    }
    static getCustomCssElement($templateLevelRoot, context, allowCreation = true) {
        let $style;
        // se c'è style esplicitamente legato a color scheme uso quello
        $style = $templateLevelRoot.find('style.colorScheme');
        if ($style.length)
            return $style[0];
        // se non c'è, ma ce ne sono altri non legati, ne prendo uno style qualsiasi e lo faccio diventare lo style del color scheme
        $style = $templateLevelRoot.find('style');
        if ($style.length)
            return $style[0];
        if (!allowCreation)
            return null;
        // altrimenti lo creo e lo associo.
        const style = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].makeCssSheet();
        if ($templateLevelRoot[0].firstElementChild)
            $templateLevelRoot[0].firstElementChild.append(style);
        // insertRule: mono-stringa selettore + blocco valori, indiceInserimento (-1 = append);
        // addRule: non standard, selettore e blocco valori separati, indiceInserimento (-1 = append);
        let cs = CSSEditor.defaultColorScheme;
        CSSEditor.applyColorScheme(context, cs, $templateLevelRoot, style);
        return style;
    }
    static getCurrentColorScheme(stylenode) {
        const oldParent = stylenode.parentElement;
        document.body.append(stylenode);
        const cssRules = stylenode.sheet['cssRules'];
        const ruleindex = CSSEditor.getColorSchemeRuleIndex(stylenode);
        window['lastcss'] = stylenode;
        console.log('StyleNode', stylenode, 'cssRules:', cssRules, ', cssRules[' + ruleindex + ']', cssRules[ruleindex]);
        const block = cssRules[ruleindex];
        console.log('stylemap?', block);
        const stylePropertyMap = block['styleMap'];
        let ruleStartingWithColor = [];
        let colorSchemeName = '?';
        stylePropertyMap.forEach((v /*CSSUnparsedValue*/, k) => {
            // console.log(k, v[0][0]);
            k = k.trim().toLowerCase();
            v = v[0][0].trim().toLowerCase();
            if (k.indexOf('--') !== 0)
                return;
            if (k.toLowerCase().indexOf('--color') === 0)
                ruleStartingWithColor.push(k + ':' + v);
            if (k.toLowerCase().indexOf('--colorSchemeName') === 0)
                colorSchemeName = v;
        });
        ruleStartingWithColor = ruleStartingWithColor.sort();
        const cs = { name: colorSchemeName, colors: [] };
        // prendo i colori in ordine alfabetico, non mi importa se non sono enumerate correttamente (--colorZ o buchi nei numeri)
        for (let line of ruleStartingWithColor) {
            const splitpos = line.indexOf(':');
            // const cssvarname: string = line.substring(0, splitpos).trim();
            const cssvarvalue = line.substring(splitpos + 1).trim();
            cs.colors.push(cssvarvalue);
        }
        oldParent.append(stylenode);
        return cs;
    }
    static addcssrule(styleNode, selector, rules, $templateRoot, context, index = -1) {
        // const cssElem: HTMLStyleElement = CSSEditor.getCustomCssElement($templateRoot, context, false);
        const oldParent = styleNode.parentElement;
        document.body.append(styleNode);
        const rawRule = '' + selector + ' {\n' + rules.join(';\n   ') + '}\n\n';
        if (index < 0 || !index && (index !== 0))
            index = styleNode.sheet['rules'].length;
        styleNode.sheet['insertRule'](rawRule, index);
        // cssElem.innerHTML += rawRule;
        // cssElem.innerHTML += '*{ border: 2px solid red; }';
        oldParent.append(styleNode);
        context.applyRootChangesToInput();
    }
    static getColorSchemeRuleIndex(styleNode) {
        const oldContainer = styleNode.parentElement;
        document.body.append(styleNode);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(!styleNode || !styleNode.sheet || !styleNode.sheet['cssRules'], 'sheet.cssRules are null?', styleNode, styleNode && styleNode.sheet, styleNode && styleNode.sheet && styleNode.sheet['cssRules']);
        let ruleList = styleNode.sheet['cssRules'] || styleNode.sheet['rules']; // sono alias.
        let i;
        for (i = 0; i < ruleList.length; i++) {
            if (ruleList[i].selectorText === '.VertexRoot #$##id$') {
                i = -1;
                break;
            } // comments are ignored
        }
        oldContainer.append(styleNode);
        return i == ruleList.length ? -1 : i;
        // const stylePropertyMap: any /*StylePropertyMap*/ = ruleList[0]['styleMap'];
        // key-value for single ccs rule inside a selector
        // stylePropertyMap.forEach( (v: any/*CSSUnparsedValue*/, k: string) => { console.log(k, v[0][0]); } );
    }
    static applyColorScheme(context, cs, $templateRoot, style) {
        const sheet = style.sheet;
        const colorSchemeRuleIndex = CSSEditor.getColorSchemeRuleIndex(style);
        if (colorSchemeRuleIndex >= 0)
            sheet['deleteRule'](colorSchemeRuleIndex); // problema: così quella regola css se viene estesa con altro oltre i colori lo perdi.
        CSSEditor.addcssrule(style, '.VertexRoot #$##id$', CSSEditor.generateCssVarFromColorScheme(cs), $templateRoot, context, 0);
    }
    static mapColorSchemeToPredefined(inputColorScheme) {
        for (const cs of CSSEditor.defaultColorSchemes) {
            if (CSSEditor.compareColorScheme(inputColorScheme, cs, true) === 0)
                return cs;
        }
        return null;
    }
    static compareColorScheme(cs1, cs2, ignoreName = true) {
        if (!ignoreName && cs1.name !== cs2.name)
            return cs1.name.localeCompare(cs2.name);
        if (cs1.colors.length !== cs2.colors.length)
            return cs1.colors.length - cs2.colors.length;
        for (let i = 0; i < cs1.colors.length; i++) {
            if (cs1.colors[i] !== cs2.colors[i])
                return cs1.colors[i].localeCompare(cs2.colors[i]);
        }
        return 0;
    }
}
CSSEditor.defaultColorScheme = { name: 'Default colors', colors: ['#ffffff', '#000000', '#1e90ff', '#ff8c00', '#28a745'] };
CSSEditor.defaultColorSchemes = [
    CSSEditor.defaultColorScheme,
    { name: 'Color scheme 1', colors: ['#ffffff', '#364f6b', '#3fc1c9', '#f5f5f5', '#fc5185'] },
    { name: 'Color scheme 2', colors: ['#ffffff', '#f9a828', '#ececeb', '#07617d', '#2e383f'] },
    { name: 'Color scheme 3', colors: ['#ffffff', '#fa4659', '#effe40', '#a33e83', '#2eb872'] },
    { name: 'Color scheme 4', colors: ['#ffffff', '#BE64FA', '#8459DE', '#5975DE', '#64ACFA'] },
];


/***/ }),

/***/ "./src/guiElements/style-editor/style-editor.component.css":
/*!*****************************************************************!*\
  !*** ./src/guiElements/style-editor/style-editor.component.css ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".dropdown{\r\n  position: relative;\r\n  padding-left: 0;\r\n}\r\n.dropdown:focus{\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n.dropdown:focus-within{\r\n  pointer-events: none;\r\n}\r\n.dropdown:focus-within>.dropdownmenu{\r\n  display: block;\r\n}\r\n.dropdown.hover-display:hover>.dropdownmenu{\r\n  display: block;\r\n}\r\n.dropdownmenu{\r\n  z-index: 1001;\r\n  box-shadow: 0 0 5px grey;\r\n}\r\n.dropdown:focus-within>.icon,\r\n.dropdown.hover-display:hover>.icon{\r\n  -webkit-transform: rotate(225deg);\r\n          transform: rotate(225deg);\r\n}\r\n.dropdown.hover-display.readonly .dropdownmenu{\r\n  pointer-events: none;\r\n}\r\n.dropdownmenu .dropdownitem{\r\n  border: 1px solid transparent; /* per evitare incrementi di dimensione*/\r\n}\r\n.dropdownmenu .dropdownitem.selected{\r\n  border: 1px solid var(--color-4);\r\n  /* outline: 2px solid var(--color-4); */\r\n  box-shadow: 0 0 3px 1px var(--color-4);\r\n  background: var(--color-bg-2);\r\n}\r\n/*.dropdown>.icon:hover, .dropdown:focus-within>.icon{\r\n  filter: brightness(0.9);\r\n}*/\r\n.dropdown>.dropdownmenu{\r\n  pointer-events: all;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  display: none;\r\n  /*float: left;*/\r\n  padding: 0.5rem 0;\r\n  margin: 0;\r\n  font-size: 1rem;\r\n  /*color: #212529;*/\r\n  text-align: left;\r\n  list-style: none;\r\n  /*background-color: #fff;*/\r\n  background-clip: padding-box;\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  border-radius: 0.25rem;\r\n  background: var(--color-bg-1);\r\n}\r\n.dropdownitem{\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.25rem 1.5rem;\r\n}\r\n.cslistreadonly.dropdownitem .inheritedFromText{\r\n  text-align:center;\r\n}\r\n.cslistreadonly.dropdownitem .inheritedFromText>*{\r\n  display: inline-block;\r\n}\r\n.dropdown>.icon{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  text-align: center;\r\n}\r\n.dropdown>.icon{\r\n  background: inherit;\r\n  margin: auto 10px;\r\n  border: solid;\r\n  border-width: 0 3px 3px 0;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  -webkit-transform: rotate(45deg);\r\n          transform: rotate(45deg);\r\n  min-height: 20px;\r\n  min-width: 20px;\r\n}\r\n.dropdown .title{\r\n  margin: auto;\r\n}\r\n.colorblock{\r\n  margin-right: 2px;\r\n}\r\n.styleContainer{\r\n  /*position: relative;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: auto;\r\n  padding: 17px;\r\n  padding-right: calc(17px - 10px);*/\r\n}\r\n.template{\r\n  display: none;\r\n}\r\n.StyleEditorDisplay .template{\r\n  display: unset;\r\n}\r\n.preview{\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  min-height: 10px;\r\n  border: 1px solid red;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n}\r\n.preview:blank{\r\n  background-color: gray;\r\n  opacity: 0.4;\r\n}\r\n.separatorShell.top{\r\n  margin-top: 30px;\r\n}\r\ndiv[contenteditable=\"true\"]:focus {\r\n  max-height: unset;\r\n}\r\ndiv[contenteditable=\"true\"], div[contenteditable=\"false\"] {\r\n  overflow: auto;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  color: black;\r\n  border: 1px solid black;\r\n  min-height: 100px;\r\n  max-height: 200px;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n}\r\ndiv[contenteditable=\"true\"] {\r\n  background-color: white;\r\n  cursor: text;\r\n}\r\ndiv[contenteditable=\"false\"] {\r\n  background-color: gray;\r\n  cursor: no-drop;\r\n  opacity: 0.4;\r\n}\r\nlabel.allowEdit {\r\n  color: goldenrod;\r\n}\r\nbutton {\r\n  margin: 5px;\r\n}\r\n.style.own, .style.instances{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-flow: wrap;\r\n}\r\n.detail{\r\n  border: 3px solid var(--bluebordercolor);\r\n  background: var(--);\r\n  color: var(--altFontColor);\r\n}\r\nbutton.detail {\r\n  margin: auto;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  height: auto;\r\n  border-top-left-radius: 17px;\r\n  border-top-right-radius: 17px;\r\n  z-index: 1;\r\n }\r\nbutton.detail:first-child:not(:only-child){ /* first visible child not possible ic pure css */\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  margin-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n}\r\nbutton.detail:last-child:not(:only-child){\r\n  margin-left: -3px;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\nbutton.detail:focus {\r\n  box-shadow: none !important;\r\n  outline: none !important;\r\n}\r\ndiv.detail{\r\n  padding: 5px;\r\n  margin-top: -3px;\r\n  width: calc(100%);\r\n}\r\n.saveasrow{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\nbutton.delete{\r\n  margin: auto;\r\n  margin-bottom: 5px;\r\n}\r\nbutton.saveas{\r\n  margin: auto;\r\n  margin-bottom: 5px;\r\n}\r\ninput.saveas {\r\n  margin: auto;\r\n  margin-bottom: 5px;\r\n  flex-basis: 100px;\r\n  -webkit-box-flex: 0.6;\r\n          flex-grow: 0.6;\r\n  width: 0;\r\n}\r\n.compatibleRow > label > span{\r\n  height: -webkit-fit-content;\r\n  height: -moz-fit-content;\r\n  height: fit-content;\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  margin: auto;\r\n  -webkit-box-ordinal-group: 3;\r\n          order: 2;\r\n  margin-left: 0;\r\n}\r\n.saveasrow, .compatibleRow{\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-flow: wrap;\r\n}\r\n.compatibleRow > label > input {\r\n  -webkit-box-ordinal-group: 2;\r\n          order: 1;\r\n  margin-left: 0;\r\n  margin-right: 5px;\r\n}\r\n.detail > label {\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  margin: auto;\r\n  flex-wrap: nowrap;\r\n}\r\nbutton.detail > .opened, button.detail > .closed{\r\n  margin: auto;\r\n}\r\ntable {\r\n  width: 100%;\r\n}\r\ntd.title {\r\n  font-weight: bold;\r\n  padding-top: 10px;\r\n  text-align: center;\r\n}\r\nh1 {\r\n  text-align: center;\r\n}\r\nselect{\r\n  /* background: inherit;\r\n  border: none;\r\n  color: inherit;\r\n  font: inherit; */\r\n  /*flex-basis: 0;*/\r\n  flex-shrink: 1;\r\n  -webkit-box-flex: 0.9;\r\n          flex-grow: 0.9;\r\n  max-width: -webkit-max-content;\r\n  max-width: -moz-max-content;\r\n  max-width: max-content;\r\n  min-width: 0;\r\n}\r\nlabel {display: -webkit-box;display: flex; -webkit-box-flex:1; flex-grow:1;}\r\nlabel > *:not(input), h6 > * {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  /* flex-grow: 1;*/\r\n  margin: auto;\r\n  flex-wrap: wrap;\r\n}\r\nh6{\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  margin: auto;\r\n\r\n}\r\n.separator > * {\r\n  text-align: center;\r\n}\r\n/*\r\nbutton {\r\n  background: #0084ff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 14px;\r\n  font-size: 15px;\r\n  color: #fff;\r\n}\r\n\r\nbutton:disabled{\r\n  background: gray;\r\n}*/\r\ninput[type=\"number\"] {\r\n  width: 40px;\r\n  margin-right: 5px;\r\n}\r\n.zoomX, .zoomY, .gridX, .gridY {\r\n  margin-left: 5px;\r\n  margin-right: 15px;}\r\nlabel>input[type=\"checkbox\"],\r\nlabel>input[type=\"color\"] {\r\n  margin-bottom: 3px;\r\n}\r\n#primary_color {\r\n  border-radius: 100%;\r\n  height: 60px;\r\n  width: 60px;\r\n  border: none;\r\n  outline: none;\r\n  -webkit-appearance: none;\r\n}\r\n[contenteditable=true]:empty:before {\r\n  content: attr(placeholder);\r\n  display: block;\r\n  /* For Firefox */\r\n  cursor: text;\r\n  vertical-align: middle;\r\n  color: darkgray;\r\n  text-align: center;\r\n  margin: auto;\r\n}\r\n.separatorShell {\r\n  min-height: 33px;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: row;\r\n  flex-wrap: nowrap;\r\n  margin: auto;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n}\r\n.roww {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n}\r\n.separator {\r\n  margin: auto;\r\n  display: inline-block;\r\n}\r\n.stylelabel{\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  margin: auto;\r\n  margin-right: 5px;\r\n}\r\nselect.stylename{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin: auto;\r\n  margin-left: 0;\r\n}\r\n.HorizontalContainer{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: row;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n}\r\n.onlyVerticalContainer{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: horizontal;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: row;\r\n  flex-wrap: wrap;\r\n}\r\n.onlyVerticalContainer > * {\r\n  margin: auto 0;\r\n}\r\n.HorizontalChild{\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  margin: auto;\r\n}\r\n.opened{\r\n  display: none;\r\n}\r\n.helpButton, .styledelete {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  width: 35px;\r\n  height: 35px;\r\n  margin: auto;\r\n  margin-right: 0;\r\n}\r\n.styledelete {\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n}\r\n.helpButton {\r\n  background: rgb(0, 62, 127);\r\n  border-color: rgb(0, 62, 127); }\r\n.htmlstyle > .top {\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n.expressionRoot {\r\n  flex-wrap: nowrap !important;\r\n  max-width: 100%;\r\n}\r\ninput.fill{\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-left: 7px;\r\n}\r\n.leftside{\r\n  -webkit-box-flex: 3;\r\n          flex-grow: 3;\r\n  flex-basis: 0;\r\n  min-width: 0;\r\n  max-width: 150px;\r\n}\r\n.rightside{\r\n  -webkit-box-flex: 7;\r\n          flex-grow: 7;\r\n  flex-basis: 0;\r\n  min-width: 0;\r\n}\r\n.arrowContainer{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n}\r\nbutton.arrow{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  line-height: unset;\r\n  padding: 0 6px;\r\n}\r\n.tsclass{\r\n  margin: auto;\r\n  display: inline;\r\n  text-align: center;\r\n}\r\n/* */\r\n/*\r\npre {\r\n  background:#EEE;\r\n  padding:5px;\r\n  width: 290px;\r\n}*/\r\n.addHeader{\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n.addHeader > button {\r\n  margin-left: 0;\r\n  -webkit-box-ordinal-group: 3;\r\n          order: 2;\r\n}\r\nselect.attributetypeadd{\r\n  flex-basis: 0;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  min-width: 0;\r\n  margin-right: 10px;\r\n}\r\n.previewselector{\r\n  height: 23px;\r\n  outline: none;\r\n  border: 2px dashed #666666;\r\n}\r\n.showAsEdge{\r\n  margin-right: 5px !important;\r\n}\r\nbutton.delete, button.saveas{\r\n  font-size: 0.8rem;\r\n}\r\nbutton.deleteRule{\r\n  -webkit-box-flex: 0;\r\n          flex-grow: 0;\r\n  flex-basis: auto;\r\n  min-width: auto;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 5px;\r\n}\r\n.nowrap{\r\n  flex-wrap: nowrap;\r\n}\r\n._root {\r\n  margin-bottom: 5px;\r\n}\r\ndiv.detail.measurable > div.template {\r\n  display: none;\r\n}\r\n.graphColor, .showGrid{\r\n  margin-left: 0;\r\n}\r\nselect.operator{\r\n  -moz-text-align-last: center;\r\n       text-align-last: center;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  width: 25px;\r\n}\r\nspan.operatortext{\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\nselect.operator:disabled{\r\n  display: none;\r\n  /*\r\n  background: inherit;\r\n  border: none;\r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;\r\n  margin: 0;*/\r\n}\r\nspan.nameprefix {\r\n  margin-left: 7px;\r\n  background: white;\r\n  border: 2px inset rgb(238, 238, 238);\r\n  height: 21px;\r\n  border-right: none;\r\n  color: black;\r\n  line-height: 16px;\r\n}\r\ninput.name {\r\n  margin-left: 0;\r\n  border-left: none;\r\n  padding-left: 0;\r\n}\r\nlabel:focus > input.name {\r\n  outline: none;\r\n  box-shadow: 0 2px 2px 2px rgb(77, 144, 254);\r\n}\r\ninput.name:focus {\r\n  outline: none;\r\n  box-shadow: 2px 2px 0px 0px rgb(77, 144, 254), 2px -2px 0px 0px rgb(77, 144, 254);\r\n}\r\n.htmlstyle {\r\n  width: 100%;\r\n}\r\nlabel.allowEdit > span {\r\n  margin-left:0;\r\n}\r\nlabel > * {\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n}\r\nlabel > input[type=\"checkbox\"] ~ * {\r\n  margin-left: 0;\r\n}\r\n.html[contenteditable] {\r\n  /*IDE gives error but they all actually exist, at least on mozilla.*/\r\n  overflow-wrap: anywhere;\r\n  word-wrap: anywhere;\r\n  white-space: break-spaces;\r\n}\r\n.autosizecontainer{\r\n  display: inline-block;\r\n}\r\n.autosizecontainer > *{\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n}\r\n.sizeContainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap; }\r\n.sizeContainerHalf {\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n}\r\n.sizelabel {\r\n  display: -webkit-inline-box;\r\n  display: inline-flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: reverse;\r\n          flex-flow: column-reverse;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n@media screen and (max-width: 700px) {\r\n  /* su viewport troppo piccoli cambio la visualizzazione da label sopra il testo (buono per fare mono-row) a label affiancata al testo (per fare 4 row e scorrere verticalmente)*/\r\n  .sizelabel{\r\n    display: inline-block;\r\n  }\r\n}\r\n.sizelabel > *{\r\n  display: inline;\r\n  margin: auto; }\r\n/* they fix outer css influence on measurable section. */\r\ninput[type=\"checkbox\"].arrow {\r\n  margin: 0; }\r\n.meas_acc0 button { margin: 0; }\r\n/***********              Measurable editor v2 start                 ********/\r\n.meas_acc0 .measurableSettingRoot{\r\n  width: 100%;\r\n  display: block;\r\n}\r\n.meas_acc0 .boxesroot {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  flex-basis: 0;\r\n}\r\n.meas_acc0 .movementboxroot, .meas_acc0 .resizeboxroot {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n}\r\n.meas_acc0 .column, .meas_acc0 .row{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n}\r\n.meas_acc0 .row {\r\n  max-width: 100%;\r\n  margin-right: unset;\r\n  margin-left: unset; /* dumb _grid.scss fixer */\r\n}\r\n.meas_acc0 .break { flex-wrap: wrap; }\r\n.meas_acc0 .autobreak { flex-wrap: initial; }\r\n.meas_acc0 .fill { -webkit-box-flex: 1; flex-grow: 1; }\r\n.meas_acc0 .boxtitle { display: block; text-align: center; margin-bottom: 12px; }\r\n.meas_acc0 .side { display: -webkit-box; display: flex; }\r\n.meas_acc0 .side.left, .meas_acc0 .side.right { width: 10px; }\r\n.meas_acc0 .side.top, .meas_acc0 .side.bot { height: 10px; width: calc(100% - 20px); }\r\n.meas_acc0 .corner { display: -webkit-box; display: flex; width: 10px; height: 10px; }\r\n.meas_acc0 .middle { background-color: goldenrod; display: -webkit-box; display: flex; }\r\n.meas_acc0 .middle .middle { width: 120px; height: 90px; }\r\n.meas_acc0 .rectangledrawing.inner > .row > .side, .meas_acc0 .rectangledrawing.inner > .row > .corner {\r\n  background-color: dimgray;\r\n}\r\n.meas_acc0 .boxroot {\r\n  display: block;\r\n  margin: auto;\r\n  flex-wrap: wrap;\r\n}\r\n.meas_acc0 .ruletitle{\r\n  display: block;\r\n  text-align: center;\r\n}\r\n.meas_acc0 button.ruledelete {\r\n  height: 100%;\r\n  width: 30px;\r\n  padding: 0;\r\n  margin-right: 5px;\r\n  border-radius: 25px 0 0 25px;\r\n}\r\n.meas_acc0 .compoundInputprefix {\r\n  max-width: 100%;\r\n  height: -webkit-fit-content;\r\n  height: -moz-fit-content;\r\n  height: fit-content;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  -webkit-box-flex: 0 !important;\r\n          flex-grow: 0 !important;\r\n  width: auto;\r\n  flex-basis: auto !important;\r\n  flex-shrink: 0 !important;\r\n}\r\n.meas_acc0 .compoundInputprefix > input.attrname {\r\n  border-left: none;\r\n  padding-left: 0;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n.meas_acc0 .compoundInputprefix > * { border: none; }\r\n.meas_acc0 .compoundInputprefix > *:first-child {\r\n  margin-top: 1px;\r\n  padding-right: 0;\r\n  background-color: transparent;\r\n}\r\n.meas_acc0 .compoundInputprefix > input:focus { box-shadow: none; }\r\n.meas_acc0 .compoundInputprefix:focus-within {\r\n  border-color: #80bdff;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n.meas_acc0 .rulecontainer > .rightx, .meas_acc0 .rulecontainer > .leftx { margin-bottom: 0 !important; }\r\n/* .meas_acc0 .rightx { min-width: 0; } */\r\n.meas_acc0 .rightx span.operator {\r\n  margin: auto;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  margin-top: 8px;\r\n}\r\n.meas_acc0 .operatorcontainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n}\r\n.meas_acc0 select.operator {\r\n  width: 45px;\r\n  margin: auto 5px;\r\n  text-align: center;\r\n  -moz-text-align-last: center;\r\n       text-align-last: center;\r\n}\r\n.meas_acc0 .rightx .compoundInputprefix, .meas_acc0 .rightx input.rightside, .meas_acc0 input.leftside, .meas_acc0 .rightx > .target {\r\n  margin-bottom: 5px;\r\n  min-width: 120px;\r\n  flex-basis: 0;\r\n  -webkit-box-flex: 1;\r\n          flex-grow: 1;\r\n}\r\n.meas_acc0 .rulecontainer { margin-bottom: 1rem; }\r\n.meas_acc0 .rightx > .target { margin-bottom: 0; }\r\n.meas_acc0 .rightx > .measurabledebug { margin-top: 5px; }\r\n.meas_acc0 .attrname {\r\n  max-width: 200px !important; /* todo: remove when is autosizing */\r\n  min-width: 0;\r\n}\r\n.meas_acc0 .addrule {\r\n  float: right;\r\n  margin-top: -4px;\r\n  padding: 4px 10px;\r\n}\r\n.meas_acc0 .ruletitle {\r\n  padding-right: 4px;\r\n  margin-bottom: 5px;\r\n}\r\n.meas_acc0 .ruletitle.collapsed { -webkit-appearance: initial; }\r\n.meas_acc0 .ruletitle:hover { -webkit-appearance: button; }\r\n.meas_acc0 .form-control > .form-control:not(:first-child){\r\n  border-top-left-radius: unset;\r\n  /* disable bootstrap rule*/\r\n}\r\n.meas_acc0 .measurableerrortext{\r\n  margin-left: 5px;\r\n  color: var(--danger);\r\n}\r\n.meas_acc0 .measurablewarningtext{\r\n  margin-left: 5px;\r\n  color: var(--warning);\r\n}\r\n.meas_acc0 .measurableoutputtext{\r\n  margin-left: 5px;\r\n  color: var(--secondary);\r\n}\r\n.meas_acc0 .rulecontainer{ margin-bottom: 5px; }\r\n.meas_acc0 .measurabledebug { display: none; }\r\n.meas_acc0 .rightx:focus-within .measurabledebug{ display: -webkit-box; display: flex; }\r\n.meas_acc0 .countershell { float: right; }\r\n.meas_acc0 .rectangledrawing.outer > * {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .row > *, .meas_acc0 .arrowh, .meas_acc0 .arrowv {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .top > .left {\r\n  /*background-image: url(https://i.ibb.co/tqxXhk4/tl.png);*/\r\n  background-image: url(https://i.ibb.co/Zgvpywz/tll.png);\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .top > .side.top {\r\n  background-image: url(https://i.ibb.co/M9fC7DP/t.png); }\r\n.meas_acc0 .rectangledrawing.outer > .top > .right {\r\n  /*background-image: url(https://i.ibb.co/Pzsmjxf/tr.png);*/\r\n  background-image: url(https://i.ibb.co/SN2THLt/trl.png); }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\r\n  background-image: url(https://i.ibb.co/7jm9BBQ/l.png); }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\r\n  background-image: url(https://i.ibb.co/RYZnVN5/r.png); }\r\n.meas_acc0 .rectangledrawing.outer > .bot > .left {\r\n  /*background-image: url(https://i.ibb.co/qrYWdpH/bl.png);*/\r\n  background-image: url(https://i.ibb.co/gDKFry5/bll.png); }\r\n.meas_acc0 .rectangledrawing.outer > .bot > .side.bot {\r\n  background-image: url(https://i.ibb.co/cXc0nmS/b.png); }\r\n.meas_acc0 .rectangledrawing.outer > .bot > .right {\r\n  /*background-image: url(https://i.ibb.co/K0pVVT7/br.png);*/\r\n  background-image: url(https://i.ibb.co/QpwRSsT/brl.png); }\r\n.meas_acc0 input.side.top {\r\n  margin-bottom: 3px;\r\n  margin-top: -3px; }\r\n.meas_acc0 input.side.bot {\r\n  margin-bottom: -3px;\r\n  margin-top: 3px; }\r\n.meas_acc0 input.side.left {\r\n  margin-right: 3px;\r\n  margin-left: -3px; }\r\n.meas_acc0 input.side.right {\r\n  margin-right: -3px;\r\n  margin-left: 3px; }\r\n.meas_acc0 .arrowh {\r\n  background-image: url(https://i.ibb.co/Zd3jtbc/lr.png); }\r\n.meas_acc0 .arrowv {\r\n  background-image: url(https://i.ibb.co/jHTtPDx/tb.png); }\r\n.meas_acc0 .rectangledrawing.outer > .row > .corner {\r\n  height: 50px;\r\n  min-width: 50px;\r\n}\r\n.meas_acc0 .rectangledrawing.outer > .top > * {\r\n  height: 50px; }\r\n.meas_acc0 .rectangledrawing.outer > .bot > * {\r\n  height: 50px; }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .left {\r\n  height: auto;\r\n  width: 50px; }\r\n.meas_acc0 .rectangledrawing.outer > .mid > .right {\r\n  height: auto;\r\n  width: 50px; }\r\n.meas_acc0 .arrow { -webkit-appearance: initial; }\r\n.meas_acc0 .arrowh, .meas_acc0 .arrowv{\r\n  width: 75px;\r\n  height: 75px; }\r\n.meas_acc0 .arrow:focus{ outline: none; }\r\n.meas_acc0 .arrow:checked{\r\n  -webkit-filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%);\r\n          filter: sepia(82%) saturate(3925%) hue-rotate(55deg) brightness(125%) contrast(120%); }\r\n.meas_acc0 .directions {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: auto; }\r\n.meas_acc0 .directions > * { margin: auto; }\r\n.meas_acc0 .draggable.boxroot{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-box-direction: normal;\r\n          flex-flow: column;\r\n  /*height: 237px;*/\r\n}\r\n.meas_acc0 .collapse:not(.show) { display: none; }\r\n.meas_acc0 .selected { background-color: #37ff66 !important; }\r\n/***********              Measurable editor v2 end                   ********/\r\n.isinterface, .isabstract{\r\n  margin-right: 5px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/guiElements/style-editor/style-editor.component.ts":
/*!****************************************************************!*\
  !*** ./src/guiElements/style-editor/style-editor.component.ts ***!
  \****************************************************************/
/*! exports provided: StyleEditorComponent, EditorContext, StyleEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleEditorComponent", function() { return StyleEditorComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorContext", function() { return EditorContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleEditor", function() { return StyleEditor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");



let StyleEditorComponent = class StyleEditorComponent {
    constructor() { }
    getModel() {
        return this.model = (this.isM2 ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m);
    }
    getGraph() {
        return this.graph = this.graph || this.getModel().graph;
    }
    get() {
        return this.se = this.se || this.getModel().graph.propertyBar.styleEditor;
    }
    ngOnInit() { }
    changeGridUse($event) {
        console.log('change grid use:', $event);
        this.getGraph().useGrid = $event.currentTarget['checked'];
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], StyleEditorComponent.prototype, "isM2", void 0);
StyleEditorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-style-editor',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./style-editor.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/style-editor/style-editor.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./style-editor.component.css */ "./src/guiElements/style-editor/style-editor.component.css")).default]
    })
], StyleEditorComponent);

class EditorContext {
}
class StyleEditor {
    constructor(propertyBar, $root) {
        this.propertyBar = null;
        this.$root = null;
        this.$templates = null;
        this.$display = null;
        this.root = null;
        this.templates = null;
        this.display = null;
        this.clickedLevel = null;
        this.propertyBar = propertyBar;
        this.$root = $root.find('.styleContainer');
        this.$display = this.$root.find('.StyleEditorDisplay');
        this.$templates = this.$root.find('.styleTemplates');
        this.root = this.$root[0];
        this.display = this.$display[0];
        this.templates = this.$templates[0];
    }
    onHide() {
        console.log('styleeditor.onHide()');
        this.updateClickedGUIHighlight();
    }
    onShow() {
        this.propertyBar.onHide();
        this.updateClickedGUIHighlight();
    }
    onPaste(e) {
        // e.preventDefault();
        // e.stopImmediatePropagation(); e.stopPropagation(); return;
        e.preventDefault();
        const div = e.currentTarget;
        let text = e.originalEvent.clipboardData.getData('text/plain');
        text = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(text, '\n', ' ');
        div.innerText = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(text, '\r', ' ');
    }
    isVisible() { return _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["PropertyBarr"].isTabVisible(this.propertyBar.model, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["PropertyBarTabs"].style); }
    hide() {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(this.display);
        this.clickedLevel = null;
    }
    show(m = null, clickedLevel = null) {
        m = m || this.propertyBar.selectedModelPiece;
        if (!m)
            m = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel();
        // console.log('styleShow(', m, ')');
        this.hide();
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IModel"]) {
            this.clickedLevel = null;
            this.showM(m);
            this.updateClickedGUIHighlight();
            return;
        }
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IPackage"]) {
            this.clickedLevel = null;
            this.showM(m.parent);
            this.updateClickedGUIHighlight();
            return;
        }
        // if (m instanceof IPackage) { this.showP(m); return; }
        this.clickedLevel = clickedLevel || m.getHtmlOnGraph();
        this.showMP(m, null, false, null);
        this.addEventListeners();
        this.updateClickedGUIHighlight();
        return; /*
        if (m instanceof IClass) { this.showC(m); }
        if (m instanceof IAttribute) { this.showA(m); }
        if (m instanceof IReference) { this.showR(m); }
        if (m instanceof EOperation) { this.showO(m); }
        if (m instanceof EParameter) { this.showParam(m); }*/
    }
    addEventListeners() {
        // this.$root.find('[data-modelpieceid]').off('contextmenu')
        // .on('contextmenu', (e: ContextMenuEvent): boolean => { return DamContextMenu.contextMenu.onContextMenu(e); });
    }
    updateClickedGUIHighlight() {
        $(this.propertyBar.model.graph.container).find('.styleEditorSelected').removeClass('styleEditorSelected');
        if (this.isVisible() && this.clickedLevel) {
            this.clickedLevel.classList.add('styleEditorSelected');
        }
    }
    getCopyOfTemplate(m, s, appendTo, clear) {
        let $tmp = this.$templates.find('.template' + s);
        const html = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($tmp[0]);
        const $html = $(html);
        html.classList.remove('template');
        html.dataset.modelpieceid = '' + m.id;
        html.style.display = 'block';
        if (appendTo) {
            if (clear)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(appendTo);
            appendTo.appendChild(html);
        }
        let model = m.getModelRoot();
        $html.find('.' + (model.isM1() ? 'm1' : 'm2') + 'hide').hide();
        // eccezione: se rimane esistente ma invisibile il pulsante affianco mantiene i bordi spigolosi e non si allinea al centro.
        // cancellare gli elementi è problematico perchè alcuni gli setto eventi, valori e ci interagisco anche se non servirebbe, solo per non mettere mille IF
        // if (model.isM2()) { $html.find('.detailButtonContainer button.detail.inherited').remove(); }
        if (!(m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"]))
            $(html).find('.iclass.show').hide();
        return html;
    }
    showM(m) {
        // console.log('styleShowM(', m, ')');
        const html = this.getCopyOfTemplate(m, '.model', this.display, true);
        const $html = $(html);
        const gridX = $html.find('.gridX')[0];
        const gridY = $html.find('.gridY')[0];
        const zoomX = $html.find('.zoomX')[0];
        const zoomY = $html.find('.zoomY')[0];
        const showGrid = $html.find('.showGrid')[0];
        const useGrid = $html.find('.useGrid')[0];
        const gridColor1 = $html.find('.gridColor1')[0];
        const gridColor2 = $html.find('.gridColor2')[0];
        gridX.value = m.graph.grid ? '' + m.graph.grid.x : '';
        gridY.value = m.graph.grid ? '' + m.graph.grid.y : '';
        zoomX.value = m.graph.zoom.x + '';
        zoomY.value = m.graph.zoom.y + '';
        showGrid.checked = m.graph.gridDisplay;
        useGrid.checked = m.graph.useGrid;
        gridColor1.value = m.graph.gridColor1;
        gridColor2.value = m.graph.gridColor2;
        $([gridColor1, gridColor2]).on('change', (e) => {
            m.graph.gridColor1 = gridColor1.value || '#808080';
            m.graph.gridColor2 = gridColor2.value || '#808080';
            m.graph.refreshGridGUI();
        });
        // event listeners:
        const changeGrid = (e, coord) => {
            const input = e.currentTarget;
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isNumerizable(input.value))
                m.graph.grid[coord] = +input.value; // will be displayed by gridDisplay.trigger
            showGrid.checked = true;
            $(showGrid).trigger('change');
            m.graph.fitVertexToGrid(false);
        };
        $(gridX).off('change.set').on('change.set', (e) => changeGrid(e, 'x'));
        $(gridY).off('change.set').on('change.set', (e) => changeGrid(e, 'y'));
        $(zoomX).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.setZoom(+input.value, null);
        });
        $(zoomY).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.setZoom(null, +input.value);
        });
        $(showGrid).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            m.graph.setGrid(null, null, input.checked);
        });
        $(useGrid).off('change.set').on('change.set', (e) => {
            const input = e.currentTarget;
            console.log('useGrid changed', m.graph.useGrid, '-->', input.checked);
            console.log('useGrid changed', m.graph.useGrid, '-->', input.checked);
            e.preventDefault(); // debug to see if angular change status
            m.graph.setUseGrid(input.checked);
        });
        // console.log('newk, layouuthtml setup pre');
        this.layoutHtmlSetup(m);
    }
    showP(m) { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'styles of Package(', m, '): unexpected.'); }
    setStyleEditor($styleown, model, mp, style, context, indexedPath = null, insideOwnSection = false) {
        /// getting the template to fill.
        const debug = false;
        let i;
        let styleowntemplate = $styleown[0];
        const isInherited = styleowntemplate.classList.contains('inherited');
        const isInheritable = styleowntemplate.classList.contains('inheritable');
        const isOwn = styleowntemplate.classList.contains('own');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe((isInheritable ? 1 :  false || isInherited ? 1 :  false || isOwn ? 1 : 0) !== 1, 'failed to get html styleEditor template');
        let tmp = this.getCopyOfTemplate(mp, '.htmlstyle', null, false);
        styleowntemplate.appendChild(tmp);
        styleowntemplate.classList.remove('template');
        // styleowntemplate.parentElement.insertBefore(tmp, styleowntemplate);
        // styleowntemplate.parentElement.removeChild(styleowntemplate);
        styleowntemplate = tmp;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!styleowntemplate.parentElement, 'null parent: ', styleowntemplate, $styleown);
        $styleown = $(styleowntemplate);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'styleComplexEntry:', style, 'mp:', mp, styleowntemplate, $styleown);
        const obj = {
            editLabel: null,
            editAllowed: null,
            // selectstyle: null,
            previewselect: null,
            preview: null,
            input: null,
            detailButton: null,
            detailPanel: null,
            isM1: null,
            isM2: null,
            isClass: null,
            isReference: null,
            isAttribute: null,
            isOperation: null,
            isParameter: null,
            stylename: null,
            forkButton: null,
            delete: null,
            saveasName: null,
            styledelete: null,
            measurableCheckbox: null,
            interfaceCheckbox: null,
            abstractCheckbox: null
        };
        if (insideOwnSection)
            this.ownstylecontext = obj;
        //// setting up labelAllowEdit (checking if the (own, inherited or inheritable) style exist or a modelpiece local copy is needed.)
        obj.editAllowed = $styleown.find('button.allowEdit')[0];
        obj.editLabel = $styleown.find('label.allowEdit')[0];
        // obj.selectstyle = $styleown.find('select.stylename')[0] as HTMLSelectElement;
        obj.detailButton = $styleown.find('button.detail')[0];
        obj.detailPanel = $styleown.find('div.detail')[0];
        obj.input = $styleown.find('.html[contenteditable="true"]')[0];
        obj.preview = $styleown.find('.preview')[0];
        obj.previewselect = $styleown.find('select.previewselector')[0];
        obj.styledelete = $styleown.find('button.styledelete')[0];
        const $detail = $styleown.find('div.detail');
        obj.isM1 = $detail.find('.model')[0];
        obj.isM2 = $detail.find('.metamodel')[0];
        obj.isClass = $detail.find('.class')[0];
        obj.isAttribute = $detail.find('.attribute')[0];
        obj.isReference = $detail.find('.reference')[0];
        obj.isOperation = $detail.find('.operation')[0];
        obj.isParameter = $detail.find('.parameter')[0];
        obj.saveasName = $detail.find('input.saveas')[0];
        obj.delete = $detail.find('button.delete')[0];
        obj.forkButton = $detail.find('button.saveas')[0];
        // let inheritableStyle: StyleComplexEntry = isInheritable ? mp.getInheritableStyle() : null;
        // let inheritedStyle: StyleComplexEntry = isInherited ? mp.getInheritedStyle() : null;
        const lastvp = model.getForemostView();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, 'isOwn && !style.isownhtml || isInherited && !inheritedStyle.html || isInheritable && !inheritableStyle.html)', style);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, !style ? '' : isOwn + ' && ' + style.isownhtml + ' || ' + isInherited + ' && ' + style.html + ' || ' + isInheritable + ' && ' + style.html);
        if (style && !(isOwn && !style.isownhtml || isInherited && !style.html || isInheritable && !style.html)) {
            $(obj.editLabel).hide();
        }
        else {
            obj.input.setAttribute('disabled', 'true');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(obj.styledelete);
            obj.input.contentEditable = 'false';
            if (!lastvp) {
                obj.editLabel.innerText = 'Is required to have at least one non-default viewpoint applied to customize styles.';
                obj.editAllowed.style.display = 'none';
            }
            else
                $(obj.editAllowed).on('click', (e) => {
                    const mptarget = isInherited ? mp.metaParent : mp;
                    let v = lastvp.viewsDictionary[mptarget.id];
                    if (isOwn) {
                        if (!v)
                            v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewRule"](lastvp);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!v.htmlo, 'htmlo should be undefined at this point.');
                        v.htmlo = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewHtmlSettings"]();
                        v.htmlo.setHtmlStr((style ? style.html : mptarget.getStyle().html).outerHTML);
                    }
                    if (isInheritable) {
                        if (!v)
                            v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewRule"](lastvp);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!v.htmli, 'htmli should be undefined at this point.');
                        v.htmli = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewHtmlSettings"]();
                        const instanceCurrentStyle = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].GetStyle(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m, mp.getInstanceClassName());
                        v.htmli.setHtmlStr(instanceCurrentStyle.outerHTML);
                    }
                    if (isInherited) {
                        if (!v)
                            v = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewRule"](lastvp);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!v.htmli, 'htmli should be undefined at this point.');
                        v.htmli = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ViewHtmlSettings"]();
                        v.htmli.setHtmlStr((style ? style.html : mp.getStyle().html).outerHTML);
                    }
                    v.apply(mptarget);
                    this.showMP(mp);
                    // todo: se stylecomplexEntry è null mostra un altro button.editAllowed per inserire lo stile ereditabile che generi htmli.
                });
            if (!style) {
                if (isInheritable) {
                    obj.editLabel.innerHTML = 'This element does not have a inheritable style.';
                }
                if (isInherited) {
                    obj.editLabel.innerHTML = 'The metaParent of this element does not have a inheritable style appliable to this element.';
                }
                obj.editLabel.appendChild(obj.editAllowed);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(styleowntemplate);
                styleowntemplate.appendChild(obj.editLabel);
                return null;
            }
        }
        /// start!
        obj.input.setAttribute('placeholder', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceVarsString(mp, obj.input.getAttribute('placeholder')));
        // console.log('setting outerhtml: ', context.templateLevel.outerHTML);
        obj.input.innerText = context.templateLevel.outerHTML;
        $styleown.find('.htmllevel').html((isInherited ? 'Instances Html' : 'Own html')
            + ' (' + (indexedPath && indexedPath.length ? 'Level&nbsp;' + indexedPath.length : 'Root&nbsp;level') + ')');
        let graphRoot = mp.getHtmlOnGraph();
        context.graphRoot = insideOwnSection && graphRoot;
        context.graphLevel = graphRoot && insideOwnSection && _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(graphRoot, indexedPath, 'childNodes');
        this.clickedLevel = context.graphLevel;
        this.updateClickedGUIHighlight();
        // just not displayed U.pe(!graphRoot, 'failed to get graphroot', graphRoot, indexedPath, mp);
        // U.pe(insideOwnSection && !context.graphLevel, 'failed to get graphlv', graphRoot, indexedPath, mp);
        context.applyNodeChangesToInput = () => {
            // console.log(templateLevel.outerHTML);
            obj.input.innerText = context.templateLevel.outerHTML;
            onStyleChange();
        };
        context.applyRootChangesToInput = () => {
            // console.log(templateLevel.outerHTML);
            onStyleChange();
        };
        const onStyleChange = () => {
            console.log('onStyleChange', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getCaller(), _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getStackTrace());
            console.log('99jj set html:', obj.input.innerText);
            let inputHtml = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toHtml(obj.input.innerText.trim()); //U.toHtmlValidate(obj.input.innerText);
            // non c'è bisogno di validare, perchè corregge automaticamente e se metti chiusure di tag di troppo le toglie da solo!
            // non può rompere oltre il nodo attuale
            // if (!inputHtml) return;
            const disabledAttr = obj.input.getAttribute('disabled');
            if (disabledAttr === 'true' || disabledAttr === '')
                return;
            // console.log('PRE: ', inputHtml, 'outer:', inputHtml.outerHTML, 'innertext:', obj.input.innerText);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, '*** setting inheritable PRE. style.htmlobj:', style.htmlobj, ', style:', style, ', context:', context, 'templatelvl.parent:', context.templateLevel.parentElement, ', inputHtml:', inputHtml);
            if (context.templateLevel.parentElement) {
                if (inputHtml) {
                    context.templateLevel.parentElement.insertBefore(inputHtml, context.templateLevel);
                    context.templateLevel.parentElement.removeChild(context.templateLevel);
                    context.templateLevel = inputHtml;
                }
                else {
                    context.templateLevel.parentElement.removeChild(context.templateLevel);
                    this.clickedLevel = context.graphLevel.parentElement;
                    this.show(); // refresh
                    /*context.templateLevel = context.templateLevel.parentElement; a questo approccio manca aggiornare contatore deep-level e i measurable del nodo e altri imprevisti
                    obj.input.innerText = context.templateLevel.outerHTML;*/
                }
            }
            else {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!style.view || style.isGlobalhtml || style.isCustomGlobalhtml, (style.isGlobalhtml ? 'native default html cannot be modified.' : 'overriden default html cannot be modified here. Change it from the element marked with "asDefault".') + ' default', style, 'todo: automatically make new ClassVieww');
                // ??old message?: se tutto va bene qui deve dare errore, crea una nuova ClassVieww e applicalo al modelpiece ed edita quello.
                console.log('99jj set html:', inputHtml);
                if (!inputHtml) {
                    inputHtml = StyleEditor.getInvisibleStyle();
                }
                style.htmlobj.setHtml(context.templateLevel = inputHtml);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(debug, '*** setting inheritable POST. style.htmlobj', style.htmlobj, 'style:', style);
            }
            if (isOwn) {
                mp.refreshGUI();
            }
            if (isInheritable) {
                mp.refreshInstancesGUI();
            }
            if (isInherited) {
                mp.metaParent.refreshInstancesGUI();
            }
            if (!isInheritable && indexedPath)
                this.clickedLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(mp.getHtmlOnGraph(), indexedPath, 'childNodes');
            graphRoot = mp.getHtmlOnGraph();
            if (insideOwnSection) {
                context.graphRoot = graphRoot;
                context.graphLevel = graphRoot && _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(graphRoot, indexedPath, 'childNodes');
                this.clickedLevel = context.graphLevel;
                this.updateClickedGUIHighlight();
            }
            // obj.input.innerText = inputHtml.outerHTML;
            // DANGER: se lo fai con l'evento onchange() ti sposta il cursore all'inizio e finisci per scrivere rawtext prima dell'html invalidandolo.
            // tenendolo dovresti scrivere i caratteri uno alla volta riposizionando il cursore nel punto giusto ogni volta.
            // console.log('POST: ', inputHtml, 'outer:', inputHtml.outerHTML, 'innertext:', obj.input.innerText);
            // updatePreview();
        };
        $(obj.input).off('paste.set').on('paste.set', (e /*ClipboardEvent*/) => { this.onPaste(e); onStyleChange(); })
            // .off('change.set').on('change.set', onStyleChange)
            // .off('input.set').on('input.set', onStyleChange)
            .off('blur.set').on('blur.set', onStyleChange)
            .off('keydown.set').on('keydown.set', (e) => { if (e.key === 'Esc') {
            this.propertyBar.refreshGUI();
        } });
        // setup measurable options.
        const measurableRoot = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableTemplateGenerator"].generateMeasurableTemplate();
        tmp = $styleown.find('.measurablePlaceholder')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].swap(measurableRoot, tmp);
        // .log('swap End:', measurableRoot.childNodes.length, tmp.childNodes.length);
        //U.pe(true,'swapend');
        const $measurableRoot = $(measurableRoot);
        const $measurableBody = $measurableRoot.find('.measurableSettingRoot');
        // obj.input is same const ownhtmlinput: HTMLDivElement | HTMLTextAreaElement = $measurableRoot.find('.html[contenteditable="true"]')[0] as HTMLDivElement | HTMLTextAreaElement;
        const $measurableCheckbox = $measurableRoot.find('input.ismeasurable');
        const measurableCheckbox = obj.measurableCheckbox = $measurableCheckbox[0];
        measurableCheckbox.disabled = obj.input.getAttribute('disabled') === 'true';
        measurableCheckbox.checked =
            context.templateLevel && context.templateLevel.classList &&
                (context.templateLevel.classList.contains('measurable') || insideOwnSection && context.graphLevel && context.graphLevel.classList.contains('measurable'));
        const $measurableTitle = $measurableRoot.find('.meas_acc0 > .maintitle');
        $measurableTitle.on('click', (e) => {
            const $innerroot = $measurableBody;
            const innerroot = $innerroot[0];
            if (innerroot.classList.contains('show')) {
                // todo: elimina slideup e usa la transizione css su collapsing, come?
                $measurableTitle.addClass('collapsed');
                $innerroot.slideUp(400, () => { innerroot.classList.remove('show', 'collapsing', 'collapse'); });
                return;
            }
            $measurableTitle.removeClass('collapsed');
            $innerroot.slideDown(400, () => { innerroot.classList.add('collapse', 'show'); });
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
        });
        $(obj.styledelete).on('click', () => { style.view.delete(); mp.refreshGUI(); this.show(mp, mp.getHtmlOnGraph()); });
        let stopPropagation = (e) => { e.stopPropagation(); };
        if (!$measurableCheckbox[0].checked)
            $measurableTitle.hide();
        let templateParent = context.templateLevel && context.templateLevel.parentElement;
        // avviene quando disabilito un vp mentre è selezionato un vertice con ownstyle e diventa "default"
        if (!context.templateLevel.classList) {
            return;
        }
        $measurableCheckbox.on('click', stopPropagation).on('mousedown', stopPropagation).on('mouseup', stopPropagation)
            .off('change.enabledisablemeasurable').on('change.enabledisablemeasurable', (e) => {
            context.templateLevel.classList.remove('measurable');
            if (measurableCheckbox.checked) {
                context.templateLevel.classList.add('measurable');
                if (context.templateLevel instanceof HTMLElement)
                    context.templateLevel.style.position = 'absolute';
                $measurableTitle.slideDown();
                if (!$measurableBody[0].classList.contains('show')) {
                    $measurableTitle.trigger('click');
                }
                // console.log('is now measurable:', context.templateLevel, 'parent:', context.templateLevel, 'parentStyle', templateParent.style.position);
                if (templateParent) {
                    if (templateParent.style.position !== 'relative') {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ps(true, 'The parent node of a measurable element must have style.position="relative" due to jqueryUI limitations. The parent style has been automatically corrected, was'
                            + (templateParent.style.position === '' ? ' unset.' : ' \'' + templateParent.style.position + '\'.'));
                        templateParent.style.position = 'relative';
                    }
                }
            }
            else {
                if (context.templateLevel instanceof HTMLElement)
                    context.templateLevel.style.position = ''; // restore default
                //        console.log(context.templateLevel, context);
                if (templateParent)
                    templateParent.style.position = '';
                if ($measurableBody[0].classList.contains('show')) {
                    $measurableTitle.trigger('click');
                }
                $measurableTitle.slideUp();
            }
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].isTriggered(e))
                return;
            context.applyNodeChangesToInput();
        }).trigger('change');
        this.makeMeasurableOptions(measurableRoot, obj.input, style, context, indexedPath);
        // const measurableSelect: HTMLSelectElement = $measurableRoot.find('select.attributetypeadd')[0] as HTMLSelectElement;
        /*$measurableRoot.find('button.addmeasurable').on('click', () => {
          this.addmeasurableAttributeButton(measurableSelect, $measurableRoot, mp, style, templateLevel as Element, ownhtmlinput, indexedPath);
        });* /
        for (i = 0; i < templateLevel.attributes.length; i++) {
          const a: Attr = templateLevel.attributes[i];
          if (a.name[0] === '_' || a.name.indexOf('r_') == 0 || a.name.indexOf('r_') == 0) {
            const val: Attr = this.clickedLevel.attributes.getNamedItem(a.name.substr(1));
            const style = null;
            this.addmeasurableAttributeButton(measurableSelect, $measurableRoot, mp, style, templateLevel as Element, ownhtmlinput, indexedPath, a, val)
          }
        }*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["CSSEditor"].updateGUI(this, $styleown.find('.csseditorroot'), mp, context);
        return indexedPath;
    }
    showMP(m, clickedLevel = null, asMeasurable = false, asEdge = null) {
        // console.log('styleShow(', m, ', ' + U.getTSClassName(m) + ')');
        let i;
        this.clickedLevel = clickedLevel = clickedLevel || this.clickedLevel;
        // set htmls
        const style = m.getStyle();
        const styleinheritable = m.getInheritableStyle();
        const styleinherited = m.getInheritedStyle_lv2();
        const clickedRoot = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ModelPiece"].getLogicalRootOfHtml(clickedLevel);
        const templateRoot = style.html;
        // console.log('gtt style:', style);
        // let templateLevel: Element = templateRoot;
        let indexedPath = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getIndexesPath(clickedLevel, 'parentNode', 'childNodes', clickedRoot);
        // console.log('clickedRoot', clickedRoot, 'clickedLevel', clickedLevel, 'path:', indexedPath);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(clickedRoot, indexedPath, 'childNodes') !== clickedLevel, 'mismatch.', indexedPath);
        const realindexfollowed = { indexFollowed: [], debugArr: [] };
        let context = new EditorContext();
        context.templateRoot = templateRoot;
        context.templateLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(templateRoot, indexedPath, 'childNodes', realindexfollowed);
        // console.log('clickedRoot:',clickedRoot, 'clikedLevel:', clickedLevel, 'indexedPath:', indexedPath, 'followed:', realindexfollowed,
        // 'templateRoot:', templateRoot, 'templateLevel:', templateLevel);
        // todo: c'è un problema con jquery resizable on leaf nodes, it add the resizer as a parent, so the indexPath is altered...
        //  dovrei fare in modo che seguendo il path se incontra un ".jq-ui" prende automaticamente il first(andonly)child e poi prosegue a seguire il path
        if (realindexfollowed.indexFollowed.length !== indexedPath.length) {
            indexedPath = realindexfollowed.indexFollowed;
            this.clickedLevel = clickedLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(clickedRoot, indexedPath, 'childNodes');
        }
        // html set END.
        const model = m.getModelRoot();
        if (asEdge && (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"] || m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IReference"]) && m.shouldBeDisplayedAsEdge()) {
            return this.showE(m, asEdge);
        }
        const html = this.getCopyOfTemplate(m, '.modelpiece', this.display, true);
        const $html = $(html);
        const $asDefault = $html.find('.asDefault');
        const asDefault = $asDefault[0];
        asDefault.checked = style.isownhtml && style.view.isDefault;
        asDefault.disabled = !style.isownhtml;
        $asDefault.on('change', (e) => { style.view.setDefault(asDefault.checked); });
        const showAsEdge = $html.find('.showAsEdge')[0];
        const showAsEdgeText = $html.find('.showAsEdgeText')[0];
        const $styleown = $html.find('.style.own');
        const $styleInherited = $html.find('.style.inherited');
        const $styleInheritable = $html.find('.style.inheritable');
        const htmlPath = this.setStyleEditor($styleown, model, m, style, context, indexedPath, true);
        // U.pe(!style.html, $styleown, m, clickedLevel, model, style, instanceshtml);
        // const clickedonStyle: Element = U.followIndexesPath(style.html, htmlPath) as Element;
        $html.find('.tsclass').html('' + m.printableName()); // + (htmlDepth === 0 ? ' (root level)' : ' (level&nbsp;' + htmlDepth + ')') );
        // console.log('setStyleEditor inherited, ', styleinherited);
        let inheritedcontext = new EditorContext();
        if (styleinherited) {
            const inheritedTemplateRoot = styleinherited.html;
            context.templateRoot = inheritedTemplateRoot;
            inheritedcontext.templateLevel = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followIndexesPath(inheritedTemplateRoot, indexedPath, 'childNodes', realindexfollowed);
            // se ho cliccato su un non-radice non-ereditato, non posso prendere un frammento dell'ereditato, sarebbe un frammento diverso.
            if (inheritedcontext.templateLevel !== context.templateLevel) {
                inheritedcontext.templateLevel = inheritedTemplateRoot;
            }
        }
        if (!model.isM2()) {
            this.setStyleEditor($styleInherited, model, m, styleinherited, inheritedcontext);
        }
        else {
            $styleInherited[0].innerHTML = '<h5 class="text-danger">Cannot get inheritance from M3 elements.</h5>';
        }
        // console.log('setStyleEditor inheritable, ', styleinheritable);
        let inheritablecontext = new EditorContext();
        inheritablecontext.templateLevel = styleinheritable ? styleinheritable.html : null;
        if (!model.isM1()) {
            this.setStyleEditor($styleInheritable, model, m, styleinheritable, inheritablecontext);
        }
        else {
            $styleInheritable[0].innerHTML = '<h5 class="text-danger">M1 elements cannot give inheritance.</h5>';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].detailButtonSetup($html);
        /// start autosize
        const v = m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClassifier"] ? m.getVertex() : null;
        this.sizeInputx = $html.find('input.sizex')[0];
        this.sizeInputy = $html.find('input.sizey')[0];
        this.sizeInputw = $html.find('input.sizew')[0];
        this.sizeInputh = $html.find('input.sizeh')[0];
        const $autosizew = $html.find('input.autowidth');
        const $autosizeh = $html.find('input.autoheight');
        const $autolayout = $html.find('input.autolayout');
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClassifier"])
            this.setupEdgesVisibility(context, $html, style);
        const autosizew = $autosizew[0];
        const autosizeh = $autosizeh[0];
        const autolayout = $autolayout[0];
        if (v && this.sizeInputx) {
            autosizeh.disabled = autosizew.disabled = this.ownstylecontext.measurableCheckbox.disabled;
            const isAutosize = v.isAutosize();
            this.sizeInputw.disabled = autosizew.checked = isAutosize.x;
            this.sizeInputh.disabled = autosizeh.checked = isAutosize.y;
            const autosizeLevelTemplate = templateRoot.firstChild;
            const setAutosize = (statusx, statusy) => {
                const html = autosizeLevelTemplate; // this.getHtmlFirstChild();
                if (statusx !== null) {
                    if (statusx) {
                        html.dataset.autosizex = 'true';
                        html.style.width = 'auto';
                    }
                    else {
                        html.dataset.autosizex = 'false';
                        html.style.width = '100%';
                    }
                }
                if (statusy !== null) {
                    if (statusy) {
                        html.dataset.autosizey = 'true';
                        html.style.height = 'auto';
                    }
                    else {
                        html.dataset.autosizey = 'false';
                        html.style.height = '100%';
                    }
                }
                context.applyNodeChangesToInput();
                v.refreshGUI();
            };
            $autosizew.on('change', () => { setAutosize(autosizew.checked, null); this.sizeInputw.disabled = autosizew.checked; });
            $autosizeh.on('change', () => { setAutosize(null, autosizeh.checked); this.sizeInputh.disabled = autosizeh.checked; });
            $autolayout.on('change', () => { v.setAutolayout(autolayout.checked); });
            const vSize = v.getSize();
            this.sizeInputx.value = '' + (vSize.x);
            this.sizeInputy.value = '' + (vSize.y);
            this.sizeInputw.value = '' + (vSize.w);
            this.sizeInputh.value = '' + (vSize.h);
            function changePosition(x, y) {
                v.measuringEventTrigger(null, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragStart, v.getMeasurableNode());
                v.setSize(new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["GraphSize"](x, y, null, null));
                v.measuringEventTrigger(null, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileDragging, v.getMeasurableNode());
                v.measuringEventTrigger(null, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onDragEnd, v.getMeasurableNode());
            }
            function changeSize(w, h) {
                v.measuringEventTrigger(null, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeStart, v.getMeasurableNode());
                v.setSize(new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["GraphSize"](null, null, w, h));
                v.measuringEventTrigger(null, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].whileResizing, v.getMeasurableNode());
                v.measuringEventTrigger(null, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onResizeEnd, v.getMeasurableNode());
            }
            $(this.sizeInputx).on('change', () => { changePosition(+this.sizeInputx.value, null); });
            $(this.sizeInputy).on('change', () => { changePosition(null, +this.sizeInputy.value); });
            $(this.sizeInputw).on('change', () => { changeSize(+this.sizeInputw.value, null); });
            $(this.sizeInputh).on('change', () => { changeSize(null, +this.sizeInputh.value); });
        }
        else {
            $html.find('.sizeContainer').remove();
        }
        autolayout.checked = v && v.autoLayout;
        //// end autosize
        // <meta>
        //     <dependency><attributes><type>double</ </ </
        //     <preview><img src=imgurl</img> or html diretto.</
        // </meta>
        // pulsanti per settare preview: "takesnapshotOf / set as example... + select vertex with that style"
        // avviene quando disabilito l'ultimo vp mentre ho selezionato un elemento con ownstyle
        if (!htmlPath)
            return;
        const $arrowupp = $html.find('button.arrow.upp').on('click', (e) => {
            this.propertyBar.show(null, clickedRoot, null, false);
        });
        const $arrowup = $html.find('button.arrow.up').on('click', (e) => {
            this.propertyBar.show(null, clickedLevel.parentElement, null, false);
        });
        $arrowup[0].disabled = $arrowupp[0].disabled = htmlPath.length === 0 && m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"];
        // ($html.find('button.arrow.down') as JQuery<HTMLButtonElement>)[0].disabled = true;
        showAsEdge.checked = false;
        if (m instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IClass"]) {
            showAsEdge.disabled = m.references.length < 2;
            showAsEdgeText.innerHTML = 'Show as an edge' + (showAsEdge.disabled ? ' (require&nbsp;>=&nbsp;2&nbsp;references)' : '');
            $(showAsEdge).off('change.set').on('change.set', (e) => {
                m.shouldBeDisplayedAsEdge(true);
                this.showE(m, asEdge);
            });
        }
    }
    showE(m, edge) {
        console.log('styleShowE(', m, ')');
        const html = this.getCopyOfTemplate(m, '.edge', this.display, true);
        const $html = $(html);
        const edgeStyle = $html.find('.edgeStyle')[0];
        const eColorCommon = $html.find('.edgeColor.common')[0];
        const eColorHighlight = $html.find('.edgeColor.highlight')[0];
        const eColorSelected = $html.find('.edgeColor.selected')[0];
        const eWidthCommon = $html.find('.edgeWidth.common')[0];
        const eWidthHighlight = $html.find('.edgeWidth.highlight')[0];
        const eWidthSelected = $html.find('.edgeWidth.selected')[0];
        const epRadiusC = $html.find('.edgePoint.radius')[0];
        const epStrokeWC = $html.find('.edgePoint.strokeW')[0];
        const epStrokeC = $html.find('.edgePoint.stroke')[0];
        const epFillC = $html.find('.edgePoint.fill')[0];
        const epRadiusH = $html.find('.edgePointPreview.radius')[0];
        const epStrokeWH = $html.find('.edgePointPreview.strokeW')[0];
        const epStrokeH = $html.find('.edgePointPreview.stroke')[0];
        const epFillH = $html.find('.edgePointPreview.fill')[0];
        const epRadiusS = $html.find('.edgePointSelected.radius')[0];
        const epStrokeWS = $html.find('.edgePointSelected.strokeW')[0];
        const epStrokeS = $html.find('.edgePointSelected.stroke')[0];
        const epFillS = $html.find('.edgePointSelected.fill')[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!edgeStyle, 'edgeStyle not found. root:', $html, 'selector: ' + '.edgeStyle');
        let styleName = '';
        switch (m.edgeStyleCommon.style) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unrecognized EdgeStyle:', m.edgeStyleCommon.style);
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular23Auto:
                styleName = 'angular23Auto';
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular2:
                styleName = 'angular2';
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular3:
                styleName = 'angular3';
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].straight:
                styleName = 'straight';
                break;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].selectHtml(edgeStyle, styleName, false);
        eWidthCommon.value = '' + m.edgeStyleCommon.width;
        eWidthHighlight.value = '' + m.edgeStyleHighlight.width;
        eWidthSelected.value = '' + m.edgeStyleSelected.width;
        eColorCommon.value = m.edgeStyleCommon.color;
        eColorHighlight.value = m.edgeStyleHighlight.color;
        eColorSelected.value = m.edgeStyleSelected.color;
        console.log('logic:', m, 'styleCColor:', m.edgeStyleCommon.color, 'output value:', eColorCommon.value);
        epRadiusC.value = '' + m.edgeStyleCommon.edgePointStyle.radius;
        epStrokeWC.value = '' + m.edgeStyleCommon.edgePointStyle.strokeWidth;
        epStrokeC.value = m.edgeStyleCommon.edgePointStyle.strokeColor;
        epFillC.value = m.edgeStyleCommon.edgePointStyle.fillColor;
        epRadiusH.value = '' + m.edgeStyleHighlight.edgePointStyle.radius;
        epStrokeWH.value = '' + m.edgeStyleHighlight.edgePointStyle.strokeWidth;
        epStrokeH.value = m.edgeStyleHighlight.edgePointStyle.strokeColor;
        epFillH.value = m.edgeStyleHighlight.edgePointStyle.fillColor;
        epRadiusS.value = '' + m.edgeStyleSelected.edgePointStyle.radius;
        epStrokeWS.value = '' + m.edgeStyleSelected.edgePointStyle.strokeWidth;
        epStrokeS.value = m.edgeStyleSelected.edgePointStyle.strokeColor;
        epFillS.value = m.edgeStyleSelected.edgePointStyle.fillColor;
        $(edgeStyle).off('change.set').on('change.set', (e) => {
            let mode;
            switch (edgeStyle.value) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unrecognized edgeMode(', edgeStyle.value, ') among: ', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].straight:
                case 'straight':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].straight;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular23Auto:
                case 'angular23Auto':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular23Auto;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular2:
                case 'angular2':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular2;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular3:
                case 'angular3':
                    mode = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EdgeModes"].angular3;
                    break;
            }
            m.edgeStyleCommon.style = mode;
            m.edgeStyleHighlight.style = mode;
            m.edgeStyleSelected.style = mode;
            edge.refreshGui();
        });
        $(eColorCommon).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.color = eColorCommon.value;
            edge.refreshGui();
        });
        $(eWidthCommon).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.width = isNaN(+eWidthCommon.value) ? 0 : +eWidthCommon.value;
            edge.refreshGui();
        });
        $(eColorHighlight).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.color = eColorHighlight.value;
            edge.refreshGui();
        });
        $(eWidthHighlight).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.width = isNaN(+eWidthHighlight.value) ? 0 : +eWidthHighlight.value;
            edge.refreshGui();
        });
        $(eColorSelected).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.color = eColorSelected.value;
            edge.refreshGui();
        });
        $(eWidthSelected).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.width = isNaN(+eWidthSelected.value) ? 0 : +eWidthSelected.value;
            edge.refreshGui();
        });
        $(epRadiusC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.radius = isNaN(+epRadiusC.value) ? 0 : +epRadiusC.value;
            edge.refreshGui();
        });
        $(epStrokeWC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.strokeWidth = isNaN(+epStrokeWC.value) ? 0 : +epStrokeWC.value;
            edge.refreshGui();
        });
        $(epStrokeC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.strokeColor = epStrokeC.value;
            edge.refreshGui();
        });
        $(epFillC).off('change.set').on('change.set', (e) => {
            m.edgeStyleCommon.edgePointStyle.fillColor = epFillC.value;
            edge.refreshGui();
        });
        $(epRadiusH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.radius = isNaN(+epRadiusH.value) ? 0 : +epRadiusH.value;
            edge.refreshGui();
        });
        $(epStrokeWH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.strokeWidth = isNaN(+epStrokeWH.value) ? 0 : +epStrokeWH.value;
            edge.refreshGui();
        });
        $(epStrokeH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.strokeColor = epStrokeH.value;
            edge.refreshGui();
        });
        $(epFillH).off('change.set').on('change.set', (e) => {
            m.edgeStyleHighlight.edgePointStyle.fillColor = epFillH.value;
            edge.refreshGui();
        });
        $(epRadiusS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.radius = isNaN(+epRadiusS.value) ? 0 : +epRadiusS.value;
            edge.refreshGui();
        });
        $(epStrokeWS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.strokeWidth = isNaN(+epStrokeWS.value) ? 0 : +epStrokeWS.value;
            edge.refreshGui();
        });
        $(epStrokeS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.strokeColor = epStrokeS.value;
            edge.refreshGui();
        });
        $(epFillS).off('change.set').on('change.set', (e) => {
            m.edgeStyleSelected.edgePointStyle.fillColor = epFillS.value;
            edge.refreshGui();
        });
    }
    makeMeasurableOptions(measurableShell, inputuseless, style, context, indexedPath) {
        const $measurableShell = $(measurableShell);
        const $meas_acc = $measurableShell.find('.meas_acc');
        let i;
        const searchForm = $meas_acc.find('input.rulesearch').on('input', (e) => {
            let searchstr = searchForm.value.trim().toLowerCase();
            if (searchstr === '') {
                $meas_acc.find('.panel[prefixlc]').show();
                return;
            }
            $meas_acc.find('.panel[prefixlc]').hide();
            $meas_acc.find('.panel[prefixlc*=\'' + searchstr + '\']').show();
        })[0];
        const resizearrows = {};
        const dragarrows = {};
        const $arrowroot = $measurableShell.find('.rectangledrawing.outer');
        const $innerroot = $arrowroot.find('.rectangledrawing');
        resizearrows.tl = $innerroot.find('.top.left');
        resizearrows.t = $innerroot.find('.side.top');
        resizearrows.tr = $innerroot.find('.top.right');
        resizearrows.ml = $innerroot.find('.side.left');
        resizearrows.mr = $innerroot.find('.side.right');
        resizearrows.bl = $innerroot.find('.bot.left');
        resizearrows.b = $innerroot.find('.side.bot');
        resizearrows.br = $innerroot.find('.bot.right');
        resizearrows.tla = $arrowroot.find('.top.left.arrow');
        resizearrows.ta = $arrowroot.find('.side.top.arrow');
        resizearrows.tra = $arrowroot.find('.top.right.arrow');
        resizearrows.mla = $arrowroot.find('.side.left.arrow');
        resizearrows.mra = $arrowroot.find('.side.right.arrow');
        resizearrows.bla = $arrowroot.find('.bot.left.arrow');
        resizearrows.ba = $arrowroot.find('.side.bot.arrow');
        resizearrows.bra = $arrowroot.find('.bot.right.arrow');
        dragarrows.x = $measurableShell.find('.arrowh');
        dragarrows.y = $measurableShell.find('.arrowv');
        const updateArrowGUI = (arrow, direction = null) => {
            direction = direction || arrow.getAttribute('direction');
            const innerbox = $innerroot.find('*[direction = "' + direction + '"]')[0];
            if (!innerbox)
                return;
            innerbox.classList.remove('selected');
            if (arrow.checked)
                innerbox.classList.add('selected');
        };
        const arrowchange = (e) => {
            let tmp;
            const arrow = e.currentTarget;
            const direction = arrow.getAttribute('direction');
            const checked = arrow.checked;
            const isrotatable = arrow.classList.contains('rot');
            const isdraggable = arrow.classList.contains('drag');
            const isresizable = !isdraggable && !isrotatable;
            updateArrowGUI(arrow, direction);
            if (isdraggable) {
                tmp = context.templateLevel.getAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].axis);
            }
            if (isresizable) {
                tmp = context.templateLevel.getAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].handles);
            }
            let currentHandles = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(tmp || '', ' ', '').split(',');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(currentHandles, direction);
            if (checked) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ArrayAdd(currentHandles, direction);
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(currentHandles, '');
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].handles !== 'handles', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].handles);
            if (isdraggable) {
                if (currentHandles.length) {
                    context.templateLevel.setAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].axis, currentHandles.join(', '));
                }
                else {
                    context.templateLevel.removeAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].axis);
                }
            }
            if (isresizable) {
                if (currentHandles.length) {
                    context.templateLevel.setAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].handles, currentHandles.join(', '));
                }
                else {
                    context.templateLevel.removeAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].handles);
                }
            }
            console.log('resizable:', isresizable, 'draggable:', isdraggable, currentHandles, 'tmp:', tmp, context);
            context.applyNodeChangesToInput();
        };
        const rulelist = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].getRuleList(context.templateLevel, null, true);
        /*
        for (let key in measurableRules) {
          key = measurableRules[key];
          const counterselector: string = '[data-target=".meas_acc > .panel > .' + key + '"] .rulecounter';
          const counter: HTMLElement = $measurableShell.find(counterselector)[0] as any;
           U.pe(!counter, 'counter not found for rule: ' + key);
          counter.innerText = rulelist[key].length;
        }*/
        // console.log('rules:', rulelist.all.length, rulelist, context.templateLevel);
        // $measurableShell.find('.rulecontainer:not(.template)').remove();
        for (i = 0; i < rulelist.all.length; i++) {
            const rule = rulelist.all[i];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!rule.prefix, 'astdh', rule, rulelist, context.templateLevel);
            if (rule.prefix === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra && rule.name === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].axis)
                continue;
            if (rule.prefix === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes && rule.name === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].handles)
                continue;
            if (false) {}
            if (false) {}
            const fakeevt = {};
            fakeevt.currentTarget = $measurableShell.find('.ruletitle[data-target=".meas_acc > .panel > .' + rule.prefix + '"] > button.addrule')[0];
            this.addRule(fakeevt, context, rule);
        }
        // per leggere la direzione da una freccia htmlcheckbox: getAttribute('direction');
        let tmp;
        let j;
        tmp = context.templateLevel.getAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Draggableoptions"].axis);
        const dragHandles = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(tmp || '', ' ', '').split(',');
        tmp = context.templateLevel.getAttribute(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Resizableoptions"].handles);
        const resHandles = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(tmp || '', ' ', '').split(',');
        const handlesarr = [dragHandles, resHandles];
        for (j = 0; j < handlesarr.length; j++) {
            const handles = handlesarr[j];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].arrayRemoveAll(handles, '');
            for (i = 0; i < handles.length; i++) {
                const arrow = $measurableShell.find('.arrow[direction=' + handles[i] + ']')[0];
                arrow.checked = true;
                updateArrowGUI(arrow);
            }
        }
        $measurableShell.find('.arrow').on('change', arrowchange);
        $measurableShell.find('button.addrule').off('click.addrule').on('click.addrule', (e) => { e.stopPropagation(); this.addRule(e, context); });
    }
    getruleShellRoot(node) {
        while (node.parentElement && !node.classList.contains('panel'))
            node = node.parentElement;
        return node;
    }
    addRule(e, context, ruleparts = null) {
        let i;
        const title = e.currentTarget.parentElement;
        const $title = $(title);
        //    console.log(title, e);
        const ruletype = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].trimStart(title.dataset.target.substr(title.dataset.target.lastIndexOf('>') + 1), ['.', ' ']);
        const prefix = ruletype;
        const counter = $title.find('.rulecounter')[0];
        counter.innerHTML = '' + (+counter.innerHTML + 1);
        title.setAttribute('counter', counter.innerText);
        // U.pe(counter.innerHTML === '2', '2');
        // const targetsectionselector: string = title.dataset.target;
        // const $targetsection: JQuery<HTMLElement> = $measurableShell.find(targetsectionselector) as  JQuery<HTMLElement>;
        const appendparent = title.parentElement;
        const newtemplate = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($(appendparent).find('.template')[0], true);
        newtemplate.classList.remove('template');
        appendparent.insertBefore(newtemplate, title);
        appendparent.insertBefore(title, newtemplate); // non esiste insertAfter, quindi ri-prependo il titolo.
        const $newtemplate = $(newtemplate);
        const nameinput = $newtemplate.find('input.attrname')[0];
        const left = $newtemplate.find('input.leftside')[0];
        const operator = $newtemplate.find('.operatorcontainer > select.operator')[0];
        const right = $newtemplate.find('input.rightside')[0];
        const target = $newtemplate.find('input.target')[0];
        const $testbutton = $newtemplate.find('button.executedebug');
        const dynamicjquiplaceholder = (valueinput, phinput, phdictionary) => {
            $(valueinput).on('change', () => {
                let valid = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].validateDatalist(valueinput);
                if (!phdictionary)
                    return;
                console.log(' key:', valueinput.value, 'map:', phdictionary);
                phinput.placeholder = valid ? phdictionary[valueinput.value] : 'invalid jQueryUi parameter';
            });
        };
        if (left && left.list || nameinput.list)
            switch (nameinput.dataset['target'] || left && left.dataset['target']) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unexpected datalist generator:', target, nameinput, left);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRes:
                    dynamicjquiplaceholder(nameinput, right, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ResizableoptionsPH"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiDra:
                    dynamicjquiplaceholder(nameinput, right, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["DraggableOptionsPH"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"]._jquiRot:
                    dynamicjquiplaceholder(nameinput, right, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["RotatableoptionsPH"]);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].constraint:
                    dynamicjquiplaceholder(left, right, _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableTemplateGenerator"].constraintPlaceholderMap);
                    break;
            }
        if (ruleparts) { // if existing rule
            nameinput.value = ruleparts.name;
            if (left)
                left.value = ruleparts.left;
            console.log('md5', operator, ruleparts);
            if (operator)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].selectHtml(operator, ruleparts.operator);
            right.value = ruleparts.right;
            target.value = ruleparts.target;
        }
        else {
            if (prefix === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRefresh) {
                context.templateLevel.classList.add(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ReservedClasses"].onRefresh);
                context.applyNodeChangesToInput();
            }
        }
        const rulespanelshell = this.getruleShellRoot(nameinput);
        const $rulespanelshell = $(rulespanelshell);
        if (e.type === "click") { // if not triggered.
            $rulespanelshell.find('.collapse').addClass('show');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(rulespanelshell === nameinput, 'a');
        let oldrulename = nameinput.value;
        let leftdataset = left ? $('datalist#' + left.getAttribute('list'))[0] : null;
        let lefthashmap = null;
        const mp = this.propertyBar.selectedModelPiece;
        const generateRuleValue = () => {
            let ret = (left ? left.value : '');
            console.log('generaterule operator:', operator, operator && operator.value);
            if (!operator || !(operator instanceof HTMLSelectElement))
                return ret + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + right.value;
            switch (operator.value) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unexpected measurable rule operator:' + operator.value, operator);
                    break; // describing separators (arrows, do, then...) are ignored.
                case '<=':
                case '<':
                case '>':
                case '>=':
                case '!=':
                case '==':
                case '=':
                case '===':
                case '!==':
                    ret += _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + operator.value;
                    break;
            }
            return ret + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].separator + right.value;
        };
        const generateOldRuleName = () => { return ruletype + oldrulename; };
        const generateRuleName = () => { return ruletype + nameinput.value; };
        const updateRule = () => {
            if (left && (left.getAttribute('invalid') === '1' || right.getAttribute('invalid') === '1'))
                return;
            const name = generateRuleName();
            const value = generateRuleValue();
            console.log('setattribute: name:', name, ' generated by:', ruletype + ' + ' + nameinput.value);
            context.templateLevel.setAttribute(name, value);
            context.applyNodeChangesToInput();
        };
        const isRuleNameTaken = (name) => {
            const $allrules = $rulespanelshell.find('input.attrname');
            console.log('other names:', rulespanelshell, $allrules);
            for (i = 0; i < $allrules.length; i++) {
                const ruleinput = $allrules[i];
                if (ruleinput === nameinput)
                    continue;
                if (ruleinput.value === name)
                    return true;
            }
            return false;
        };
        nameinput.pattern = '[^ "\']*';
        const setRuleTarget = (str) => {
            context.templateLevel.setAttribute('relativeSelectorOf' + generateRuleName(), str);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pif(true, 'changetarget of: |' + ruletype + oldrulename + '|  |' + generateRuleName() + '|');
            context.applyNodeChangesToInput();
        };
        const targetChanged = () => { setRuleTarget(target.value); };
        const setRuleName = (name) => {
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].followsPattern(nameinput, name))
                return;
            console.log('setRuleName pt0 ', nameinput, 'istaken?', isRuleNameTaken(name));
            if (oldrulename === name)
                return; // errore qui? durante l'add buttopn insert event questo è sempre true, e quando addo una rule sono tutte named "1". non penso più sia questo
            console.log('setRuleName pt2 ', nameinput, 'istaken?', isRuleNameTaken(name));
            const oldtarget = context.templateLevel.getAttribute('relativeSelectorOf' + ruletype + oldrulename);
            while (isRuleNameTaken(name)) {
                name = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].increaseEndingNumber(name);
            }
            context.templateLevel.removeAttribute(ruletype + oldrulename);
            if (oldtarget) {
                // non printa? ma funziona U.pif(true, 'rename) delete: |' + ruletype + oldrulename + '|; insert: |' + ruletype + name + '|');
                context.templateLevel.removeAttribute('relativeSelectorOf' + ruletype + oldrulename);
                context.templateLevel.setAttribute('relativeSelectorOf' + ruletype + name, oldtarget);
            }
            console.log('setRuleName pt3 ', nameinput, 'istaken?', isRuleNameTaken(name));
            oldrulename = nameinput.value = name;
            updateRule();
        };
        const leftChanged = () => {
            updateRule();
        };
        const operatorChanged = () => {
            updateRule();
        };
        const rightChanged = () => {
            updateRule();
        };
        const nameChanged = () => { setRuleName(nameinput.value = nameinput.value.toLowerCase()); };
        let input;
        let tmp = this.getRuleEditor();
        const editorshell = tmp.editor;
        const editorinput = tmp.input;
        const helplink = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toHtml('<span>Need help? read the <a href = "https://github.com/DamianoNaraku/jjodel/wiki/Positional-element-editor">documentation</a>.</span>');
        const leftClicked = () => {
            editorinput.innerText = String.fromCharCode(160) + left.value;
            input = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]();
            input.setText('Left side editor', null, helplink);
            input.setNestedInputNode(editorshell, editorinput);
            input.addOkButton(null, [(e, value) => {
                    left.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(value, String.fromCharCode(160), ' ').trim();
                    leftChanged();
                }]);
            input.show();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].setSelection(editorinput, editorinput.innerText.length);
            $(editorinput).trigger('mouseup');
        };
        const rightClicked = () => {
            editorinput.innerText = String.fromCharCode(160) + right.value;
            input = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]();
            input.setText('Right side editor', null, helplink);
            input.setNestedInputNode(editorshell, editorinput);
            input.addOkButton(null, [(e, value) => {
                    right.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(value, String.fromCharCode(160), ' ').trim();
                    rightChanged();
                }]);
            input.show();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].setSelection(editorinput, editorinput.innerText.length);
            // mouseup triggera il ricalcolo dei suggerimenti. sia perchè potrebbero essercene già di pronti, sia per pulire i suggerimenti della precedente apertura (l'editor è unico)
            $(editorinput).trigger('mouseup');
        };
        const targetClicked = () => {
            editorinput.innerText = String.fromCharCode(160) + target.value;
            input = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]();
            input.setText('Target selector editor', null, helplink);
            input.setNestedInputNode(editorshell, editorinput);
            input.addOkButton(null, [(e, value) => {
                    target.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].replaceAll(value, String.fromCharCode(160), ' ').trim();
                    targetChanged();
                }]);
            input.show();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].setSelection(editorinput, editorinput.innerText.length);
            $(editorinput).trigger('mouseup');
        };
        $(nameinput).off('change.name').on('change.name', nameChanged);
        $(operator).off('change.operator').on('change.operator', operatorChanged);
        if (left && (left.list || left instanceof HTMLSelectElement)) {
            $(left).off('change.leftside').on('change.leftside', leftChanged);
        }
        else {
            $(left).off('click.leftside').on('click.leftside', leftClicked);
        }
        if (right && (right.list || right instanceof HTMLSelectElement)) {
            $(right).off('change.rightside').on('change.rightside', rightChanged);
        }
        else {
            $(right).off('click.rightside').on('click.rightside', rightClicked);
        }
        if (target && (target.list || target instanceof HTMLSelectElement)) {
            $(target).off('change.target').on('change.target', targetChanged);
        }
        else {
            $(target).off('click.target').on('click.target', targetClicked);
        }
        /*
        $(nameinput).off('change.name').on('change.name', nameChanged);
        $(left).off('change.leftside').on('change.leftside', leftChanged);
        $(operator).off('change.operator').on('change.operator', operatorChanged);
        $(right).off('change.rightside').on('change.rightside', rightChanged);
        $(target).off('change.target').on('change.target', targetChanged);*/
        /// todo: move rule up / down (execution ordeer)
        $newtemplate.find('button.ruledelete').off('click.delete').on('click.delete', () => {
            newtemplate.parentNode.removeChild(newtemplate);
            counter.innerHTML = '' + (+counter.innerHTML - 1);
            title.setAttribute('counter', counter.innerText);
            context.templateLevel.removeAttribute(generateOldRuleName());
            context.templateLevel.removeAttribute(generateRuleName()); //todo: potrebbe fare casini se qualcuno swappa nomi e cancella una regola?
            if (prefix === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["measurableRules"].onRefresh) {
                context.templateLevel.classList.remove(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ReservedClasses"].onRefresh);
            }
            context.applyNodeChangesToInput();
        });
        if (!ruleparts)
            setRuleName(nameinput.getAttribute('defaultvalue'));
        const isEventTriggerRule = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Measurable"].eventTriggers.indexOf(prefix) !== -1;
        let debugleft = $newtemplate.find('.debugleft')[0];
        let debugoperator = $newtemplate.find('.debugoperator')[0];
        let debugright = $newtemplate.find('.debugright')[0];
        let debugtarget = $newtemplate.find('.debugtarget')[0];
        let debugtriggers = $newtemplate.find('.debugtriggers')[0];
        if (!left) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(debugleft.parentElement);
            debugleft = null;
        }
        if (!right) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(debugright.parentElement);
            debugright = null;
        }
        if (!operator) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(debugoperator.parentElement);
            debugoperator = null;
        }
        if (!target) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(debugtarget.parentElement);
            debugtarget = null;
        }
        if (!isEventTriggerRule) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].remove(debugtriggers.parentElement);
            debugtriggers = null;
        }
        let execute = () => {
            if (!context.graphLevel) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].ps(true, 'Rules cannot be executed on elements not displayed on the graph.');
                return;
            }
            let attr = context.graphLevel.attributes.getNamedItem(generateRuleName().toLowerCase());
            let parts;
            try {
                parts = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableRuleParts"](attr, null, false);
            }
            catch (_a) { }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!parts || !parts.prefix, 'unexpected rule: ', { ruletype, nameinputValue: nameinput.value, context, parts, thiss: this, attr, rulename: generateRuleName() });
            let output = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableRuleParts"](null, null, true);
            try {
                output = parts.process(false);
            }
            catch (exception) {
                output = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableRuleParts"](null, null, true);
                console.error('testing the execution caused exception:', exception);
                output.right = 'Exception:' + exception;
            }
            console.log('execution output:', output);
            if (debugleft)
                debugleft.innerText = output.left;
            if (debugoperator)
                debugoperator.innerText = output.operator;
            if (debugright)
                debugright.innerText = output.right;
            if (debugtarget)
                debugtarget.innerText = output.target;
            if (debugtriggers) {
                let str = 'Triggered ' + output.triggeredResults.length + ' rules.';
                debugtriggers.innerText = 'Triggered ' + output.triggeredResults.length + ' rules.';
                if (!output.triggeredResults.length)
                    str += '\n if this is not intended, remind that layoutable rules always start with the "_" prefix, eg: "_export1"';
                debugtriggers.innerText = str;
                i;
            }
        };
        $testbutton.on('mousedown', execute);
    }
    isLoaded() {
        //todo: carica styleEditor solo quando diventa visibile.
        return true;
    }
    getRuleEditor() {
        if (StyleEditor.ruleeditor)
            return { editor: StyleEditor.ruleeditor, input: StyleEditor.ruleeditorinput };
        const callforeachkeyrecursive = (obj, f, pathuntilnow = '', visited_avoidloop = []) => {
            let key0;
            let key;
            let val;
            // U.pif((pathuntilnow + '.' + key).indexOf('model') > 0, 'pre!! autocompletem model,  path:', pathuntilnow, 'obj:', obj);
            for (key0 in obj) {
                key = key0;
                val = obj[key];
                const isArray = Array.isArray(val);
                const isObject = typeof val === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["TSON_JSTypes"].object;
                if (isObject || isArray) {
                    if (obj === val)
                        continue;
                    // nope, sta cosa dei duplicati così non va bene perchè ho degli alias e soprattutto su model fai la roba grezza if obj === val
                    // if (visited_avoidloop.includes(val)) continue; else visited_avoidloop.push(val);
                }
                if (typeof val === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["TSON_JSTypes"].function) {
                    key += _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].getFunctionSignatureFromComments(val).signature + ';';
                }
                // else key += '/*' + U.getTSClassName(val) + '*/.';
                else if (isArray) {
                    key += '/*array*/';
                }
                else if (isObject) {
                    key += '.';
                } // no type comment per object, altrimenti il commento invalida la ricerca di next suggestions.
                else
                    key += '; /*' + typeof val + '*/';
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(key === 'vertex', 'key:', key, 'obj[key]:', obj[key], 'val:', val, 'cond:', (val instanceof Object && !(val instanceof Function)));
                f(pathuntilnow + '.', key);
                // console.log(pathuntilnow, val);
                if (val instanceof Element)
                    continue;
                //NB: do not use instanceof Object, might somehow fail on custom classes (ModelProtected)
                if (typeof val === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["TSON_JSTypes"].object)
                    callforeachkeyrecursive(val, f, pathuntilnow + '.' + key0, visited_avoidloop);
            }
        };
        let i;
        // let preChars = ' ';
        let spaceUsed = ' '; // String.fromCharCode(160);
        let preChars = '};' + spaceUsed + '*/+-';
        let autocompletekeys = [];
        let addmanyv2 = (preChars, prePath, key) => {
            // preChars = spazio, moltiplicazione, addizione...
            if (prePath.charAt(0) === '.')
                prePath = prePath.substr(1);
            for (i = 0; i < preChars.length; i++) {
                autocompletekeys.push(new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["AutocompleteMatch"](preChars[i] + prePath, key));
            }
        };
        let contextobj = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MeasurableEvalContext"].fillFake();
        window['autocompletekeys'] = autocompletekeys;
        window['autocompletesourceobj'] = contextobj;
        window['autocompletemodel'] = contextobj.model;
        let obj = { 'this': contextobj };
        callforeachkeyrecursive(obj, (prePath, key) => { addmanyv2(preChars, prePath, key); }, '', []);
        let inputcontainer = document.createElement('div');
        let input = document.createElement('div');
        let suggestionlist = document.createElement('ul');
        inputcontainer.append(input);
        inputcontainer.append(suggestionlist);
        inputcontainer.setAttribute('style', "width: calc(75vw - 152px); height: auto;");
        input.setAttribute('style', "border: 1px solid #ced4da; border-radius: .25rem; padding: 1rem;");
        input.setAttribute('contenteditable', 'true');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].autocompleteInputSetup(inputcontainer, autocompletekeys);
        StyleEditor.ruleeditor = inputcontainer;
        StyleEditor.ruleeditorinput = input;
        return this.getRuleEditor();
    }
    layoutHtmlSetup(model) {
        const $layout = this.$root.find('.layoutingRoot');
        const $inputs = $layout.find('.lopt').add(this.$root.find('.lopt.stabilizeSteps'));
        const renew = () => { this.computeLayoutUIFs(model, this.$root); this.fillLayoutHtmlValues(model, $inputs); };
        // timeout necessario, altrimenti onchange fà prima renew() ri-settando il valore logico dentro l'html, e poi esegue
        // l'uif con il vecchio valore logico, il nuovo valore cambiato dall'utente viene perso.
        $('.dynamic_uif').on('change', (e) => { setTimeout(renew, 1); });
        const $edgePointSelect = $('.edgePointTreatment');
        const layouting = model.graph.layouting;
        const myOptions = layouting.myOptions;
        $edgePointSelect[0].value = myOptions.edgePointMode;
        $edgePointSelect.on('change', (e) => {
            switch ($edgePointSelect[0].value) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unexpected value of layouting.myoptions.edgePointMode:', $edgePointSelect[0].value);
                    break;
                case 'vertex':
                case 'ignore':
                case 'relative':
                    myOptions.edgePointMode = $edgePointSelect[0].value;
                    break;
            }
        });
        renew();
        const onRun = () => {
            renew();
        };
        const onStop = () => {
            renew();
        };
        layouting.setStyleEditorBackEvents(onRun, onStop);
        $inputs.on('change', (e) => {
            this.setLayoutHtmlValue(layouting, e.currentTarget);
        });
        const $colorSchemeOpener = this.$root.find('.colorschemeopener').on('click', (e) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ColorSchemeComponent"].show();
        });
        const $start = this.$root.find('.layout.start').on('click', (e) => {
            layouting.start();
        });
        const $stabilize = this.$root.find('.layout.stabilize').on('click', (e) => {
            layouting.stabilize();
        });
        const $stop = this.$root.find('.layout.stop').on('click', (e) => {
            layouting.isRunning = false;
            layouting.stop();
        });
    }
    setLayoutHtmlValue(layout, currentTarget) {
        console.log('key2 optionval:', currentTarget.value, currentTarget);
        this.setLayoutValue(layout, currentTarget.value, currentTarget.dataset.key);
    }
    setLayoutValue(layouting, value0, key) {
        layouting.stop();
        const value = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].deserialize(value0);
        if (key.indexOf('custom.') === 0) {
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, "unexpected custom uif key on setlayout value:", key);
                    break;
                case 'custom.stabilizeSteps':
                    layouting.stabilizationSteps = value;
                    break;
                case 'custom.scale_factor':
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Layouting"].scaleFactor = value;
                    break;
            }
        }
        else {
            key = key.replace(/\.bh\./, '.' + layouting.optionsDefault.physics.solver + '.');
            layouting.setOption(key, value);
        }
        layouting.start();
    }
    computeLayoutUIFs(model, $layout) {
        const dictionary = {};
        const graph = model.graph;
        const layouting = graph.layouting;
        const options = layouting.optionsDefault;
        dictionary['atl'] = dictionary['bar'] = dictionary['rep'] = dictionary['hr'] = false;
        switch (options.physics.solver) {
            default: _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, 'unexpected switch value solver:', options.physics.solver);
            case 'barnesHut':
                dictionary['bar'] = true;
                break;
            case 'repulsion':
                dictionary['rep'] = true;
                break;
            case 'hierarchicalRepulsion':
                dictionary['hr'] = true;
                break;
            case 'forceAtlas2Based':
                dictionary['atl'] = true;
                break;
        }
        dictionary['stabilization'] = options.physics.stabilization.enabled;
        dictionary['physics'] = options.physics.enabled;
        dictionary['running'] = layouting.isRunning;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].computeConditionalHides($layout, dictionary, false, true, (e) => $(e).slideDown(), (e) => $(e).slideUp());
    }
    fillLayoutHtmlValues(model, $inputs) {
        let i;
        let val;
        const layouting = model.graph.layouting;
        for (i = 0; i < $inputs.length; i++) {
            const input = $inputs[i];
            let key = input.dataset.key;
            if (key.indexOf('custom.') === 0) {
                switch (key) {
                    default:
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(true, "unexpected custom uif key:", key);
                        break;
                    case 'custom.stabilizeSteps':
                        val = '' + layouting.stabilizationSteps;
                        break;
                    case 'custom.scale_factor':
                        val = '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Layouting"].scaleFactor;
                        break;
                }
            }
            else {
                // normal keys
                key = key.replace(/\.bh\./, '.' + model.graph.layouting.optionsDefault.physics.solver + '.');
                val = '' + model.graph.layouting.getOption(key);
            }
            if (input instanceof HTMLSelectElement)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].selectHtml(input, val, false);
            else
                input.value = val;
            // console.log('newkeyy:', key, input, input.value);
        }
    }
    static getInvisibleStyle(keepEdges = false) {
        const ret = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml($('.MMDefaultStyles.immutable .template.invisibleNode')[0]);
        ret.classList.remove('template');
        ret.setAttribute("keep-edges", _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toBoolString(keepEdges));
        return ret;
    }
    setupEdgesVisibility(context, $html, style) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(context.templateRoot.tagName !== _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["TagNames"].FOREIGNOBJECT, 'vertex root must be a SVGFOREIGNOBJECT', context.templateRoot);
        const $edgeVisibility = $html.find('input[type="checkbox"].edgeVisibility');
        const $edgePriority = $html.find('.edgePriority input[kind]');
        const edgeVisibility = $edgeVisibility[0];
        let keepEdges = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].fromBoolString(context.templateRoot.getAttribute('keep-edges'), this.propertyBar.selectedModelPiece !== _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MetaModel"].genericObject);
        $edgeVisibility[0].checked = keepEdges;
        if (style.isGlobalhtml) {
            edgeVisibility.disabled = true;
        }
        if (keepEdges)
            $edgePriority.show();
        else
            $edgePriority.hide();
        const directions = ["in", "out"], kinds = ["rel", "ext", "oth"];
        let results = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["IVertex"].isAllowingEdges(context.templateRoot);
        for (let direction of directions) {
            for (let kind of kinds) {
                let attrstr = 'show-' + 'show-' + direction + '-' + kind + '-edges';
                let $priobutton = $edgePriority.filter('[kind="' + direction + "-" + kind + '"]');
                // console.log("setting visibility edge input:", $priobutton, $edgePriority, '[kind="' + direction + "-" + kind + '"]');
                $priobutton[0].value = '' + results[direction][kind];
            }
        }
        if (!style.isGlobalhtml) {
            $edgeVisibility.on('change', (e) => {
                let input = e.currentTarget;
                context.templateRoot.setAttribute('allow-edges', input.checked);
                context.applyRootChangesToInput();
            });
            $edgePriority.on('change', (e) => {
                let input = e.currentTarget;
                let direction_and_kind = input.getAttribute('kind');
                context.templateRoot.setAttribute('show-' + direction_and_kind + '-edges', input.value);
                context.applyRootChangesToInput();
            });
        }
    }
}
StyleEditor.ruleeditor = null;
StyleEditor.ruleeditorinput = null;


/***/ }),

/***/ "./src/guiElements/top-bar/m2tcreator/m2tcreator.component.css":
/*!*********************************************************************!*\
  !*** ./src/guiElements/top-bar/m2tcreator/m2tcreator.component.css ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3VpRWxlbWVudHMvdG9wLWJhci9tMnRjcmVhdG9yL20ydGNyZWF0b3IuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "./src/guiElements/top-bar/m2tcreator/m2tcreator.component.ts":
/*!********************************************************************!*\
  !*** ./src/guiElements/top-bar/m2tcreator/m2tcreator.component.ts ***!
  \********************************************************************/
/*! exports provided: M2tcreatorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2tcreatorComponent", function() { return M2tcreatorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let M2tcreatorComponent = class M2tcreatorComponent {
    constructor() { }
    ngOnInit() {
    }
    static willUseThis() { }
};
M2tcreatorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-m2tcreator',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./m2tcreator.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/m2tcreator/m2tcreator.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./m2tcreator.component.css */ "./src/guiElements/top-bar/m2tcreator/m2tcreator.component.css")).default]
    })
], M2tcreatorComponent);



/***/ }),

/***/ "./src/guiElements/top-bar/top-bar.component.css":
/*!*******************************************************!*\
  !*** ./src/guiElements/top-bar/top-bar.component.css ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\r\n#topbarShell{\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-basis: 100vw;\r\n  background-color: var(--mainBackgroundColor);\r\n  /*border-bottom: var(--mainBorder);*/\r\n  width: 100vw;\r\n  height: var(--topbarH);\r\n  max-height: var(--topbarH);\r\n}\r\n#topbar {\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\n#topbar > * {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  /*margin: auto 0 auto 10px; /*T?RB?L*/\r\n}\r\n/*\r\n#topbar > button{\r\n  height: calc(var(--topbarH) - 10px);\r\n  flex-basis: 100px;\r\n  min-width: 100px;\r\n  max-width: 100px;\r\n}*/\r\n#topbar button.dropdownTitle:focus{\r\n  outline: none;\r\n}\r\n::ng-deep .popupContent .closeButton{\r\n  /* float: right; */\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  height: 40px;\r\n  width: 40px;\r\n  border: 2px solid var(--mainFontColor);\r\n  background-color: var( --altBackgroundColor);\r\n  color: var(--mainFontColor);\r\n  font-size: 12px;\r\n}\r\n::ng-deep .popupContent .closeButton:hover{\r\n  right: 5px;\r\n  top: 5px;\r\n  height: 50px;\r\n  width: 50px;\r\n  background-color: red;\r\n  /*color: var(--color-2);*/\r\n  font-weight: bolder;\r\n  font-size: 15px;\r\n}\r\n::ng-deep .screenWideShadow{\r\n  position: absolute;\r\n  display: none;\r\n  top: 0;\r\n  z-index: 2;\r\n  background-color: rgba(0,0,0,0.5);\r\n  border: none;\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\n::ng-deep .popupContent{\r\n  top: 50%;\r\n  left: 50%;\r\n  -webkit-transform: translate(-50%, -50%);\r\n          transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  display: block;\r\n  width: auto;\r\n  height: auto;\r\n  padding: 30px 60px;\r\n  border: 4px solid var(--mainBorderColor);\r\n  background-color: var(--mainBackgroundColor);\r\n  max-height: 90vh;\r\n  overflow: auto;\r\n  border-radius: 10px;\r\n}\r\n::ng-deep .typeTable {\r\n  margin: auto;\r\n}\r\n::ng-deep .typeRow {\r\n  height: 20px;\r\n  margin-bottom: 5px;\r\n}\r\n.typemaprow{\r\n  width: 450px;\r\n  margin-bottom: 15px;\r\n}\r\n::ng-deep .typeRow>*{\r\n  margin-top: auto;\r\n  margin-bottom: auto;}\r\n::ng-deep .alias{\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n::ng-deep .typeRow > *{\r\n}\r\n::ng-deep .typeName{\r\n  color: darkorange;\r\n}\r\n/************************************************     dropdown style     **********************************************/\r\n.dropdownTitle {\r\n  background-color: inherit; /*var(--mainBackgroundColor);*/\r\n  color: unset;\r\n  font-size: 16px;\r\n  border: none;\r\n  padding: 12px 16px;\r\n  cursor: inherit;\r\n}\r\n.dropdownContainer {\r\n  position: relative;\r\n  display: inline-block;\r\n  /*height: 80%;*/\r\n  width: auto;\r\n  cursor: pointer;\r\n}\r\n.dropdownContainer.right {\r\n  min-width: 100%;\r\n}\r\nul.dropdownContent {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: var(--mainBackgroundColor);\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n  border: 3px solid var(--secondaryBorderColor);\r\n  padding: 0;\r\n  margin: 0;\r\n  top: 100%;\r\n}\r\nul.dropdownContent.right{\r\n  margin:0;\r\n  top: 0;\r\n  left: 100%;\r\n}\r\nli.dropdownContent {\r\n  padding: 0;\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\nul.dropdownContent:not(:empty){\r\n  border-bottom-left-radius: 33px;\r\n}\r\n.dropdownTitle.right, .dropdownpadding{\r\n  font-size: inherit;\r\n  padding: 12px 16px;\r\n}\r\n.dropdownTitle.right:hover, .dropdownContainer.right:hover, .dropdownpadding:hover{\r\n  border-bottom-left-radius: 23px;\r\n}\r\n.dropdownTitle.right.todo, .dropdownpadding.todo{ border-bottom-left-radius: 0; }\r\n/*.dropdownTitle.right.todo:last-child, .dropdownpadding.todo:last-child{ border-bottom-left-radius: 33px; }*/\r\nli.dropdownContent:hover {\r\n  background-color: var(--secondaryBorderColor);\r\n  /*padding-left: 12px;*/\r\n  border-left: 8px solid #ff0000a0;\r\n  border-bottom-left-radius: 30px;\r\n  /*margin-left: -12px; bottom-round border, trouble con stili sovrapposti che lo ri-squadrano.\r\n   border-top-left-radius: 24px;*/\r\n}\r\n#topbar>.dropdownContainer:hover>.dropdownTitle{\r\n  border-top-left-radius: 30px;\r\n  border-top-right-radius: 30px;}\r\n#topbar>.dropdownContainer:hover>.dropdownTitle {\r\n  background-color: var(--secondaryBorderColor);\r\n}\r\n.buttonGridContainer {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* width: calc(40px * 5 - 1);*/\r\n  width: min(25vw, calc(40px * 5 + 10px * 5 - 1px)); /* button size + buttonshell margin, 4 per riga con massimo spazio avanzato prima del 5°*/\r\n}\r\n.buttonGridMinMargin {\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-box-flex: 0;\r\n          flex-grow: 0;\r\n  flex-shrink: 0;\r\n  margin: auto;\r\n  padding: 5px; }\r\n.buttonGrid {\r\n  width: 45px;\r\n  height: 45px;\r\n}\r\nul.dropdownContent{\r\n  min-height: 100%;\r\n}\r\n.dropdownContainer:hover>ul.dropdownContent {\r\n  display: block;\r\n}\r\n.dropdownContainer:hover > ul.dropdownContent:empty{\r\n  display:-webkit-box;\r\n  display:flex;\r\n}\r\nul.dropdownContent:empty:before{\r\n  content: '... Empty ...';\r\n  margin: auto;\r\n  display: -webkit-box;\r\n  display: flex;\r\n}\r\nul.dropdownContent:empty:hover{\r\n  background-color: darkred !important;\r\n  cursor: not-allowed !important;\r\n}\r\n/**********     changelog     **********/\r\n.changelogRoot{\r\n  position: fixed;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/guiElements/top-bar/top-bar.component.ts":
/*!******************************************************!*\
  !*** ./src/guiElements/top-bar/top-bar.component.ts ***!
  \******************************************************/
/*! exports provided: TopBarComponent, TopBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopBarComponent", function() { return TopBarComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopBar", function() { return TopBar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _m2tcreator_m2tcreator_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./m2tcreator/m2tcreator.component */ "./src/guiElements/top-bar/m2tcreator/m2tcreator.component.ts");
/* harmony import */ var _app_color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../app/color-scheme/color-scheme.component */ "./src/app/color-scheme/color-scheme.component.ts");





// @ts-ignore
let TopBarComponent = class TopBarComponent {
    constructor() {
        this.Object = Object;
    }
    ngOnInit() {
        setTimeout(() => {
            this.status = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status;
            this.topbar = TopBar.topbar;
        }, 0);
    }
    createM2T_Rule(forModel) {
        _m2tcreator_m2tcreator_component__WEBPACK_IMPORTED_MODULE_3__["M2tcreatorComponent"].willUseThis();
    }
    displayResult(m2tname, m2tresult) {
        const input = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]();
        input.setText("M2T \"" + m2tname + "\" result", '', '');
        const innerInput = document.createElement('textarea');
        innerInput.value = m2tresult;
        innerInput.style.width = '100%';
        innerInput.style.minHeight = '75vh';
        input.setNestedInputNode(null, innerInput, false);
        input.show();
    }
    m2t_mysql_m2() {
        const classes = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.getAllClasses();
        let tables = [];
        let foreignKeys = [];
        const getType = (attr) => {
            switch (attr.type.primitiveType.short) {
                // default: console.error('m2t mysql unsupported attr type:', attr.type.primitiveType.short, attr);
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EBoolean:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EByte: return 'TINYINT(1)';
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EChar: return 'CHAR(1)';
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EDate:
                default:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EString: return 'VARCHAR' + (attr.getUpperbound() >= 0 ? '(' + attr.getUpperbound() + ')' : '');
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EShort:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EInt:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].ELong:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EFloat: return 'INT';
            }
        };
        for (const classe of classes) {
            let tableStr = 'CREATE TABLE ' + classe.name + ' {\n';
            let foreignkey = '';
            // let pkFeatures: M2Feature[] = [];
            const attributes = [...classe.getAllAttributes()];
            const references = [...classe.getAllReferences()];
            const indent = '    ';
            let hasIDField = false;
            for (const attr of attributes) {
                if (attr.name.toLowerCase() === 'id' && attr.type.primitiveType.short === _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"].EInt) {
                    hasIDField = true;
                }
                // if (attr.name.toLowerCase() === 'id') { pkFeatures = [attr]; }
                // if (pkAttributes.length !== 1 && pkFeatures[0].name.toLowerCase() !== 'id') { pkFeatures.push(attr); }
                tableStr += indent + attr.name + ' ' + getType(attr) + ',\n';
            }
            for (const ref of references) {
                if (ref.name.toLowerCase() === 'id') {
                    hasIDField = true;
                }
                // if (ref.name.toLowerCase() === 'id') { pkFeatures = [ref]; }
                // if (pkAttributes.length !== 1 && pkFeatures[0].name.toLowerCase() !== 'id') { pkFeatures.push(ref); }
                tableStr += indent + ref.name + ' INT,\n';
                foreignKeys.push('ALTER TABLE ' + classe.name + '\n' +
                    indent + 'ADD FOREIGN KEY (' + ref.name + ') REFERENCES ' + ref.getTarget().name + '(id);');
            }
            if (!hasIDField) {
                return "ERROR on class: " + classe.name +
                    ".\nFor this beta version of mysql m2t all tables must have an \"id\" integer field.";
            }
            // todo: PrimaryKey dovrebbe essere una annotation presente su [1,N] features.
            tableStr += indent + 'PRIMARY KEY (id)\n}';
            tables.push(tableStr);
        }
        return tables.join('\n\n') + '\n\n## Constraints\n\n' + foreignKeys.join('\n\n');
    }
    m2t_mysql_m1() {
        return 'm2t mysql m1 to do';
    }
    m2t_byText_m2() {
        return _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].copyVisibleText(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.graph.container);
    }
    m2t_byText_m1() {
        return _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].copyVisibleText(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.graph.container);
    }
};
TopBarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-top-bar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./top-bar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/guiElements/top-bar/top-bar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./top-bar.component.css */ "./src/guiElements/top-bar/top-bar.component.css")).default]
    })
], TopBarComponent);

class TopBar {
    constructor() {
        this.$shell = null;
        this.$topbar = null;
        this.html = null;
        this.topbar = null;
        this.typemapArr = [];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!!TopBar.topbar, 'top bar instantiated twice, but it is a singleton.');
        TopBar.topbar = this;
        this.$shell = $('#topbarShell');
        this.html = this.$shell[0];
        this.$topbar = this.$shell.find('#topbar');
        this.topbar = this.$topbar[0];
        this.$typemapSelect = this.$topbar.find('.typemapselector');
        this.typemapSelect = this.$typemapSelect[0];
        this.typemapSelect.value = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.currentTypeAlias;
        this.updateTypeMapList();
        TopBar.topbar.updateRecents();
        this.addEventListeners();
    }
    static staticInit() {
        TopBar.topbar = new TopBar();
    }
    updateTypeMapList() {
        TopBar.topbar.typemapArr = Object.keys(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.typeAliasDictionary).filter((s) => s.indexOf('predefined.') === -1);
    }
    changeTypeMap(newTypeMap = null) {
        const oldTypemap = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.currentTypeAlias;
        if (!newTypeMap) {
            newTypeMap = this.typemapSelect.value;
        }
        else {
            this.typemapSelect.value = newTypeMap;
        }
        console.log('changetm:', oldTypemap, 'new:', newTypeMap);
        if (oldTypemap === newTypeMap)
            return;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.typeAliasDictionary[newTypeMap], 'Invalid typemap name:', newTypeMap, 'allowed:', _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.typeAliasDictionary);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.currentTypeAlias = newTypeMap;
        this.showTypeMap();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.refreshGUI();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.refreshGUI();
    }
    createTypeMap(event) {
        let newkey;
        const userkey = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.user.getID();
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.typeAliasDictionary[userkey + '.custom']) {
            newkey = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].increaseEndingNumber(userkey + '.custom 1', false, false, s => !!_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.typeAliasDictionary[s]);
        }
        else {
            newkey = userkey + '.custom';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.typeAliasDictionary[newkey] = new Map();
        this.updateTypeMapList();
        setTimeout(() => {
            console.log('tmkey:', newkey, 'select.val:', this.typemapSelect.value, 'mapselect', this.typemapSelect);
            this.changeTypeMap(newkey);
        }, 0);
    }
    showTypeMap() {
        const $shell = this.$shell.find('#TypeMapper');
        const $html = $shell.find('.TypeList');
        const html = $html[0];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(html);
        const table = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toHtml('<table class="typeTable"><tbody></tbody></table>');
        const tbody = table.firstChild;
        for (const m3TypeName in _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"]) {
            if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"][m3TypeName]) {
                continue;
            }
            const type = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["EType"].get(_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ShortAttribETypes"][m3TypeName]);
            const row = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].toHtmlRow('' +
                '<tr class="typeRow">' +
                '<td class="typeName" data-m3name="' + type.short + '">' + type.short + '</td>' +
                '<td class="alias">is aliased to</td>' +
                '<td>' +
                '<input class="AliasName form-control" placeholder="Not aliased" value="' + type.getName() + '"' +
                ' aria-label="Small" aria-describedby="inputGroup-sizing-sm">' +
                '</td>' +
                '</tr>');
            tbody.appendChild(row);
            console.log('row:', row, ', tbody:', tbody);
        }
        html.appendChild(table);
        $html.find('input.AliasName').off('change').on('change', (e) => { TopBar.topbar.aliasChange(e); });
        $shell.show();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].closeButtonSetup($shell);
    }
    aliasChange(e) {
        const input = e.target;
        let row = input;
        while (!row.classList.contains('typeRow')) {
            row = row.parentNode;
        }
        const typestr = $(row).find('.typeName')[0].dataset.m3name;
        const typemap = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.currentTypeAlias];
        const newAlias = input.value.trim();
        if (typemap[typestr] === newAlias)
            return;
        typemap[typestr] = newAlias;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.refreshGUI();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.refreshGUI();
        // const type: EType = EType.get(typestr as ShortAttribETypes);
        // type.changeAlias(input.value);
    }
    static load_empty(e, prefix) {
        const empty = prefix === 'm' ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Model"].emptyModel : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["MetaModel"].emptyModel;
        TopBar.load(empty, prefix);
    }
    static load_XMI_File(e, prefix) {
        // filename:   rootClass.name + '.' + MetaModel.name;   es: path\league.bowling
        // open file dialog
        // read file
        // transform in json
        const extension = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.getActiveModel().isM1() ? '.' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.fullname() : '.ecore';
        let xmistring = '';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].fileRead((e, files, fileContents) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!fileContents || !files || fileContents.length !== files.length, 'Failed to get file contents:', files, fileContents);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(fileContents.length > 1, 'should not be possible to input multiple files.');
            if (fileContents.length == 0)
                return;
            xmistring = fileContents[0];
            console.log('xmistr input: ', xmistring);
            const xmlDoc = new DOMParser().parseFromString(xmistring, "text/xml");
            console.log('xml:', xmlDoc);
            let jsonstr = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["prxml2json"].xml2json(xmlDoc, '    ');
            console.log('jsonstr input: ', jsonstr);
            // U.pe(true, 'xml -> json', prxml2json, 'json -> xml', prjson2xml);
            TopBar.load(jsonstr, prefix);
        }, [extension], true);
    }
    static load(json, prefix) {
        const m = prefix === 'm' ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm;
        const num = prefix === 'm' ? 1 : 2;
        window['' + 'discardSave']();
        if (m.name)
            m.save(false);
        if (m.isM2()) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.save(false);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["LocalStorage"].deleteLastOpened(1);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["LocalStorage"].setLastOpened(num, json, null, null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].refreshPage();
    }
    static load_JSON_Text(e, prefix, callback = null) {
        const popup = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]();
        popup.setText('paste JSON/string data', '', '');
        popup.setInputNode('textarea');
        popup.setInput('', 'paste data here.');
        const finish = (e, value) => {
            popup.destroy();
            if (callback)
                callback(value);
            else
                TopBar.load(value, prefix);
        };
        // $(popup).find('.closeButton');
        popup.addOkButton('Load', [finish]);
        popup.show();
    }
    static download_JSON_String(e, modelstr) {
        const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status[modelstr];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!model, 'invalid modelStr in export-save_str: |' + modelstr + '|, status:', status);
        const savetxt = model.generateModelString();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!savetxt || savetxt === '', 'empty str');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clipboardCopy(savetxt);
        const popup = new _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["InputPopup"]();
        popup.setText((model.isM() ? 'Model' : 'Metamodel') + ' eCore/JSON', '', 'Already copied to clipboard.');
        popup.setInputNode('textarea');
        popup.setInput('' + savetxt);
        popup.show();
    }
    static download_JSON_File(e, modelstr) {
        const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status[modelstr];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!model, 'invalid modelStr in export-save_json_file: |' + modelstr + '|, status:', status);
        const savetxt = model.generateModelString();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].download((model.name || (model.isM1() ? 'M1' : 'M2') + '_unnamed') + '.json', savetxt);
    }
    static download_XMI_File(e, modelstr) {
        const model = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status[modelstr];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!model, 'invalid modelStr in export-save_xmi_file: |' + modelstr + '|, status:', status);
        let savetxt = model.generateModelString();
        const json = JSON.parse(savetxt);
        /*const parser = new FastXmi.j2xParser(new FastXmiOptions());
        const xml: string = parser.parse(json, new FastXmiOptions());
        savetxt = '' + xml; */
        // savetxt = json2xml(savetxt, { header: true } as JS2XML); // , Options.JS2XML);
        // console.log('xmljson: ', parser.parse(json));
        savetxt = '' + _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["prjson2xml"].json2xml(json, ' ');
        savetxt = TopBar.formatXml(savetxt).trim();
        let name;
        let extension;
        if (model.isM()) {
            const classRoot = model.classRoot;
            name = (model.name || (classRoot ? classRoot.metaParent.name : 'M1_unnamed'));
            extension = '.' + (_common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.childrens[0].name).toLowerCase();
        }
        else {
            name = (model.name || model.getDefaultPackage().name || 'M2_unnamed');
            extension = '.ecore';
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].download(name + extension, savetxt);
    }
    static formatXml(xml) {
        const reg = /(>)\s*(<)(\/*)/g; // updated Mar 30, 2015
        const wsexp = / *(.*) +\n/g;
        const contexp = /(<.+>)(.+\n)/g;
        xml = xml.replace(reg, '$1\n$2$3').replace(wsexp, '$1\n').replace(contexp, '$1\n$2');
        const pad =  false || '\t';
        let formatted = '';
        const lines = xml.split('\n');
        let indent = 0;
        let lastType = 'other';
        // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions
        const transitions = {
            'single->single': 0,
            'single->closing': -1,
            'single->opening': 0,
            'single->other': 0,
            'closing->single': 0,
            'closing->closing': -1,
            'closing->opening': 0,
            'closing->other': 0,
            'opening->single': 1,
            'opening->closing': 0,
            'opening->opening': 1,
            'opening->other': 1,
            'other->single': 0,
            'other->closing': -1,
            'other->opening': 0,
            'other->other': 0
        };
        let i = 0;
        for (i = 0; i < lines.length; i++) {
            const ln = lines[i];
            // Luca Viggiani 2017-07-03: handle optional <?xml ... ?> declaration
            if (ln.match(/\s*<\?xml/)) {
                formatted += ln + '\n';
                continue;
            }
            // ---
            const single = Boolean(ln.match(/<.+\/>/)); // is this line a single tag? ex. <br />
            const closing = Boolean(ln.match(/<\/.+>/)); // is this a closing tag? ex. </a>
            const opening = Boolean(ln.match(/<[^!].*>/)); // is this even a tag (that's not <!something>)
            const type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';
            const fromTo = lastType + '->' + type;
            lastType = type;
            let padding = '';
            indent += transitions[fromTo];
            let j;
            for (j = 0; j < indent; j++) {
                padding += pad;
            }
            if (fromTo === 'opening->closing') {
                formatted = formatted.substr(0, formatted.length - 1) + ln + '\n'; // substr removes line break (\n) from prev loop
            }
            else {
                formatted += padding + ln + '\n';
            }
        }
        return formatted;
    }
    updateRecents() {
        let tmp;
        tmp = localStorage.getItem('MM_SaveList');
        if (!tmp || tmp === '' || tmp === 'null' || tmp === 'undefined') {
            tmp = JSON.stringify([]);
        }
        const mmSaveList = JSON.parse(tmp);
        tmp = localStorage.getItem('M_SaveList');
        if (!tmp || tmp === '' || tmp === 'null' || tmp === 'undefined') {
            tmp = JSON.stringify([]);
        }
        const mSaveList = JSON.parse(tmp);
        const $metamodelHtml = this.$shell.find('.metamodel');
        const $modelHtml = this.$shell.find('.model');
        const recentContainerMM = $metamodelHtml.find('.recentSaveContainer')[0];
        const recentContainerM = $modelHtml.find('.recentSaveContainer')[0];
        console.log(recentContainerM, recentContainerMM);
        const exampleChilds = [recentContainerMM.childNodes[0], recentContainerM.childNodes[0]];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(recentContainerMM);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].clear(recentContainerM);
        let i = -1;
        let j = -1;
        let child;
        const prefixarr = ['MM_', 'M_'];
        const containerArr = [recentContainerMM, recentContainerM];
        const saveList = [mmSaveList, mSaveList];
        // U.pw(true, recentContainerM, recentContainerMM, exampleChilds, saveList);
        while (++j < prefixarr.length) {
            i = -1;
            while (++i < saveList[j].length) {
                child = _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].cloneHtml(exampleChilds[j]);
                $(child).find('.recentsave')[0].innerText = saveList[j][i];
                // child.dataset.value = prefixarr[j] + mSaveList[i];
                containerArr[j].appendChild(child);
            }
        }
        $metamodelHtml.find('.recentsave').off('click.load').on('click.load', (e) => {
            this.loadRecent(e.currentTarget.innerText, true);
        });
        $modelHtml.find('.recentsave').off('click.load').on('click.load', (e) => {
            this.loadRecent(e.currentTarget.innerText, false);
        });
    }
    loadRecent(name, isMetaModel) {
        const prefix = isMetaModel ? 'MM' : 'M';
        const tmp = localStorage.getItem(prefix + '_' + name);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].pe(!tmp || tmp === '' || tmp === 'null' || tmp === 'undefined', 'uncorrect savename: |' + prefix + '_' + name + '|');
        localStorage.setItem('LastOpened' + prefix, tmp);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].refreshPage();
    }
    addEventListeners() {
        const $t = this.$topbar;
        const $m2 = $t.find('.root.metamodel');
        const $m1 = $t.find('.root.model');
        TopBar.$checkboxesTheme = $t.find('input.themename');
        $t.find('.TypeMapping').off('click.btn').on('click.btn', (e) => { TopBar.topbar.showTypeMap(); });
        $t.find('.changelogbutton').off('click.btn').on('click.btn', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["ChangelogRoot"].show(); });
        TopBar.$checkboxesTheme.off('change.btn').on('change.btn', (e) => {
            const checkboxTriggered = e.currentTarget;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["WebsiteTheme"].setTheme(checkboxTriggered);
        });
        $t.find('.colorschemeopener').on('click', (e) => { _app_color_scheme_color_scheme_component__WEBPACK_IMPORTED_MODULE_4__["ColorSchemeComponent"].show(); });
        $m2.find('.save').off('click.btn').on('click.btn', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm.save(false, true); });
        $m1.find('.save').off('click.btn').on('click.btn', (e) => { _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.save(false, true); });
        // download
        $m2.find('.model .download_JSON_String').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_String(e, 'mm'); });
        $m2.find('.model .download_JSON').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_File(e, 'mm'); });
        $m2.find('.model .download_XMI').off('click.btn').on('click.btn', (e) => { TopBar.download_XMI_File(e, 'mm'); });
        $m1.find('.model .download_JSON_String').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_String(e, 'm'); });
        $m1.find('.model .download_JSON').off('click.btn').on('click.btn', (e) => { TopBar.download_JSON_File(e, 'm'); });
        $m1.find('.model .download_XMI').off('click.btn').on('click.btn', (e) => { TopBar.download_XMI_File(e, 'm'); });
        //// load
        $m2.find('.model .loadEmpty').off('click.btn').on('click.btn', (e) => { TopBar.load_empty(e, 'mm'); });
        $m2.find('.model .loadFile').off('click.btn').on('click.btn', (e) => { TopBar.load_XMI_File(e, 'mm'); });
        $m2.find('.model .loadTxt').off('click.btn').on('click.btn', (e) => { TopBar.load_JSON_Text(e, 'mm'); });
        $m1.find('.model .loadEmpty').off('click.btn').on('click.btn', (e) => { TopBar.load_empty(e, 'm'); });
        $m1.find('.model .loadFile').off('click.btn').on('click.btn', (e) => { TopBar.load_XMI_File(e, 'm'); });
        $m1.find('.model .loadTxt').off('click.btn').on('click.btn', (e) => { TopBar.load_JSON_Text(e, 'm'); });
        window['t'] = {
            $: this.$topbar,
            $t: $t,
            $m1: $m1,
            $m2: $m2,
        };
        $m1.find('.vertex .loadTxt').off('click.btn').on('click.btn', (e) => { });
        $m1.find('.viewpoints .loadTxt').off('click.btn').on('click.btn', (e) => { TopBar.load_JSON_Text(e, 'm', (val) => { TopBar.loadVP(val, 'm'); }); });
        $m2.find('.viewpoints .loadTxt').off('click.btn').on('click.btn', (e) => { TopBar.load_JSON_Text(e, 'm', (val) => { TopBar.loadVP(val, 'mm'); }); });
    }
    static loadVP(val, prefix) {
        window['discardSave'](); // stop autosave;
        const model = prefix === 'm' ? _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m : _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.mm;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["Status"].status.m.save(false);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["LocalStorage"].setLastOpened(prefix === 'm' ? 1 : 2, null, val, null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_2__["U"].refreshPage();
    }
}
TopBar.topbar = null;


/***/ }),

/***/ "./src/mClass/EEnum.ts":
/*!*****************************!*\
  !*** ./src/mClass/EEnum.ts ***!
  \*****************************/
/*! exports provided: EEnum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEnum", function() { return EEnum; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class EEnum extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"] {
    constructor(parent, json) {
        super(parent, null);
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.enums, this);
        }
        this.parse(json);
    }
    getChildrenLiteral(index) { return this.childrens[index]; }
    getChildrenLiteralSelector(index) { return this.getChildrenLiteral(index).getSelector(); }
    fullname() { return this.parent.name + '.' + this.name; }
    addLiteral(literal = null) {
        const attr = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"](this, null);
        if (literal)
            attr.literal = literal;
        if (attr.ordinal === Number.NEGATIVE_INFINITY)
            this.autofixEnumValues();
        this.refreshGUI();
        return attr;
    }
    parse(json, destructive) {
        /*
      <eClassifiers xsi:type="ecore:EEnum" name="EnumNamecustom" instanceTypeName="instanceTypeName"
          serializable="false">
        <eLiterals name="child2name" value="3" literal="child2literal"/>
        <eLiterals name="NameStr" literal="LiteralStr"/>
      </eClassifiers>*/
        // literal, name sono entrambi unici, ma è possibile che literal1.name === literal2.literal; .name è obbligatorio, .literal può essere null/empty
        this.childrens = [];
        this.instanceTypeName = '';
        let i;
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].namee, 'Enum_1'), false);
        for (let key in json) {
            const value = json[key];
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Enum.parse() unexpected key:', key, 'in json:', json);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].xsitype:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].namee: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].eLiterals: break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].serializable:
                    this.serializable = value === 'true';
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].instanceTypeName:
                    this.instanceTypeName = value + '';
                    break;
            }
        }
        const literals = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        for (i = 0; i < literals.length; i++) {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"](this, literals[i]);
        }
        if (!this.childrens.length)
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"](this, null);
        this.autofixEnumValues();
    }
    duplicate(nameAppend, newParent) {
        return undefined;
    }
    fieldChanged(e) {
        const html = e.currentTarget;
        if (html.classList.contains('AddFieldSelect'))
            return;
        switch (html.tagName.toLowerCase()) {
            case 'select':
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                break;
            case 'textarea':
            case 'input':
                const input = html;
                input.value = this.setName(input.value);
                break;
        }
    }
    generateModel(loopDetectionObj = null) {
        const arr = [];
        const model = {};
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].xsitype] = 'ecore:EEnum';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].namee] = this.name;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].serializable] = this.serializable ? "true" : "false";
        if (this.instanceTypeName)
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].instanceTypeName] = this.instanceTypeName;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreEnum"].eLiterals] = arr;
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            arr.push(this.childrens[i].generateModel(loopDetectionObj));
        }
        return model;
    }
    /*must remain private*/ autofixEnumValues() {
        // valori duplicati sono ammessi se esplicitamente inseriti, ma se il campo è vuoto io cerco di generarli
        let i;
        let valuesfound = {};
        let firsthole = 0;
        for (i = 0; i < this.childrens.length; i++) {
            const lit = this.childrens[i];
            if (lit.ordinal !== Number.NEGATIVE_INFINITY) {
                valuesfound[lit.ordinal] = true;
                if (lit.ordinal === firsthole) {
                    while (valuesfound[++firsthole]) {
                        ;
                    }
                } // update first hole.
                continue;
            }
            lit.ordinal = firsthole;
            if (!lit.name)
                lit.name = this.name + '_' + lit.ordinal;
        }
    }
    isChildNameTaken(s) {
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            if (s === this.childrens[i].literal) {
                return true;
            }
        }
        return false;
    }
    // indirectly called by setLiteral() -> setName(); using this['isChildLiteralTaken']();
    isChildLiteralTaken(s) { return this.isChildNameTaken(s); }
    delete(refreshgui = true, fromParent = false) {
        const oldparent = this.parent;
        super.delete(false, fromParent);
        if (oldparent)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.enums, this);
        // todo: che fare con gli attributes che hanno questo enum come tipo? per ora cambio in stringa.
        let i = 0;
        for (i = 0; i < _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all.length; i++) {
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].enumType !== this)
                continue;
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].changeType(null, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EType"].get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString), null, null);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, true, false);
    }
    getDefaultValueStr() { return this.childrens[0].name; }
    getAllowedValuesStr() {
        const arr = [];
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            arr.push(this.childrens[i].name);
        }
        return arr;
    }
    getAllowedValuesInt() {
        const arr = [];
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            arr.push(this.childrens[i].ordinal);
        }
        return arr;
    }
}


/***/ }),

/***/ "./src/mClass/IClassifier.ts":
/*!***********************************!*\
  !*** ./src/mClass/IClassifier.ts ***!
  \***********************************/
/*! exports provided: IClassifier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IClassifier", function() { return IClassifier; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class IClassifier extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor() {
        super(...arguments);
        this.vertex = null;
    }
    static defaultSidebarHtml() {
        return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHtml('<div class="sidebarNode class"><p class="sidebarNodeName">$##name$</p></div>');
    }
    generateVertex() {
        if (this.vertex)
            return;
        const lastView = this.getLastViewWith('vertexSize');
        const size = lastView ? lastView.vertexSize : null;
        const v = this.vertex = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IVertex"](this, size);
        return v;
    }
    getSidebarHtml() {
        if (this.sidebarHtml) {
            return this.sidebarHtml;
        }
        return IClassifier.defaultSidebarHtml();
    }
    setName(value, refreshGUI = false, warnDuplicateFix = true) {
        super.setName(value, refreshGUI, warnDuplicateFix);
        if (refreshGUI)
            this.refreshInstancesGUI();
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic && this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"]) {
            const type = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].getClassType(this);
            if (type)
                type.printablename = this.name;
        }
        // for (i = 0; model && i < model.instances.length; i++) { model.instances[i].sidebar.fullnameChanged(oldName, this.name); }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, true, true);
        return this.name;
    }
    getVertex(canMakeIt = true) {
        const displayAsEdge = this.shouldBeDisplayedAsEdge();
        // U.pw(displayAsEdge, 'getvertex called on a class that should not have a vertex.', this);
        if (canMakeIt && !displayAsEdge && this.vertex === null && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            this.generateVertex();
        }
        return this.vertex;
    }
    getEcoreTypeName() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"] || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"])
            return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].classTypePrefix + this.name;
        return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].classTypePrefix + this.parent.name;
    }
    delete(refreshgui = true, fromParent = false) {
        if (!this.shouldBeDisplayedAsEdge()) {
            this.getVertex().remove();
        }
        super.delete(false, fromParent);
    }
}


/***/ }),

/***/ "./src/mClass/MClass.ts":
/*!******************************!*\
  !*** ./src/mClass/MClass.ts ***!
  \******************************/
/*! exports provided: MClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MClass", function() { return MClass; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");


class MClass extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] {
    // external pointers to this class.
    // id: number;
    // instances: ModelPiece[];
    // metaParent: M2Class;
    // parent: MPackage;
    // childrens: ModelPiece[];
    /*attributes: MAttribute[];
    references: MReference[];
    referencesIN: MReference[];
  */
    constructor(pkg, json, metaVersion, autodetection) {
        super(pkg, metaVersion);
        if (!pkg && !json && !metaVersion) {
            return;
        } // empty constructor for .duplicate();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!metaVersion, 'null metaparent?');
        this.parse(json, true);
        if (autodetection) {
            // let possibleClasses: M2Class[] = newMetaParent.getAllSubClasses(true);
            if (this.metaParent)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.metaParent.instances, this);
            let scores = this.metaParent.getTypeConversionScores(false, true);
        }
        this.changeMetaParent(metaVersion, false);
    }
    getAttribute(name, caseSensitive = false) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        let attributes = [...this.getAllAttributes()];
        for (i = 0; i < attributes.length; i++) {
            const s = attributes[i].metaParent.name;
            if ((caseSensitive ? s : s.toLowerCase()) === name) {
                return attributes[i];
            }
        }
        return null;
    }
    getReference(name, caseSensitive = false) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        let references = [...this.getAllReferences()];
        for (i = 0; i < references.length; i++) {
            const s1 = references[i].metaParent.name;
            console.log('find IReference[' + s1 + '] =?= ' + name + ' ? ' + (caseSensitive ? s1 : s1 && s1.toLowerCase()) === name);
            if ((caseSensitive ? s1 : s1 && s1.toLowerCase()) === name) {
                return references[i];
            }
        }
        return null;
    }
    doUnsetExtends(superclass) {
        if (!superclass)
            return;
        let i;
        let j;
        let inheritablefeatures = {};
        // prendo la lista di tutte le m2-feature che dovrei istanziare, direttamente o per eredità.
        for (i = -1; i < this.metaParent.extends.length; i++) {
            let m2class = i === -1 ? this.metaParent : this.metaParent.extends[i];
            if (m2class == superclass)
                continue;
            for (j = 0; j < m2class.childrens.length; j++) {
                let m2feature = m2class.childrens[j];
                inheritablefeatures[m2feature.id] = m2feature;
            }
        }
        // cancello le m2-feature presenti ma fuori dalla lista di quelle che dovrebbero esserci.
        let childrens = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].shallowArrayCopy(this.childrens);
        for (i = 0; i < childrens.length; i++) {
            const feature = childrens[i];
            if (inheritablefeatures[feature.metaParent.id])
                continue;
            // if (superclass.childrens.indexOf(feature.metaParent) < 0) continue; OLD System was wrong:
            // se un attributo lo estendo da due classi diverse, il delete di un extend non deve cancellarlo.
            // es: B1 extends A; B2 extends A; C extends B1, B2; C eredita 2 volte le cose di A, una le cose di B1 e una le cose di B2,
            // se tolgo l'extend a B1 devo tenere quelle di A.
            feature.delete();
        }
        this.refreshGUI_Alone();
    }
    //todo: fai getByName con prefisso della classe inherited per console. tipo:  ClassC.ClassB1:samenamefeature vs ClassC.ClassB2:samenamefeature
    changeMetaParent(newMetaParent, allowFeatureRemoval = false, refreshGui = false) {
        if (!newMetaParent)
            return;
        if (this.metaParent)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.metaParent.instances, this);
        this.metaParent = newMetaParent;
        this.metaParent.instances.push(this);
        const newattributes = [...newMetaParent.getAllAttributes()].reverse(); // need shallow copy
        const newreferences = [...newMetaParent.getAllReferences()].reverse();
        let i;
        // remove features not present in new type
        if (allowFeatureRemoval) {
            let thisAttrs = [...this.attributes];
            let thisRefs = [...this.references];
            for (i = 0; i < thisAttrs.length; i++) {
                const elem = thisAttrs[i];
                if (newattributes.indexOf(elem.metaParent) < 0) {
                    refreshGui = true;
                    elem.delete(false);
                }
            }
            for (i = 0; i < thisRefs.length; i++) {
                const elem = thisRefs[i];
                if (newreferences.indexOf(elem.metaParent) < 0) {
                    refreshGui = true;
                    elem.delete(false);
                }
            }
        }
        // exclude the ones already instantiated (avoid duplicates)
        for (i = 0; i < this.attributes.length; i++) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(newattributes, this.attributes[i].metaParent);
        }
        for (i = 0; i < this.references.length; i++) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(newreferences, this.references[i].metaParent);
        }
        // create the missing ones.
        for (i = 0; i < newattributes.length; i++) {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"](this, null, newattributes[i]);
        }
        for (i = 0; i < newreferences.length; i++) {
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"](this, null, newreferences[i]);
        }
        if (refreshGui)
            this.refreshGUI_Alone();
    }
    // getAllChildrens(): MFeature[] { return (this.childrens); }
    getAllChildrens(includeOperations = true, includeAnnotations = true, includeAttributes = true, includeReferences = true, includeShadowed = false /*null = both shadow and unshadow, true = onlyshadowed*/) {
        const arr = [];
        let j;
        const extChildrens = [...this.childrens, ...this.metaParent.annotations, ...this.metaParent.operations];
        for (j = 0; j < extChildrens.length; j++) {
            const child = extChildrens[j];
            // console.log('getAllChildrens', child.metaParent, this.metaParent, child, this);
            if (includeAttributes && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
                arr.push(child);
                continue;
            }
            if (includeReferences && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
                arr.push(child);
                continue;
            }
            if (includeOperations && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
                arr.push(child);
                continue;
            }
            if (includeAnnotations && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EAnnotation"]) {
                arr.push(child);
                continue;
            }
        }
        return arr;
    }
    getAllAttributes() { return new Set(this.attributes); }
    getAllReferences() { return new Set(this.references); }
    /*getDisplayedChildrens(): Set<EOperation | MFeature> {
      const arr: Set<EOperation|MFeature> = new Set<EOperation|MFeature>(this.getAllChildrens());
      U.SetMerge(true, arr, this.getAllOperations());
      return arr; }
    getDisplayedOperations(): Set<EOperation> { return this.getAllOperations(); }
    getDisplayedAttributes(): Set<MAttribute> { return this.getAllAttributes(); }
    getDisplayedReferences(): Set<MReference> { return this.getAllReferences(); }*/
    /*getBasicChildrens(): Set<MFeature> {
      const ret: Set<MFeature> = new Set();
      let i: number;
      for (i = 0; i < this.childrens.length; i++) { if (this.childrens[i].metaParent.parent === this.metaParent) ret.add(this.childrens[i]); }
      return ret; }*/
    getBasicAttributes() {
        const ret = new Set();
        let i;
        for (i = 0; i < this.attributes.length; i++) {
            if (this.attributes[i].metaParent.parent === this.metaParent)
                ret.add(this.attributes[i]);
        }
        return ret;
    }
    getBasicReferences() {
        const ret = new Set();
        let i;
        for (i = 0; i < this.references.length; i++) {
            if (this.references[i].metaParent.parent === this.metaParent)
                ret.add(this.references[i]);
        }
        return ret;
    }
    getBasicOperations() { return this.metaParent.getBasicOperations(); }
    getBasicAnnotations() { return this.metaParent.getBasicAnnotations(); }
    endingName(valueMaxLength = 10) {
        if (this.attributes.length > 0) {
            return this.attributes[0].endingName(valueMaxLength);
        }
        if (this.references.length > 0) {
            return this.references[0].endingName(valueMaxLength);
        }
        return '';
    }
    getModelRoot(acceptNull = false) { return super.getModelRoot(acceptNull); }
    isRoot() { return this === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.classRoot; }
    setRoot(value) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!value, 'should only be used to set root. to delete a root choose another one and call setRoot on it.');
        this.getModelRoot().classRoot = this;
    }
    conformability(meta, outObj) {
        throw new Error('M.conformability%() todo');
    }
    duplicate(nameAppend = null, newParent = null) {
        const c = new MClass(null, null, null, false);
        c.copy(this);
        c.refreshGUI_Alone();
        return c;
    }
    // linkToMetaParent(meta: M2Class): void { return super.linkToMetaParent(meta); }
    generateModel(loopDetectionObj = null, root = false) {
        /*
           { "-name": "tizio", "attrib2": value2, ...}
        OR:
           {
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },
              { "-name": "asd" }
            ]
          }
        */
        if (!loopDetectionObj)
            loopDetectionObj = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isObject(loopDetectionObj), "loopdetection not object param:", loopDetectionObj, loopDetectionObj || {});
        const inlineMarker = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker;
        const json = {};
        if (root) {
            json[inlineMarker + 'xmlns:xmi'] = 'http://www.omg.org/XMI';
            json[inlineMarker + 'xmlns:' + this.getModelRoot().namespace()] = this.getModelRoot().uri();
            json[inlineMarker + 'xmi:version'] = '2.0';
        }
        let outi;
        let i;
        const arr = [this.attributes, this.references];
        for (outi = 0; outi < arr.length; outi++) {
            for (i = 0; i < arr[outi].length; i++) {
                const child = arr[outi][i];
                if (child.isShadowed(this))
                    continue;
                const value = (child).generateModel(loopDetectionObj);
                // some error here, il value = ELIteral viene assegnato alla key .nome
                if (value === '' || value === null || value === undefined || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isEmptyObject(value)) {
                    continue;
                }
                const key = (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isPrimitive(value) ? inlineMarker : '') + child.metaParent.name;
                // U.pe(json[key], 'overriding value inside MClass.generateModel()', ', key:', key, ', newVal:', value, ', json:', json, ', MClass:', this, ', feature:', child);
                /*let wind = window as any;
                if (!wind.json) wind.json = {};
                if (!wind.json[key]) wind.json[key] = [];
                wind.json[key].push({value: value, m1id: child.id, m2id: child.metaParent.id, index: i + '/' + arr[outi].length, m2name: child.metaParent.name, setter: child});*/
                json[key] = value;
            }
        }
        return json;
    }
    parse_asgeneric_broke(json, destructive = true) {
        json = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneObj(json);
        if (destructive) {
            this.attributes = [];
            this.references = [];
            this.childrens = [];
            this.referencesIN = [];
        }
        this.metaParent = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject;
        // this.changeMetaParent(this.metaParent, true, false); // fill childrens, attributes, references con istanze delle m2feature ereditate.
        const inlineMarker = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker;
        let allKeys = Object.keys(json);
        const xmiVersion = json[inlineMarker + 'xmi:version'];
        delete json[inlineMarker + 'xmi:version'];
        if (xmiVersion) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(+xmiVersion !== 2, "This xmi version (" + xmiVersion + ") is not supported");
            this.setRoot(true);
        }
        for (let key of allKeys) {
            if (!json.hasOwnProperty(key)) {
                continue;
            }
            let keyParts = key.split(':');
            const val = json[key];
            switch (keyParts[0]) {
                default:
                    if (typeof val === 'string') {
                        new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"](this, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericAttribute);
                    }
                    else {
                        new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"](this, null, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericReference);
                    }
                    // U.pe(true, 'unexpected entry while parsing M1Class:' + keyParts[0], keyParts);
                    break;
                case inlineMarker + 'xmlns':
                    switch (keyParts[1]) {
                        case 'xmi': break; //"-xmlns:xmi": "http://www.omg.org/XMI",
                        default: // "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
                            const value = json[key];
                            // todo: (set / handle) the (package / namespace)
                            break;
                    }
            }
        }
    }
    parse(json, destructive = true) {
        if (destructive) {
            this.attributes = [];
            this.references = [];
            this.childrens = [];
            this.referencesIN = [];
        }
        this.changeMetaParent(this.metaParent, true, false); // fill childrens, attributes, references con istanze delle m2feature ereditate.
        /*{                                                           <--- classRoot
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },          <-- class[0]
              { "-name": "asd" }             <-- class[1]
            ]
          }*/
        // todo big bug: se un m1-object ha una reference a Mammifero{ età }, ma io gli assegno Balena{ età, peso }, si aspetta di trovare solo {età}
        // ma potrei avergli assegnato una balena con anche il peso, e lui in questo parse assume che sia solo un mammifero senza peso.
        // l'errore è sin da prima del parse, è quando gli passo il metaParent proprio
        const inlineMarker = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker;
        for (let key in json) {
            if (!json.hasOwnProperty(key)) {
                continue;
            }
            const value = json[key];
            switch (key) {
                case inlineMarker + 'xmlns:xmi':
                // case inlineMarker + 'xmlns:' + this.getModelRoot().namespace():
                case inlineMarker + 'xmi:version':
                    this.setRoot(true);
                    break;
                default:
                    // todo: usa il ns del modello per caricare il metamodello con quel namespace se quello attuale non è conforme?
                    if (key.indexOf(inlineMarker) === 0) {
                        key = key.substr(inlineMarker.length);
                    }
                    if (key.indexOf('xmlns:') === 0) {
                        key = key.substr('xmlns:'.length);
                        this.getModelRoot().namespace(key);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(false, 'setns?', key, this, this.metaParent);
                        continue;
                    }
                    const metaAttr = this.metaParent.getAttribute(key);
                    const metaRef = this.metaParent.getReference(key);
                    if (metaAttr) {
                        const cindex = this.getChildrenIndex_ByMetaParent(metaAttr);
                        const aindex = this.getAttributeIndex_ByMetaParent(metaAttr);
                        /*const newA: MAttribute = new MAttribute(this, value, metaAttr);
                        this.childrens[cindex] = this.attributes[aindex] = newA;*/
                        this.attributes[aindex].parse(value, true);
                    }
                    else if (metaRef) {
                        const cindex = this.getChildrenIndex_ByMetaParent(metaRef);
                        const rindex = this.getReferenceIndex_ByMetaParent(metaRef);
                        // const newR: MReference = new MReference(this, value, metaRef);
                        // this.childrens[cindex] = this.references[rindex] = newR;
                        let j;
                        let edges = this.references[rindex].getEdges();
                        for (j = 0; j < edges.length; j++) { }
                        this.references[rindex].parse(value, true);
                    }
                    else {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'm1 model attribute-or-reference type not found. class:', this, ', json:', json, 'key/name:', key, ', Iclass:', this.metaParent);
                    }
                    break;
            }
        }
    }
    modify_Old(json, destructive = true) {
        /*{                                                                                           <-- :classroot
            "-xmlns:xmi": "http://www.omg.org/XMI",
            "-xmlns:org.eclipse.example.bowling": "https://org/eclipse/example/bowling",
            "-xmi:version": "2.0",
            "Players": [
              { "-name": "tizio" },          <-- class[0]
              { "-name": "asd" }             <-- class[1]
            ]
          }*/
        if (destructive) {
            this.childrens = [];
            this.references = [];
            this.attributes = [];
            this.referencesIN = [];
        }
        const inlineMarker = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker;
        for (let key in json) {
            if (!json.hasOwnProperty(key)) {
                continue;
            }
            const value = json[key];
            switch (key) {
                case inlineMarker + 'xmlns:xmi':
                // case inlineMarker + 'xmlns:' + this.getModelRoot().namespace():
                case inlineMarker + 'xmi:version':
                    this.setRoot(true);
                    break;
                default:
                    // todo: usa il ns del modello per caricare il metamodello con quel namespace se quello attuale non è conforme?
                    if (key.indexOf(inlineMarker) === 0) {
                        key = key.substr(inlineMarker.length);
                    }
                    if (key.indexOf('xmlns:') === 0) {
                        key = key.substr('xmlns:'.length);
                        this.getModelRoot().namespace(key);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(false, 'setns?', key, this, this.metaParent);
                        continue;
                    }
                    const metaAttr = this.metaParent.getAttribute(key);
                    const metaRef = this.metaParent.getReference(key);
                    let newA;
                    let newR;
                    if (metaAttr) {
                        newA = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"](this, value, metaAttr);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newA);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.attributes, newA);
                    }
                    else if (metaRef) {
                        newR = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"](this, value, metaRef);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newR);
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.references, newR);
                    }
                    else {
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'model attribute-or-reference type not found. class:', this, ', json:', json, 'key/name:', key, ', Iclass:', this.metaParent);
                    }
                    break;
            }
        }
    }
    getChildrenIndex_ByMetaParent(meta) {
        const arr = this.getAllChildrens(true, true, true, true, false);
        return MClass.getArrayIndex_ByMetaParentID(meta.id, arr);
    }
    getAttributeIndex_ByMetaParent(meta) {
        const arr = [...this.getAllAttributes()];
        return MClass.getArrayIndex_ByMetaParentID(meta.id, arr);
    }
    getReferenceIndex_ByMetaParent(meta) {
        const arr = [...this.getAllReferences()];
        return MClass.getArrayIndex_ByMetaParentID(meta.id, arr);
    }
    static getArrayIndex_ByMetaParentID(id, array) {
        let i = -1;
        while (++i < array.length) {
            if (id === array[i].metaParent.id) {
                return i;
            }
        }
        return -1;
    }
    delete(refreshgui = true, fromParent = false) {
        super.delete(false, fromParent);
        // NB: gli m1-link a questo oggetto sono già stati rimossi da setType in m2 o da delete vertex in IClass
    }
    convertTo(classe) {
        console.log('m1-convertTo()', { thiss: this, currentMeta: [this.metaParent.toString(), this.metaParent], nextMeta: [classe.toString(), classe] });
        this.changeMetaParent(classe, true, true);
    }
    /*
    canConvertTo(classe: M2Class): boolean{
      if (!classe) return true;
      if (classe.getInterface() || classe.getAbstract()) return false;
      return this.metaParent.isExtending(classe) || classe.isExtending(this.metaParent);
    }*/
    getContainer() {
        for (let ref of this.referencesIN)
            if (ref.isContainment())
                return ref;
        return null;
    }
    getM1Path(includeSelf = false) {
        const path = [];
        if (includeSelf)
            path.push(this);
        let currentNode = this;
        let maxDepth = 1000;
        while (true) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!--maxDepth, 'cannot save m1: loop of containment');
            if (currentNode.isRoot()) {
                return path.reverse();
            }
            const container = currentNode.getContainer();
            if (!container)
                return null;
            currentNode = container.parent;
            path.push(container);
            path.push(currentNode);
        }
    }
    getM1PathStr(canWarn = false) {
        const path = this.getM1Path(true);
        let ret = '/';
        // let lastClass: MClass = this.getModelRoot().getClassRoot();
        let lastRef = null;
        let i = 0;
        if (!path) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(canWarn, 'found disconnected data in M1', { thiss: this, path });
            return null;
        }
        for (let elem of path) {
            // console.log('following m1 path:', {path, i, elem, lastRef, ret});
            if (elem instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
                // alternare classi e reference, mai 2 classi o 2 reference consecutive, si parte da ref (root-class è sottinteso) e si termina con class.
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(i++ % 2 === 0, 'dev error r: m1 path should follow the schema [Class, Reference]*', path, this);
                ret += '/@' + elem.metaParent.name;
                lastRef = elem;
            }
            else if (elem instanceof MClass) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(i++ % 2 === 1, 'dev error c: m1 path should follow the schema [Class, Reference]*', path, this);
                ret += !lastRef ? '' : '.' + lastRef.mtarget.indexOf(elem);
            }
        }
        return ret;
    }
    static getByM1Path(root, path) {
        const refstrarr = path.split('/@');
        let currentClass = root;
        let currentRef = null;
        for (let refstr of refstrarr) {
            if (refstr === '/')
                continue;
            const lastindex = refstr.lastIndexOf('.');
            const refname = refstr.substr(0, lastindex);
            const targetindex = refstr.substr(lastindex + 1);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(targetindex), 'm1 parse error: index is not a number', { refstr, refstrarr, path, root });
            currentRef = currentClass.getReference(refname);
            currentClass = currentRef.mtarget[+targetindex];
        }
        return currentClass;
    }
    isConnectedToRoot() {
        let currentClass = this;
        while (!currentClass.isRoot()) {
            const containerRef = currentClass.getContainer();
            if (!containerRef)
                return false;
            currentClass = containerRef.parent;
        }
        return true;
    }
    isInvalidRoot() { return !this.isRoot() && !this.getContainer(); }
    getContainerChain() {
        const ret = [];
        let currentClass = this;
        while (true) {
            const containerRef = currentClass.getContainer();
            if (!containerRef)
                return ret;
            currentClass = containerRef.parent;
            if (ret.indexOf(currentClass) >= 0) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'model have a containment loop');
                return ret;
            }
            ret.push(currentClass);
        }
    }
    isContainedIn(container) { return this.getContainerChain().indexOf(container) >= 0; }
    // todo problema: se ci sono 2 sottoclassi con stessi nomi di feature ma diversi tipi... o addirittura diverso tipo di modelpiece
    // (attribute vs operation) vengono considerati uguali perchè valuta solo i nomi delle feature e non la compatibilità del valore con il tipo
    static findMetaSubClass(json1, targetMM, debug = true) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'findMetaSubclass to use', json1);
        const subclasses = targetMM.getAllSubClasses(true);
        const requiredFeatures = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toDictionary(Object.keys(json1).map(f => f.substr(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.XMLinlineMarker.length).toLowerCase()), false);
        const scores = subclasses.map(c => new MetaClassCompatibility(requiredFeatures, c, targetMM))
            .sort((mc1, mc2) => mc2.matchingScore - mc1.matchingScore);
        const bestScorePareggi = scores.filter(match => match.matchingScore == scores[0].matchingScore)
            .sort((m1, m2) => m1.subclassingDepthLevel - m2.subclassingDepthLevel); // take only best scores
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'findMetaSubclass to use matched:', { match: bestScorePareggi[0].m2Class.name, subclasses, requiredFeatures, scores, scoresn: scores.map(s => s.m2Class.name) });
        return bestScorePareggi[0].m2Class;
    }
}
class MetaClassCompatibility {
    constructor(m1Features, m2Class, rootClass, caseSensitiveness) {
        //todo: per ora solo case insensitive, magari fallo con case sensitiveness opzionale.
        if (undefined === caseSensitiveness)
            caseSensitiveness = MetaClassCompatibility.caseSensitiveness;
        this.allm1Features = m1Features;
        this.m2Class = m2Class;
        this.matching = {};
        this.missing = {};
        this.surplus = {};
        this.matchingScore = 0;
        this.subclassingDepthLevel = rootClass.getSubclassDepthLevel(m2Class);
        // const m2features: Dictionary<string, boolean> = U.toDictionary(m2Class.getAllChildrens().map(c => c.name), false);
        const m2featuresLowercase = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toDictionary(m2Class.getAllChildrens().map(c => c.name.toLowerCase()), false);
        for (let key in this.allm1Features) {
            if (m2featuresLowercase[key]) {
                this.matching[key] = 1;
            }
            else {
                this.missing[key] = 1;
                this.matchingScore += MetaClassCompatibility.missingScore;
            }
        }
        for (let key in m2featuresLowercase) {
            if (this.allm1Features[key]) {
                // this.matching[key] = 1;
            }
            else {
                this.surplus[key] = 1;
                this.matchingScore += MetaClassCompatibility.surplusScore;
            }
        }
    }
}
MetaClassCompatibility.missingScore = -100; // using this m2 will remove features
MetaClassCompatibility.surplusScore = -1; // using this m2 will add features
MetaClassCompatibility.matchingScore = 0;
MetaClassCompatibility.caseSensitiveness = 0.1; // 1 = 100% score penalty, 0 = totally case insensitive.


/***/ }),

/***/ "./src/mClass/classChild/ELiteral.ts":
/*!*******************************************!*\
  !*** ./src/mClass/classChild/ELiteral.ts ***!
  \*******************************************/
/*! exports provided: ELiteral */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ELiteral", function() { return ELiteral; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class ELiteral extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    constructor(parent, json) {
        super(parent, null);
        this.parse(json);
    }
    duplicate(nameAppend, newParent) {
        return undefined; //todo
    }
    isInherited(forClass) { if (this.parent !== forClass)
        return true; }
    generateModel(loopDetectionObj = null) {
        const model = {};
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].value] = this.ordinal;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].literal] = this.literal;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].namee] = this.name;
        return model;
    }
    getClass() { return this.parent; }
    setLiteral(value, refreshGUI = false, warnDuplicateFix = true) {
        if (value === '' || !value) {
            this.literal = '';
            return;
        }
        return this.setName0(value, refreshGUI, warnDuplicateFix, 'literal', true);
    }
    parse(json, destructive = true) {
        this.ordinal = +_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].value, Number.NEGATIVE_INFINITY);
        this.setLiteral(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].literal, ''), false);
        let name = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EcoreLiteral"].namee, this.ordinal === Number.NEGATIVE_INFINITY ? null : this.parent.name + '_' + this.ordinal);
        if (name)
            this.setName(name, false);
        else
            this.name = null;
    }
    delete(refreshgui = true, fromParent = false) {
        let oldParent = this.parent;
        super.delete(false, fromParent);
        // todo: che fare con gli attributes che hanno questo literal come valore?
        let i;
        for (i = 0; i < _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all.length; i++) {
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].enumType !== this.parent)
                continue;
            if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"])
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all[i].owner.valuesAutofix();
        }
        if (refreshgui && oldParent)
            oldParent.refreshGUI();
    }
    fieldChanged(e) {
        const html = e.currentTarget;
        switch (html.tagName.toLowerCase()) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                break;
            case 'textarea':
            case 'input':
                const input = html;
                if (input.classList.contains('name')) {
                    this.setName(input.value);
                }
                else if (input.classList.contains('literal')) {
                    this.setLiteral(input.value);
                }
                else if (input.classList.contains('value')) {
                    this.ordinal = isNaN(+input.value) ? this.ordinal : +input.value;
                }
                else
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'ELiteral input fields must contain one of the following classes: name, literal, value');
                break;
            case 'select':
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Unexpected non-disabled select field in a Vertex.ELiteral.');
                break;
        }
        super.fieldChanged(e, true);
    }
    generateModelM1(loopDetectionObj = null) { return this.name; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/Attributes/MAttribute.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/Attributes/MAttribute.ts ***!
  \*****************************************************************/
/*! exports provided: MAttribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAttribute", function() { return MAttribute; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Type */ "./src/mClass/classChild/Type.ts");



class MAttribute extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"] {
    static typeChange(arr, newType) {
        let i = -1;
        while (++i < arr.length) {
            if (Array.isArray(arr[i])) {
                MAttribute.typeChange(arr[i], newType);
                continue;
            }
            let newVal = arr[i];
            switch (newType.short) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected type: ' + newType.short);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate:
                    let valStr = newVal + '';
                    const weekRegExp = valStr.match(/^([0-9]{4})\-W([0-9]{2})$/);
                    if (weekRegExp) {
                        let year = weekRegExp[1];
                        let weeknum = weekRegExp[2];
                        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(year) || !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumerizable(weeknum), 'invalid week format date:', valStr);
                        newVal = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromWeekNumber(+year, +weeknum);
                    }
                    else
                        newVal = new Date(valStr);
                    if (isNaN(newVal) && valStr.indexOf(':') > 0)
                        newVal = new Date('1970-01-01 ' + valStr); // se è time-only fallisce il parsing.
                    if (isNaN(newVal))
                        newVal = new Date();
                    newVal = newVal.toISOString(); // iso should be supported by ecore. // .toLocaleString(U.getLocale());
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble:
                    newVal = parseFloat('' + newVal);
                    if (newVal === null || newVal === undefined) {
                        newVal = newType.defaultValue;
                    }
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean:
                    newVal = !!newVal;
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar:
                    newVal = (newVal + '')[0];
                    if (newVal === undefined || newVal === null) {
                        newVal = newType.defaultValue;
                    }
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString:
                    newVal = (newVal === null || newVal === undefined ? null : '' + newVal);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong:
                    let tentativo = parseInt('' + newVal, 10);
                    tentativo = !isNaN(+tentativo) ? (+tentativo) : newType.defaultValue;
                    tentativo = Math.min(newType.maxValue, Math.max(newType.minValue, tentativo));
                    newVal = tentativo;
                    break;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(newVal === null || newVal === undefined, 'failed to fix value:', arr, newType);
            arr[i] = newVal;
        }
    }
    constructor(parent, json, meta) {
        super(parent, meta);
        this.parse(json, true);
    }
    test() {
        // var topp={x:'$##@WallTopX.values.0$',y:0};var bot={x:'$##@WallBotX.values.0$',y:'$##@WallHeight.values.0$'};if(bot.y<=topp.y){return}e.B9=90+DEGREE(Math.atan((topp.x-bot.x)/(topp.y-bot.y)));
    }
    getModelRoot(acceptNull = false) { return super.getModelRoot(acceptNull); }
    parse(json, destructive) {
        // if (!json) { json = }
        this.setValues(json); /*
        if (!this.validate()) {
          this.setValues(null);
          U.pw(true, 'marked attribute (' + this.metaParent.name + ') with type ', this.getType(), 'values:', this.values, 'this:', this);
          this.mark(true, 'errorValue');
        } else { this.mark(false, 'errorValue'); }*/
        // this.refreshGUI();
        /*
            this.views = [];
            let i: number;
            for(i = 0; i < this.parent.views.length; i++) {
              const pv: ClassView = this.parent.views[i];
              const v = new AttributeView(pv);
              this.views.push(v);
              pv.attributeViews.push(v); }*/
    }
    endingName(valueMaxLength = 10) {
        if (this.values && this.values.length > 0) {
            return (this.values[0] + '').substr(0, valueMaxLength);
        }
        return '';
    }
    getType() { return (this.metaParent ? this.metaParent.getType() : null); }
    getInfo(toLower = false) {
        const info = super.getInfo();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'values', this.values);
        return info;
    }
    /*
      conformability(meta: IAttribute, debug: boolean = true): number {
        let conformability = 0;
        // todo: questo check è totalmente sbagliato, this.getType non può riuscire senza un metaParent assegnato
        conformability += 0.5 * StringSimilarity.compareTwoStrings(this.getType().short, meta.getType().primitiveType.short);
        conformability += 0.5 * StringSimilarity.compareTwoStrings(this.name, meta.name);
        U.pif(debug, 'ATTRIBUTE.comform(', this.name, {0: this}, ', ', meta.name, {0: meta}, ') = ', conformability);
        return conformability; }*/
    duplicate(nameAppend = null, newParent = null) {
        const ret = new MAttribute(newParent, null, this.metaParent);
        ret.copy(this, nameAppend, newParent);
        return ret;
    }
    copy(other, nameAppend = '_Copy', newParent = null) {
        super.copy(other, nameAppend, newParent);
        this.setValueStr(other.getValueStr());
    }
    generateModel(loopDetectionObj = null) {
        if (this.values.length === 0) {
            return null;
        }
        let values = this.values;
        if (this.values[0] instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
            values = [];
            let i;
            for (i = 0; i < this.values.length; i++) {
                const v = this.values[i];
                if (v instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ELiteral"]) {
                    values.push(v.generateModelM1(loopDetectionObj));
                }
            }
        }
        if (values.length === 1) {
            return values[0];
        }
        return values;
    }
    validate() {
        let i;
        const primitive = this.getType().primitiveType;
        const enumtype = this.getType().enumType;
        if (enumtype) {
            const admittedValues = enumtype.getAllowedValuesStr();
            for (i = 0; i < this.values.length; i++) {
                if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(admittedValues, this.values[i])) {
                    return false;
                }
            }
            return true;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!primitive, 'found type in Mattribute that is neither primitive nor enumerative', this);
        // console.log('U.isIntegerArray(values:', this.values, ', minvalue:', primitive.minValue, ' maxval:', primitive.maxValue);
        switch (primitive.long) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected mattrib type:', this.getType());
                return false;
            // case AttribETypes.void: ...
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDate:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'eDAte: todo');
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EBoolean: return true;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EChar: return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isString(this.values) || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isCharArray(this.values);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString: return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isStringArray(this.values);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EFloat:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDouble:
                for (i = 0; i < this.values.length; i++) {
                    this.values[i] = +this.values[i];
                }
                return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumberArray(this.values, primitive.minValue, primitive.maxValue);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EByte:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EShort:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EInt:
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].ELong:
                for (i = 0; i < this.values.length; i++) {
                    this.values[i] = +this.values[i];
                }
                return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isIntegerArray(this.values, primitive.minValue, primitive.maxValue);
        }
    }
    fieldChanged(e) {
        console.log('vdu fieldchanged m1 attr', e);
        const html = e && e.currentTarget;
        if (e)
            switch (html.tagName.toLowerCase()) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                    break;
                case 'textarea':
                case 'input':
                    const htmli = html;
                    let val = htmli.value;
                    if (htmli.getAttribute('type') === 'date') {
                        // date should take the format YYYY-MM-DD
                        // const date = new Date(val);
                        // val = date.getDate()  + "-" + (date.getMonth()+1) + "-" + date.getFullYear() +
                    }
                    this.setValueStr(val);
                    htmli.value = this.getValueStr();
                    break;
                case 'select':
                    const htmls = html;
                    const type = this.getType();
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!type.enumType && type.primitiveType !== _Type__WEBPACK_IMPORTED_MODULE_2__["EType"].get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean), 'Unexpected non-disabled select field in a Vertex.MAttribute of type:' + this.getType().printablename);
                    this.setValueStr(htmls.value);
            }
        super.fieldChanged(e, true);
    }
    setValueStr(valStr) {
        valStr = valStr && valStr.trim() || ''; // .replace(/\s'|,'/g, '"').replace(/\\\\'/g, "\\'") || '';
        if (this.metaParent.upperbound === 1) {
            // this.setValues(JSON.parse( '"' + U.replaceAll(valStr, '"', '\\"') + '"'));
            this.setValues([valStr]);
            return;
        }
        if (valStr[0] !== '[')
            valStr = '[' + valStr + ']';
        try {
            this.setValues(eval(valStr));
        }
        catch (e) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'This attribute have upperbound > 1 and the input is not a valid JSON string: ' + valStr, e);
            return;
        }
        finally { }
    }
    // setValues: applicabile alle M1-Feature, se index < 1  index = upperbound - index, se index = null values deve essere array.
    setValues(values = null, index = null, autofix = true, debug = false) {
        if (index < 0)
            index = (this.getUpperbound() - index) % this.getUpperbound();
        if (index !== null && index !== undefined) {
            this.values[index] = values;
        }
        debug = true;
        const values0 = values;
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isEmptyObject(values, true, true)
            || (Array.isArray(values) && (values.length === 0 || (values.length === 1 && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isEmptyObject(values[0]))))) {
            values = this.getType().defaultValue();
        } // redundancy, i'm double fixing it. should check if autofix fixes nulls.
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isNumber(index)) {
            this.values[index] = values;
        }
        else {
            if (!Array.isArray(values)) {
                values = [values];
            }
            this.values = values;
        }
        // U.pe(values0 === null && values.length === 1 && values[0] === [0], 'wtf?', values0, values, this);
        if (debug)
            console.trace();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.metaParent.fullname() + '.setvalue: |', values0, '| --> ', values, { defaultv: this.getType().defaultValue(), type: this.getType(), upperbound: this.getUpperbound() });
        if (this.getUpperbound() >= 0) {
            this.values.length = this.getUpperbound();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe('' + values === '' + undefined || '' + values === '' + null, 'undef:', values, this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'end value:', values);
        if (autofix) {
            this.valuesAutofix(debug);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'end value post autofix:', this.values);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedGUI)
            this.parent.getVertex().owner.propertyBar.refreshGUI();
    }
    valuesAutofix(debug = false) {
        const type = this.getType();
        const conversionType = type.enumType || type.primitiveType;
        let i;
        if (type.enumType) {
            // conversionType = null; // EType.get(ShortAttribETypes.EString);
            const defaultValue = type.enumType.getDefaultValueStr();
            if (!defaultValue) {
                this.values = [];
                if (this.getUpperbound() >= 0) {
                    this.values.length = this.getUpperbound();
                }
                return;
            }
            const admittedValues = type.enumType.getAllowedValuesStr();
            let j;
            for (j = 0; j < this.values.length; j++) {
                this.values[j] += '';
                if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayContains(admittedValues, this.values[j])) {
                    continue;
                }
                this.values[j] = admittedValues[0];
            }
        }
        if (type.primitiveType) {
            MAttribute.typeChange(this.values, type.primitiveType);
        }
    }
    getValueStr(debug = false) {
        let ret;
        ret = this.values;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'getvaluestr: stage1', ret);
        if (ret === undefined)
            ret = null;
        let retStr = null;
        if (ret !== null) {
            if (!(Array.isArray(ret))) {
                ret = [ret];
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'stage 1.1:', ret, retStr);
            if (this.metaParent.upperbound === 1) {
                ret = ret.length ? ret[0] : null;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'stage 1.2:', ret, retStr);
            retStr = Array.isArray(ret) ? JSON.stringify(ret) : (ret === null || ret === undefined ? null : '' + ret);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'stage2', ret, retStr);
        if (retStr === null) {
            this.setValues(null);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.values.length || this.values[0] === null, 'failed to set default val.', this.getType().defaultValue(), this.values);
            retStr = (this.values.length ? '' + this.values[0] : null);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'this.values:', this.values, ', val[0]:', this.values[0], 'retStr:', retStr);
        this.valuesStr = retStr;
        return retStr;
    }
    replaceVarsSetup(debug = false) {
        super.replaceVarsSetup();
        const old = this.valuesStr;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, this.values);
        const val = this.getValueStr() || '';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'val:', val, ', this.values:', this.values, ', this:', this);
        this.valuesStr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].replaceAll(val, '\n', '', debug);
        // this.valuesStr = '["1", "2", "33"]'
        if (this.valuesStr && this.getUpperbound() !== 1 && this.valuesStr[0] === '[') {
            this.valuesStr = this.valuesStr.substr(1, this.valuesStr.length - 2);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'valuesSTR: |' + old + '| --> |' + this.valuesStr + '|');
    }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/Attributes/iAttribute.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/Attributes/iAttribute.ts ***!
  \*****************************************************************/
/*! exports provided: IAttribute, M3Attribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IAttribute", function() { return IAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Attribute", function() { return M3Attribute; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class IAttribute extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"] {
    constructor(parent, metaParent) {
        super(parent, metaParent);
        if (parent)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(parent.attributes, this);
    }
    /*static GetDefaultStyle(modelRoot: IModel, type: EType = null): HTMLElement | SVGElement {
      return ModelPiece.GetDefaultStyle(modelRoot, 'Attribute', type); }
  
    static SetDefaultStyle(type: ShortAttribETypes, modelRoot: IModel, newTemplate: HTMLElement): void {
      const selector = '.' + (modelRoot.isM() ? 'M' : 'MM') + 'DefaultStyles>.Attribute.Template.' + type;
      let $oldTemplate: JQuery<HTMLElement> = $(selector + '.Customized');
      if ($oldTemplate.length === 0) { $oldTemplate = $(selector); }
      U.pe($oldTemplate.length !== 1, 'template not found? (' + $oldTemplate.length + '); selector: "' + selector + '"');
      const old = $oldTemplate[0];
      newTemplate.classList.add('template');
      newTemplate.classList.add('Customized');
      old.parentNode.appendChild(newTemplate);
      if (old.classList.contains('Customized')) { old.parentNode.removeChild(old); }
      return; }
  
    setDefaultStyle(value: string): void {
      U.pw(true, 'Attribute.setDefaultStyle(): todo.');
    }
  */
    /*
      getStyle(): HTMLElement | SVGElement {
        const htmlRaw: HTMLElement | SVGElement = super.getStyle();
        const $html = $(htmlRaw);
        const $selector = $html.find('select.TypeSelector') as JQuery<HTMLSelectElement>;
        let i: number;
        for (i = 0; i < $selector.length; i++) { PropertyBarr.makePrimitiveTypeSelector($selector[0], this.getType()); }
        // EType.updateTypeSelector($selector[0] as HTMLSelectElement, this.getType());
        return htmlRaw; }*/
    getUpperbound() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            return this.upperbound;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"]) {
            return this.metaParent.upperbound;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'getUpperbound unrecognized class.');
    }
    getLowerbound() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            return this.lowerbound;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"]) {
            return this.metaParent.lowerbound;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, ' getLowerbound unrecognized class.');
    }
    copy(other, nameAppend = '_Copy', newParent = null) {
        super.copy(other, nameAppend, newParent);
        if (newParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(newParent.attributes, this);
        }
        this.refreshGUI();
    }
}
class M3Attribute extends IAttribute {
    constructor(parent, meta) {
        super(parent, meta);
        this.parse(null, true);
    }
    duplicate(nameAppend = '_', newParent = null) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Attr.duplicate()'); return this; }
    generateModel(loopDetectionObj = null) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'm3Attr.generateModel()');
        return {};
    }
    // getType(): Type { U.pe(true, 'm3Attr.getType()'); return null; }
    parse(json, destructive = true) {
        this.name = 'Attribute';
    }
    conformability(metaparent, outObj, debug) { return 1; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/Attributes/mmAttribute.ts":
/*!******************************************************************!*\
  !*** ./src/mClass/classChild/Features/Attributes/mmAttribute.ts ***!
  \******************************************************************/
/*! exports provided: M2Attribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Attribute", function() { return M2Attribute; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class M2Attribute extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"] {
    constructor(classe, json) {
        super(classe, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getAttribute());
        if (!classe && !json) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true);
    }
    getModelRoot(acceptNull = false) { return super.getModelRoot(acceptNull); }
    parse(json, destructive) {
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].namee, 'Attribute_1'));
        this.setLowerbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].lowerbound, 0));
        this.setUpperbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].upperbound, 1));
        this.type.changeType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].eType, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString));
        /*
        this.views = [];
        let i: number;
        for(i = 0; i < this.parent.views.length; i++) {
          const pv: ClassView = this.parent.views[i];
          const v = new AttributeView(pv);
          this.views.push(v);
          pv.attributeViews.push(v); }*/
    }
    generateModel(loopDetectionObj = null) {
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].xsitype, 'ecore:EAttribute');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].eType, this.type.toEcoreString());
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].namee, this.name);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].lowerbound, '' + this.getLowerbound());
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(model, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].upperbound, '' + this.getUpperbound());
        return model;
    }
    duplicate(nameAppend = '_Copy', newParent = null) {
        const a = new M2Attribute(null, null);
        a.copy(this, nameAppend, newParent);
        return a;
    }
    replaceVarsSetup() { super.replaceVarsSetup(); }
    conformability(metaparent, outObj, debug) { return 1; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/References/M2Reference.ts":
/*!******************************************************************!*\
  !*** ./src/mClass/classChild/Features/References/M2Reference.ts ***!
  \******************************************************************/
/*! exports provided: M2Reference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Reference", function() { return M2Reference; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class M2Reference extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] {
    constructor(classe, json) {
        super(classe, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getReference());
        this.containment = false;
        if (!classe && !json) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true);
    }
    getModelRoot(acceptNull = false) { return super.getModelRoot(acceptNull); }
    parse(json, destructive) {
        /// own attributes.
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].namee, 'Ref_1'));
        this.type.changeType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].eType, this.parent.getEcoreTypeName()));
        //const eType = Json.read<string>(json, ECoreReference.eType, '#//' + this.parent.name );
        // this.type = AttribETypes.reference;
        // this.parsePrintableTypeName(eType);
        // this.linkClass();
        console.info('xxxxcontm2', { thiss: this, id: this.id, json, val: !!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].containment, false) });
        this.setContainment(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].fromBoolString(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].containment, false), false));
        this.setLowerbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].lowerbound, 0));
        this.setUpperbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].upperbound, 1));
        let i; /*
        this.views = [];
        for(i = 0; i < this.parent.views.length; i++) {
          const pv: ClassView = this.parent.views[i];
          const v = new ReferenceView(pv);
          this.views.push(v);
          pv.referenceViews.push(v); }*/
    }
    generateModel(loopDetectionObj = null) {
        const model = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"](null);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].xsitype] = 'ecore:EReference';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].eType] = this.type.toEcoreString();
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].namee] = this.name;
        if (this.lowerbound != null && !isNaN(+this.lowerbound)) {
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].lowerbound] = +this.lowerbound;
        }
        if (this.upperbound != null && !isNaN(+this.upperbound)) {
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].upperbound] = +this.upperbound;
        }
        if (this.containment != null) {
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreReference"].containment] = this.containment;
        }
        return model;
    }
    generateEdges() {
        if (!this.edges)
            this.edges = [null]; // size must be 1
        const e = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"](this, 0, this.parent.getVertex(), this.type.classType.getVertex(), null);
        return [e];
    }
    useless() { }
    /*
      fieldChanged(e: JQuery.ChangeEvent) {
        const html: HTMLElement = e.currentTarget;
        switch (html.tagName.toLowerCase()) {
          default: U.pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e); break;
          case 'textarea':
          case 'input': this.setName((html as HTMLInputElement).value); break;
          case 'select':
            const select: HTMLSelectElement = html as HTMLSelectElement;
            const m: M2Class = ModelPiece.getByID(+select.value) as any;
            this.linkClass(m); break;
        }
      }*/
    setContainment(b, force = false) {
        if (!force && this.containment === b)
            return;
        // if (!Status.status.loadedLogic || !b) { return; }
        /*const target: M2Class = this.getTarget();
        if (b && this.parent === target) {
          U.ps(true, 'a model entity cannot contain itself'); no, sto controllo non posso farlo in m2.
          this.containment = false;
          return; }*/
        /*let oldContainer: M2Reference = target.getContainer();
        if (oldContainer) oldContainer.setContainment(false, undefined);*/
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            this.containment = b;
            return;
        }
        this.containment = b && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.findContainmentLoop().length === 0;
        this.refreshGUI();
        for (let edge of this.edges)
            edge.refreshGui();
    }
    /*
      // changing a containment relationship might cause containment loops on m1 undetectable from M2.
      canBeContainmentForInstances(canMark: boolean = true): boolean {
        if (this.isContainment()) return true;
        const target: M2Class = this.getTarget();
        let oldContainer: M2Reference = target.getContainer();
        const wasContainment = this.containment
        if (oldContainer) oldContainer.containment = false;
        this.containment = true;
    
        Mark.removeByKey('containment-loop');
        const loop: MClass[] = this.findContainmentLoopOnInstances();
        for (let lop of loop) new Mark(lop, null, 'containment-loop').mark(true);
        this.containment = false;
        if (oldContainer) oldContainer.containment = true;
        return !!loop.length; }
    
      findContainmentLoopOnInstances(): MClass[] {
        const models: Model[] = [...new Set(this.instances.map( mref => mref.getModelRoot() as Model))];
        U.pe(models.length > 1, 'multiple M1 models are not supported yet.');
        if (!models || !models.length) return [];
        return models[0].findContainmentLoop(); }*/
    setUpperbound(n) {
        super.setUpperbound(n);
        let i = -1;
        while (++i < this.instances.length) {
            const mref = this.instances[i];
            if (n !== -1) {
                mref.mtarget.length = mref.edges.length = n;
            }
            mref.delete(true, false, n, Number.POSITIVE_INFINITY);
        }
    }
    delete(refreshgui = true, fromParent = false, linkStart = null, linkEnd = null) {
        const oldParent = this.parent;
        console.log('m2ref.delete()', refreshgui, oldParent);
        // total deletion
        if (linkStart === null && linkEnd === null) {
            if (this.type.classType)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.type.classType.referencesIN, this);
        }
        super.delete(false, fromParent, linkStart, linkEnd);
        console.log('m2ref.delete()', { refreshgui, oldParent, fromParent });
        if (!fromParent && refreshgui && oldParent) {
            //setTimeout( ()=> {
            oldParent.refreshGUI();
            oldParent.refreshInstancesGUI();
            //}, 0); }
        }
    }
    /*
      getStyle(debug: boolean = true): HTMLElement | SVGElement {
        const raw: HTMLElement | SVGElement = super.getStyle(debug);
        const $raw = $(raw);
        const $selector = $raw.find('select.ClassSelector');
        M2Class.updateMMClassSelector($selector[0] as HTMLSelectElement, this.classType);
        return raw; }*/
    duplicate(nameAppend = '_Copy', newParent = null) {
        const r = new M2Reference(null, null);
        return r.copy(this, nameAppend, newParent);
    }
    copy(r, nameAppend = '_Copy', newParent = null) {
        super.copy(r, nameAppend, newParent);
        this.setLowerbound(r.lowerbound);
        this.setUpperbound(r.upperbound);
        this.setContainment(r.containment, false);
        this.type.changeType(r.type.toEcoreString());
        this.refreshGUI();
        return this;
    }
    // linkClass(classe: M2Class = null): void { return this.type.changeType(null, null, classe); }
    // conformability(meta: M3Reference, debug: boolean = true): number { U.pw(true, 'it\'s ok but should not be called'); return 1; }
    getInfo(toLower = true) {
        const info = super.getInfo();
        // set('typeOriginal', this.type);
        // info['' + 'tsClass'] = (this.getModelRoot().getPrefix()) + 'Reference';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'type', 'target');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'typeDetail', 'targetDetail');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'containment', this.containment);
        const targetinfo = this.type.classType ? this.type.classType.getInfo(toLower) : {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'target', targetinfo);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].merge(info, targetinfo);
        return info;
    }
    canBeLinkedTo(hoveringTarget) {
        // todo: se è un override devo assicurarmi che non invalidi l'override
        return (hoveringTarget instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"]);
    }
    getTarget() { return this.type.classType; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/References/MReference.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/References/MReference.ts ***!
  \*****************************************************************/
/*! exports provided: MReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MReference", function() { return MReference; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");


class MReference extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"] {
    /*childrens: ModelPiece[];
    instances: ModelPiece[];
    metaParent: IReference;
    // parent: MClass;
    */
    // mtarget: MClass[];
    // targetStr: string;
    // constructor() {}
    constructor(classe, json, metaParent) {
        super(classe, metaParent);
        if (!classe && !json && !metaParent) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true);
    }
    /*
      getStyle(): HTMLElement | SVGElement {
        const htmlRaw: HTMLElement | SVGElement = super.getStyle();
        const $html = $(htmlRaw);
        const $selector = $html.find('select.ClassSelector');
        M2Class.updateMMClassSelector($selector[0] as HTMLSelectElement, this.getm2Target());
        return htmlRaw; }*/
    getm2Target() { return this.metaParent.getTarget(); }
    getTarget(index = 0) { return this.mtarget[index]; }
    getfirstEmptyTarget() {
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            if (!this.mtarget[i])
                return i;
        }
        return this.metaParent.upperbound === -1 ? this.mtarget.length : -1;
    }
    getfirstFilledTarget() {
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            if (this.mtarget[i])
                return i;
        }
        return -1;
    }
    endingName(valueMaxLength = 10) {
        const index = this.getfirstEmptyTarget();
        if (index !== -1) {
            const t = this.mtarget[index];
            if (t instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"] && t.attributes.length > 0) {
                const a = t.attributes[0];
                return a.endingName(valueMaxLength);
            }
        }
        return '';
    }
    /*
      conformability(meta: M2Reference, debug: boolean = true): number {
        let comformability = 0;
        comformability += 0.1 * StringSimilarity.compareTwoStrings(this.getm2Target().name, meta.classType.name);
        // todo: devi calcolare la 90% conformability in base al tipo dedotto della classe del m1-target.
        // comformability += 0.2 * StringSimilarity.compareTwoStrings(this.name, meta.name);
        // comformability += 0.2 * (this.metaParent.containment === meta.containment ? 1 : 0);
        U.pif(debug, 'REFERENCE.comform(', this.name, {0: this}, ', ', meta.name, {0: meta}, ') = ', comformability);
        return comformability; }*/
    duplicate(nameAppend = '_Copy', newParent = null) {
        const r = new MReference(null, null, null);
        return r.copy(this, nameAppend, newParent);
    }
    getInfo(toLower) {
        const info = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'target', this.mtarget);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'upperbound');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'lowerbound');
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            const t = this.mtarget[i];
            if (!t)
                continue;
            // todo problem: le mClassi non hanno un nome
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, '' + i, t);
        }
        return info;
    }
    delete(refreshgui = true, fromParent = false, linkStart = null, linkEnd = null) {
        let oldParent = this.parent;
        let i;
        super.delete(false, fromParent, linkStart, linkEnd);
        // remove edges
        linkEnd = Math.min(this.mtarget.length, linkEnd);
        linkStart = Math.max(0, linkStart);
        for (i = linkStart; i < linkEnd; i++) {
            this.setTarget(i, null);
        }
        if (refreshgui) {
            setTimeout(() => { oldParent.refreshGUI(); }, 0);
        }
    }
    getType() { return (this.metaParent ? this.metaParent.getType() : null); }
    canBeLinkedTo(hoveringTarget) {
        // todo: può essere linkato: se non-containment sempre, altrimenti se: target non è root, target non è già contenuto.
        const c1 = hoveringTarget.metaParent;
        const c2 = this.getType().classType;
        console.log('canbelinkedm1 ? ', c1, c2);
        if (!c1.isExtending(c2, true))
            return false;
        if (!this.isContainment())
            return true;
        // solo per la stampa
        if (hoveringTarget === this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(true, 'Objects cannot contain themselves.');
            return false;
        }
        // solo per la stampa
        // if (hoveringTarget.isRoot() && this.parent.isConnectedToRoot()) { U.ps(true, 'This reference would cause a containment loop.'); return false; }
        if (this.parent.isContainedIn(hoveringTarget)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(true, 'This reference would cause a containment loop.');
            return false;
        }
        // solo per la stampa
        if (hoveringTarget.isRoot()) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(true, 'Root object cannot be contained.');
            return false;
        }
        // controllo sufficiente da solo a ritornare il giusto valore, ma ne ho aggiunti di precedenti per stampe più chiare
        if (hoveringTarget.getContainer()) { // && hoveringTarget.isConnectedToRoot()) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(true, 'Target is already contained in a different object.');
            return false;
        }
        return true;
    }
    // link(targetStr?: string, debug?: boolean): void { throw new Error('mreference.linkByStr() should never be called'); }
    // LinkToMetaParent(ref: MReference): void { super.LinkToMetaParent(ref); }
    generateModel(loopDetectionObj0 = null) {
        const loopDetectionObj = loopDetectionObj0 || {};
        console.log("loopdetect isobject?", _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isObject(loopDetectionObj), " param:", loopDetectionObj0, loopDetectionObj0 || {});
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isObject(loopDetectionObj), "loopdetection not object param:", loopDetectionObj0, loopDetectionObj0 || {});
        return this.generateModelLoop(loopDetectionObj);
    }
    generateModelLoop(loopDetectionObj) {
        const ret = [];
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            if (!this.mtarget[i])
                continue;
            const mclass = this.mtarget[i];
            if (false) {}
            else {
                loopDetectionObj[mclass.id] = mclass;
                if (this.isContainment()) {
                    ret.push(mclass.generateModel(loopDetectionObj, false));
                }
                else
                    ret.push(mclass.getM1PathStr());
            }
        }
        if (ret.length === 1 && ret[0] === '' + ret[0])
            return ret[0];
        else
            return ret;
    }
    generateEdges() {
        // const arr: IEdge[] = [];
        let i;
        // while (this.edges && this.edges.length > 0) { this.edges[0].remove(); U.arrayRemoveAll(this.edges, this.edges[0]); }
        for (i = 0; i < this.mtarget.length; i++) {
            if (this.edges[i] || !this.mtarget[i])
                continue;
            this.edges[i] = (new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IEdge"](this, i, this.parent.getVertex(), this.mtarget[i].getVertex(), null));
        }
        return this.edges;
    }
    parse(json0, destructive = true) {
        /*
            "ReferenceName": [
              { "-name": "tizio" },  <-- reference.target[0]
              { "-name": "asd" }     <-- reference.target[1]
            ]*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!destructive, 'non-destructive parse of MReference to do.');
        if (!json0) {
            json0 = [];
        }
        const json = Array.isArray(json0) ? json0 : [json0];
        const targetMM = this.getm2Target();
        let i;
        if (!this.mtarget) {
            this.mtarget = [];
        }
        if (!this.edges) {
            this.edges = [];
        }
        const upperbound = this.getUpperbound();
        if (upperbound >= 0) {
            this.mtarget.length = upperbound;
            this.edges.length = upperbound;
        }
        if (destructive) {
            this.clearTargets();
        }
        const pkg = this.getClass().parent;
        for (i = 0; i < json.length; i++) {
            // console.log('mref.parse: ', json0, json, 'i:', json[i]);
            if ($.isEmptyObject(json[i])) {
                continue;
            }
            const targetMM_orSubclass = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"].findMetaSubClass(json[i], targetMM); // se ho una reference che punta ad una classe astratta con sottoclassi, i riferimenti potrebbero non essere del tipo della superclasse.
            const t = json[i] === '' + json[i] ? '' + json[i] : new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"](pkg, json[i], targetMM_orSubclass, true);
            this.mtarget[i] = t; // this.setTarget(i, t as any); non usare setTarget qui, t è stringa e il setTarget viene fatto durante lo step fixReferences()
            if (t && t instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"])
                t.referencesIN.push(this);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(this.metaParent.upperbound !== -1 && this.mtarget.length !== +this.metaParent.upperbound, 'wrong mtarget length', this.mtarget, this.mtarget.length, this.metaParent.upperbound);
    }
    validate() { return true; }
    copy(r, nameAppend = '_Copy', newParent = null) {
        this.clearTargets();
        super.copy(r, nameAppend, newParent);
        this.mtarget = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(r.mtarget, false);
        this.generateEdges();
        this.refreshGUI();
        return r;
    }
    linkClass(classe, index, refreshGUI = true, debug = false) { this.setTarget(index, classe); }
    setValues(values = null, index = null, autofix = true, debug = false) {
        if (index < 0)
            index = (this.getUpperbound() - index) % this.getUpperbound();
        if (index === null || index === undefined) {
            values.length = this.getUpperbound();
            let i;
            for (i = 0; i < values.length; i++) {
                if (values[i] instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"])
                    this.setTarget(i, values[i]);
            }
            return;
        }
        if (Array.isArray(values)) {
            if (values.length === 1)
                values = values[0];
            else
                return;
        }
        if (values instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"])
            this.setTarget(index, values);
    }
    setTarget(index, val) {
        let edge = this.edges[index];
        // clean up old pointed class & vertex referencesIn
        if (this.mtarget[index]) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.mtarget[index].referencesIN, this);
            if (this.mtarget[index].vertex)
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(this.mtarget[index].vertex.edgesEnd, edge);
        }
        if (val === null) {
            if (this.edges[index])
                this.edges[index].remove();
            this.mtarget[index] = null;
            if (index === this.mtarget.length - 1 && this.getUpperbound() === -1) {
                while (this.mtarget.length > 0 && !this.mtarget[this.mtarget.length - 1]) {
                    this.mtarget.length--;
                    this.edges.length--;
                }
            }
            return;
        }
        if (this.metaParent.unique && this.mtarget.indexOf(val) >= 0) {
            // basta evitare elementi identici o anche istanze diverse con stessi valori? o con altri concetti di "uguglianza" ?
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(true, 'This reference type is labeled as "unique" and is already linked to that element.');
            return;
        }
        // if (this.mtarget[index]) { this.setTarget(index, null); }
        this.mtarget[index] = val;
        console.info('mtarget[' + index + ']:', this.mtarget[index]);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.mtarget[index].referencesIN, this);
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic)
            return;
        this.generateEdges();
        edge = this.edges[index];
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.mtarget[index].vertex.edgesEnd, edge);
    }
    clearTargets() {
        let i;
        for (i = 0; i < this.mtarget.length; i++) {
            this.setTarget(i, null);
        }
        let upperbound = this.getUpperbound();
        if (upperbound >= 0) {
            this.mtarget.length = upperbound;
            this.edges.length = upperbound;
        }
    }
    fixReferences(classRoot) {
        for (let i = 0; i < this.mtarget.length; i++) {
            let target = this.mtarget[i];
            if (target !== '' + target)
                continue;
            target = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MClass"].getByM1Path(classRoot, target);
            if (!target) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'invalid model save: failed to find m1 target:', target, this);
                continue;
            }
            // target.referencesIN.push(this);
            this.setTarget(i, target);
        }
    }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/References/iReference.ts":
/*!*****************************************************************!*\
  !*** ./src/mClass/classChild/Features/References/iReference.ts ***!
  \*****************************************************************/
/*! exports provided: IReference, M3Reference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IReference", function() { return IReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Reference", function() { return M3Reference; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../guiElements/mGraph/Edge/edgeStyle */ "./src/guiElements/mGraph/Edge/edgeStyle.ts");



class IReference extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"] {
    constructor(parent, meta) {
        super(parent, meta);
        this.edges = [];
        if (parent)
            parent.references.push(this);
        this.edgeStyleCommon = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, 2, '#7f7f7f', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#000000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__["EdgeHeadStyle"](20, 20, '#7f7f7f', '#7f7f7f'));
        this.edgeStyleHighlight = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, 2, '#ffffff', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#0077ff'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__["EdgeHeadStyle"](20, 20, '#ffffff', '#ffffff'));
        this.edgeStyleSelected = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, 4, '#ffffff', // #ffbb22
        new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#ff0000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_2__["EdgeHeadStyle"](25, 25, '#ffffff', '#ffffff'));
        let complementaHex = (hexstr) => { return '#' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(16777215 - (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].hexToNum(hexstr)), 6); };
        let i;
        switch (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].get()) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected website theme: |' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].get() + '|' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].Light + '|');
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].Dark: break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].Light:
                let edgeStyles = [this.edgeStyleCommon, this.edgeStyleHighlight, this.edgeStyleSelected];
                for (i = 0; i < edgeStyles.length; i++) {
                    let style = edgeStyles[i];
                    style.color = complementaHex(style.color);
                    style.edgePointStyle.fillColor = complementaHex(style.edgePointStyle.fillColor);
                    style.edgePointStyle.strokeColor = complementaHex(style.edgePointStyle.strokeColor);
                    style.edgeHeadStyle.fill = complementaHex(style.edgeHeadStyle.fill);
                    style.edgeHeadStyle.stroke = complementaHex(style.edgeHeadStyle.stroke);
                }
                break;
        }
    }
    delete(refreshgui = true, fromParent = false, linkStart = null, linkEnd = null) {
        let oldParent = this.parent;
        if (linkStart === null && linkEnd === null) {
            super.delete(false, fromParent);
            linkStart = 0;
            linkEnd = this.edges.length;
        }
        const edges = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayCopy(this.getEdges(), false);
        let i;
        linkEnd = Math.min(edges.length, linkEnd);
        linkStart = Math.max(0, linkStart);
        for (i = linkStart; i < linkEnd; i++) {
            if (edges[i])
                edges[i].remove();
        }
        if (refreshgui) {
            setTimeout(() => oldParent.refreshGUI(), 0);
        }
    }
    // abstract linkClass(classe?: IClass): void;
    getEdges() { return this.edges; }
    refreshGUI_Alone(debug = true) {
        super.refreshGUI_Alone(debug);
        let i = -1;
        const edges = this.getEdges();
        while (++i < edges.length) {
            if (edges[i]) {
                edges[i].refreshGui();
            }
        }
    }
    copy(r, nameAppend = '_Copy', newParent = null) {
        while (this.edges.length) {
            if (this.edges[0])
                this.edges[0].remove();
        }
        super.copy(r, nameAppend, newParent);
        this.clearTargets();
        super.copy(r, nameAppend, newParent);
        this.generateEdges();
        this.edgeStyleCommon = r.edgeStyleCommon.duplicate();
        this.edgeStyleHighlight = r.edgeStyleHighlight.duplicate();
        this.edgeStyleSelected = r.edgeStyleSelected.duplicate();
        // this.typeClassFullnameStr = r.typeClassFullnameStr;
        if (newParent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(newParent.references, this);
        }
        this.refreshGUI();
        return this;
    }
    /*
      getStartPoint(nextPt: GraphPoint = null, fixOnSides: boolean = true): GraphPoint {
        let html: HTMLElement | SVGElement = this.getField().getHtml();
        // todo: introduzione field con campo html.
        if ( this.html && this.html.style.display !== 'none') {
          html = this.getStartPointHtml();
        } else { html = this.parent.getStartPointHtml(); }
        const vertexSize: GraphSize = this.graph().toGraphCoordS(U.sizeof(this.parent.html.firstChild as HTMLElement | SVGElement ));
        let htmlSize: Size = U.sizeof(html);
        let size: GraphSize = this.getModelRoot().graph.toGraphCoordS(htmlSize);
        if ( size.w === 0 || size.h === 0) {
          html = this.parent.getEndPointHtml();
          htmlSize = U.sizeof(html);
          size = this.getModelRoot().graph.toGraphCoordS(htmlSize); }
    
        let ep: GraphPoint = new GraphPoint(size.x + size.w / 2, size.y + size.h / 2);
        // console.log('sizeH:', htmlSize, 'sizeg:', size, ' center: ', ep);
        // this.getModelRoot().graph.markS(htmlSize, false, 'green');
        // this.getModelRoot().graph.markS(htmlSize, false, 'green');
        // ora è corretto, ma va fissato sul bordo vertex più vicino
        let fixOnHorizontalSides = false;
        const oldEpDebug = new GraphPoint(ep.x, ep.y);
        let vicinanzaL;
        let vicinanzaR;
        let vicinanzaT;
        let vicinanzaB;
        if (!nextPt) {
          vicinanzaL = Math.abs(ep.x - (vertexSize.x));
          vicinanzaR = Math.abs(ep.x - (vertexSize.x + vertexSize.w));
          vicinanzaT = Math.abs(ep.y - (vertexSize.y)) + (fixOnHorizontalSides ? Number.POSITIVE_INFINITY : 0);
          vicinanzaB = Math.abs(ep.y - (vertexSize.y + vertexSize.h)) + (fixOnHorizontalSides ? Number.POSITIVE_INFINITY : 0);
          const nearest = Math.min(vicinanzaL, vicinanzaT, vicinanzaR, vicinanzaB);
          // console.log('vicinanze (LRTB)', vicinanzaL, vicinanzaR, vicinanzaT, vicinanzaB, 'vSize: ', vertexSize);
          if ( nearest === vicinanzaT || (false && nextPt.x >= vertexSize.x && nextPt.x <= vertexSize.x + vertexSize.w && nextPt.y < ep.y)) {
            ep.y = vertexSize.y; } else
          if ( nearest === vicinanzaB || (false && nextPt.x >= vertexSize.x && nextPt.x <= vertexSize.x + vertexSize.w && nextPt.y > ep.y)) {
            ep.y = vertexSize.y + vertexSize.h; } else
          if ( nearest === vicinanzaR || (false && nextPt.x >= ep.x)) { ep.x = vertexSize.x + vertexSize.w; } else
          if ( nearest === vicinanzaL) { ep.x = vertexSize.x; }
          console.log('html:', html);
        } else {
          const grid = this.getModelRoot().graph.grid;
          ep = GraphSize.closestIntersection(vertexSize, nextPt, ep, grid); }
        // console.log('StartPoint fissato sul bordo:', oldEpDebug, '-->', ep);
        // return this.parent.vertex.owner.fitToGrid(ep);
        // if (fixOnSides && nextPt) { if (nextPt.x > ep.x) { ep.x += size.w / 2; } else { ep.x -= size.w / 2; }  }
        return ep; // meglio se svincolato dalla grid: il vertica può essere di width ~ height non conforme alla grid e il punto risultare fuori
      }
    */
    setDefaultStyle(value) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'IReference.setDefaultStyle(): todo.');
    }
    isContainment() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return this.containment;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return this.metaParent && this.metaParent.containment;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class.');
    }
    /*getM2Target(): M2Class {
      if (this instanceof M2Reference) { return this.classType; }
      if (this instanceof MReference) { return this.metaParent.classType; }
      U.pe(true, 'unrecognized class.'); }*/
    getUpperbound() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return this.upperbound;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return this.metaParent && this.metaParent.upperbound;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class.');
    }
    getLowerbound() {
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            return this.lowerbound;
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"]) {
            return this.metaParent && this.metaParent.lowerbound;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized class.');
    }
    clearTargets() {
        // azioni solo su m1, non spostato direttamente su m1 per comodità d'uso nella IReference.clone();
    }
    getTargetSelector(index) { return this.getTarget(index).getSelector(); }
}
class M3Reference extends IReference {
    constructor(parent, meta = null) {
        super(parent, meta);
        this.parse(null);
    }
    // clearTargets(): void { }
    canBeLinkedTo(hoveringTarget) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.canBeLinkedTo()'); return true; }
    //conformability(meta: IReference, debug?: boolean): number { U.pe(true, 'Invalid operation: m3Reference.comformability()'); return 0; }
    duplicate(nameAppend, newParent) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.duplicate()'); return this; }
    generateEdges() { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.generateEdges()'); return []; }
    generateModel(loopDetectionObj = null) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Reference.generateModel()'); return {}; }
    parse(json, destructive) { this.name = 'Reference'; }
    linkClass(classe = null) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: M3Reference.linkClass();'); }
    getTarget(index) { return this.parent; }
}


/***/ }),

/***/ "./src/mClass/classChild/Features/iFeature.ts":
/*!****************************************************!*\
  !*** ./src/mClass/classChild/Features/iFeature.ts ***!
  \****************************************************/
/*! exports provided: IFeature */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IFeature", function() { return IFeature; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


class IFeature extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    // isShadowed: boolean = false;
    // linkToMetaParent<T extends IFeature>(feature: T) { this.metaParent = feature; }
    getClass() { return this.parent; }
    // must be overriden for m1-elements
    setValues(values = null, index = null, autofix = true, debug = false) { }
    /*
      setShadowed(mapElement: boolean): void {
        U.pe(!this.getModelRoot().isM2(), 'setShadowed() must be called from M2.', this);
        this.isShadowed = mapElement; }*/
    isInherited(forClass) {
        let thismr = this.getModelRoot();
        let targetmr = forClass.getModelRoot();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(thismr !== targetmr, 'dev error isInherited(): cannot compare object from different models:', this, forClass);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(thismr.isM3(), 'dev error isInherited(): cannot compare object from m3:', this, forClass);
        if (thismr.isM2())
            return this.parent !== forClass; // for m2
        let m2classContaining = this.metaParent.parent;
        let m2classOfParent = forClass.metaParent;
        if (m2classContaining !== m2classOfParent)
            return true; // for m1
        return false;
    }
    isShadowed(forClass) {
        const myroot = this.getModelRoot();
        const targetRoot = forClass.getModelRoot();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(myroot !== targetRoot, 'error: called isShadowed with subject and parameters on different models:', this, forClass);
        if (myroot.isM1())
            return this.metaParent.isShadowed(forClass.metaParent);
        let childs = forClass.getAllChildrens(false, false, true, true, false);
        let myIndex = childs.indexOf(this);
        const debug = false;
        for (let i = 0; i < myIndex; i++) {
            if (childs[i].name === this.name) {
                debug && console.log(forClass.id + '_' + this.id + ' true 0isShadowed?', this.parent.name + '.' + this.name, myIndex, childs.map((e) => e.parent.name + '.' + e.name));
                return true;
            }
        }
        debug && console.log(forClass.id + '_' + this.id + ' false 0isShadowed?', this.parent.name + '.' + this.name, myIndex, childs.map((e) => e.parent.name + '.' + e.name));
        return false;
    }
}
/*
export abstract class M3Feature extends IFeature {
  parent: M3Class;
  metaParent: M3Feature;
  instances: M3Feature[] | M2Feature[];
}
export abstract class M2Feature extends IFeature {
  parent: M2Class;
  metaParent: M3Feature;
  instances: MFeature[];
}
export abstract class MFeature extends IFeature {
  parent: MClass;
  metaParent: M2Feature;
  instances: ModelNone;
}*/


/***/ }),

/***/ "./src/mClass/classChild/Operations/eOperation.ts":
/*!********************************************************!*\
  !*** ./src/mClass/classChild/Operations/eOperation.ts ***!
  \********************************************************/
/*! exports provided: AccessModifier, EOperation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccessModifier", function() { return AccessModifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EOperation", function() { return EOperation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


// export abstract class EOperation extends Typedd {}
/*
export class OperationVisibility {
  static public = 'public';
  static private = 'private';
  static protected = 'protected';
  static internal = 'internal';
  static protectedinternal = 'protected internal';
  static protectedprivate = 'protected private'; }*/
var AccessModifier;
(function (AccessModifier) {
    AccessModifier["public"] = "public";
    AccessModifier["private"] = "private";
    AccessModifier["protected"] = "protected";
    AccessModifier["internal"] = "internal";
    AccessModifier["package"] = "package";
    AccessModifier["protectedinternal"] = "protected internal";
    AccessModifier["protectedprivate"] = "protected private";
})(AccessModifier || (AccessModifier = {}));
class EOperation extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    // exceptions: IClass[];
    // todo: ha davvero senso processarli e creare anche IClass.Object etc? mi conviene tenerli a stringa.
    constructor(parent, json) {
        super(parent, null);
        this.exceptionsStr = ''; // classlist to be later processed and linked.
        this.visibility = AccessModifier.private;
        this.detailIsOpened =  false && false;
        this.markedCompatibility = [];
        if (parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"])
            parent.operations.push(this);
        this.parse(json);
    }
    isInherited(forClass) { if (this.parent !== forClass)
        return true; }
    canOverride(other) {
        console.log('CanOverride(', this, ', ', other, ') ? ', this.name === other.name, this.parent !== other.parent, this.getSignature() == other.getSignature(), this.getReturnType().canOverride(other.getReturnType()));
        // NB: se A.a(Object): Object e B.a(String):String lo tratta come polimorfismo. se A.a(String): Object e B.a(String):String lo tratta come override valido.
        return this.name === other.name && this.parent !== other.parent && this.getSignature() == other.getSignature() && this.getReturnType().canOverride(other.getReturnType());
    }
    canPolymorph(other) {
        console.log('canPolymorph(', this, ', ', other, ') ? ', this.name === other.name, this.getSignature() != other.getSignature());
        // todo: hide shadowed features
        return this.name === other.name && this.getSignature() != other.getSignature();
    }
    isCompatible(other, allowMark = false) {
        let ret = this === other || (this.name !== other.name) || this.canOverride(other) || this.canPolymorph(other);
        if (allowMark) {
            if (!ret)
                this.markIncompatibility(other);
            else
                this.unmarkIncompatibility(other);
        }
        return ret;
    }
    getReturnType() { return this.getType(); }
    getChildrenParameter(index) { return this.childrens[index]; }
    getChildrenParameterSelector(index) { return this.getChildrenParameter(index).getSelector(); }
    getVisibilityChar() {
        switch (this.visibility) {
            case AccessModifier.public: return '+';
            case AccessModifier.private: return '-';
            case AccessModifier.protected: return '#';
            case AccessModifier.internal:
            case AccessModifier.package: return '~';
            case AccessModifier.protectedinternal: return '#~';
            case AccessModifier.protectedprivate: return '#-';
            default: return '?';
        }
    }
    getClass() { return this.parent; }
    conformability(metaparent, outObj, debug) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'operation.conformability()'); return 0; }
    duplicate(nameAppend = '_Copy', newParent = null) {
        const c = new EOperation(this.parent, null);
        c.copy(this);
        return c;
    }
    copy(c, nameAppend = '_Copy', newParent = null) {
        super.copy(c, nameAppend, newParent);
        this.exceptionsStr = c.exceptionsStr;
        //// set childrens
        // this.arguments = []; for (i = 0; i < this.childrens.length; i++) { U.ArrayAdd(this.arguments, this.childrens[i]); }
        this.refreshGUI();
    }
    generateModel(loopDetectionObj = null) {
        const parameters = [];
        const json = {};
        json[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eParameters] = parameters;
        /*
                            "_name": "EExceptionNameCustom",
                            "_ordered": "false",
                            "_unique": "false",
                            "_lowerBound": "5",
                            "_upperBound": "7",
                            "_eType": "#//Casa",
                            "_eExceptions": "#//Casa #//League ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt",
                            "eParameters": [ ]*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].namee, this.name);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eType, this.getType().toEcoreString());
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, '' + this.lowerbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, '' + this.upperbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eexceptions, this.exceptionsStr);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, '' + this.ordered);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, '' + this.unique);
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            parameters.push(this.childrens[i].generateModel(loopDetectionObj));
        }
        return json;
    }
    getInfo(toLower = false) {
        const info = super.getInfo(toLower);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'instances');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'type', 'returnType');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].rename(info, 'typeDetail', 'returnTypeDetail');
        return info;
    }
    parse(json, destructive) {
        this.setName((this.parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"]) ? 'Operation' : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].namee, 'Func_1'));
        this.setType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eType, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].void));
        this.setLowerbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, 'NAN_Trigger'));
        this.setUpperbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, 'NAN_Trigger'));
        this.exceptionsStr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eexceptions, '');
        this.ordered = !!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, 'false');
        this.unique = !!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, 'false');
        this.visibility = AccessModifier.package;
        const parameters = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json, false);
        let i;
        for (i = 0; i < parameters.length; i++) {
            const param = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"](this, parameters[i]);
            // U.ArrayAdd(this.arguments, param);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, param);
        } /*
      this.views = [];
      for(i = 0; i < this.parent.views.length; i++) {
        const pv: ClassView = this.parent.views[i];
        const v = new OperationView(pv);
        this.views.push(v);
        pv.operationViews.push(v); }*/
        /*  https://codebeautify.org/xmltojson
                    "Operations": [ {
                            "_name": "EExceptionNameCustom",
                            "_ordered": "false",
                            "_unique": "false",
                            "_lowerBound": "5",
                            "_upperBound": "7",
                            "_eType": "#//Casa",
                            "_eExceptions": "#//Casa #//League ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt" },
                        {
                            "eParameters": [
                                {
                                    "_eType": "#//Casa"
                                },
                                {
                                    "eAnnotations": {
                                        "_source": "annotationtext",
                                        "_references": "#//Umano/anni #//Umano/Attribute_1"
                                    },
                                    "_name": "dbl",
                                    "_ordered": "false",
                                    "_unique": "false",
                                    "_lowerBound": "1",
                                    "_upperBound": "2",
                                    "_eType": "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"
                                }
                            ],
                            "_name": "operationDam"
                        }
                    ],*/
    }
    getSignature(maxarguments = Number.POSITIVE_INFINITY) {
        let parameterStr = '';
        maxarguments = Math.min(maxarguments, this.childrens.length);
        let i;
        const debug = false;
        const separator = ', ';
        for (i = 0; i < maxarguments; i++) {
            if (i !== 0) {
                parameterStr += separator;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'parameter[' + i + '] = ', this.childrens[i]);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'parameterStr: |' + parameterStr + '| --> |' + parameterStr + this.childrens[i].getType().toShortString() + '|');
            parameterStr += this.childrens[i].getType().toShortString();
        }
        return parameterStr;
    }
    setSignatureHtml(html, separator, maxargumentchars = null, maxarguments = null) {
        const debug =  false && false;
        maxargumentchars = isNaN(+maxargumentchars) ? 10 : +maxargumentchars;
        maxarguments = isNaN(+maxarguments) ? 2 : +maxarguments;
        const fixName = (s) => {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'fixname: |' + s + '| --> |' + s.substring(0, maxargumentchars - 1) + '…|');
            if (s.length > maxargumentchars) {
                return s.substring(0, maxargumentchars - 1) + '…';
            }
            return s;
        };
        let i;
        let parameterStr = this.getSignature(maxarguments);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'finalSignature: ', this.getVisibilityChar(), fixName(this.name), parameterStr, fixName(this.type.toShortString()), this);
        // todo: innerText is not standard, switch to textContent
        html.innerHTML = '&nbsp'; // == ' '
        html.textContent += this.getVisibilityChar() + '' + fixName(this.name) + '(' + parameterStr + ') → ' // → ⇒
            + this.type.toShortString();
        html.dataset.visibility = this.visibility;
        html.dataset.exceptions = this.exceptionsStr;
    }
    setType(ecoreTypeString, throwError = true, refreshGui = true) {
        let ret = super.setType(ecoreTypeString, throwError, refreshGui);
        if (!ret)
            return false;
        if (this.parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"])
            this.parent.calculateInheritanceViolations(true);
        return true;
    }
    // getReturnType(): EParameter { return this.getFakeReturnTypeParameter(); }
    /*
      getFakeReturnTypeParameter(): EParameter {
        const fake: EParameter = new EParameter(null, null);
        U.arrayRemoveAll(this.childrens, fake);
        fake.parent = this; // can travel fake -> original, can't original -> fake.
        fake.id = this.id;
        fake.ordered = this.ordered;
        fake.unique = this.unique;
        fake.setLowerbound(this.getLowerbound());
        fake.setUpperbound(this.getUpperbound());
        fake.setType(this.getType().toEcoreString());
        fake.name = '';
        return fake; }*/
    addParameter() {
        const p = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"](this, null);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, p);
        return p;
    }
    markIncompatibility(other) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'Marked operations are incompatible toghether.');
        this.mark(true, other, 'incompatibility:' + this.id + '_' + other.id, null);
    }
    unmarkIncompatibility(other) {
        console.log('mark: unmark:', this.id + '_' + other.id, this);
        this.mark(false, other, 'incompatibility:' + this.id + '_' + other.id, null);
    }
    unmarkAllIncompatibility() {
        return;
        // super.unmarkAll((key: string) => { return key.indexOf('incompatibility') === 0; });
    }
    delete(refreshgui = true, fromParent = false) {
        super.delete(true, fromParent);
    }
}


/***/ }),

/***/ "./src/mClass/classChild/Operations/eParameter.ts":
/*!********************************************************!*\
  !*** ./src/mClass/classChild/Operations/eParameter.ts ***!
  \********************************************************/
/*! exports provided: EParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EParameter", function() { return EParameter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/Joiner */ "./src/common/Joiner.ts");


// export abstract class EParameter extends Typedd {}
class EParameter extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"] {
    constructor(parent, json) {
        super(parent, null);
        if (!parent) {
            return;
        } // fake constructor will allow to travel fake -> original. can't original -> fake.
        this.parse(json);
    }
    isInherited(forClass) { return false; }
    setType(ecoreTypeString, throwError = true, refreshGui = true) {
        let ret = super.setType(ecoreTypeString, throwError, refreshGui);
        if (!ret)
            return false;
        if (this.parent.parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"])
            this.parent.parent.calculateInheritanceViolations(true);
        return true;
    }
    fullname() { return super.fullname() + ':' + this.name; }
    getField() { return this.parent ? this.parent.getField() : null; }
    getClass() { return this.parent ? this.parent.parent : null; }
    conformability(metaparent, outObj, debug) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'eop.conformability'); return 0; }
    duplicate(nameAppend = '_Copy', newParent = null) {
        const c = new EParameter(null, null);
        c.copy(this, nameAppend, newParent);
        return c;
    }
    copy(c, nameAppend = '_Copy', newParent = null) {
        super.copy(c, nameAppend, newParent);
        //// set childrens
        // let i; for (i = 0; i < this.childrens.length; i++) { U.ArrayAdd(this.parent.arguments, this.childrens[i]); }
        this.refreshGUI();
    }
    getInfo(toLower = false) {
        const info = super.getInfo(toLower);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'instances');
        return info;
    }
    generateModel(loopDetectionObj = null) {
        const json = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, '' + this.lowerbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, '' + this.upperbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, '' + this.ordered);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, '' + this.unique);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].write(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].eType, '' + this.getType().toEcoreString());
        return json;
    }
    parse(json, destructive) {
        /* {"eAnnotations": {
                        "_source": "annotationtext",
                        "_references": "#//Umano/anni #//Umano/Attribute_1" },
                    "_name": "dbl",
                    "_ordered": "false",
                    "_unique": "false",
                    "_lowerBound": "1",
                    "_upperBound": "2",
                    "_eType": "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" }*/
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.parent || !this.parent.parent, 'json:', json, 'this: ', this, 'this.parent:', this.parent, 'this.p.p:', this.parent ? this.parent.parent : undefined);
        this.setName(this.parent.parent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Class"] ? 'Parameter' : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreParameter"].namee, 'Param_1'));
        this.setLowerbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].lowerBound, 'NAN_Trigger'));
        this.setUpperbound(+_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].upperBound, 'NAN_Trigger'));
        this.ordered = !!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].ordered, 'false');
        this.unique = !!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreOperation"].unique, 'false');
        this.setType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreParameter"].eType, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString));
        let i; /*
        this.views = [];
        for(i = 0; i < this.parent.views.length; i++) {
          const pv: OperationView = this.parent.views[i];
          const v = new ParameterView(pv);
          this.views.push(v);
          pv.parameterView.push(v); }*/
    }
}


/***/ }),

/***/ "./src/mClass/classChild/Type.ts":
/*!***************************************!*\
  !*** ./src/mClass/classChild/Type.ts ***!
  \***************************************/
/*! exports provided: Type, EType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EType", function() { return EType; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class Type {
    constructor(owner, typestr = null) {
        this.primitiveType = null;
        this.classType = null;
        this.enumType = null;
        this.owner = null; // todo: cambia to Typedd
        this.owner = owner;
        this.typestr = typestr;
        this.id = Type.idMax++;
        Type.allByID[this.id] = this;
        Type.all.push(this);
    }
    // change owner type. check invalid comparisons like type === othertype to see if sametype
    static getAllTypedMP() {
        return Type.all.map((t) => t.owner);
        return Object.keys(Type.allByID).map((key) => { return _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getByID(+key); });
    }
    static getAllWithClassType(searchType) {
        if (!searchType)
            return [];
        // const typestr = searchType.getEcoreTypeName();
        // return Type.getAllTypedMP().filter((t:Typedd)=> (t.type && t.type.classType && t.type.classType.getEcoreTypeName() === typestr));
        return Type.getAllTypedMP().filter((typed) => { return typed.type && typed.type.classType && typed.type.classType.id === searchType.id; });
    }
    static updateTypeSelectors($searchRoot, primitives = true, enums = true, classes = true) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedGUI)
            return;
        if (!$searchRoot) {
            $searchRoot = $(document.body);
        }
        let key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getStartSeparatorKey();
        const query = (primitives ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + 'select[data-primitive="true"]' : '') +
            (enums ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + 'select[data-enum="true"]' : '') +
            (classes ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + 'select[data-class="true"]' : '');
        key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getStartSeparatorKey();
        const notquery = (primitives ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + '.template select[data-primitive="true"]' : '') +
            (enums ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + '.template select[data-enum="true"]' : '') +
            (classes ? _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key) + '.template select[data-class="true"]' : '');
        //    console.log(query);
        const $selects = $searchRoot.find(query).not(notquery);
        for (let i = 0; i < $selects.length; i++) {
            Type.updateTypeSelector($selects[i]);
        }
        if (classes && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m && _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.sidebar) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.sidebar.updateAll();
        }
    }
    static updateTypeSelector(selectHtml) {
        const addPrimitive = selectHtml.dataset.primitive === "true";
        const addEnum = selectHtml.dataset.enum === "true";
        const addClass = selectHtml.dataset.class === "true";
        const addVoid = selectHtml.dataset.void === "true";
        const type = Type.get(+selectHtml.dataset.typeid);
        Type.makeTypeSelector(selectHtml, type, addPrimitive, addEnum, addClass, addVoid);
    }
    static makeTypeSelector(selectHtml, selectedType, addPrimitive, addEnum, addClass, addVoid) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!selectHtml, 'select is null');
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].clear(selectHtml);
        const mp = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"].getLogic(selectHtml);
        if (mp && mp instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Typedd"]) {
            selectedType = mp.getType();
            $(selectHtml).off('change.type').on('change.type', (e) => { mp.fieldChanged(e); });
        }
        else
            return; //U.pw(true, 'type selector inserted on non-typed element:', selectHtml, mp);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!selectedType, 'select type is null', { selectedType, selectHtml, mp });
        selectHtml.dataset.typeid = '' + selectedType.id;
        selectHtml.dataset.primitive = '' + (addPrimitive ? "true" : "false");
        selectHtml.dataset.enum = '' + (addEnum ? "true" : "false");
        selectHtml.dataset.class = '' + (addClass ? "true" : "false");
        selectHtml.dataset.void = '' + (addVoid ? "true" : "false");
        const grpReturn = document.createElement('optgroup');
        const grpPrimitive = document.createElement('optgroup');
        const grpEnum = document.createElement('optgroup');
        const grpClass = document.createElement('optgroup');
        grpReturn.label = 'Return Types';
        grpPrimitive.label = 'Primitive Types';
        grpEnum.label = 'Enumerative Types';
        grpClass.label = 'ClassReference Types';
        let optionFound = false;
        let key;
        let i;
        const foundit = (opt) => { optionFound = true; opt.setAttribute('selected', ''); opt.selected = true; };
        // primitive:
        if (addPrimitive) {
            for (key in EType.shorts) {
                if (!EType.shorts[key]) {
                    continue;
                }
                const etype = EType.shorts[key];
                if (etype.short === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void && !addVoid) {
                    continue;
                }
                const opt = document.createElement('option');
                grpPrimitive.appendChild(opt);
                opt.value = etype.long;
                opt.innerHTML = etype.getName();
                if (selectedType && etype === selectedType.primitiveType) {
                    foundit(opt);
                }
            }
        }
        // primitive end
        // Enum Start:
        if (addEnum) {
            const enumarr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllEnums();
            for (i = 0; i < enumarr.length; i++) {
                const e = enumarr[i];
                const opt = document.createElement('option');
                grpEnum.appendChild(opt);
                opt.value = e.getEcoreTypeName();
                opt.innerHTML = e.name;
                if (e === selectedType.enumType) {
                    foundit(opt);
                }
            }
        }
        // Enum End:
        // class Start:
        if (addClass) {
            const classarr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllClasses();
            for (i = 0; i < classarr.length; i++) {
                const e = classarr[i];
                const opt = document.createElement('option');
                grpClass.appendChild(opt);
                opt.value = e.getEcoreTypeName();
                opt.innerHTML = e.name;
                if (e === selectedType.classType) {
                    foundit(opt);
                }
            }
        }
        // class End:
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.all, selectHtml);
        if (addPrimitive) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.primitives, selectHtml);
        }
        if (addEnum) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.enums, selectHtml);
        }
        if (addClass) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(Type.selectors.classes, selectHtml);
        }
        if (grpReturn.children.length)
            selectHtml.appendChild(grpReturn);
        if (grpPrimitive.children.length)
            selectHtml.appendChild(grpPrimitive);
        if (grpEnum.children.length)
            selectHtml.appendChild(grpEnum);
        if (grpClass.children.length)
            selectHtml.appendChild(grpClass);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(selectedType && !optionFound, 'selected type option not found; select:', selectHtml, ' EType.shorts:', EType, EType.shorts, ', searchedVal:', selectedType);
    }
    static linkAll() {
        for (let i = 0; i < Type.all.length; i++) {
            Type.all[i].applyTypeStr();
        }
    }
    static get(id) { return Type.allByID[id]; }
    changeType(typestr = null, primitiveType = null, classType = null, enumType = null) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe((typestr ? 1 : 0) + (primitiveType ? 1 : 0) + (classType ? 1 : 0) !== 1, 'changeType(): exactly one argument is required. str:', typestr, 'primitive:', primitiveType, 'classType:', classType);
        if (!(typestr || primitiveType || classType || enumType))
            return;
        if (typestr) {
            this.typestr = typestr;
        }
        if (primitiveType) {
            this.typestr = primitiveType.long;
        }
        if (classType) {
            this.typestr = classType.getEcoreTypeName();
        }
        if (enumType) {
            this.typestr = enumType.getEcoreTypeName();
        }
        this.applyTypeStr();
    }
    defaultValue() {
        if (this.primitiveType)
            return this.primitiveType.defaultValue;
        if (this.enumType)
            return this.enumType.childrens[0].name;
        return null;
    }
    applyTypeStr() {
        if (!this.typestr || !_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm)
            return;
        this.applyTypeStr0();
        if (this.primitiveType)
            this.printablename = this.primitiveType.getName();
        if (this.enumType)
            this.printablename = this.enumType.name;
        if (this.classType)
            this.printablename = this.classType.name ? this.classType.name : this.classType.metaParent.name;
        if (this.typestr === '???void')
            this.printablename = 'void';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.printablename, this);
    }
    applyTypeStr0() {
        // input: this.typestr
        const debug = false;
        let i;
        let oldClass = this.classType;
        let oldEnum = this.enumType;
        let oldPrimitive = this.primitiveType;
        this.enumType = this.classType = this.primitiveType = null;
        let typestr = this.typestr;
        // this.typestr = null;
        if (debug) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cclear();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'changeType()', this, this.typestr);
        this.primitiveType = EType.getFromLongString(typestr, false);
        if (!this.primitiveType) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(typestr.indexOf(Type.classTypePrefix) !== 0, 'allyTypeStr(): found typestr neither primitive nor classifier.', this.typestr, this);
            const s = typestr.substr(Type.classTypePrefix.length);
            const packages = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.childrens;
            for (i = 0; i < packages.length; i++) {
                const pkg = packages[i];
                const c = pkg.getClass(s);
                if (c) {
                    this.classType = c;
                    break;
                }
                const e = pkg.getEnum(s);
                if (e) {
                    this.enumType = e;
                    break;
                }
            }
            // if (!this.classType) this.classType = MetaModel.genericObject;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.primitiveType && !this.enumType && !this.classType, 'failed to find target: |' + typestr + '|', this, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm);
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"]) {
            if (oldClass === this.classType)
                return;
            if (oldClass) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldClass.referencesIN, this.owner);
            }
            this.classType.referencesIN.push(this.owner);
            if (this.owner.edges && this.owner.edges.length) {
                this.owner.edges[0].setTarget(this.classType.vertex);
                this.owner.edges[0].refreshGui();
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'ref target changed; type:' + this + 'inside:', this.owner);
            // this.owner.refreshGUI();
            // this.owner.setContainment(this.owner.containment, true);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'exit2: m2reference');
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'typechanged:', this.owner, this);
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"]) {
            for (i = 0; i < this.owner.instances.length; i++) {
                this.owner.instances[i].valuesAutofix();
            }
            this.owner.refreshGUI();
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pif(debug, 'exit3: attrib.');
            return;
        }
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
            this.owner.refreshGUI();
            return;
        }
        if (this.owner instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"]) {
            this.owner.refreshGUI();
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected owner instance in changeType():', this);
    }
    toEcoreString() {
        if (this.classType)
            return Type.classTypePrefix + this.classType.name;
        if (this.enumType)
            return Type.classTypePrefix + this.enumType.name;
        if (this.primitiveType)
            return this.primitiveType.long;
        return null;
    }
    toShortString() {
        if (this.classType)
            return '' + this.classType.name;
        if (this.enumType)
            return '' + this.enumType.name;
        if (this.primitiveType)
            return '' + this.primitiveType.getName();
        return null;
    }
    canOverride(other) {
        // i primitivi identici sono compatibili
        if (this === other)
            return true;
        // i primitivi diversi sono sempre incompatibili
        if (!this.classType)
            return false;
        // per le classi
        if (other.classType === other.classType)
            return true;
        return this.classType.isExtending(other.classType);
    }
    static getClassType(classe) {
        let ret = Type.getAllWithClassType(classe).map((typedd) => typedd.type);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(ret.length > 1, 'dev error: cannot have 2 types for a m2class', ret, classe);
        return ret[0];
    }
}
Type.all = [];
Type.idMax = 0;
Type.allByID = {};
Type.classTypePrefix = '#//';
Type.instanceTypePrefix = '#//'; // per puntatori m1-reference basati su meta-tipo e
Type.selectors = { all: [], primitives: [], classes: [], enums: [] };
class EType {
    constructor(long, short, defaultVal, minValue = null, maxValue = null) {
        // static TypeMap: Map<string, Map<string, string>>; // Map<TypemapName, Map<ECoreShortTypeName, TypeAlias>
        // static currentTypeMapKey: string = null;
        // name: string = null;
        this.long = null;
        this.short = null;
        this.defaultValue = null;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(EType.shorts[short], 'etype created twice:', EType.shorts[short]);
        EType.shorts[short] = this;
        this.long = long;
        this.short = short;
        this.defaultValue = defaultVal;
        this.minValue = minValue;
        this.maxValue = maxValue;
        // const alias = Status.status.typeAliasDictionary[short];
        // this.name = alias ? alias : short;
    }
    static LoadTypeMaps() {
        EType.LoadPredefinedTypeMaps();
        EType.LoadCustomTypeMaps();
    }
    static LoadPredefinedTypeMaps() {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'] = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.ecore'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong;
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'] = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void] = 'void';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar] = 'char';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString] = 'string';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate] = 'date';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat] = 'float';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble] = 'double';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean] = 'bool';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte] = 'byte';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort] = 'short';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt] = 'int';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong] = 'long';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'] = {};
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void] = 'void';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar] = 'char';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString] = 'char*';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate] = 'time_t';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat] = 'float';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble] = 'double';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean] = 'BOOL';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte] = 'unsigned char';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort] = 'short';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt] = 'int';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.c89'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong] = 'long';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'] = new Map();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void] = 'void';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar] = 'CHAR';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString] = 'VARCHAR';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate] = 'DATETIME'; // OR TIMESTAMP (quasi uguali, con diversi limini min-max)
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat] = 'FLOAT';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble] = 'DOUBLE';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean] = 'TINYINT';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte] = 'CHAR(1)';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort] = 'SMALLINT';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt] = 'INT';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.MySQL'][_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong] = 'SMALLINT';
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.user.getID() + '.custom']
            = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].cloneObj(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary['predefined.java']);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.currentTypeAlias = 'predefined.java';
    }
    static LoadCustomTypeMaps() { }
    getName(typeMapKey = null) {
        const typemap = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[typeMapKey || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.currentTypeAlias];
        return typemap && typemap[this.short] || this.short;
    } /*
      changeAlias(value: string) {
        this.name = value;
        Status.status.typeAliasDictionary[this.short] = this.getName();
        Status.status.aliasTypeDictionary[this.name] = this.short;
        Status.status.mm.refreshGUI();
        Status.status.m.refreshGUI();
        Status.status.mm.graph.propertyBar.refreshGUI();
        Status.status.m.graph.propertyBar.refreshGUI();
      }*/
    static staticInit() {
        EType.shorts = {};
        let noWarning;
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].void, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void, undefined);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDate, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate, ' ');
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EChar, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar, ' ');
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString, '');
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EBoolean, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean, true);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EByte, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte, 0, -128, 127);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EShort, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort, 0, -32768, 32767);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EInt, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt, 0, -2147483648, 2147483647);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].ELong, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong, 0, -9223372036854775808, 9223372036854775808);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EFloat, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat, 0, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);
        noWarning = new EType(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDouble, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble, 0, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);
        return EType.shorts;
    }
    static getFromLongString(ecorelongstring, throww = true) {
        switch (ecorelongstring) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(throww, 'Etype.Get() unrecognized type: ', ecorelongstring, '; string: ', _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString);
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].void: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].void);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EChar: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EChar);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EString);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EBoolean: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EBoolean);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EByte: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EByte);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EShort: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EShort);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EInt: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EInt);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].ELong: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].ELong);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EFloat: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EFloat);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDouble: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDouble);
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EDate: return EType.get(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ShortAttribETypes"].EDate);
        }
        return null;
    }
    static get(a) { return EType.shorts[a]; }
    static getAlias(a) {
        const str = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[a];
        return !str ? '' + a : _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.typeAliasDictionary[a];
    }
}
EType.shorts = {};


/***/ }),

/***/ "./src/mClass/classChild/Typedd.ts":
/*!*****************************************!*\
  !*** ./src/mClass/classChild/Typedd.ts ***!
  \*****************************************/
/*! exports provided: Typedd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Typedd", function() { return Typedd; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Joiner */ "./src/common/Joiner.ts");


class Typedd extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ModelPiece"] {
    constructor(parent, metaVersion) {
        super(parent, metaVersion);
        // upperbound and lowerbound are defining how much values can be given to a single typed element. (nullable, single value, array)
        this.upperbound = 1 || false; // to avoid stupid compiler warning on primitive types
        this.lowerbound =  false || 0;
        // tells if the values are ordered. useless if upperbound is <= 1
        this.ordered =  false && false;
        // tells if the values are a set. useless if upperbound is <= 1
        this.unique =  false && false;
        this.type = this.getModelRoot().isM2() || this.getModelRoot().isM3() ? new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"](this) : null;
    }
    // typeClassFullnameStr: string = null;
    /*
      parsePrintableTypeName(eTypeLongStr: string): void {
        this.classType = null;
        this.typeClassFullnameStr = null;
        const pkg: IPackage = this.getPackage();
        const searchStr: string = '#//' || '';
        const pos = eTypeLongStr.lastIndexOf(searchStr);
        if (pos === 0 && pkg) {
          this.typeClassFullnameStr = pkg.name + '.' + eTypeLongStr.substring(pos + searchStr.length);
          return; }
        this.updateTypeAndValue(EType.getFromLongString(eTypeLongStr), false);
        U.pe(!this.getType(), 'found json ecore type that is not a classname or a primitive type.', eTypeLongStr);
        return; }*/
    fieldChanged(e, ignoreSwitch = false) {
        const graph = this.getModelRoot().graph;
        console.log('fieldchanged typedd', e);
        if (!e) {
            // this.refreshGUI();
            graph.propertyBar.refreshGUI();
            return;
        }
        const html = e.currentTarget;
        const fromGraph = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(graph.container, html);
        const fromSidebar = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].isParentOf(graph.propertyBar.container, html);
        if (!ignoreSwitch)
            switch (html.tagName.toLowerCase()) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                    break;
                case 'textarea':
                case 'input':
                    this.setName(html.value);
                    break;
                case 'select':
                    this.setType(html.value, true, false);
                    break;
            }
        if (!fromGraph) {
            this.refreshGUI();
        }
        if (!fromSidebar) {
            graph.propertyBar.refreshGUI();
        }
    }
    setType(ecoreTypeString, throwError = true, refreshGui = true) {
        const root = this.getModelRoot();
        //  U.pe(!root.isM2(), 'only m2 model piece features, operations and parameters can change type', this);
        const type = this.getType();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(type !== this.type, 'attempting to change parent type!', this, type);
        type.changeType(ecoreTypeString);
        if (refreshGui)
            this.refreshGUI();
        return true;
    }
    // updateTypeAndValue(primitiveType: EType = null, refreshGui: boolean = true): void {}
    /*
      setClassType(classType: M2Class = null, refreshGui: boolean = true): void {
        if (!classType || this.classType === classType) { return; }
        this.classType = classType;
        if (!refreshGui) { return; }
        this.refreshGUI();
        this.refreshInstancesGUI(); }*/
    getType() { return this.type || this.metaParent.type; }
    getInfo(toLower = false) {
        const info = super.getInfo(toLower);
        if (!(this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"])) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].unset(info, 'childrens');
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'lowerBound', this.lowerbound);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'upperBound', this.upperbound);
        const type = this.getType();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'type', type.toEcoreString());
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Info"].set(info, 'typeDetail', type);
        return info;
    }
    // copy(other: IAttribute, nameAppend: string = '_Copy', newParent: IClass = null): void {
    copy(c, nameAppend = '_Copy', newParent = null) {
        super.copy(c, nameAppend, newParent);
        this.setLowerbound(c.lowerbound);
        this.setUpperbound(c.upperbound);
        this.unique = c.unique;
        this.ordered = c.ordered;
        this.setType(c.getType().toEcoreString(), null, false);
        this.refreshGUI();
    }
    getPackage() { return this.parent ? this.getClass().parent : null; }
    graph() { return this.getVertex().owner; }
    getVertex(canMakeIt = true) { return this.parent ? this.getClass().getVertex(canMakeIt) : null; }
    /*linkToMetaParent<T extends Typedd>(classChild: T) {
      U.pe(true, 'linkToMetaPrent: todo();');
      this.metaParent = classChild;
      if (!this.metaParent) { return; }
      U.ArrayAdd(this.metaParent.instances, this); }*/
    fullname() { return this.getClass().fullname() + '.' + this.name; }
    generateField() { return this.field = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IField"](this); }
    getField() { return this.field ? this.field : this.generateField(); }
    // refreshGUI_Alone(debug: boolean = true): void { this.getField().refreshGUI(true); }
    delete(refreshgui = true, fromParent = false) {
        let oldparent = this.parent;
        super.delete(false, fromParent);
        if (oldparent) {
            if (oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"]) {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.attributes, this);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.references, this);
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.operations, this);
            }
            else if (oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EEnum"]) {
                // U.arrayRemoveAll(oldparent.childrens, this as any); done in modelpiece.delete()
            }
            else if (oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) { }
            else {
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unrecognized parent class of typed modelpiece:' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getTSClassName(oldparent) + ':', this);
            }
        }
        if (refreshgui) {
            oldparent.refreshGUI();
            oldparent.refreshInstancesGUI();
        }
        while (oldparent && !(oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClassifier"])) {
            oldparent = oldparent.parent;
        }
        let classe = oldparent instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] ? oldparent : null;
        if (!fromParent && classe) {
            if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"] || this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"])
                classe.checkViolations(true);
            else
                classe.checkViolations(true);
        }
    }
    // getClassType(): M2Class { return this.type.classType; }
    getUpperbound() { return this.upperbound; }
    getLowerbound() { return this.lowerbound; }
    setUpperbound(val) { this.upperbound = isNaN(+val) ? -1 : +val; }
    setLowerbound(val) { this.lowerbound = isNaN(+val) || +val < 0 ? 0 : +val; }
}


/***/ }),

/***/ "./src/mClass/iClass.ts":
/*!******************************!*\
  !*** ./src/mClass/iClass.ts ***!
  \******************************/
/*! exports provided: ClassInheritance, IClass, M3Class */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassInheritance", function() { return ClassInheritance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IClass", function() { return IClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M3Class", function() { return M3Class; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _IClassifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IClassifier */ "./src/mClass/IClassifier.ts");
/* harmony import */ var _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../guiElements/mGraph/Edge/edgeStyle */ "./src/guiElements/mGraph/Edge/edgeStyle.ts");




class ClassInheritance {
}
class IClass extends _IClassifier__WEBPACK_IMPORTED_MODULE_2__["IClassifier"] {
    constructor(parent, meta) {
        super(parent, meta);
        this.referencesIN = []; // external pointers to this class.
        this.shouldBeDisplayedAsEdgeVar =  false && false;
        this.extends = [];
        this.gotExtendedBy = [];
        this.edges = [];
        if (this.parent) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.parent.classes, this);
        }
        // let selectedcolor: string = 'var(--'; todo, ma crea problemi con l'input type color
        let html;
        let complementaHex = (hexstr) => { return '#' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toHex(16777215 - (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].hexToNum(hexstr)), 6); };
        let i;
        this.edgeStyleCommon = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, 2, '#7f7f7f', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#000000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__["EdgeHeadStyle"](20, 20, '#7f7f7f', '#7f7f7f'));
        this.edgeStyleHighlight = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, 2, '#ffffff', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#0077ff'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__["EdgeHeadStyle"](20, 20, '#ffffff', '#ffffff'));
        this.edgeStyleSelected = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeStyle"](_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgeModes"].angular23Auto, 4, '#ffffff', new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EdgePointStyle"](5, 2, '#ffffff', '#ff0000'), new _guiElements_mGraph_Edge_edgeStyle__WEBPACK_IMPORTED_MODULE_3__["EdgeHeadStyle"](25, 25, '#ffffff', '#ffffff'));
        switch (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].get()) {
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected website theme: |' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].get() + '|' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].Light + '|');
                break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].Dark: break;
            case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["WebsiteTheme"].Light:
                let edgeStyles = [this.edgeStyleCommon, this.edgeStyleHighlight, this.edgeStyleSelected];
                for (i = 0; i < edgeStyles.length; i++) {
                    // todo: problema: on load è corretto, ma a runtime cambia il tema ma gli oggetti già creati hanno questo stile. andrebbe salvato null e calcolato a runtime sull'arco
                    let style = edgeStyles[i];
                    style.color = complementaHex(style.color);
                    style.edgePointStyle.fillColor = complementaHex(style.edgePointStyle.fillColor);
                    style.edgePointStyle.strokeColor = complementaHex(style.edgePointStyle.strokeColor);
                    style.edgeHeadStyle.stroke = complementaHex(style.edgeHeadStyle.stroke);
                    style.edgeHeadStyle.fill = '#ffffff'; // complementaHex(style.edgeHeadStyle.fill); // nope, il centro è e deve essere sempre bianco
                }
                break;
        }
    }
    getReferences(personal = true, inherited = true) {
        let refs = this.references;
    }
    getChildrenAttribute(index) { return [...this.getAllAttributes()][index]; }
    getChildrenReference(index) { return [...this.getAllReferences()][index]; }
    getChildrenOperation(index) { return [...this.getAllOperations()][index]; }
    getChildrenAttributeSelector(index) { return this.getChildrenAttribute(index).getSelector(); }
    getChildrenReferenceSelector(index) { return this.getChildrenReference(index).getSelector(); }
    getChildrenOperationSelector(index) { return this.getChildrenOperation(index).getSelector(); }
    fullname() { return this.parent.name + '.' + this.name; }
    generateEdge() { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'IClass.generateEdge() todo.'); return null; }
    canBeLinkedTo(target) {
        if (!this.shouldBeDisplayedAsEdge()) {
            return false;
        }
        return false;
    }
    getEdges() { return this.edges; }
    delete(refreshgui = true, fromParent = false) {
        const oldparent = this.parent;
        super.delete(false, fromParent);
        if (oldparent)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(oldparent.classes, this);
        /*
        che fare con le reference a quella classe? così cancello i campi.
        const pointers: IReference[] = U.shallowArrayCopy(this.getReferencePointingHere());
        let i;
        for (i = 0; i < pointers.length; i++) { pointers[i].delete(); }
        */
        if (refreshgui)
            this.refreshGUI();
    }
    refreshGUI_Alone(debug) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedLogic) {
            return;
        }
        if (this.shouldBeDisplayedAsEdge()) {
            if (this.vertex) {
                this.vertex.remove();
                this.vertex = null;
            }
            const edges = this.getEdges();
            let i;
            for (i = 0; i < edges.length; i++) {
                edges[i].refreshGui(debug);
            }
            return;
        }
        super.refreshGUI_Alone();
    }
    getReferencePointingHere() { return this.referencesIN; }
    getAttribute(name, caseSensitive = false) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        let attributes = [...this.getAllAttributes()];
        for (i = 0; i < attributes.length; i++) {
            const s = attributes[i].name;
            if ((caseSensitive ? s : s.toLowerCase()) === name) {
                return attributes[i];
            }
        }
        return null;
    }
    getReference(name, caseSensitive = false) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        let references = [...this.getAllReferences()];
        for (i = 0; i < references.length; i++) {
            const s1 = references[i].name;
            console.log('find IReference[' + s1 + '] =?= ' + name + ' ? ' + (caseSensitive ? s1 : s1 && s1.toLowerCase()) === name);
            if ((caseSensitive ? s1 : s1 && s1.toLowerCase()) === name) {
                return references[i];
            }
        }
        return null;
    }
    getOperations(name, caseSensitive = true) {
        let i;
        if (!caseSensitive) {
            name = name.toLowerCase();
        }
        let ret = [];
        let operations = [...this.getAllOperations()];
        for (i = 0; i < operations.length; i++) {
            const s1 = operations[i].name;
            console.log('find EOperation[' + s1 + '] =?= ' + name + ' ? ' + (caseSensitive ? s1 : s1 && s1.toLowerCase()) === name);
            if ((caseSensitive ? s1 : s1 && s1.toLowerCase()) === name) {
                ret.push(operations[i]);
            }
        }
        return ret;
    }
    mark(markb, paired, key, color = null, radiusX = 10, radiusY = 10, width = 5, backColor = 'transparent', extraOffset = null) {
        const vertex = this.getVertex();
        // const edge: IEdge[] = (this as any as IReference | IClass).getEdges();
        if (vertex && vertex.isDrawn()) {
            vertex.mark(markb, key, color, radiusX, radiusY, width, backColor, extraOffset);
        }
        let edges = null;
        if (this instanceof IClass && this.shouldBeDisplayedAsEdge()) {
            edges = this.getEdges();
        }
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
            edges = this.getEdges();
        }
        let i;
        for (i = 0; edges && i < edges.length; i++) {
            edges[i].mark(markb, key, color);
        }
    }
    /*generateEdge(): IEdge[] {
  
      const e: IEdge = null;
      U.pw(true, 'Class.generateEdge(): todo');
      // todo check questa funzione e pure il shouldbedisplayedasedge
      this.edges = [e];
      return this.edges; }*/
    copy(other, nameAppend = '_Copy', newParent = null) {
        super.copy(other, nameAppend, newParent);
        this.attributes = [];
        this.references = [];
        this.edges = [];
        this.edgeStyleCommon = other.edgeStyleCommon.duplicate();
        this.edgeStyleHighlight = other.edgeStyleHighlight.duplicate();
        this.edgeStyleSelected = other.edgeStyleSelected.duplicate();
        let i;
        for (i = 0; i < this.childrens.length; i++) {
            const child = this.childrens[i];
            if (child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
                this.references.push(child);
                continue;
            }
            if (child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
                this.attributes.push(child);
                continue;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'found class.children not reference neither attribute: ', child);
        }
    }
    getAllOperations() {
        return new Set(this.getAllChildrens(true, false, false, false));
    }
    getAllAnnotations() {
        return this.getAllChildrens(false, true, false, false);
    }
    /*
      getDisplayedChildrens(): Set<Typedd> { return this.getBasicChildrens(); }
      getDisplayedOperations(): Set<EOperation> { return this.getBasicOperations(); }
      getDisplayedAttributes(): Set<IAttribute> { return this.getBasicAttributes(); }
      getDisplayedReferences(): Set<IReference> { return this.getBasicReferences(); }*/
    getBasicChildrens(includeOperations = true, includeAnnotations = true, includeAttributes = true, includeReferences = true, includeShadowed = false /*null = both shadow and unshadow, true = onlyshadowed*/) {
        // if (includeOperations && includeAnnotations) return new Set(this.childrens);
        const arr = [];
        let j;
        const isM2 = this.getModelRoot().isM2();
        for (j = 0; j < this.childrens.length; j++) {
            const child = this.childrens[j];
            // console.log('getBasicChildrens', child.metaParent, this.metaParent, child, this);
            if (child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"] && child.isInherited(this))
                continue; // for m1
            if (!isM2 && (includeAttributes || includeReferences) && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IFeature"]) {
                if (includeShadowed !== null && child.isShadowed(this) !== includeShadowed)
                    continue;
            }
            if (includeAttributes && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IAttribute"]) {
                arr.push(child);
                continue;
            }
            if (includeReferences && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IReference"]) {
                arr.push(child);
                continue;
            }
            if (includeOperations && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"]) {
                arr.push(child);
                continue;
            }
            if (includeAnnotations && child instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EAnnotation"]) {
                arr.push(child);
                continue;
            }
            // U.pe(true, 'unexpected type of children basic:', child);
        }
        return new Set(arr);
    }
    checkViolations(toAllChain = true) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm)
            return;
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Class"])
            this.calculateInheritanceViolations(toAllChain);
        // this.calculateShadowings(toAllChain);
    }
}
class M3Class extends IClass {
    constructor(parent, json = null) {
        super(parent, null);
        this.parse(json, true);
    }
    duplicate(nameAppend, newParent) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Class.duplicate()'); return this; }
    generateModel(loopDetectionObj = null) { _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'Invalid operation: m3Class.generateModel()'); return this; }
    parse(json, destructive) {
        this.name = 'Class';
        this.childrens = [];
        this.attributes = [];
        this.references = [];
        this.instances = [];
        const a = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Attribute"](this, null);
        const r = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M3Reference"](this, null);
        const o = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"](this, null);
        const p = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EParameter"](o, null);
    }
    getAllChildrens(includeOperations, includeAnnotations, includeAttributes, includeReferences, 
    /*null = both shadow and unshadow, true = onlyshadowed*/ includeShadowed) {
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, "m3.getallchildrens()");
        return null;
    }
    getAllAttributes() { return new Set(this.attributes); }
    getAllReferences() { return new Set(this.references); }
    getAllOperations() { return new Set(this.operations); }
    getBasicAttributes() { return this.getAllAttributes(); }
    getBasicReferences() { return this.getAllReferences(); }
    getBasicOperations() { return this.getAllOperations(); }
    getBasicAnnotations() { return this.getAllAnnotations(); }
}


/***/ }),

/***/ "./src/mClass/m2Class.ts":
/*!*******************************!*\
  !*** ./src/mClass/m2Class.ts ***!
  \*******************************/
/*! exports provided: M2Class */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M2Class", function() { return M2Class; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_2__);



class M2Class extends _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["IClass"] {
    /*
      static updateAllMMClassSelectors(root0: Element = null, updateModel: boolean = false, updateSidebar: boolean = true): void {
        let root: Element = root0;
        if (!Status.status.loadedGUI) { return; }
        if (!root) { root = Status.status.mm.graph.container; }
        // console.log('updateAllMMClassSelectors()', 'selects:', $selectors, root);
        const $selectors = $(root).find('select.ClassSelector');
        let i = -1;
        while (++i < $selectors.length) { M2Class.updateMMClassSelector($selectors[i] as HTMLSelectElement); }
        if (updateSidebar && Status.status.m && Status.status.m.sidebar) { Status.status.m.sidebar.loadDefaultHtmls(); }
        if (!updateModel) { return; }
        // if (Status.status.mm && Status.status.mm.sidebar) { Status.status.mm.sidebar.updateAll(); }
        if (Status.status.m) { Status.statm.refreshGUI(); }
      }
    /*
      static updateMMClassSelector(htmlSelect: HTMLSelectElement, selected: M2Class = null, debug = false,
                                   mustSelect: boolean = true): HTMLSelectElement {
        if (!htmlSelect || !Status.status.loadedGUI) { return; }
        const optGrp: HTMLOptGroupElement = document.createElement('optgroup');
        let toSelect: string;
        if (debug) { console.clear(); }
        if (mustSelect && !selected) {
          const mp: ModelPiece = ModelPiece.getLogic(htmlSelect);
          U.pif(debug, 'ownermp:', mp, 'select:', htmlSelect);
          // if (ownermp instanceof IAttribute || ownermp instanceof MAttribute) { selected = ownermp.parent as M2Class; }
          if (mp instanceof Typedd) { selected = (mp as Typedd).type; }
          U.pw(!selected, 'ClassSelectors must be held inside a m2-reference:', htmlSelect, 'ownermp:', mp) ;
          if (!selected) { return; }
        }
        toSelect = '' + (selected ? selected.id : '');
        U.pif(debug, 'selected:', selected);
        U.clear(htmlSelect);
        htmlSelect.appendChild(optGrp);
        optGrp.setAttribute('label', 'Class list');
        const mmClasses: M2Class[] = Status.status.mm.getAllClasses();
        let i: number;
        let found: boolean = !mustSelect;
        for (i = 0; i < mmClasses.length; i++) {
          const classe: M2Class = mmClasses[i];
          if (classe.shouldBeDisplayedAsEdge()) { continue; }
          const opt: HTMLOptionElement = document.createElement('option');
          opt.value = '' + classe.id;
          if (toSelect && opt.value === toSelect) { opt.setAttribute('selected', ''); opt.selected = found = true; }
          // console.log('mustselect?' + mustSelect + ': ' + toSelect + '&&' + opt.value + ' ? ' + found);
          opt.innerHTML = classe.name;
          optGrp.appendChild(opt); }
        U.pw(debug && !found, 'class not found.', mmClasses, 'searchedClass:', selected,
          'shouldBeEdge?', selected && selected.shouldBeDisplayedAsEdge());
        return htmlSelect; }
    */
    // isRoot(): boolean { U.pe(true, 'm2 class cannot be roots.'); return false; }
    // setRoot(value: boolean): void { U.pe(true, 'only usable in model version'); }
    constructor(pkg, json, allowWarning = true) {
        super(pkg, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mmm.getAllClasses()[0]);
        // features: M2Feature[]; // M2Feature[];
        this.operations = [];
        this.extends = [];
        this.gotExtendedBy = [];
        this.visibility = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AccessModifier"].package;
        this.instances = [];
        if (!pkg && !json) {
            return;
        } // empty constructor for .duplicate();
        this.parse(json, true, allowWarning);
        this.setExtends(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject, true, false, false);
    }
    getAccessModifier() { return this.visibility; }
    getVisibility() { return this.getAccessModifier(); }
    setAccessModifier(a) {
        const output = { reason: '' };
        if (!this.canChangeAccessModifierValidityTo(a, output, true)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'cannot set visibility scope to "' + a.toString() + '" because ' + output.reason);
        }
        this.visibility = a;
    }
    canChangeAccessModifierValidityTo(a, { reason: string }, allowMark = false) {
        //todo: controlla che le m2-reference e utilizzo nei parametri rispettino il visibility scope
        return true;
    }
    getAllSuperClasses(plusThis = false) {
        // :this sembra buggato come parametro input: se gli passo un parametro stesso tipo mi da comunque errore, ma accetta letteralmente "this"...
        let i;
        /*
        const set: Set<IClass> = plusThis ? new Set<IClass>([this as any]) : new Set();
        for (i = 0; i < this.extends.length; i++) {
          U.SetMerge(true, set, this.extends[i].getAllSuperClasses(true)); }
        return [...set];*/
        // deve fare una ricerca per ordini dell'albero (width, non per depth nel grafo)
        const visited = new Map();
        const queue = plusThis ? [this, ...this.extends] : [...this.extends];
        const ret = [];
        for (i = 0; i < queue.length; i++) {
            let elem = queue[i];
            if (visited[elem.id])
                continue;
            visited[elem.id] = elem;
            ret.push(elem);
            queue.push(...elem.extends);
        }
        return ret;
    }
    getAllSubClasses(plusThis = false) {
        let i;
        const set = plusThis ? new Set([this]) : new Set();
        for (i = 0; i < this.gotExtendedBy.length; i++) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].SetMerge(true, set, this.gotExtendedBy[i].getAllSubClasses(true));
        }
        return [...set];
    }
    getBasicExtends(plusThis = false) { return plusThis ? [this, ...this.extends] : this.extends; }
    canExtend(superclass, output = { reason: '', indirectExtendChain: null }) {
        if (!superclass) {
            output.reason = 'Invalid extend target: ' + superclass;
            return false;
        }
        if (superclass === this) {
            output.reason = 'Classifiers cannot extend themself.';
            return false;
        }
        if (this.extends.indexOf(superclass) >= 0) {
            output.reason = 'Target class is already directly extended.';
            return false;
        }
        if (!this.getModelRoot().isM2()) {
            output.reason = 'Only a M2 IClassifier can extend other IClassifiers.';
            return false;
        }
        output.indirectExtendChain = output.indirectExtendChain || superclass.getAllSuperClasses(false);
        if (this.getAllSuperClasses(false).indexOf(superclass) >= 0) {
            output.reason = 'Target class is already indirectly extended.';
            return false;
        }
        if (output.indirectExtendChain.indexOf(this) >= 0) {
            output.reason = 'Cannot set this extend, it would cause a inheritance loop.';
            return false;
        }
        // ora verifico se causa delle violazioni di override (attibuti omonimi string e boolean non possono overridarsi)
        let i;
        let j;
        let childrens = [...this.getBasicOperations()];
        let superchildrens = [...superclass.getBasicOperations()];
        for (i = 0; i < childrens.length; i++) {
            let op = childrens[i];
            for (j = 0; j < superchildrens.length; j++) {
                let superchildren = superchildrens[j];
                if (op.name !== superchildren.name)
                    continue;
                if (op.canOverride(superchildren) || op.canPolymorph(superchildren))
                    continue;
                output.reason = 'Marked homonymous operations cannot override nor polymorph each others.';
                setTimeout(() => {
                    op.mark(true, superchildren, 'override');
                    setTimeout(() => { op.mark(false, superchildren, 'override'); }, 3000);
                }, 1);
                return false;
            }
        }
        return true;
    }
    isExtending(superclass, orEqual = true) {
        if (!superclass)
            return false;
        const extendss = this.getAllSuperClasses(orEqual);
        let i;
        for (i = 0; i < extendss.length; i++) {
            if (superclass === extendss[i]) {
                return true;
            }
        }
        return false;
    }
    setExtends(superclass, refreshGUI = true, force = false, print = false, debug = false) {
        debug && console.trace('SetExtend:', this, this.name);
        let out = { reason: '', indirectExtendChain: null };
        if (!this.canExtend(superclass, out)) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(print, out.reason);
            if (!force)
                return false;
        }
        this.extends.push(superclass);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(superclass.gotExtendedBy, this);
        let i;
        let instances = [...this.instances];
        if (this instanceof M2Class)
            for (let instance of instances) {
                instance.convertTo(this);
            }
        if (refreshGUI)
            this.refreshGUI_Alone();
        const extendChildrens = this.getAllSuperClasses(true);
        debug && console.log('calculateViolationsExtend childrens:' + extendChildrens, this);
        if (refreshGUI)
            for (i = 0; i < extendChildrens.length; i++) {
                let extChild = extendChildrens[i];
                debug && console.log('calculateViolationsExtend');
                extChild.checkViolations(false);
            }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(print, instances.length + ' instances adapted.');
        // if (this.vertex) this.vertex.owner.propertyBar.refreshGUI();
        // if (this.vertex) this.vertex.owner.propertyBar.show(this,null, true, true);
        return true;
    }
    unsetExtends(superclass, removeEdge = true) {
        if (!superclass)
            return;
        console.log('UnsetExtend:', this, this.name);
        if (superclass === _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'Cannot un-extend "' + _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MetaModel"].genericObject.name + '"');
            return;
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!this.getModelRoot().isM2(), 'Only m2 IClassifier can un-extend other IClassifiers.');
        let index = this.extends.indexOf(superclass);
        if (index < 0)
            return;
        let i;
        this.extends.splice(index, 1);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].arrayRemoveAll(superclass.gotExtendedBy, this);
        this.refreshGUI_Alone();
        if (this instanceof M2Class) {
            for (i = 0; i < this.instances.length; i++) {
                (this).instances[i].doUnsetExtends(superclass);
            }
            if (removeEdge)
                for (i = 0; i < this.extendEdges.length; i++) {
                    let extedge = this.extendEdges[i];
                    if (extedge.end.logic() == superclass) {
                        extedge.remove();
                    }
                }
        }
        const extendChildrens = this.getAllSubClasses(true);
        for (i = -1; i < extendChildrens.length; i++) {
            let extChild = i === -1 ? this : extendChildrens[i];
            extChild.checkViolations(true);
        }
    }
    calculateInheritanceViolations(toAllChain = false) {
        if (!_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.loadedGUI)
            return;
        let i;
        let j;
        if (toAllChain) {
            let classes = [this];
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(classes, this.getAllSubClasses(false));
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(classes, this.getAllSuperClasses(false));
            for (i = 0; i < classes.length; i++) {
                classes[i].checkViolations(false);
            }
        }
        let operations = [...this.getAllOperations()];
        // console.log('civ operation: ', this, operations);
        for (j = 0; j < operations.length; j++) {
            let op1 = operations[j];
            op1.unmarkAllIncompatibility();
            for (i = 0; i < operations.length; i++) {
                let op2 = operations[i];
                let ret = op1.isCompatible(op2, true);
                // console.log('civ operation[' + j + '] = ', ret, op1.name, op2.name, op1, op2, this, operations);
            }
        }
    }
    getTypeConversionScoresManual(candidateClasses) {
        const map = {};
        const ret = [];
        const sortingFunction = (e1, e2) => {
            let s1 = e1.order; //  (e1.features + "." + e1.operations + "." + e1.annotations).replace("-", "Z");
            let s2 = e2.order; // (e2.features + "." + e2.operations + "." + e2.annotations).replace("-", "Z");
            return s1.localeCompare(s2);
            /*
              // confronto feature number
              if (e1.features !== e2.features) {
                if (e1.features < 0) return e1.features + e2.features;// -1 + -5 = -6 (e1 prima di e2),  -1 + -5 = +4 (e1 dopo e2)
                else return e1.features - e2.features;// +1 - -5 = +6 (e1 dopo di e2),  +1 - 5 = -4 (e1 prima di e2)
              }
              // confronto operations number
              if (e1.operations !== e2.operations) {
                if (e1.operations < 0) return e1.operations + e2.operations;
                else return e1.operations - e2.operations;
              }
              // confronto annotations number
              if (e1.annotations !== e2.annotations) {
                if (e1.annotations < 0) return e1.annotations + e2.annotations;
                else return e1.annotations - e2.annotations;
              }
              return 0;*/
        };
        candidateClasses = candidateClasses.filter((c) => !c.getInterface() && !c.getAbstract());
        const myFeatures = this.getAllChildrens(false, false);
        const myOperations = this.getAllChildrens(true, false, false, false);
        const myAnnotations = this.getAllChildrens(false, true, false, false);
        for (let i = 0; i < candidateClasses.length; i++) {
            const candidate = candidateClasses[i];
            let featureAdd = candidate.getAllChildrens(false, false).length - myFeatures.length;
            let operationsAdd = candidate.getAllChildrens(true, false, false, false).length - myOperations.length;
            let annotationsAdd = candidate.getAllChildrens(false, true, false, false).length - myAnnotations.length;
            let elem = { class: candidate, features: featureAdd, operations: operationsAdd, annotations: annotationsAdd };
            ret.push(elem);
            const order = (featureAdd + "." + operationsAdd + "." + annotationsAdd).replace("-", "Z");
            elem.order = order;
            // if (map[order]) continue;
            // map[order] = candidate;
        }
        // let lowestKey: string = Object.keys(map).sort()[0];
        // return map[lowestKey];
        return ret.sort(sortingFunction);
    }
    getTypeConversionScores(allowSuperClass = true, allowSubClass = true) {
        let candidateClasses = [];
        if (allowSuperClass)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(candidateClasses, this.getAllSuperClasses(false));
        if (allowSubClass)
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayMerge(candidateClasses, this.getAllSubClasses(false));
        return this.getTypeConversionScoresManual(candidateClasses);
    }
    // getDisplayedChildrens(): Set<EOperation | M2Feature> { return this.getBasicChildrens(); }
    //getBasicChildrens(): Set<M2Feature | EOperation> { return super.getBasicChildrens() as Set<M2Feature | EOperation>; }
    // getAllChildrens(): (M2Feature | EOperation)[] { return super.getAllChildrens() as (M2Feature | EOperation)[]; }
    getAllChildrens(includeOperations = true, includeAnnotations = true, includeAttributes = true, includeReferences = true, 
    /*null = both shadow and unshadow, true = onlyshadowed*/ includeShadowed = true) {
        //todo: actually since getAllExtends returns an array made from a set, and a class cannot contain duplicates, it cannot contain duplicates.
        // sets here are redundant.
        const extendchain = this.getAllSuperClasses(true); // this.getAllExtends(true);
        let i;
        const ret = [];
        // features and operations can share names
        // features with same name on different classes will just shadow each other without overriding
        // override solo se signature identica.
        // se signature identica e return primitivo diverso: invalido.
        // se signature identica e return Object più specifico: valido.
        for (i = 0; i < extendchain.length; i++) {
            ret.push(...extendchain[i].getBasicChildrens(includeOperations, includeAnnotations, includeAttributes, includeReferences, includeShadowed));
        }
        return ret;
    }
    getAllAttributes() {
        return new Set(this.getAllChildrens(false, false, true, false));
    }
    getAllReferences() {
        return new Set(this.getAllChildrens(false, false, false, true));
    }
    getBasicAttributes() { return new Set(this.attributes); }
    getBasicReferences() { return new Set(this.references); }
    getBasicOperations() { return new Set(this.operations); }
    getBasicAnnotations() { return (this.annotations); }
    getModelRoot(acceptNull = false) { return super.getModelRoot(acceptNull); }
    getNamespaced() {
        const str = this.getModelRoot().namespace();
        if (this instanceof _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Model"]) {
            return str;
        }
        return str + ':' + this.name;
    }
    parse(json, destructive, allowWarning = true) {
        //     console.log('M2Class.parse(); json:', json, '; metaVersion: ', this.metaParent, 'this:', this);
        /// own attributes.
        this.extendEdges = [];
        this.setName(_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].namee, 'Class_1'), false, allowWarning);
        let key;
        for (key in json) {
            switch (key) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pw(true, 'unexpected field in M2Class.parse() |' + key + '|', json);
                    break;
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].instanceTypeName:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eSuperTypes:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eOperations:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eStructuralFeatures:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].abstract:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].interface:
                case _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].namee: break;
            }
        }
        this.instanceTypeName = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].instanceTypeName, '');
        this.isInterface = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].interface, 'false') === 'true';
        this.isAbstract = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].abstract, 'false') === 'true';
        let tmps = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(json, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eSuperTypes, null);
        this.extendsStr = tmps ? tmps.split(' ') : [];
        // U.pe(true, 'extendsStr:', this.extendsStr, 'tmps', tmps, 'typeof tmps:' + typeof(tmps), 'json:', json);
        /*this.name = Json.read<string>(this.json, ECoreClass.name);
        this.fullname = this.midname = this.parent.fullname + '.' + this.name;*/
        /// childrens
        const features = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json);
        const functions = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].getChildrens(json, false, true);
        let i;
        let newFeature;
        const oldChildrens = this.childrens;
        // let metaParent: M3Feature;
        if (destructive) {
            this.childrens = [];
            this.attributes = [];
            this.references = [];
            this.operations = [];
        }
        for (i = 0; i < features.length; i++) {
            // console.log('reading class children[' + i + '/' + childs.length + '] of: ', childs, 'of', json);
            const child = features[i];
            const xsiType = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Json"].read(child, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreAttribute"].xsitype);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!destructive, 'Non-destructive class parse: to do');
            switch (xsiType) {
                default:
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected xsi:type: ', xsiType, ' in feature:', child);
                    break;
                case 'ecore:EAttribute':
                    // metaParent = oldChildrens[i] && oldChildrens[i].metaParent ? oldChildrens[i].metaParent : U.findMetaParentA(this, child);
                    newFeature = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"](this, child);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.attributes, newFeature);
                    break;
                case 'ecore:EReference':
                    const metaRef = null;
                    // metaParent = oldChildrens[i] && oldChildrens[i].metaParent ? oldChildrens[i].metaParent : U.findMetaParentA(this, child);
                    newFeature = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"](this, child);
                    _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.references, newFeature);
                    break;
            }
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newFeature);
        }
        for (i = 0; i < functions.length; i++) {
            const newFunction = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"](this, functions[i]);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.operations, newFunction);
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ArrayAdd(this.childrens, newFunction);
        }
    }
    generateModel(loopDetectionObj = null) {
        const featurearr = [];
        const operationsarr = [];
        const model = {};
        let supertypesstr = '';
        const key = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].getStartSeparatorKey();
        let i;
        for (i = 0; i < this.extends.length; i++) {
            supertypesstr += _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].startSeparator(key, ' ') + this.extends[i].getEcoreTypeName();
        }
        for (i = 0; i < this.attributes.length; i++) {
            featurearr.push(this.attributes[i].generateModel(loopDetectionObj));
        }
        for (i = 0; i < this.references.length; i++) {
            featurearr.push(this.references[i].generateModel(loopDetectionObj));
        }
        for (i = 0; i < this.operations.length; i++) {
            operationsarr.push(this.operations[i].generateModel(loopDetectionObj));
        }
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].xsitype] = 'ecore:EClass';
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].namee] = this.name;
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].interface] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toBoolString(this.isInterface, false);
        model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].abstract] = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].toBoolString(this.isAbstract, false);
        if (this.instanceTypeName)
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].instanceTypeName] = this.instanceTypeName;
        if (supertypesstr)
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eSuperTypes] = supertypesstr;
        if (featurearr)
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eStructuralFeatures] = featurearr;
        if (operationsarr)
            model[_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ECoreClass"].eOperations] = operationsarr;
        return model;
    }
    addOperation() {
        const op = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["EOperation"](this, null);
        let i;
        for (i = 0; i < this.instances.length; i++) {
            const inst = this.instances[0];
        }
        this.refreshInstancesGUI();
        this.refreshGUI();
        return op;
    }
    addReference() {
        const ref = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Reference"](this, null);
        ref.type.changeType(null, null, this);
        ref.generateEdges();
        let i;
        for (i = 0; i < this.instances.length; i++) {
            const inst = this.instances[i];
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MReference"](inst, null, ref);
        }
        this.refreshInstancesGUI();
        this.refreshGUI();
        // M2Class.updateAllMMClassSelectors(ref.getHtml());
        return ref;
    }
    addAttribute() {
        console.log('addAttribute: pre', this);
        const attr = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["M2Attribute"](this, null);
        let i;
        for (i = 0; i < this.instances.length; i++) {
            const inst = this.instances[i];
            new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["MAttribute"](inst, null, attr);
        }
        this.refreshInstancesGUI();
        this.refreshGUI();
        return attr;
    }
    fieldChanged(e) {
        const html = e.currentTarget;
        if (html.classList.contains('AddFieldSelect'))
            return;
        switch (html.tagName.toLowerCase()) {
            case 'select':
            default:
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(true, 'unexpected tag:', html.tagName, ' of:', html, 'in event:', e);
                break;
            case 'textarea':
            case 'input':
                const input = html;
                input.value = this.setName(input.value);
                break;
        }
    }
    /*
      setName(name: string, refreshGUI: boolean = true): void {
        super.setName(name, refreshGUI);
        return;
        this.midname = this.parent.name + '.' + this.name;
        this.fullname = this.midname;
        let i;
        for (i = 0; i < this.childrens.length; i++) {
          this.childrens[i].setName(this.childrens[i].name, false && refreshGUI); // per aggiornare il fullname.
        }
        if (refreshGUI) { this.refreshGUI(); M2Class.updateAllMMClassSelectors(); }
    }*/
    duplicate(nameAppend = '_Copy', newParent = null) {
        const c = new M2Class(null, null);
        c.copy(this);
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].updateTypeSelectors(null, false, false, true);
        c.refreshGUI();
        return c;
    }
    /*
      getExtendedClassArray(levelDeep: number = Number.POSITIVE_INFINITY, out: M2Class[] = []): M2Class[] {
        let i: number;
        for (i = 0; i < this.extends.length; i++ ) {
          const curr: M2Class = this.extends[i];
          U.ArrayAdd(out, curr);
          if (levelDeep > 0) { curr.getExtendedClassArray(levelDeep--, out); }
        }
        return out; }*/
    // linkToMetaParent(meta: M3Class): void { return super.linkToMetaParent(meta); }
    getReferencePointingHere() { return super.getReferencePointingHere(); }
    getAttribute(name, caseSensitive = false) { return super.getAttribute(name, caseSensitive); }
    getReference(name, caseSensitive = false) { return super.getReference(name, caseSensitive); }
    /*
      isExtending(subclass: M2Class): boolean {
        if (!subclass) return false;
        const extendedTargetClasses: M2Class[] = subclass.getExtendedClassArray();
        let i: number;
        for (i = 0; i < extendedTargetClasses.length; i++) {
          if (this === extendedTargetClasses[i]) { return true; }
        }
        return false;
      }*/
    delete(refreshgui = true, fromParent = false) {
        const scores = this.getTypeConversionScores(true, true);
        const newType = scores.length > 0 && scores[0].class;
        if (newType)
            this.convertInstancesTo(newType);
        if (_common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.allowGenericObjects)
            this.forceChangeType(newType);
        super.delete(false, fromParent); // will remove remaining unconverted instances
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.refreshGUI();
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.refreshInstancesGUI();
        // Type.updateTypeSelectors(null, false, false, true);
    }
    forceChangeType(newType = null) {
        let i;
        let typeds = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].getAllWithClassType(this);
        // NB: esistono ancora m1-object che puntano a m1-object istanze di questo oggetto, perchè le istanze vengono cancellate in super.delete() (MP level)
        // e quando cancelli il vertice di una istanza a catena cancelli prima gli edge e quindi resetti le references attive,
        // però il tipo puntato rimarrebbe a questa classe.
        const newTypeStr = newType && newType.getEcoreTypeName() || _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["AttribETypes"].EString;
        for (i = 0; i < typeds.length; i++) {
            let typed = typeds[i];
            typed.setType(newTypeStr);
        }
        typeds = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].getAllWithClassType(this);
        console.log('wew', "failed to change all types:", typeds, this, _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all.map((t) => t.printablename + '_' + (t.classType && t.classType.getEcoreTypeName())), _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Type"].all.filter((t) => (t.classType && t.classType.getEcoreTypeName() === this.getEcoreTypeName())));
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!!typeds.length, "failed to change all types:", typeds, this);
    }
    static updateSuperClasses() {
        const dictionary = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getEcoreStr_Class_Dictionary();
        const classes = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.mm.getAllClasses();
        let j;
        let i;
        for (i = 0; i < classes.length; i++) {
            const classe = classes[i];
            for (j = 0; j < classe.extendsStr.length; j++) {
                const target = dictionary[classe.extendsStr[j]];
                _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(!target, 'e1, failed to find extended class.extendsStr[' + j + ']:', classe.extendsStr[j], 'in classList:', classes, 'classe to extend:', classe, 'dictionary:', dictionary);
                classe.setExtends(target, false, true, false);
            }
            classe.extendsStr = [];
        }
    }
    /*
    public extendClass(targetstr: string, target: M2Class): void {
      if (!target) target = this.getModelRoot().getClassFromEcoreStr(targetstr);
      U.pe(!target, 'e2, failed to find extended class:', targetstr, 'in classList:', Status.status.mm.getAllClasses(), 'this:', this);
      U.ArrayAdd(this.extends, target);
    }
    public unextendClass(targetstr: string, target: M2Class): void {
      if (!target) target = this.getModelRoot().getClassFromEcoreStr(targetstr);
      U.pe(!target, 'e3, failed to find extended class:', targetstr, 'in classList:', Status.status.mm.getAllClasses(), 'this:', this);
      U.arrayRemoveAll(this.extends, target);
    }*/
    makeExtendEdge(target) {
        const ret = new _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["ExtEdge"](this, this.getVertex(), target.getVertex(), null);
        this.extendEdges.push(ret);
        return ret;
    }
    getAbstract() { return this.isAbstract; }
    getInterface() { return this.isInterface; }
    canBeInterface(value, outputReason) {
        let i;
        if (!value) {
            const subclasses = this.getAllSubClasses(false);
            for (i = 0; i < subclasses.length; i++) {
                const ext = subclasses[i];
                if (ext.getInterface()) {
                    // no interfacce sotto questa classe
                    if (outputReason)
                        outputReason.text = '"' + this.name + '" cannot cease to be an interface because it is extended by "'
                            + ext.name + '" wich is an interface.' + ' Update their relationship befor proceeding.';
                    return false;
                }
            }
            return true;
        }
        if (this.instances.length) {
            if (outputReason)
                outputReason.text =
                    'The class "' + this.name + '" have ' + this.instances.length + ' instances, convert or delete them before proceeding.';
            return false;
        }
        const superclasses = this.getAllSuperClasses(false);
        for (i = 0; i < superclasses.length; i++) {
            const ext = superclasses[i];
            if (!ext.getInterface()) {
                // no classi sopra questa interfaccia
                if (outputReason)
                    outputReason.text = '"' + this.name + '" cannot be an interface because it cannot extend "'
                        + ext.name + '" wich is a class.' + ' Update their relationship befor proceeding.';
                return false;
            }
        }
        return true;
    }
    canBeAbstract(value, outputReason) {
        if (!value)
            return true;
        if (this.instances.length) {
            if (outputReason)
                outputReason.text =
                    'The class "' + this.name + '" have ' + this.instances.length + ' instances.\n<br>Convert or delete them by right-clicking his vertex before proceeding.';
            return false;
        }
        if (this.getInterface() && !this.canBeInterface(false, outputReason)) {
            if (outputReason)
                outputReason.text = 'Interfaces cannot be abstract.\n<br>' + outputReason.text;
            return false;
        }
        return true;
    }
    setInterface(value, canPrintError = true) {
        if (this.isInterface === value)
            return;
        let reason = { text: '' };
        if (!this.canBeInterface(value, reason)) {
            // U.pw(canPrintError, reason.text);
            if (canPrintError) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
                    icon: 'error',
                    title: 'Invalid operation',
                    html: reason.text
                });
            }
            return;
        }
        if (value) {
            this.setInterfaceTrue();
        }
        else {
            this.unsetInterface();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.sidebar.updateAll();
    }
    setInterfaceTrue() {
        this.unsetAbstract();
        this.isInterface = true;
    }
    unsetInterface() { this.isInterface = false; }
    setAbstract(value, canPrintError = true) {
        if (this.isAbstract === value)
            return;
        let reason = { text: '' };
        if (!this.canBeAbstract(value, reason)) {
            if (canPrintError) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({
                    icon: 'error',
                    title: 'Invalid operation',
                    html: reason.text
                });
            }
            // U.pw(canPrintError, reason.text);
            return;
        }
        /*
        obj.abstractCheckbox.checked = false; // do not accept the change until conversion
        // actually do the thing transforming instances
        if (convertableChoices_AddField.length + convertableChoices_RemoveField.length === 0) {
          let options = {
              'By adding features': { },
              'By removing features': { },
            };
          for(let ii = 0; ii < convertableChoices_AddField.length; ii++) {
            options['By adding features'][convertableChoices_AddField[ii].id] = convertableChoices_AddField[ii].name;
          }
          for(let ii = 0; ii < convertableChoices_RemoveField.length; ii++) {
            options['By removing features'][convertableChoices_RemoveField[ii].id] = convertableChoices_RemoveField[ii].name;
          }
          Swal.fire({
            title: 'What about his instances?',
            html:
              "There are " + classe.instances.length + " instances of this class wich need to be converted to some other class" +
              " by adding or removing features." +
              "<br>You can convert them or undo this operation." +
              "<br><br>Convert them to:",
            icon: 'warning',
            input: 'select',
            inputOptions: options,
            inputPlaceholder: 'Convert them',
            showCancelButton: true,
            inputValidator: (value) => {
              return new Promise((resolve) => {
                if (value === '') {
                  resolve()
                } else {
                  resolve('You need to select a class for conversion.')
                }
              })
            }
          }).then(function (data) {
            const targetClass: M2Class = ModelPiece.getByID(+data.value) as M2Class;
            classe.setAbstract(targetClass);
            obj.abstractCheckbox.checked = true;
            Swal.fire(
              'Done',
              classe.instances.length + " instances converted.",
              'success'
            )
          });
        }
        */
        if (value) {
            this.setAbstractTrue();
        }
        else {
            this.unsetAbstract();
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["Status"].status.m.sidebar.updateAll();
    }
    setAbstractTrue() {
        this.unsetInterface();
        return this.isAbstract = true;
    }
    unsetAbstract() {
        return this.isAbstract = false;
    }
    /*
    public canConvertInstancesTo(classe: M2Class): boolean {
      const instances: MClass[] = this.instances;
      let i: number;
      for (i = 0; i < instances.length; i++) {
        const instance: MClass = instances[i];
        if (instance.metaParent !== this) continue;
        if (!instance.canConvertTo(classe)) return false;
      }
      return true;
    }*/
    convertInstancesTo(classe) {
        const instances = [...this.instances];
        for (let instance of instances) {
            _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].pe(instance.metaParent !== this, "invalid state: mismatch on instances and metaParent:", instance, this);
            instance.convertTo(classe);
        }
        _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["U"].ps(instances && !!instances.length, instances.length + " subclasses converted to " + classe.name);
    }
    getContainer() {
        for (let ref of this.referencesIN)
            if (ref.isContainment())
                return ref;
        return null;
    }
    getUpperClassesByLevel() {
        const byLevel = new Map();
        byLevel[0] = [this];
        for (let level = 0; true;) {
            console.log('getUpperClassesByLevel, ', byLevel, '[' + level + '] = ', byLevel[level]);
            const allForNextLevel = byLevel[level].flatMap((c) => c.extends);
            if (!allForNextLevel.length)
                break;
            byLevel[++level] = allForNextLevel;
        }
        return byLevel;
    }
    getSubclassDepthLevel(subclass) {
        if (this === subclass)
            return 0;
        let superclasses = subclass.getUpperClassesByLevel();
        const levels = Object.keys(superclasses).length;
        for (let level = 0; level < levels; level++) {
            if (superclasses[level].indexOf(this) >= 0)
                return level;
        }
        return -1; // not inheriting
    }
}


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");





if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ "./src/vscodeLayer/VsCodeLayer.ts":
/*!****************************************!*\
  !*** ./src/vscodeLayer/VsCodeLayer.ts ***!
  \****************************************/
/*! exports provided: VsCodeLayerOut, VsCodeLayerIn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VsCodeLayerOut", function() { return VsCodeLayerOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VsCodeLayerIn", function() { return VsCodeLayerIn; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _common_Joiner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Joiner */ "./src/common/Joiner.ts");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app/app.module */ "./src/app/app.module.ts");



class VsCodeLayerOut {
    static send(message) {
        console.log("sending data to:", VsCodeLayerOut.ancestorOrigin);
        window.parent.postMessage(message, VsCodeLayerOut.ancestorOrigin, undefined);
    }
}
VsCodeLayerOut.thisOrigin = location.origin;
VsCodeLayerOut.ancestorOrigin = location.ancestorOrigins && location.ancestorOrigins[0];
class VsCodeLayerIn {
    static setupReceive() {
        // todo: dovrei spedire un evento al parent per notificarlo che jodel è pronto a ricevere
        console.log("1x adding event listener");
        window.addEventListener('message', VsCodeLayerIn.receive);
    }
    static receive(e /*window event*/) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            console.log("1x jodel got message");
            const msg = e && e.data;
            const type = msg && msg.type;
            let body = msg && msg.body;
            switch (type) {
                default:
                    console.log("1x jodel received got message:", JSON.stringify(msg));
                    break;
                case "webpackWarnings":
                    // U.enableConsole();
                    break;
                case "init":
                    console.log("1x jodel received got message init!!:", JSON.stringify(body));
                    let xmistring = body;
                    const xmlDoc = new DOMParser().parseFromString(xmistring, "text/xml");
                    console.log('xml:', xmlDoc);
                    let jsonstr = _common_Joiner__WEBPACK_IMPORTED_MODULE_1__["prxml2json"].xml2json(xmlDoc, '    ');
                    console.log('1x jsonstr input: ', jsonstr);
                    body = jsonstr;
                    // U.pe(true, 'xml -> json', prxml2json, 'json -> xml', prjson2xml);
                    const m2Bundle = {};
                    m2Bundle.model = body;
                    const m1Bundle = {};
                    Object(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["onModelsReceive"])(m2Bundle, m1Bundle);
                    break;
                // case "webpackWarnings": break;
            }
        });
    }
    ;
}


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\Programming\web\jjodel\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es2015.js.map